// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Levy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Levy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TLevyPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyAchievementRewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyAchievementRewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyAchievementInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyAchievementInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyMasterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyMasterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevySlaveInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevySlaveInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyOtherUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyOtherUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyBattleReportInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyBattleReportInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGuildUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGuildUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetUserInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetUserInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyEnterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyEnterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyPreviewRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyPreviewRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyReceiveRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyReceiveRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetRecordReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetRecordReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetRecordRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetRecordRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetPageInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetPageInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetPageInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetPageInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetCityInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetCityInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetCityInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetCityInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyForceLevyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyForceLevyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyHelpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyHelpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyHelpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyHelpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyConquerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyConquerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyConquerRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyConquerRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyReleaseSlaveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyReleaseSlaveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyRebelRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyRebelRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyPlunderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyPlunderReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyPlunderRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyPlunderRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyPlunderPreviewReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyPlunderPreviewReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyPlunderPreviewRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyPlunderPreviewRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyTrainReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyTrainReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyMoveCityToEmptyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyMoveCityToEmptyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyMoveCityToEmptyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyMoveCityToEmptyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyForceMoveCityReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyForceMoveCityReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyForceMoveCityRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyForceMoveCityRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyStormReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyStormReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyStormRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyStormRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyStormPreviewReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyStormPreviewReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyStormPreviewRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyStormPreviewRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetLevyBattleReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetLevyBattleReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetLevyBattleReportRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetLevyBattleReportRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyGetGuildUserListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyGetGuildUserListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyReceiveAchievementRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyReceiveAchievementRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyReceiveAchievementRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyReceiveAchievementRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyUserInfoChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyUserInfoChangeNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyInfoChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyInfoChangeNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TLevyNewBattleReportNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TLevyNewBattleReportNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ELevyRecordType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ELevyBattleReportType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fLevy_2eproto() {
  protobuf_AddDesc_net_2fLevy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Levy.proto");
  GOOGLE_CHECK(file != NULL);
  TLevyPos_descriptor_ = file->message_type(0);
  static const int TLevyPos_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPos, pageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPos, pageindex_),
  };
  TLevyPos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyPos_descriptor_,
      TLevyPos::default_instance_,
      TLevyPos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyPos));
  TLevyAchievementRewardInfo_descriptor_ = file->message_type(1);
  static const int TLevyAchievementRewardInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementRewardInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementRewardInfo, rewardtime_),
  };
  TLevyAchievementRewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyAchievementRewardInfo_descriptor_,
      TLevyAchievementRewardInfo::default_instance_,
      TLevyAchievementRewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementRewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementRewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyAchievementRewardInfo));
  TLevyAchievementInfo_descriptor_ = file->message_type(2);
  static const int TLevyAchievementInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementInfo, totalbattlenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementInfo, maxconnectnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementInfo, arrrewardinfo_),
  };
  TLevyAchievementInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyAchievementInfo_descriptor_,
      TLevyAchievementInfo::default_instance_,
      TLevyAchievementInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyAchievementInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyAchievementInfo));
  TLevyUserInfo_descriptor_ = file->message_type(3);
  static const int TLevyUserInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, slivernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, outputduration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, forcenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, helpnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, plundernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, trainnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, stormnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, masterinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, arrslaveinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, achievementinfo_),
  };
  TLevyUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyUserInfo_descriptor_,
      TLevyUserInfo::default_instance_,
      TLevyUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyUserInfo));
  TLevyMasterInfo_descriptor_ = file->message_type(4);
  static const int TLevyMasterInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMasterInfo, masteruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMasterInfo, beconqueredtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMasterInfo, masteruserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMasterInfo, pos_),
  };
  TLevyMasterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyMasterInfo_descriptor_,
      TLevyMasterInfo::default_instance_,
      TLevyMasterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMasterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMasterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyMasterInfo));
  TLevySlaveInfo_descriptor_ = file->message_type(5);
  static const int TLevySlaveInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevySlaveInfo, slaveuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevySlaveInfo, conquertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevySlaveInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevySlaveInfo, slaveuserinfo_),
  };
  TLevySlaveInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevySlaveInfo_descriptor_,
      TLevySlaveInfo::default_instance_,
      TLevySlaveInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevySlaveInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevySlaveInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevySlaveInfo));
  TLevyOtherUserInfo_descriptor_ = file->message_type(6);
  static const int TLevyOtherUserInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, masteruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, behelpnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, beplunderednum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, beplunderedtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, haveoutput_),
  };
  TLevyOtherUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyOtherUserInfo_descriptor_,
      TLevyOtherUserInfo::default_instance_,
      TLevyOtherUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyOtherUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyOtherUserInfo));
  TLevyRecordInfo_descriptor_ = file->message_type(7);
  static const int TLevyRecordInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRecordInfo, recordtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRecordInfo, recordtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRecordInfo, recorddata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRecordInfo, arruname_),
  };
  TLevyRecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyRecordInfo_descriptor_,
      TLevyRecordInfo::default_instance_,
      TLevyRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyRecordInfo));
  TLevyBattleReportInfo_descriptor_ = file->message_type(8);
  static const int TLevyBattleReportInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyBattleReportInfo, reporttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyBattleReportInfo, reporttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyBattleReportInfo, reportdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyBattleReportInfo, arruname_),
  };
  TLevyBattleReportInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyBattleReportInfo_descriptor_,
      TLevyBattleReportInfo::default_instance_,
      TLevyBattleReportInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyBattleReportInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyBattleReportInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyBattleReportInfo));
  TLevyGuildUserInfo_descriptor_ = file->message_type(9);
  static const int TLevyGuildUserInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, uname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, connectnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, rpgpost_),
  };
  TLevyGuildUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGuildUserInfo_descriptor_,
      TLevyGuildUserInfo::default_instance_,
      TLevyGuildUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGuildUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGuildUserInfo));
  TLevyGetUserInfoRsp_descriptor_ = file->message_type(10);
  static const int TLevyGetUserInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetUserInfoRsp, userinfo_),
  };
  TLevyGetUserInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetUserInfoRsp_descriptor_,
      TLevyGetUserInfoRsp::default_instance_,
      TLevyGetUserInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetUserInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetUserInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetUserInfoRsp));
  TLevyEnterRsp_descriptor_ = file->message_type(11);
  static const int TLevyEnterRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyEnterRsp, maxpageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyEnterRsp, arrrecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyEnterRsp, pos_),
  };
  TLevyEnterRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyEnterRsp_descriptor_,
      TLevyEnterRsp::default_instance_,
      TLevyEnterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyEnterRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyEnterRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyEnterRsp));
  TLevyPreviewRsp_descriptor_ = file->message_type(12);
  static const int TLevyPreviewRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, slivernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, arrreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, outputduration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, connectnum_),
  };
  TLevyPreviewRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyPreviewRsp_descriptor_,
      TLevyPreviewRsp::default_instance_,
      TLevyPreviewRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPreviewRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyPreviewRsp));
  TLevyReceiveRsp_descriptor_ = file->message_type(13);
  static const int TLevyReceiveRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveRsp, slivernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveRsp, arrreward_),
  };
  TLevyReceiveRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyReceiveRsp_descriptor_,
      TLevyReceiveRsp::default_instance_,
      TLevyReceiveRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyReceiveRsp));
  TLevyGetRecordReq_descriptor_ = file->message_type(14);
  static const int TLevyGetRecordReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetRecordReq, arrrecordtype_),
  };
  TLevyGetRecordReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetRecordReq_descriptor_,
      TLevyGetRecordReq::default_instance_,
      TLevyGetRecordReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetRecordReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetRecordReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetRecordReq));
  TLevyGetRecordRsp_descriptor_ = file->message_type(15);
  static const int TLevyGetRecordRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetRecordRsp, arrrecord_),
  };
  TLevyGetRecordRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetRecordRsp_descriptor_,
      TLevyGetRecordRsp::default_instance_,
      TLevyGetRecordRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetRecordRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetRecordRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetRecordRsp));
  TLevyGetPageInfoReq_descriptor_ = file->message_type(16);
  static const int TLevyGetPageInfoReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoReq, pageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoReq, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoReq, arrpageindex_),
  };
  TLevyGetPageInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetPageInfoReq_descriptor_,
      TLevyGetPageInfoReq::default_instance_,
      TLevyGetPageInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetPageInfoReq));
  TLevyGetPageInfoRsp_descriptor_ = file->message_type(17);
  static const int TLevyGetPageInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoRsp, arruserlevyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoRsp, arruserinfo_),
  };
  TLevyGetPageInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetPageInfoRsp_descriptor_,
      TLevyGetPageInfoRsp::default_instance_,
      TLevyGetPageInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetPageInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetPageInfoRsp));
  TLevyGetCityInfoReq_descriptor_ = file->message_type(18);
  static const int TLevyGetCityInfoReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoReq, arrpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoReq, arrtargetuid_),
  };
  TLevyGetCityInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetCityInfoReq_descriptor_,
      TLevyGetCityInfoReq::default_instance_,
      TLevyGetCityInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetCityInfoReq));
  TLevyGetCityInfoRsp_descriptor_ = file->message_type(19);
  static const int TLevyGetCityInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoRsp, arruserlevyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoRsp, arruserinfo_),
  };
  TLevyGetCityInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetCityInfoRsp_descriptor_,
      TLevyGetCityInfoRsp::default_instance_,
      TLevyGetCityInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetCityInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetCityInfoRsp));
  TLevyForceLevyRsp_descriptor_ = file->message_type(20);
  static const int TLevyForceLevyRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceLevyRsp, slivernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceLevyRsp, arrreward_),
  };
  TLevyForceLevyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyForceLevyRsp_descriptor_,
      TLevyForceLevyRsp::default_instance_,
      TLevyForceLevyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceLevyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceLevyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyForceLevyRsp));
  TLevyHelpReq_descriptor_ = file->message_type(21);
  static const int TLevyHelpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpReq, targetuid_),
  };
  TLevyHelpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyHelpReq_descriptor_,
      TLevyHelpReq::default_instance_,
      TLevyHelpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyHelpReq));
  TLevyHelpRsp_descriptor_ = file->message_type(22);
  static const int TLevyHelpRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpRsp, slivernum_),
  };
  TLevyHelpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyHelpRsp_descriptor_,
      TLevyHelpRsp::default_instance_,
      TLevyHelpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyHelpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyHelpRsp));
  TLevyConquerReq_descriptor_ = file->message_type(23);
  static const int TLevyConquerReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerReq, targetuid_),
  };
  TLevyConquerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyConquerReq_descriptor_,
      TLevyConquerReq::default_instance_,
      TLevyConquerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyConquerReq));
  TLevyConquerRsp_descriptor_ = file->message_type(24);
  static const int TLevyConquerRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerRsp, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerRsp, success_),
  };
  TLevyConquerRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyConquerRsp_descriptor_,
      TLevyConquerRsp::default_instance_,
      TLevyConquerRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyConquerRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyConquerRsp));
  TLevyReleaseSlaveReq_descriptor_ = file->message_type(25);
  static const int TLevyReleaseSlaveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReleaseSlaveReq, slaveuid_),
  };
  TLevyReleaseSlaveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyReleaseSlaveReq_descriptor_,
      TLevyReleaseSlaveReq::default_instance_,
      TLevyReleaseSlaveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReleaseSlaveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReleaseSlaveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyReleaseSlaveReq));
  TLevyRebelRsp_descriptor_ = file->message_type(26);
  static const int TLevyRebelRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRebelRsp, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRebelRsp, success_),
  };
  TLevyRebelRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyRebelRsp_descriptor_,
      TLevyRebelRsp::default_instance_,
      TLevyRebelRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRebelRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyRebelRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyRebelRsp));
  TLevyPlunderReq_descriptor_ = file->message_type(27);
  static const int TLevyPlunderReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderReq, targetuid_),
  };
  TLevyPlunderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyPlunderReq_descriptor_,
      TLevyPlunderReq::default_instance_,
      TLevyPlunderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyPlunderReq));
  TLevyPlunderRsp_descriptor_ = file->message_type(28);
  static const int TLevyPlunderRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderRsp, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderRsp, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderRsp, slivernum_),
  };
  TLevyPlunderRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyPlunderRsp_descriptor_,
      TLevyPlunderRsp::default_instance_,
      TLevyPlunderRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyPlunderRsp));
  TLevyPlunderPreviewReq_descriptor_ = file->message_type(29);
  static const int TLevyPlunderPreviewReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewReq, targetuid_),
  };
  TLevyPlunderPreviewReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyPlunderPreviewReq_descriptor_,
      TLevyPlunderPreviewReq::default_instance_,
      TLevyPlunderPreviewReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyPlunderPreviewReq));
  TLevyPlunderPreviewRsp_descriptor_ = file->message_type(30);
  static const int TLevyPlunderPreviewRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewRsp, slivernum_),
  };
  TLevyPlunderPreviewRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyPlunderPreviewRsp_descriptor_,
      TLevyPlunderPreviewRsp::default_instance_,
      TLevyPlunderPreviewRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyPlunderPreviewRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyPlunderPreviewRsp));
  TLevyTrainReq_descriptor_ = file->message_type(31);
  static const int TLevyTrainReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyTrainReq, slaveuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyTrainReq, trainid_),
  };
  TLevyTrainReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyTrainReq_descriptor_,
      TLevyTrainReq::default_instance_,
      TLevyTrainReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyTrainReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyTrainReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyTrainReq));
  TLevyMoveCityToEmptyReq_descriptor_ = file->message_type(32);
  static const int TLevyMoveCityToEmptyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyReq, pos_),
  };
  TLevyMoveCityToEmptyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyMoveCityToEmptyReq_descriptor_,
      TLevyMoveCityToEmptyReq::default_instance_,
      TLevyMoveCityToEmptyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyMoveCityToEmptyReq));
  TLevyMoveCityToEmptyRsp_descriptor_ = file->message_type(33);
  static const int TLevyMoveCityToEmptyRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyRsp, slivernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyRsp, outputduration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyRsp, settletime_),
  };
  TLevyMoveCityToEmptyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyMoveCityToEmptyRsp_descriptor_,
      TLevyMoveCityToEmptyRsp::default_instance_,
      TLevyMoveCityToEmptyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyMoveCityToEmptyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyMoveCityToEmptyRsp));
  TLevyForceMoveCityReq_descriptor_ = file->message_type(34);
  static const int TLevyForceMoveCityReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityReq, targetuid_),
  };
  TLevyForceMoveCityReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyForceMoveCityReq_descriptor_,
      TLevyForceMoveCityReq::default_instance_,
      TLevyForceMoveCityReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyForceMoveCityReq));
  TLevyForceMoveCityRsp_descriptor_ = file->message_type(35);
  static const int TLevyForceMoveCityRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityRsp, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityRsp, success_),
  };
  TLevyForceMoveCityRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyForceMoveCityRsp_descriptor_,
      TLevyForceMoveCityRsp::default_instance_,
      TLevyForceMoveCityRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyForceMoveCityRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyForceMoveCityRsp));
  TLevyStormReq_descriptor_ = file->message_type(36);
  static const int TLevyStormReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormReq, targetuid_),
  };
  TLevyStormReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyStormReq_descriptor_,
      TLevyStormReq::default_instance_,
      TLevyStormReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyStormReq));
  TLevyStormRsp_descriptor_ = file->message_type(37);
  static const int TLevyStormRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormRsp, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormRsp, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormRsp, slivernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormRsp, targetnewpos_),
  };
  TLevyStormRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyStormRsp_descriptor_,
      TLevyStormRsp::default_instance_,
      TLevyStormRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyStormRsp));
  TLevyStormPreviewReq_descriptor_ = file->message_type(38);
  static const int TLevyStormPreviewReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewReq, targetuid_),
  };
  TLevyStormPreviewReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyStormPreviewReq_descriptor_,
      TLevyStormPreviewReq::default_instance_,
      TLevyStormPreviewReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyStormPreviewReq));
  TLevyStormPreviewRsp_descriptor_ = file->message_type(39);
  static const int TLevyStormPreviewRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewRsp, slivernum_),
  };
  TLevyStormPreviewRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyStormPreviewRsp_descriptor_,
      TLevyStormPreviewRsp::default_instance_,
      TLevyStormPreviewRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyStormPreviewRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyStormPreviewRsp));
  TLevyGetLevyBattleReportReq_descriptor_ = file->message_type(40);
  static const int TLevyGetLevyBattleReportReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportReq, num_),
  };
  TLevyGetLevyBattleReportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetLevyBattleReportReq_descriptor_,
      TLevyGetLevyBattleReportReq::default_instance_,
      TLevyGetLevyBattleReportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetLevyBattleReportReq));
  TLevyGetLevyBattleReportRsp_descriptor_ = file->message_type(41);
  static const int TLevyGetLevyBattleReportRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportRsp, arrreportinfo_),
  };
  TLevyGetLevyBattleReportRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetLevyBattleReportRsp_descriptor_,
      TLevyGetLevyBattleReportRsp::default_instance_,
      TLevyGetLevyBattleReportRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetLevyBattleReportRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetLevyBattleReportRsp));
  TLevyGetGuildUserListRsp_descriptor_ = file->message_type(42);
  static const int TLevyGetGuildUserListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetGuildUserListRsp, arrguilduserinfo_),
  };
  TLevyGetGuildUserListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyGetGuildUserListRsp_descriptor_,
      TLevyGetGuildUserListRsp::default_instance_,
      TLevyGetGuildUserListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetGuildUserListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyGetGuildUserListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyGetGuildUserListRsp));
  TLevyReceiveAchievementRewardReq_descriptor_ = file->message_type(43);
  static const int TLevyReceiveAchievementRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveAchievementRewardReq, id_),
  };
  TLevyReceiveAchievementRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyReceiveAchievementRewardReq_descriptor_,
      TLevyReceiveAchievementRewardReq::default_instance_,
      TLevyReceiveAchievementRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveAchievementRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveAchievementRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyReceiveAchievementRewardReq));
  TLevyReceiveAchievementRewardRsp_descriptor_ = file->message_type(44);
  static const int TLevyReceiveAchievementRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveAchievementRewardRsp, rewardarray_),
  };
  TLevyReceiveAchievementRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyReceiveAchievementRewardRsp_descriptor_,
      TLevyReceiveAchievementRewardRsp::default_instance_,
      TLevyReceiveAchievementRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveAchievementRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyReceiveAchievementRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyReceiveAchievementRewardRsp));
  TLevyUserInfoChangeNotify_descriptor_ = file->message_type(45);
  static const int TLevyUserInfoChangeNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, poschange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, masterchangeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, slavechangeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, recordinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, achievementinfo_),
  };
  TLevyUserInfoChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyUserInfoChangeNotify_descriptor_,
      TLevyUserInfoChangeNotify::default_instance_,
      TLevyUserInfoChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyUserInfoChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyUserInfoChangeNotify));
  TLevyInfoChangeNotify_descriptor_ = file->message_type(46);
  static const int TLevyInfoChangeNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyInfoChangeNotify, userlevyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyInfoChangeNotify, userinfo_),
  };
  TLevyInfoChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyInfoChangeNotify_descriptor_,
      TLevyInfoChangeNotify::default_instance_,
      TLevyInfoChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyInfoChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyInfoChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyInfoChangeNotify));
  TLevyNewBattleReportNotify_descriptor_ = file->message_type(47);
  static const int TLevyNewBattleReportNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyNewBattleReportNotify, reportinfo_),
  };
  TLevyNewBattleReportNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TLevyNewBattleReportNotify_descriptor_,
      TLevyNewBattleReportNotify::default_instance_,
      TLevyNewBattleReportNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyNewBattleReportNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TLevyNewBattleReportNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TLevyNewBattleReportNotify));
  ELevyRecordType_descriptor_ = file->enum_type(0);
  ELevyBattleReportType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fLevy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyPos_descriptor_, &TLevyPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyAchievementRewardInfo_descriptor_, &TLevyAchievementRewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyAchievementInfo_descriptor_, &TLevyAchievementInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyUserInfo_descriptor_, &TLevyUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyMasterInfo_descriptor_, &TLevyMasterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevySlaveInfo_descriptor_, &TLevySlaveInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyOtherUserInfo_descriptor_, &TLevyOtherUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyRecordInfo_descriptor_, &TLevyRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyBattleReportInfo_descriptor_, &TLevyBattleReportInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGuildUserInfo_descriptor_, &TLevyGuildUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetUserInfoRsp_descriptor_, &TLevyGetUserInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyEnterRsp_descriptor_, &TLevyEnterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyPreviewRsp_descriptor_, &TLevyPreviewRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyReceiveRsp_descriptor_, &TLevyReceiveRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetRecordReq_descriptor_, &TLevyGetRecordReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetRecordRsp_descriptor_, &TLevyGetRecordRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetPageInfoReq_descriptor_, &TLevyGetPageInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetPageInfoRsp_descriptor_, &TLevyGetPageInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetCityInfoReq_descriptor_, &TLevyGetCityInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetCityInfoRsp_descriptor_, &TLevyGetCityInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyForceLevyRsp_descriptor_, &TLevyForceLevyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyHelpReq_descriptor_, &TLevyHelpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyHelpRsp_descriptor_, &TLevyHelpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyConquerReq_descriptor_, &TLevyConquerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyConquerRsp_descriptor_, &TLevyConquerRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyReleaseSlaveReq_descriptor_, &TLevyReleaseSlaveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyRebelRsp_descriptor_, &TLevyRebelRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyPlunderReq_descriptor_, &TLevyPlunderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyPlunderRsp_descriptor_, &TLevyPlunderRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyPlunderPreviewReq_descriptor_, &TLevyPlunderPreviewReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyPlunderPreviewRsp_descriptor_, &TLevyPlunderPreviewRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyTrainReq_descriptor_, &TLevyTrainReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyMoveCityToEmptyReq_descriptor_, &TLevyMoveCityToEmptyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyMoveCityToEmptyRsp_descriptor_, &TLevyMoveCityToEmptyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyForceMoveCityReq_descriptor_, &TLevyForceMoveCityReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyForceMoveCityRsp_descriptor_, &TLevyForceMoveCityRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyStormReq_descriptor_, &TLevyStormReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyStormRsp_descriptor_, &TLevyStormRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyStormPreviewReq_descriptor_, &TLevyStormPreviewReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyStormPreviewRsp_descriptor_, &TLevyStormPreviewRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetLevyBattleReportReq_descriptor_, &TLevyGetLevyBattleReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetLevyBattleReportRsp_descriptor_, &TLevyGetLevyBattleReportRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyGetGuildUserListRsp_descriptor_, &TLevyGetGuildUserListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyReceiveAchievementRewardReq_descriptor_, &TLevyReceiveAchievementRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyReceiveAchievementRewardRsp_descriptor_, &TLevyReceiveAchievementRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyUserInfoChangeNotify_descriptor_, &TLevyUserInfoChangeNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyInfoChangeNotify_descriptor_, &TLevyInfoChangeNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TLevyNewBattleReportNotify_descriptor_, &TLevyNewBattleReportNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fLevy_2eproto() {
  delete TLevyPos::default_instance_;
  delete TLevyPos_reflection_;
  delete TLevyAchievementRewardInfo::default_instance_;
  delete TLevyAchievementRewardInfo_reflection_;
  delete TLevyAchievementInfo::default_instance_;
  delete TLevyAchievementInfo_reflection_;
  delete TLevyUserInfo::default_instance_;
  delete TLevyUserInfo_reflection_;
  delete TLevyMasterInfo::default_instance_;
  delete TLevyMasterInfo_reflection_;
  delete TLevySlaveInfo::default_instance_;
  delete TLevySlaveInfo_reflection_;
  delete TLevyOtherUserInfo::default_instance_;
  delete TLevyOtherUserInfo_reflection_;
  delete TLevyRecordInfo::default_instance_;
  delete TLevyRecordInfo_reflection_;
  delete TLevyBattleReportInfo::default_instance_;
  delete TLevyBattleReportInfo_reflection_;
  delete TLevyGuildUserInfo::default_instance_;
  delete TLevyGuildUserInfo_reflection_;
  delete TLevyGetUserInfoRsp::default_instance_;
  delete TLevyGetUserInfoRsp_reflection_;
  delete TLevyEnterRsp::default_instance_;
  delete TLevyEnterRsp_reflection_;
  delete TLevyPreviewRsp::default_instance_;
  delete TLevyPreviewRsp_reflection_;
  delete TLevyReceiveRsp::default_instance_;
  delete TLevyReceiveRsp_reflection_;
  delete TLevyGetRecordReq::default_instance_;
  delete TLevyGetRecordReq_reflection_;
  delete TLevyGetRecordRsp::default_instance_;
  delete TLevyGetRecordRsp_reflection_;
  delete TLevyGetPageInfoReq::default_instance_;
  delete TLevyGetPageInfoReq_reflection_;
  delete TLevyGetPageInfoRsp::default_instance_;
  delete TLevyGetPageInfoRsp_reflection_;
  delete TLevyGetCityInfoReq::default_instance_;
  delete TLevyGetCityInfoReq_reflection_;
  delete TLevyGetCityInfoRsp::default_instance_;
  delete TLevyGetCityInfoRsp_reflection_;
  delete TLevyForceLevyRsp::default_instance_;
  delete TLevyForceLevyRsp_reflection_;
  delete TLevyHelpReq::default_instance_;
  delete TLevyHelpReq_reflection_;
  delete TLevyHelpRsp::default_instance_;
  delete TLevyHelpRsp_reflection_;
  delete TLevyConquerReq::default_instance_;
  delete TLevyConquerReq_reflection_;
  delete TLevyConquerRsp::default_instance_;
  delete TLevyConquerRsp_reflection_;
  delete TLevyReleaseSlaveReq::default_instance_;
  delete TLevyReleaseSlaveReq_reflection_;
  delete TLevyRebelRsp::default_instance_;
  delete TLevyRebelRsp_reflection_;
  delete TLevyPlunderReq::default_instance_;
  delete TLevyPlunderReq_reflection_;
  delete TLevyPlunderRsp::default_instance_;
  delete TLevyPlunderRsp_reflection_;
  delete TLevyPlunderPreviewReq::default_instance_;
  delete TLevyPlunderPreviewReq_reflection_;
  delete TLevyPlunderPreviewRsp::default_instance_;
  delete TLevyPlunderPreviewRsp_reflection_;
  delete TLevyTrainReq::default_instance_;
  delete TLevyTrainReq_reflection_;
  delete TLevyMoveCityToEmptyReq::default_instance_;
  delete TLevyMoveCityToEmptyReq_reflection_;
  delete TLevyMoveCityToEmptyRsp::default_instance_;
  delete TLevyMoveCityToEmptyRsp_reflection_;
  delete TLevyForceMoveCityReq::default_instance_;
  delete TLevyForceMoveCityReq_reflection_;
  delete TLevyForceMoveCityRsp::default_instance_;
  delete TLevyForceMoveCityRsp_reflection_;
  delete TLevyStormReq::default_instance_;
  delete TLevyStormReq_reflection_;
  delete TLevyStormRsp::default_instance_;
  delete TLevyStormRsp_reflection_;
  delete TLevyStormPreviewReq::default_instance_;
  delete TLevyStormPreviewReq_reflection_;
  delete TLevyStormPreviewRsp::default_instance_;
  delete TLevyStormPreviewRsp_reflection_;
  delete TLevyGetLevyBattleReportReq::default_instance_;
  delete TLevyGetLevyBattleReportReq_reflection_;
  delete TLevyGetLevyBattleReportRsp::default_instance_;
  delete TLevyGetLevyBattleReportRsp_reflection_;
  delete TLevyGetGuildUserListRsp::default_instance_;
  delete TLevyGetGuildUserListRsp_reflection_;
  delete TLevyReceiveAchievementRewardReq::default_instance_;
  delete TLevyReceiveAchievementRewardReq_reflection_;
  delete TLevyReceiveAchievementRewardRsp::default_instance_;
  delete TLevyReceiveAchievementRewardRsp_reflection_;
  delete TLevyUserInfoChangeNotify::default_instance_;
  delete TLevyUserInfoChangeNotify_reflection_;
  delete TLevyInfoChangeNotify::default_instance_;
  delete TLevyInfoChangeNotify_reflection_;
  delete TLevyNewBattleReportNotify::default_instance_;
  delete TLevyNewBattleReportNotify_reflection_;
}

void protobuf_AddDesc_net_2fLevy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fGuildUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016net/Levy.proto\022\002pb\032\016net/User.proto\032\026ne"
    "t/CommonReward.proto\032\020net/Battle.proto\032\023"
    "net/GuildUser.proto\"-\n\010TLevyPos\022\016\n\006PageI"
    "d\030\001 \001(\r\022\021\n\tPageIndex\030\002 \001(\r\"<\n\032TLevyAchie"
    "vementRewardInfo\022\n\n\002Id\030\001 \001(\r\022\022\n\nRewardTi"
    "me\030\002 \001(\004\"|\n\024TLevyAchievementInfo\022\026\n\016Tota"
    "lBattleNum\030\001 \001(\r\022\025\n\rMaxConnectNum\030\002 \001(\r\022"
    "5\n\rArrRewardInfo\030\005 \003(\0132\036.pb.TLevyAchieve"
    "mentRewardInfo\"\312\002\n\rTLevyUserInfo\022\031\n\003Pos\030"
    "\001 \001(\0132\014.pb.TLevyPos\022\022\n\nSettleTime\030\002 \001(\004\022"
    "\021\n\tSliverNum\030\003 \001(\004\022\026\n\016OutputDuration\030\004 \001"
    "(\r\022\020\n\010ForceNum\030\005 \001(\r\022\017\n\007HelpNum\030\006 \001(\r\022\022\n"
    "\nPlunderNum\030\007 \001(\r\022\020\n\010TrainNum\030\010 \001(\r\022\020\n\010S"
    "tormNum\030\t \001(\r\022\'\n\nMasterInfo\030\014 \001(\0132\023.pb.T"
    "LevyMasterInfo\022(\n\014ArrSlaveInfo\030\r \003(\0132\022.p"
    "b.TLevySlaveInfo\0221\n\017AchievementInfo\030\017 \001("
    "\0132\030.pb.TLevyAchievementInfo\"\205\001\n\017TLevyMas"
    "terInfo\022\021\n\tMasterUid\030\001 \001(\004\022\027\n\017BeConquere"
    "dTime\030\002 \001(\004\022+\n\016MasterUserInfo\030\003 \001(\0132\023.pb"
    ".TUserSimpleInfo\022\031\n\003Pos\030\004 \001(\0132\014.pb.TLevy"
    "Pos\"~\n\016TLevySlaveInfo\022\020\n\010SlaveUid\030\001 \001(\004\022"
    "\023\n\013ConquerTime\030\002 \001(\004\022\031\n\003Pos\030\003 \001(\0132\014.pb.T"
    "LevyPos\022*\n\rSlaveUserInfo\030\005 \001(\0132\023.pb.TUse"
    "rSimpleInfo\"\273\001\n\022TLevyOtherUserInfo\022\031\n\003Po"
    "s\030\001 \001(\0132\014.pb.TLevyPos\022\013\n\003Uid\030\003 \001(\004\022\021\n\tMa"
    "sterUid\030\004 \001(\004\022\021\n\tBeHelpNum\030\005 \001(\r\022\026\n\016BePl"
    "underedNum\030\006 \001(\r\022\027\n\017BePlunderedTime\030\007 \001("
    "\004\022\022\n\nSettleTime\030\010 \001(\004\022\022\n\nHaveOutput\030\t \001("
    "\r\"t\n\017TLevyRecordInfo\022\'\n\nRecordType\030\001 \001(\016"
    "2\023.pb.ELevyRecordType\022\022\n\nRecordTime\030\002 \001("
    "\004\022\022\n\nRecordData\030\003 \003(\004\022\020\n\010ArrUname\030\004 \003(\t\""
    "\200\001\n\025TLevyBattleReportInfo\022-\n\nReportType\030"
    "\001 \001(\0162\031.pb.ELevyBattleReportType\022\022\n\nRepo"
    "rtTime\030\002 \001(\004\022\022\n\nReportData\030\003 \003(\004\022\020\n\010ArrU"
    "name\030\004 \003(\t\"\200\001\n\022TLevyGuildUserInfo\022\031\n\003Pos"
    "\030\001 \001(\0132\014.pb.TLevyPos\022\013\n\003Uid\030\003 \001(\004\022\r\n\005Una"
    "me\030\004 \001(\t\022\022\n\nConnectNum\030\005 \001(\r\022\037\n\007RpgPost\030"
    "\006 \001(\0162\016.pb.EGuildPost\":\n\023TLevyGetUserInf"
    "oRsp\022#\n\010UserInfo\030\001 \001(\0132\021.pb.TLevyUserInf"
    "o\"e\n\rTLevyEnterRsp\022\021\n\tMaxPageId\030\001 \001(\r\022&\n"
    "\tArrRecord\030\002 \003(\0132\023.pb.TLevyRecordInfo\022\031\n"
    "\003Pos\030\003 \001(\0132\014.pb.TLevyPos\"\212\001\n\017TLevyPrevie"
    "wRsp\022\021\n\tSliverNum\030\001 \001(\004\022$\n\tArrReward\030\002 \003"
    "(\0132\021.pb.TCommonReward\022\026\n\016OutputDuration\030"
    "\003 \001(\r\022\022\n\nSettleTime\030\004 \001(\004\022\022\n\nConnectNum\030"
    "\005 \001(\r\"J\n\017TLevyReceiveRsp\022\021\n\tSliverNum\030\001 "
    "\001(\004\022$\n\tArrReward\030\002 \003(\0132\021.pb.TCommonRewar"
    "d\"\?\n\021TLevyGetRecordReq\022*\n\rArrRecordType\030"
    "\001 \003(\0162\023.pb.ELevyRecordType\";\n\021TLevyGetRe"
    "cordRsp\022&\n\tArrRecord\030\001 \003(\0132\023.pb.TLevyRec"
    "ordInfo\"J\n\023TLevyGetPageInfoReq\022\016\n\006PageId"
    "\030\001 \001(\r\022\r\n\005Index\030\002 \001(\r\022\024\n\014ArrPageIndex\030\003 "
    "\003(\r\"p\n\023TLevyGetPageInfoRsp\022/\n\017ArrUserLev"
    "yInfo\030\001 \003(\0132\026.pb.TLevyOtherUserInfo\022(\n\013A"
    "rrUserInfo\030\002 \003(\0132\023.pb.TUserSimpleInfo\"I\n"
    "\023TLevyGetCityInfoReq\022\034\n\006ArrPos\030\001 \003(\0132\014.p"
    "b.TLevyPos\022\024\n\014ArrTargetUid\030\002 \003(\004\"p\n\023TLev"
    "yGetCityInfoRsp\022/\n\017ArrUserLevyInfo\030\001 \003(\013"
    "2\026.pb.TLevyOtherUserInfo\022(\n\013ArrUserInfo\030"
    "\002 \003(\0132\023.pb.TUserSimpleInfo\"L\n\021TLevyForce"
    "LevyRsp\022\021\n\tSliverNum\030\001 \001(\004\022$\n\tArrReward\030"
    "\002 \003(\0132\021.pb.TCommonReward\"<\n\014TLevyHelpReq"
    "\022\031\n\003Pos\030\001 \001(\0132\014.pb.TLevyPos\022\021\n\tTargetUid"
    "\030\002 \001(\004\"!\n\014TLevyHelpRsp\022\021\n\tSliverNum\030\001 \001("
    "\004\"\?\n\017TLevyConquerReq\022\031\n\003Pos\030\001 \001(\0132\014.pb.T"
    "LevyPos\022\021\n\tTargetUid\030\002 \001(\004\"H\n\017TLevyConqu"
    "erRsp\022$\n\tBattleRet\030\001 \001(\0132\021.pb.TBattleRes"
    "ult\022\017\n\007Success\030\002 \001(\r\"(\n\024TLevyReleaseSlav"
    "eReq\022\020\n\010SlaveUid\030\001 \001(\004\"F\n\rTLevyRebelRsp\022"
    "$\n\tBattleRet\030\001 \001(\0132\021.pb.TBattleResult\022\017\n"
    "\007Success\030\002 \001(\r\"\?\n\017TLevyPlunderReq\022\031\n\003Pos"
    "\030\001 \001(\0132\014.pb.TLevyPos\022\021\n\tTargetUid\030\002 \001(\004\""
    "[\n\017TLevyPlunderRsp\022$\n\tBattleRet\030\001 \001(\0132\021."
    "pb.TBattleResult\022\017\n\007Success\030\002 \001(\r\022\021\n\tSli"
    "verNum\030\003 \001(\004\"F\n\026TLevyPlunderPreviewReq\022\031"
    "\n\003Pos\030\001 \001(\0132\014.pb.TLevyPos\022\021\n\tTargetUid\030\002"
    " \001(\004\"+\n\026TLevyPlunderPreviewRsp\022\021\n\tSliver"
    "Num\030\001 \001(\004\"2\n\rTLevyTrainReq\022\020\n\010SlaveUid\030\001"
    " \001(\004\022\017\n\007TrainId\030\002 \001(\r\"4\n\027TLevyMoveCityTo"
    "EmptyReq\022\031\n\003Pos\030\001 \001(\0132\014.pb.TLevyPos\"X\n\027T"
    "LevyMoveCityToEmptyRsp\022\021\n\tSliverNum\030\001 \001("
    "\004\022\026\n\016OutputDuration\030\002 \001(\r\022\022\n\nSettleTime\030"
    "\003 \001(\004\"E\n\025TLevyForceMoveCityReq\022\031\n\003Pos\030\001 "
    "\001(\0132\014.pb.TLevyPos\022\021\n\tTargetUid\030\002 \001(\004\"N\n\025"
    "TLevyForceMoveCityRsp\022$\n\tBattleRet\030\001 \001(\013"
    "2\021.pb.TBattleResult\022\017\n\007Success\030\002 \001(\r\"=\n\r"
    "TLevyStormReq\022\031\n\003Pos\030\001 \001(\0132\014.pb.TLevyPos"
    "\022\021\n\tTargetUid\030\002 \001(\004\"}\n\rTLevyStormRsp\022$\n\t"
    "BattleRet\030\001 \001(\0132\021.pb.TBattleResult\022\017\n\007Su"
    "ccess\030\002 \001(\r\022\021\n\tSliverNum\030\003 \001(\004\022\"\n\014Target"
    "NewPos\030\004 \001(\0132\014.pb.TLevyPos\"D\n\024TLevyStorm"
    "PreviewReq\022\031\n\003Pos\030\001 \001(\0132\014.pb.TLevyPos\022\021\n"
    "\tTargetUid\030\002 \001(\004\")\n\024TLevyStormPreviewRsp"
    "\022\021\n\tSliverNum\030\001 \001(\004\":\n\033TLevyGetLevyBattl"
    "eReportReq\022\016\n\006Offset\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\""
    "O\n\033TLevyGetLevyBattleReportRsp\0220\n\rArrRep"
    "ortInfo\030\001 \003(\0132\031.pb.TLevyBattleReportInfo"
    "\"L\n\030TLevyGetGuildUserListRsp\0220\n\020ArrGuild"
    "UserInfo\030\001 \003(\0132\026.pb.TLevyGuildUserInfo\"."
    "\n TLevyReceiveAchievementRewardReq\022\n\n\002Id"
    "\030\001 \001(\r\"J\n TLevyReceiveAchievementRewardR"
    "sp\022&\n\013RewardArray\030\001 \003(\0132\021.pb.TCommonRewa"
    "rd\"\364\001\n\031TLevyUserInfoChangeNotify\022\037\n\tPosC"
    "hange\030\001 \001(\0132\014.pb.TLevyPos\022-\n\020MasterChang"
    "eInfo\030\002 \001(\0132\023.pb.TLevyMasterInfo\022+\n\017Slav"
    "eChangeInfo\030\003 \003(\0132\022.pb.TLevySlaveInfo\022\'\n"
    "\nRecordInfo\030\004 \001(\0132\023.pb.TLevyRecordInfo\0221"
    "\n\017AchievementInfo\030\005 \001(\0132\030.pb.TLevyAchiev"
    "ementInfo\"l\n\025TLevyInfoChangeNotify\022,\n\014Us"
    "erLevyInfo\030\001 \001(\0132\026.pb.TLevyOtherUserInfo"
    "\022%\n\010UserInfo\030\002 \003(\0132\023.pb.TUserSimpleInfo\""
    "K\n\032TLevyNewBattleReportNotify\022-\n\nReportI"
    "nfo\030\001 \003(\0132\031.pb.TLevyBattleReportInfo*\204\003\n"
    "\017ELevyRecordType\022\t\n\005TRAIN\020d\022\013\n\007CONQUER\020e"
    "\022\013\n\007PLUNDER\020f\022\016\n\nFORCE_MOVE\020g\022\t\n\005STORM\020h"
    "\022\t\n\005REBEL\020i\022\017\n\nBE_TRAINED\020\311\001\022\016\n\tBE_HELPE"
    "D\020\312\001\022\021\n\014BE_CONQUERED\020\313\001\022\020\n\013BE_RELEASED\020\314"
    "\001\022\021\n\014BE_PLUNDERED\020\315\001\022\022\n\rBE_FORCE_MOVE\020\316\001"
    "\022\r\n\010BE_STORM\020\317\001\022\027\n\022SLAVE_BE_CONQUERED\020\255\002"
    "\022\027\n\022SLAVE_BE_PLUNDERED\020\256\002\022\030\n\023SLAVE_BE_FO"
    "RCE_MOVE\020\257\002\022\023\n\016SLAVE_BE_STORM\020\260\002\022\022\n\rSLAV"
    "E_RECEIVE\020\221\003\022\020\n\013SLAVE_REBEL\020\222\003\022\021\n\014MASTER"
    "_LEAVE\020\223\003\022\020\n\013SLAVE_LEAVE\020\224\003*\177\n\025ELevyBatt"
    "leReportType\022\022\n\016BATTLE_CONQUER\020\001\022\022\n\016BATT"
    "LE_PLUNDER\020\002\022\032\n\026BATTLE_FORCE_MOVE_CITY\020\003"
    "\022\020\n\014BATTLE_REBEL\020\004\022\020\n\014BATTLE_STORM\020\005", 5036);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Levy.proto", &protobuf_RegisterTypes);
  TLevyPos::default_instance_ = new TLevyPos();
  TLevyAchievementRewardInfo::default_instance_ = new TLevyAchievementRewardInfo();
  TLevyAchievementInfo::default_instance_ = new TLevyAchievementInfo();
  TLevyUserInfo::default_instance_ = new TLevyUserInfo();
  TLevyMasterInfo::default_instance_ = new TLevyMasterInfo();
  TLevySlaveInfo::default_instance_ = new TLevySlaveInfo();
  TLevyOtherUserInfo::default_instance_ = new TLevyOtherUserInfo();
  TLevyRecordInfo::default_instance_ = new TLevyRecordInfo();
  TLevyBattleReportInfo::default_instance_ = new TLevyBattleReportInfo();
  TLevyGuildUserInfo::default_instance_ = new TLevyGuildUserInfo();
  TLevyGetUserInfoRsp::default_instance_ = new TLevyGetUserInfoRsp();
  TLevyEnterRsp::default_instance_ = new TLevyEnterRsp();
  TLevyPreviewRsp::default_instance_ = new TLevyPreviewRsp();
  TLevyReceiveRsp::default_instance_ = new TLevyReceiveRsp();
  TLevyGetRecordReq::default_instance_ = new TLevyGetRecordReq();
  TLevyGetRecordRsp::default_instance_ = new TLevyGetRecordRsp();
  TLevyGetPageInfoReq::default_instance_ = new TLevyGetPageInfoReq();
  TLevyGetPageInfoRsp::default_instance_ = new TLevyGetPageInfoRsp();
  TLevyGetCityInfoReq::default_instance_ = new TLevyGetCityInfoReq();
  TLevyGetCityInfoRsp::default_instance_ = new TLevyGetCityInfoRsp();
  TLevyForceLevyRsp::default_instance_ = new TLevyForceLevyRsp();
  TLevyHelpReq::default_instance_ = new TLevyHelpReq();
  TLevyHelpRsp::default_instance_ = new TLevyHelpRsp();
  TLevyConquerReq::default_instance_ = new TLevyConquerReq();
  TLevyConquerRsp::default_instance_ = new TLevyConquerRsp();
  TLevyReleaseSlaveReq::default_instance_ = new TLevyReleaseSlaveReq();
  TLevyRebelRsp::default_instance_ = new TLevyRebelRsp();
  TLevyPlunderReq::default_instance_ = new TLevyPlunderReq();
  TLevyPlunderRsp::default_instance_ = new TLevyPlunderRsp();
  TLevyPlunderPreviewReq::default_instance_ = new TLevyPlunderPreviewReq();
  TLevyPlunderPreviewRsp::default_instance_ = new TLevyPlunderPreviewRsp();
  TLevyTrainReq::default_instance_ = new TLevyTrainReq();
  TLevyMoveCityToEmptyReq::default_instance_ = new TLevyMoveCityToEmptyReq();
  TLevyMoveCityToEmptyRsp::default_instance_ = new TLevyMoveCityToEmptyRsp();
  TLevyForceMoveCityReq::default_instance_ = new TLevyForceMoveCityReq();
  TLevyForceMoveCityRsp::default_instance_ = new TLevyForceMoveCityRsp();
  TLevyStormReq::default_instance_ = new TLevyStormReq();
  TLevyStormRsp::default_instance_ = new TLevyStormRsp();
  TLevyStormPreviewReq::default_instance_ = new TLevyStormPreviewReq();
  TLevyStormPreviewRsp::default_instance_ = new TLevyStormPreviewRsp();
  TLevyGetLevyBattleReportReq::default_instance_ = new TLevyGetLevyBattleReportReq();
  TLevyGetLevyBattleReportRsp::default_instance_ = new TLevyGetLevyBattleReportRsp();
  TLevyGetGuildUserListRsp::default_instance_ = new TLevyGetGuildUserListRsp();
  TLevyReceiveAchievementRewardReq::default_instance_ = new TLevyReceiveAchievementRewardReq();
  TLevyReceiveAchievementRewardRsp::default_instance_ = new TLevyReceiveAchievementRewardRsp();
  TLevyUserInfoChangeNotify::default_instance_ = new TLevyUserInfoChangeNotify();
  TLevyInfoChangeNotify::default_instance_ = new TLevyInfoChangeNotify();
  TLevyNewBattleReportNotify::default_instance_ = new TLevyNewBattleReportNotify();
  TLevyPos::default_instance_->InitAsDefaultInstance();
  TLevyAchievementRewardInfo::default_instance_->InitAsDefaultInstance();
  TLevyAchievementInfo::default_instance_->InitAsDefaultInstance();
  TLevyUserInfo::default_instance_->InitAsDefaultInstance();
  TLevyMasterInfo::default_instance_->InitAsDefaultInstance();
  TLevySlaveInfo::default_instance_->InitAsDefaultInstance();
  TLevyOtherUserInfo::default_instance_->InitAsDefaultInstance();
  TLevyRecordInfo::default_instance_->InitAsDefaultInstance();
  TLevyBattleReportInfo::default_instance_->InitAsDefaultInstance();
  TLevyGuildUserInfo::default_instance_->InitAsDefaultInstance();
  TLevyGetUserInfoRsp::default_instance_->InitAsDefaultInstance();
  TLevyEnterRsp::default_instance_->InitAsDefaultInstance();
  TLevyPreviewRsp::default_instance_->InitAsDefaultInstance();
  TLevyReceiveRsp::default_instance_->InitAsDefaultInstance();
  TLevyGetRecordReq::default_instance_->InitAsDefaultInstance();
  TLevyGetRecordRsp::default_instance_->InitAsDefaultInstance();
  TLevyGetPageInfoReq::default_instance_->InitAsDefaultInstance();
  TLevyGetPageInfoRsp::default_instance_->InitAsDefaultInstance();
  TLevyGetCityInfoReq::default_instance_->InitAsDefaultInstance();
  TLevyGetCityInfoRsp::default_instance_->InitAsDefaultInstance();
  TLevyForceLevyRsp::default_instance_->InitAsDefaultInstance();
  TLevyHelpReq::default_instance_->InitAsDefaultInstance();
  TLevyHelpRsp::default_instance_->InitAsDefaultInstance();
  TLevyConquerReq::default_instance_->InitAsDefaultInstance();
  TLevyConquerRsp::default_instance_->InitAsDefaultInstance();
  TLevyReleaseSlaveReq::default_instance_->InitAsDefaultInstance();
  TLevyRebelRsp::default_instance_->InitAsDefaultInstance();
  TLevyPlunderReq::default_instance_->InitAsDefaultInstance();
  TLevyPlunderRsp::default_instance_->InitAsDefaultInstance();
  TLevyPlunderPreviewReq::default_instance_->InitAsDefaultInstance();
  TLevyPlunderPreviewRsp::default_instance_->InitAsDefaultInstance();
  TLevyTrainReq::default_instance_->InitAsDefaultInstance();
  TLevyMoveCityToEmptyReq::default_instance_->InitAsDefaultInstance();
  TLevyMoveCityToEmptyRsp::default_instance_->InitAsDefaultInstance();
  TLevyForceMoveCityReq::default_instance_->InitAsDefaultInstance();
  TLevyForceMoveCityRsp::default_instance_->InitAsDefaultInstance();
  TLevyStormReq::default_instance_->InitAsDefaultInstance();
  TLevyStormRsp::default_instance_->InitAsDefaultInstance();
  TLevyStormPreviewReq::default_instance_->InitAsDefaultInstance();
  TLevyStormPreviewRsp::default_instance_->InitAsDefaultInstance();
  TLevyGetLevyBattleReportReq::default_instance_->InitAsDefaultInstance();
  TLevyGetLevyBattleReportRsp::default_instance_->InitAsDefaultInstance();
  TLevyGetGuildUserListRsp::default_instance_->InitAsDefaultInstance();
  TLevyReceiveAchievementRewardReq::default_instance_->InitAsDefaultInstance();
  TLevyReceiveAchievementRewardRsp::default_instance_->InitAsDefaultInstance();
  TLevyUserInfoChangeNotify::default_instance_->InitAsDefaultInstance();
  TLevyInfoChangeNotify::default_instance_->InitAsDefaultInstance();
  TLevyNewBattleReportNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fLevy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fLevy_2eproto {
  StaticDescriptorInitializer_net_2fLevy_2eproto() {
    protobuf_AddDesc_net_2fLevy_2eproto();
  }
} static_descriptor_initializer_net_2fLevy_2eproto_;
const ::google::protobuf::EnumDescriptor* ELevyRecordType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ELevyRecordType_descriptor_;
}
bool ELevyRecordType_IsValid(int value) {
  switch(value) {
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 301:
    case 302:
    case 303:
    case 304:
    case 401:
    case 402:
    case 403:
    case 404:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ELevyBattleReportType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ELevyBattleReportType_descriptor_;
}
bool ELevyBattleReportType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyPos::kPageIdFieldNumber;
const int TLevyPos::kPageIndexFieldNumber;
#endif  // !_MSC_VER

TLevyPos::TLevyPos()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyPos)
}

void TLevyPos::InitAsDefaultInstance() {
}

TLevyPos::TLevyPos(const TLevyPos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyPos)
}

void TLevyPos::SharedCtor() {
  _cached_size_ = 0;
  pageid_ = 0u;
  pageindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyPos::~TLevyPos() {
  // @@protoc_insertion_point(destructor:pb.TLevyPos)
  SharedDtor();
}

void TLevyPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyPos_descriptor_;
}

const TLevyPos& TLevyPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyPos* TLevyPos::default_instance_ = NULL;

TLevyPos* TLevyPos::New() const {
  return new TLevyPos;
}

void TLevyPos::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyPos*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pageid_, pageindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PageId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageid_)));
          set_has_pageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PageIndex;
        break;
      }

      // optional uint32 PageIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_PageIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageindex_)));
          set_has_pageindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyPos)
  return false;
#undef DO_
}

void TLevyPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyPos)
  // optional uint32 PageId = 1;
  if (has_pageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pageid(), output);
  }

  // optional uint32 PageIndex = 2;
  if (has_pageindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pageindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyPos)
}

::google::protobuf::uint8* TLevyPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyPos)
  // optional uint32 PageId = 1;
  if (has_pageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pageid(), target);
  }

  // optional uint32 PageIndex = 2;
  if (has_pageindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pageindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyPos)
  return target;
}

int TLevyPos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PageId = 1;
    if (has_pageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageid());
    }

    // optional uint32 PageIndex = 2;
    if (has_pageindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyPos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyPos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyPos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyPos::MergeFrom(const TLevyPos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pageid()) {
      set_pageid(from.pageid());
    }
    if (from.has_pageindex()) {
      set_pageindex(from.pageindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyPos::CopyFrom(const TLevyPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyPos::IsInitialized() const {

  return true;
}

void TLevyPos::Swap(TLevyPos* other) {
  if (other != this) {
    std::swap(pageid_, other->pageid_);
    std::swap(pageindex_, other->pageindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyPos_descriptor_;
  metadata.reflection = TLevyPos_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyAchievementRewardInfo::kIdFieldNumber;
const int TLevyAchievementRewardInfo::kRewardTimeFieldNumber;
#endif  // !_MSC_VER

TLevyAchievementRewardInfo::TLevyAchievementRewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyAchievementRewardInfo)
}

void TLevyAchievementRewardInfo::InitAsDefaultInstance() {
}

TLevyAchievementRewardInfo::TLevyAchievementRewardInfo(const TLevyAchievementRewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyAchievementRewardInfo)
}

void TLevyAchievementRewardInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  rewardtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyAchievementRewardInfo::~TLevyAchievementRewardInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyAchievementRewardInfo)
  SharedDtor();
}

void TLevyAchievementRewardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyAchievementRewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyAchievementRewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyAchievementRewardInfo_descriptor_;
}

const TLevyAchievementRewardInfo& TLevyAchievementRewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyAchievementRewardInfo* TLevyAchievementRewardInfo::default_instance_ = NULL;

TLevyAchievementRewardInfo* TLevyAchievementRewardInfo::New() const {
  return new TLevyAchievementRewardInfo;
}

void TLevyAchievementRewardInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyAchievementRewardInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rewardtime_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyAchievementRewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyAchievementRewardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardTime;
        break;
      }

      // optional uint64 RewardTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rewardtime_)));
          set_has_rewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyAchievementRewardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyAchievementRewardInfo)
  return false;
#undef DO_
}

void TLevyAchievementRewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyAchievementRewardInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RewardTime = 2;
  if (has_rewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rewardtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyAchievementRewardInfo)
}

::google::protobuf::uint8* TLevyAchievementRewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyAchievementRewardInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RewardTime = 2;
  if (has_rewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rewardtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyAchievementRewardInfo)
  return target;
}

int TLevyAchievementRewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RewardTime = 2;
    if (has_rewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rewardtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyAchievementRewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyAchievementRewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyAchievementRewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyAchievementRewardInfo::MergeFrom(const TLevyAchievementRewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_rewardtime()) {
      set_rewardtime(from.rewardtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyAchievementRewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyAchievementRewardInfo::CopyFrom(const TLevyAchievementRewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyAchievementRewardInfo::IsInitialized() const {

  return true;
}

void TLevyAchievementRewardInfo::Swap(TLevyAchievementRewardInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(rewardtime_, other->rewardtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyAchievementRewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyAchievementRewardInfo_descriptor_;
  metadata.reflection = TLevyAchievementRewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyAchievementInfo::kTotalBattleNumFieldNumber;
const int TLevyAchievementInfo::kMaxConnectNumFieldNumber;
const int TLevyAchievementInfo::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TLevyAchievementInfo::TLevyAchievementInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyAchievementInfo)
}

void TLevyAchievementInfo::InitAsDefaultInstance() {
}

TLevyAchievementInfo::TLevyAchievementInfo(const TLevyAchievementInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyAchievementInfo)
}

void TLevyAchievementInfo::SharedCtor() {
  _cached_size_ = 0;
  totalbattlenum_ = 0u;
  maxconnectnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyAchievementInfo::~TLevyAchievementInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyAchievementInfo)
  SharedDtor();
}

void TLevyAchievementInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyAchievementInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyAchievementInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyAchievementInfo_descriptor_;
}

const TLevyAchievementInfo& TLevyAchievementInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyAchievementInfo* TLevyAchievementInfo::default_instance_ = NULL;

TLevyAchievementInfo* TLevyAchievementInfo::New() const {
  return new TLevyAchievementInfo;
}

void TLevyAchievementInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyAchievementInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(totalbattlenum_, maxconnectnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyAchievementInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyAchievementInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TotalBattleNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalbattlenum_)));
          set_has_totalbattlenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxConnectNum;
        break;
      }

      // optional uint32 MaxConnectNum = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxConnectNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxconnectnum_)));
          set_has_maxconnectnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TLevyAchievementRewardInfo ArrRewardInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyAchievementInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyAchievementInfo)
  return false;
#undef DO_
}

void TLevyAchievementInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyAchievementInfo)
  // optional uint32 TotalBattleNum = 1;
  if (has_totalbattlenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->totalbattlenum(), output);
  }

  // optional uint32 MaxConnectNum = 2;
  if (has_maxconnectnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxconnectnum(), output);
  }

  // repeated .pb.TLevyAchievementRewardInfo ArrRewardInfo = 5;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyAchievementInfo)
}

::google::protobuf::uint8* TLevyAchievementInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyAchievementInfo)
  // optional uint32 TotalBattleNum = 1;
  if (has_totalbattlenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->totalbattlenum(), target);
  }

  // optional uint32 MaxConnectNum = 2;
  if (has_maxconnectnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxconnectnum(), target);
  }

  // repeated .pb.TLevyAchievementRewardInfo ArrRewardInfo = 5;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyAchievementInfo)
  return target;
}

int TLevyAchievementInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TotalBattleNum = 1;
    if (has_totalbattlenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalbattlenum());
    }

    // optional uint32 MaxConnectNum = 2;
    if (has_maxconnectnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxconnectnum());
    }

  }
  // repeated .pb.TLevyAchievementRewardInfo ArrRewardInfo = 5;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyAchievementInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyAchievementInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyAchievementInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyAchievementInfo::MergeFrom(const TLevyAchievementInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_totalbattlenum()) {
      set_totalbattlenum(from.totalbattlenum());
    }
    if (from.has_maxconnectnum()) {
      set_maxconnectnum(from.maxconnectnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyAchievementInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyAchievementInfo::CopyFrom(const TLevyAchievementInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyAchievementInfo::IsInitialized() const {

  return true;
}

void TLevyAchievementInfo::Swap(TLevyAchievementInfo* other) {
  if (other != this) {
    std::swap(totalbattlenum_, other->totalbattlenum_);
    std::swap(maxconnectnum_, other->maxconnectnum_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyAchievementInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyAchievementInfo_descriptor_;
  metadata.reflection = TLevyAchievementInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyUserInfo::kPosFieldNumber;
const int TLevyUserInfo::kSettleTimeFieldNumber;
const int TLevyUserInfo::kSliverNumFieldNumber;
const int TLevyUserInfo::kOutputDurationFieldNumber;
const int TLevyUserInfo::kForceNumFieldNumber;
const int TLevyUserInfo::kHelpNumFieldNumber;
const int TLevyUserInfo::kPlunderNumFieldNumber;
const int TLevyUserInfo::kTrainNumFieldNumber;
const int TLevyUserInfo::kStormNumFieldNumber;
const int TLevyUserInfo::kMasterInfoFieldNumber;
const int TLevyUserInfo::kArrSlaveInfoFieldNumber;
const int TLevyUserInfo::kAchievementInfoFieldNumber;
#endif  // !_MSC_VER

TLevyUserInfo::TLevyUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyUserInfo)
}

void TLevyUserInfo::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
  masterinfo_ = const_cast< ::pb::TLevyMasterInfo*>(&::pb::TLevyMasterInfo::default_instance());
  achievementinfo_ = const_cast< ::pb::TLevyAchievementInfo*>(&::pb::TLevyAchievementInfo::default_instance());
}

TLevyUserInfo::TLevyUserInfo(const TLevyUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyUserInfo)
}

void TLevyUserInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  settletime_ = GOOGLE_ULONGLONG(0);
  slivernum_ = GOOGLE_ULONGLONG(0);
  outputduration_ = 0u;
  forcenum_ = 0u;
  helpnum_ = 0u;
  plundernum_ = 0u;
  trainnum_ = 0u;
  stormnum_ = 0u;
  masterinfo_ = NULL;
  achievementinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyUserInfo::~TLevyUserInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyUserInfo)
  SharedDtor();
}

void TLevyUserInfo::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
    delete masterinfo_;
    delete achievementinfo_;
  }
}

void TLevyUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyUserInfo_descriptor_;
}

const TLevyUserInfo& TLevyUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyUserInfo* TLevyUserInfo::default_instance_ = NULL;

TLevyUserInfo* TLevyUserInfo::New() const {
  return new TLevyUserInfo;
}

void TLevyUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(settletime_, trainnum_);
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 2816) {
    stormnum_ = 0u;
    if (has_masterinfo()) {
      if (masterinfo_ != NULL) masterinfo_->::pb::TLevyMasterInfo::Clear();
    }
    if (has_achievementinfo()) {
      if (achievementinfo_ != NULL) achievementinfo_->::pb::TLevyAchievementInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrslaveinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 2;
      case 2: {
        if (tag == 16) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SliverNum;
        break;
      }

      // optional uint64 SliverNum = 3;
      case 3: {
        if (tag == 24) {
         parse_SliverNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_OutputDuration;
        break;
      }

      // optional uint32 OutputDuration = 4;
      case 4: {
        if (tag == 32) {
         parse_OutputDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outputduration_)));
          set_has_outputduration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ForceNum;
        break;
      }

      // optional uint32 ForceNum = 5;
      case 5: {
        if (tag == 40) {
         parse_ForceNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &forcenum_)));
          set_has_forcenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HelpNum;
        break;
      }

      // optional uint32 HelpNum = 6;
      case 6: {
        if (tag == 48) {
         parse_HelpNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &helpnum_)));
          set_has_helpnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PlunderNum;
        break;
      }

      // optional uint32 PlunderNum = 7;
      case 7: {
        if (tag == 56) {
         parse_PlunderNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &plundernum_)));
          set_has_plundernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_TrainNum;
        break;
      }

      // optional uint32 TrainNum = 8;
      case 8: {
        if (tag == 64) {
         parse_TrainNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trainnum_)));
          set_has_trainnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_StormNum;
        break;
      }

      // optional uint32 StormNum = 9;
      case 9: {
        if (tag == 72) {
         parse_StormNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stormnum_)));
          set_has_stormnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_MasterInfo;
        break;
      }

      // optional .pb.TLevyMasterInfo MasterInfo = 12;
      case 12: {
        if (tag == 98) {
         parse_MasterInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_masterinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ArrSlaveInfo;
        break;
      }

      // repeated .pb.TLevySlaveInfo ArrSlaveInfo = 13;
      case 13: {
        if (tag == 106) {
         parse_ArrSlaveInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrslaveinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ArrSlaveInfo;
        if (input->ExpectTag(122)) goto parse_AchievementInfo;
        break;
      }

      // optional .pb.TLevyAchievementInfo AchievementInfo = 15;
      case 15: {
        if (tag == 122) {
         parse_AchievementInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_achievementinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyUserInfo)
  return false;
#undef DO_
}

void TLevyUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyUserInfo)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 SettleTime = 2;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->settletime(), output);
  }

  // optional uint64 SliverNum = 3;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->slivernum(), output);
  }

  // optional uint32 OutputDuration = 4;
  if (has_outputduration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->outputduration(), output);
  }

  // optional uint32 ForceNum = 5;
  if (has_forcenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->forcenum(), output);
  }

  // optional uint32 HelpNum = 6;
  if (has_helpnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->helpnum(), output);
  }

  // optional uint32 PlunderNum = 7;
  if (has_plundernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->plundernum(), output);
  }

  // optional uint32 TrainNum = 8;
  if (has_trainnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->trainnum(), output);
  }

  // optional uint32 StormNum = 9;
  if (has_stormnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->stormnum(), output);
  }

  // optional .pb.TLevyMasterInfo MasterInfo = 12;
  if (has_masterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->masterinfo(), output);
  }

  // repeated .pb.TLevySlaveInfo ArrSlaveInfo = 13;
  for (int i = 0; i < this->arrslaveinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->arrslaveinfo(i), output);
  }

  // optional .pb.TLevyAchievementInfo AchievementInfo = 15;
  if (has_achievementinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->achievementinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyUserInfo)
}

::google::protobuf::uint8* TLevyUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyUserInfo)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 SettleTime = 2;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->settletime(), target);
  }

  // optional uint64 SliverNum = 3;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->slivernum(), target);
  }

  // optional uint32 OutputDuration = 4;
  if (has_outputduration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->outputduration(), target);
  }

  // optional uint32 ForceNum = 5;
  if (has_forcenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->forcenum(), target);
  }

  // optional uint32 HelpNum = 6;
  if (has_helpnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->helpnum(), target);
  }

  // optional uint32 PlunderNum = 7;
  if (has_plundernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->plundernum(), target);
  }

  // optional uint32 TrainNum = 8;
  if (has_trainnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->trainnum(), target);
  }

  // optional uint32 StormNum = 9;
  if (has_stormnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->stormnum(), target);
  }

  // optional .pb.TLevyMasterInfo MasterInfo = 12;
  if (has_masterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->masterinfo(), target);
  }

  // repeated .pb.TLevySlaveInfo ArrSlaveInfo = 13;
  for (int i = 0; i < this->arrslaveinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->arrslaveinfo(i), target);
  }

  // optional .pb.TLevyAchievementInfo AchievementInfo = 15;
  if (has_achievementinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->achievementinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyUserInfo)
  return target;
}

int TLevyUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 SettleTime = 2;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

    // optional uint64 SliverNum = 3;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

    // optional uint32 OutputDuration = 4;
    if (has_outputduration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->outputduration());
    }

    // optional uint32 ForceNum = 5;
    if (has_forcenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->forcenum());
    }

    // optional uint32 HelpNum = 6;
    if (has_helpnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->helpnum());
    }

    // optional uint32 PlunderNum = 7;
    if (has_plundernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->plundernum());
    }

    // optional uint32 TrainNum = 8;
    if (has_trainnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trainnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 StormNum = 9;
    if (has_stormnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stormnum());
    }

    // optional .pb.TLevyMasterInfo MasterInfo = 12;
    if (has_masterinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->masterinfo());
    }

    // optional .pb.TLevyAchievementInfo AchievementInfo = 15;
    if (has_achievementinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->achievementinfo());
    }

  }
  // repeated .pb.TLevySlaveInfo ArrSlaveInfo = 13;
  total_size += 1 * this->arrslaveinfo_size();
  for (int i = 0; i < this->arrslaveinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrslaveinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyUserInfo::MergeFrom(const TLevyUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrslaveinfo_.MergeFrom(from.arrslaveinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
    if (from.has_outputduration()) {
      set_outputduration(from.outputduration());
    }
    if (from.has_forcenum()) {
      set_forcenum(from.forcenum());
    }
    if (from.has_helpnum()) {
      set_helpnum(from.helpnum());
    }
    if (from.has_plundernum()) {
      set_plundernum(from.plundernum());
    }
    if (from.has_trainnum()) {
      set_trainnum(from.trainnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stormnum()) {
      set_stormnum(from.stormnum());
    }
    if (from.has_masterinfo()) {
      mutable_masterinfo()->::pb::TLevyMasterInfo::MergeFrom(from.masterinfo());
    }
    if (from.has_achievementinfo()) {
      mutable_achievementinfo()->::pb::TLevyAchievementInfo::MergeFrom(from.achievementinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyUserInfo::CopyFrom(const TLevyUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyUserInfo::IsInitialized() const {

  return true;
}

void TLevyUserInfo::Swap(TLevyUserInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(settletime_, other->settletime_);
    std::swap(slivernum_, other->slivernum_);
    std::swap(outputduration_, other->outputduration_);
    std::swap(forcenum_, other->forcenum_);
    std::swap(helpnum_, other->helpnum_);
    std::swap(plundernum_, other->plundernum_);
    std::swap(trainnum_, other->trainnum_);
    std::swap(stormnum_, other->stormnum_);
    std::swap(masterinfo_, other->masterinfo_);
    arrslaveinfo_.Swap(&other->arrslaveinfo_);
    std::swap(achievementinfo_, other->achievementinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyUserInfo_descriptor_;
  metadata.reflection = TLevyUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyMasterInfo::kMasterUidFieldNumber;
const int TLevyMasterInfo::kBeConqueredTimeFieldNumber;
const int TLevyMasterInfo::kMasterUserInfoFieldNumber;
const int TLevyMasterInfo::kPosFieldNumber;
#endif  // !_MSC_VER

TLevyMasterInfo::TLevyMasterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyMasterInfo)
}

void TLevyMasterInfo::InitAsDefaultInstance() {
  masteruserinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyMasterInfo::TLevyMasterInfo(const TLevyMasterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyMasterInfo)
}

void TLevyMasterInfo::SharedCtor() {
  _cached_size_ = 0;
  masteruid_ = GOOGLE_ULONGLONG(0);
  beconqueredtime_ = GOOGLE_ULONGLONG(0);
  masteruserinfo_ = NULL;
  pos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyMasterInfo::~TLevyMasterInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyMasterInfo)
  SharedDtor();
}

void TLevyMasterInfo::SharedDtor() {
  if (this != default_instance_) {
    delete masteruserinfo_;
    delete pos_;
  }
}

void TLevyMasterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyMasterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyMasterInfo_descriptor_;
}

const TLevyMasterInfo& TLevyMasterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyMasterInfo* TLevyMasterInfo::default_instance_ = NULL;

TLevyMasterInfo* TLevyMasterInfo::New() const {
  return new TLevyMasterInfo;
}

void TLevyMasterInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyMasterInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(masteruid_, beconqueredtime_);
    if (has_masteruserinfo()) {
      if (masteruserinfo_ != NULL) masteruserinfo_->::pb::TUserSimpleInfo::Clear();
    }
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyMasterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyMasterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 MasterUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeConqueredTime;
        break;
      }

      // optional uint64 BeConqueredTime = 2;
      case 2: {
        if (tag == 16) {
         parse_BeConqueredTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &beconqueredtime_)));
          set_has_beconqueredtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_MasterUserInfo;
        break;
      }

      // optional .pb.TUserSimpleInfo MasterUserInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_MasterUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_masteruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Pos;
        break;
      }

      // optional .pb.TLevyPos Pos = 4;
      case 4: {
        if (tag == 34) {
         parse_Pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyMasterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyMasterInfo)
  return false;
#undef DO_
}

void TLevyMasterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyMasterInfo)
  // optional uint64 MasterUid = 1;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->masteruid(), output);
  }

  // optional uint64 BeConqueredTime = 2;
  if (has_beconqueredtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->beconqueredtime(), output);
  }

  // optional .pb.TUserSimpleInfo MasterUserInfo = 3;
  if (has_masteruserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->masteruserinfo(), output);
  }

  // optional .pb.TLevyPos Pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyMasterInfo)
}

::google::protobuf::uint8* TLevyMasterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyMasterInfo)
  // optional uint64 MasterUid = 1;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->masteruid(), target);
  }

  // optional uint64 BeConqueredTime = 2;
  if (has_beconqueredtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->beconqueredtime(), target);
  }

  // optional .pb.TUserSimpleInfo MasterUserInfo = 3;
  if (has_masteruserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->masteruserinfo(), target);
  }

  // optional .pb.TLevyPos Pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyMasterInfo)
  return target;
}

int TLevyMasterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 MasterUid = 1;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->masteruid());
    }

    // optional uint64 BeConqueredTime = 2;
    if (has_beconqueredtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->beconqueredtime());
    }

    // optional .pb.TUserSimpleInfo MasterUserInfo = 3;
    if (has_masteruserinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->masteruserinfo());
    }

    // optional .pb.TLevyPos Pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyMasterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyMasterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyMasterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyMasterInfo::MergeFrom(const TLevyMasterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
    if (from.has_beconqueredtime()) {
      set_beconqueredtime(from.beconqueredtime());
    }
    if (from.has_masteruserinfo()) {
      mutable_masteruserinfo()->::pb::TUserSimpleInfo::MergeFrom(from.masteruserinfo());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyMasterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyMasterInfo::CopyFrom(const TLevyMasterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyMasterInfo::IsInitialized() const {

  return true;
}

void TLevyMasterInfo::Swap(TLevyMasterInfo* other) {
  if (other != this) {
    std::swap(masteruid_, other->masteruid_);
    std::swap(beconqueredtime_, other->beconqueredtime_);
    std::swap(masteruserinfo_, other->masteruserinfo_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyMasterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyMasterInfo_descriptor_;
  metadata.reflection = TLevyMasterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevySlaveInfo::kSlaveUidFieldNumber;
const int TLevySlaveInfo::kConquerTimeFieldNumber;
const int TLevySlaveInfo::kPosFieldNumber;
const int TLevySlaveInfo::kSlaveUserInfoFieldNumber;
#endif  // !_MSC_VER

TLevySlaveInfo::TLevySlaveInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevySlaveInfo)
}

void TLevySlaveInfo::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
  slaveuserinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TLevySlaveInfo::TLevySlaveInfo(const TLevySlaveInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevySlaveInfo)
}

void TLevySlaveInfo::SharedCtor() {
  _cached_size_ = 0;
  slaveuid_ = GOOGLE_ULONGLONG(0);
  conquertime_ = GOOGLE_ULONGLONG(0);
  pos_ = NULL;
  slaveuserinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevySlaveInfo::~TLevySlaveInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevySlaveInfo)
  SharedDtor();
}

void TLevySlaveInfo::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
    delete slaveuserinfo_;
  }
}

void TLevySlaveInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevySlaveInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevySlaveInfo_descriptor_;
}

const TLevySlaveInfo& TLevySlaveInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevySlaveInfo* TLevySlaveInfo::default_instance_ = NULL;

TLevySlaveInfo* TLevySlaveInfo::New() const {
  return new TLevySlaveInfo;
}

void TLevySlaveInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevySlaveInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(slaveuid_, conquertime_);
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    if (has_slaveuserinfo()) {
      if (slaveuserinfo_ != NULL) slaveuserinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevySlaveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevySlaveInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SlaveUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slaveuid_)));
          set_has_slaveuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ConquerTime;
        break;
      }

      // optional uint64 ConquerTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ConquerTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conquertime_)));
          set_has_conquertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Pos;
        break;
      }

      // optional .pb.TLevyPos Pos = 3;
      case 3: {
        if (tag == 26) {
         parse_Pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_SlaveUserInfo;
        break;
      }

      // optional .pb.TUserSimpleInfo SlaveUserInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_SlaveUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_slaveuserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevySlaveInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevySlaveInfo)
  return false;
#undef DO_
}

void TLevySlaveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevySlaveInfo)
  // optional uint64 SlaveUid = 1;
  if (has_slaveuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slaveuid(), output);
  }

  // optional uint64 ConquerTime = 2;
  if (has_conquertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->conquertime(), output);
  }

  // optional .pb.TLevyPos Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pos(), output);
  }

  // optional .pb.TUserSimpleInfo SlaveUserInfo = 5;
  if (has_slaveuserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->slaveuserinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevySlaveInfo)
}

::google::protobuf::uint8* TLevySlaveInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevySlaveInfo)
  // optional uint64 SlaveUid = 1;
  if (has_slaveuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slaveuid(), target);
  }

  // optional uint64 ConquerTime = 2;
  if (has_conquertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->conquertime(), target);
  }

  // optional .pb.TLevyPos Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pos(), target);
  }

  // optional .pb.TUserSimpleInfo SlaveUserInfo = 5;
  if (has_slaveuserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->slaveuserinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevySlaveInfo)
  return target;
}

int TLevySlaveInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SlaveUid = 1;
    if (has_slaveuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slaveuid());
    }

    // optional uint64 ConquerTime = 2;
    if (has_conquertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->conquertime());
    }

    // optional .pb.TLevyPos Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional .pb.TUserSimpleInfo SlaveUserInfo = 5;
    if (has_slaveuserinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slaveuserinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevySlaveInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevySlaveInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevySlaveInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevySlaveInfo::MergeFrom(const TLevySlaveInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slaveuid()) {
      set_slaveuid(from.slaveuid());
    }
    if (from.has_conquertime()) {
      set_conquertime(from.conquertime());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_slaveuserinfo()) {
      mutable_slaveuserinfo()->::pb::TUserSimpleInfo::MergeFrom(from.slaveuserinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevySlaveInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevySlaveInfo::CopyFrom(const TLevySlaveInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevySlaveInfo::IsInitialized() const {

  return true;
}

void TLevySlaveInfo::Swap(TLevySlaveInfo* other) {
  if (other != this) {
    std::swap(slaveuid_, other->slaveuid_);
    std::swap(conquertime_, other->conquertime_);
    std::swap(pos_, other->pos_);
    std::swap(slaveuserinfo_, other->slaveuserinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevySlaveInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevySlaveInfo_descriptor_;
  metadata.reflection = TLevySlaveInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyOtherUserInfo::kPosFieldNumber;
const int TLevyOtherUserInfo::kUidFieldNumber;
const int TLevyOtherUserInfo::kMasterUidFieldNumber;
const int TLevyOtherUserInfo::kBeHelpNumFieldNumber;
const int TLevyOtherUserInfo::kBePlunderedNumFieldNumber;
const int TLevyOtherUserInfo::kBePlunderedTimeFieldNumber;
const int TLevyOtherUserInfo::kSettleTimeFieldNumber;
const int TLevyOtherUserInfo::kHaveOutputFieldNumber;
#endif  // !_MSC_VER

TLevyOtherUserInfo::TLevyOtherUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyOtherUserInfo)
}

void TLevyOtherUserInfo::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyOtherUserInfo::TLevyOtherUserInfo(const TLevyOtherUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyOtherUserInfo)
}

void TLevyOtherUserInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  uid_ = GOOGLE_ULONGLONG(0);
  masteruid_ = GOOGLE_ULONGLONG(0);
  behelpnum_ = 0u;
  beplunderednum_ = 0u;
  beplunderedtime_ = GOOGLE_ULONGLONG(0);
  settletime_ = GOOGLE_ULONGLONG(0);
  haveoutput_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyOtherUserInfo::~TLevyOtherUserInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyOtherUserInfo)
  SharedDtor();
}

void TLevyOtherUserInfo::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyOtherUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyOtherUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyOtherUserInfo_descriptor_;
}

const TLevyOtherUserInfo& TLevyOtherUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyOtherUserInfo* TLevyOtherUserInfo::default_instance_ = NULL;

TLevyOtherUserInfo* TLevyOtherUserInfo::New() const {
  return new TLevyOtherUserInfo;
}

void TLevyOtherUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyOtherUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uid_, haveoutput_);
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyOtherUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyOtherUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 3;
      case 3: {
        if (tag == 24) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_MasterUid;
        break;
      }

      // optional uint64 MasterUid = 4;
      case 4: {
        if (tag == 32) {
         parse_MasterUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BeHelpNum;
        break;
      }

      // optional uint32 BeHelpNum = 5;
      case 5: {
        if (tag == 40) {
         parse_BeHelpNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &behelpnum_)));
          set_has_behelpnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_BePlunderedNum;
        break;
      }

      // optional uint32 BePlunderedNum = 6;
      case 6: {
        if (tag == 48) {
         parse_BePlunderedNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beplunderednum_)));
          set_has_beplunderednum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_BePlunderedTime;
        break;
      }

      // optional uint64 BePlunderedTime = 7;
      case 7: {
        if (tag == 56) {
         parse_BePlunderedTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &beplunderedtime_)));
          set_has_beplunderedtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 8;
      case 8: {
        if (tag == 64) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_HaveOutput;
        break;
      }

      // optional uint32 HaveOutput = 9;
      case 9: {
        if (tag == 72) {
         parse_HaveOutput:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &haveoutput_)));
          set_has_haveoutput();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyOtherUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyOtherUserInfo)
  return false;
#undef DO_
}

void TLevyOtherUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyOtherUserInfo)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uid(), output);
  }

  // optional uint64 MasterUid = 4;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->masteruid(), output);
  }

  // optional uint32 BeHelpNum = 5;
  if (has_behelpnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->behelpnum(), output);
  }

  // optional uint32 BePlunderedNum = 6;
  if (has_beplunderednum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->beplunderednum(), output);
  }

  // optional uint64 BePlunderedTime = 7;
  if (has_beplunderedtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->beplunderedtime(), output);
  }

  // optional uint64 SettleTime = 8;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->settletime(), output);
  }

  // optional uint32 HaveOutput = 9;
  if (has_haveoutput()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->haveoutput(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyOtherUserInfo)
}

::google::protobuf::uint8* TLevyOtherUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyOtherUserInfo)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uid(), target);
  }

  // optional uint64 MasterUid = 4;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->masteruid(), target);
  }

  // optional uint32 BeHelpNum = 5;
  if (has_behelpnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->behelpnum(), target);
  }

  // optional uint32 BePlunderedNum = 6;
  if (has_beplunderednum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->beplunderednum(), target);
  }

  // optional uint64 BePlunderedTime = 7;
  if (has_beplunderedtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->beplunderedtime(), target);
  }

  // optional uint64 SettleTime = 8;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->settletime(), target);
  }

  // optional uint32 HaveOutput = 9;
  if (has_haveoutput()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->haveoutput(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyOtherUserInfo)
  return target;
}

int TLevyOtherUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 Uid = 3;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional uint64 MasterUid = 4;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->masteruid());
    }

    // optional uint32 BeHelpNum = 5;
    if (has_behelpnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->behelpnum());
    }

    // optional uint32 BePlunderedNum = 6;
    if (has_beplunderednum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beplunderednum());
    }

    // optional uint64 BePlunderedTime = 7;
    if (has_beplunderedtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->beplunderedtime());
    }

    // optional uint64 SettleTime = 8;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

    // optional uint32 HaveOutput = 9;
    if (has_haveoutput()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->haveoutput());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyOtherUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyOtherUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyOtherUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyOtherUserInfo::MergeFrom(const TLevyOtherUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
    if (from.has_behelpnum()) {
      set_behelpnum(from.behelpnum());
    }
    if (from.has_beplunderednum()) {
      set_beplunderednum(from.beplunderednum());
    }
    if (from.has_beplunderedtime()) {
      set_beplunderedtime(from.beplunderedtime());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
    if (from.has_haveoutput()) {
      set_haveoutput(from.haveoutput());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyOtherUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyOtherUserInfo::CopyFrom(const TLevyOtherUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyOtherUserInfo::IsInitialized() const {

  return true;
}

void TLevyOtherUserInfo::Swap(TLevyOtherUserInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(uid_, other->uid_);
    std::swap(masteruid_, other->masteruid_);
    std::swap(behelpnum_, other->behelpnum_);
    std::swap(beplunderednum_, other->beplunderednum_);
    std::swap(beplunderedtime_, other->beplunderedtime_);
    std::swap(settletime_, other->settletime_);
    std::swap(haveoutput_, other->haveoutput_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyOtherUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyOtherUserInfo_descriptor_;
  metadata.reflection = TLevyOtherUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyRecordInfo::kRecordTypeFieldNumber;
const int TLevyRecordInfo::kRecordTimeFieldNumber;
const int TLevyRecordInfo::kRecordDataFieldNumber;
const int TLevyRecordInfo::kArrUnameFieldNumber;
#endif  // !_MSC_VER

TLevyRecordInfo::TLevyRecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyRecordInfo)
}

void TLevyRecordInfo::InitAsDefaultInstance() {
}

TLevyRecordInfo::TLevyRecordInfo(const TLevyRecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyRecordInfo)
}

void TLevyRecordInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  recordtype_ = 100;
  recordtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyRecordInfo::~TLevyRecordInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyRecordInfo)
  SharedDtor();
}

void TLevyRecordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyRecordInfo_descriptor_;
}

const TLevyRecordInfo& TLevyRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyRecordInfo* TLevyRecordInfo::default_instance_ = NULL;

TLevyRecordInfo* TLevyRecordInfo::New() const {
  return new TLevyRecordInfo;
}

void TLevyRecordInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    recordtype_ = 100;
    recordtime_ = GOOGLE_ULONGLONG(0);
  }
  recorddata_.Clear();
  arruname_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ELevyRecordType RecordType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ELevyRecordType_IsValid(value)) {
            set_recordtype(static_cast< ::pb::ELevyRecordType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecordTime;
        break;
      }

      // optional uint64 RecordTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RecordTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recordtime_)));
          set_has_recordtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RecordData;
        break;
      }

      // repeated uint64 RecordData = 3;
      case 3: {
        if (tag == 24) {
         parse_RecordData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_recorddata())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_recorddata())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RecordData;
        if (input->ExpectTag(34)) goto parse_ArrUname;
        break;
      }

      // repeated string ArrUname = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrUname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arruname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arruname(this->arruname_size() - 1).data(),
            this->arruname(this->arruname_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "arruname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrUname;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyRecordInfo)
  return false;
#undef DO_
}

void TLevyRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyRecordInfo)
  // optional .pb.ELevyRecordType RecordType = 1;
  if (has_recordtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->recordtype(), output);
  }

  // optional uint64 RecordTime = 2;
  if (has_recordtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->recordtime(), output);
  }

  // repeated uint64 RecordData = 3;
  for (int i = 0; i < this->recorddata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->recorddata(i), output);
  }

  // repeated string ArrUname = 4;
  for (int i = 0; i < this->arruname_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->arruname(i).data(), this->arruname(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "arruname");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->arruname(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyRecordInfo)
}

::google::protobuf::uint8* TLevyRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyRecordInfo)
  // optional .pb.ELevyRecordType RecordType = 1;
  if (has_recordtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->recordtype(), target);
  }

  // optional uint64 RecordTime = 2;
  if (has_recordtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->recordtime(), target);
  }

  // repeated uint64 RecordData = 3;
  for (int i = 0; i < this->recorddata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->recorddata(i), target);
  }

  // repeated string ArrUname = 4;
  for (int i = 0; i < this->arruname_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arruname(i).data(), this->arruname(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "arruname");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->arruname(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyRecordInfo)
  return target;
}

int TLevyRecordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ELevyRecordType RecordType = 1;
    if (has_recordtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recordtype());
    }

    // optional uint64 RecordTime = 2;
    if (has_recordtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->recordtime());
    }

  }
  // repeated uint64 RecordData = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->recorddata_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->recorddata(i));
    }
    total_size += 1 * this->recorddata_size() + data_size;
  }

  // repeated string ArrUname = 4;
  total_size += 1 * this->arruname_size();
  for (int i = 0; i < this->arruname_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arruname(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyRecordInfo::MergeFrom(const TLevyRecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  recorddata_.MergeFrom(from.recorddata_);
  arruname_.MergeFrom(from.arruname_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recordtype()) {
      set_recordtype(from.recordtype());
    }
    if (from.has_recordtime()) {
      set_recordtime(from.recordtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyRecordInfo::CopyFrom(const TLevyRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyRecordInfo::IsInitialized() const {

  return true;
}

void TLevyRecordInfo::Swap(TLevyRecordInfo* other) {
  if (other != this) {
    std::swap(recordtype_, other->recordtype_);
    std::swap(recordtime_, other->recordtime_);
    recorddata_.Swap(&other->recorddata_);
    arruname_.Swap(&other->arruname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyRecordInfo_descriptor_;
  metadata.reflection = TLevyRecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyBattleReportInfo::kReportTypeFieldNumber;
const int TLevyBattleReportInfo::kReportTimeFieldNumber;
const int TLevyBattleReportInfo::kReportDataFieldNumber;
const int TLevyBattleReportInfo::kArrUnameFieldNumber;
#endif  // !_MSC_VER

TLevyBattleReportInfo::TLevyBattleReportInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyBattleReportInfo)
}

void TLevyBattleReportInfo::InitAsDefaultInstance() {
}

TLevyBattleReportInfo::TLevyBattleReportInfo(const TLevyBattleReportInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyBattleReportInfo)
}

void TLevyBattleReportInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reporttype_ = 1;
  reporttime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyBattleReportInfo::~TLevyBattleReportInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyBattleReportInfo)
  SharedDtor();
}

void TLevyBattleReportInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyBattleReportInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyBattleReportInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyBattleReportInfo_descriptor_;
}

const TLevyBattleReportInfo& TLevyBattleReportInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyBattleReportInfo* TLevyBattleReportInfo::default_instance_ = NULL;

TLevyBattleReportInfo* TLevyBattleReportInfo::New() const {
  return new TLevyBattleReportInfo;
}

void TLevyBattleReportInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    reporttype_ = 1;
    reporttime_ = GOOGLE_ULONGLONG(0);
  }
  reportdata_.Clear();
  arruname_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyBattleReportInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyBattleReportInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ELevyBattleReportType ReportType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ELevyBattleReportType_IsValid(value)) {
            set_reporttype(static_cast< ::pb::ELevyBattleReportType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReportTime;
        break;
      }

      // optional uint64 ReportTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ReportTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &reporttime_)));
          set_has_reporttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReportData;
        break;
      }

      // repeated uint64 ReportData = 3;
      case 3: {
        if (tag == 24) {
         parse_ReportData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_reportdata())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_reportdata())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReportData;
        if (input->ExpectTag(34)) goto parse_ArrUname;
        break;
      }

      // repeated string ArrUname = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrUname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arruname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arruname(this->arruname_size() - 1).data(),
            this->arruname(this->arruname_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "arruname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrUname;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyBattleReportInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyBattleReportInfo)
  return false;
#undef DO_
}

void TLevyBattleReportInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyBattleReportInfo)
  // optional .pb.ELevyBattleReportType ReportType = 1;
  if (has_reporttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reporttype(), output);
  }

  // optional uint64 ReportTime = 2;
  if (has_reporttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->reporttime(), output);
  }

  // repeated uint64 ReportData = 3;
  for (int i = 0; i < this->reportdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->reportdata(i), output);
  }

  // repeated string ArrUname = 4;
  for (int i = 0; i < this->arruname_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->arruname(i).data(), this->arruname(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "arruname");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->arruname(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyBattleReportInfo)
}

::google::protobuf::uint8* TLevyBattleReportInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyBattleReportInfo)
  // optional .pb.ELevyBattleReportType ReportType = 1;
  if (has_reporttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reporttype(), target);
  }

  // optional uint64 ReportTime = 2;
  if (has_reporttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->reporttime(), target);
  }

  // repeated uint64 ReportData = 3;
  for (int i = 0; i < this->reportdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->reportdata(i), target);
  }

  // repeated string ArrUname = 4;
  for (int i = 0; i < this->arruname_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arruname(i).data(), this->arruname(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "arruname");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->arruname(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyBattleReportInfo)
  return target;
}

int TLevyBattleReportInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ELevyBattleReportType ReportType = 1;
    if (has_reporttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reporttype());
    }

    // optional uint64 ReportTime = 2;
    if (has_reporttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->reporttime());
    }

  }
  // repeated uint64 ReportData = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->reportdata_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->reportdata(i));
    }
    total_size += 1 * this->reportdata_size() + data_size;
  }

  // repeated string ArrUname = 4;
  total_size += 1 * this->arruname_size();
  for (int i = 0; i < this->arruname_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arruname(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyBattleReportInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyBattleReportInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyBattleReportInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyBattleReportInfo::MergeFrom(const TLevyBattleReportInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  reportdata_.MergeFrom(from.reportdata_);
  arruname_.MergeFrom(from.arruname_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reporttype()) {
      set_reporttype(from.reporttype());
    }
    if (from.has_reporttime()) {
      set_reporttime(from.reporttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyBattleReportInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyBattleReportInfo::CopyFrom(const TLevyBattleReportInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyBattleReportInfo::IsInitialized() const {

  return true;
}

void TLevyBattleReportInfo::Swap(TLevyBattleReportInfo* other) {
  if (other != this) {
    std::swap(reporttype_, other->reporttype_);
    std::swap(reporttime_, other->reporttime_);
    reportdata_.Swap(&other->reportdata_);
    arruname_.Swap(&other->arruname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyBattleReportInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyBattleReportInfo_descriptor_;
  metadata.reflection = TLevyBattleReportInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGuildUserInfo::kPosFieldNumber;
const int TLevyGuildUserInfo::kUidFieldNumber;
const int TLevyGuildUserInfo::kUnameFieldNumber;
const int TLevyGuildUserInfo::kConnectNumFieldNumber;
const int TLevyGuildUserInfo::kRpgPostFieldNumber;
#endif  // !_MSC_VER

TLevyGuildUserInfo::TLevyGuildUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGuildUserInfo)
}

void TLevyGuildUserInfo::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyGuildUserInfo::TLevyGuildUserInfo(const TLevyGuildUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGuildUserInfo)
}

void TLevyGuildUserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pos_ = NULL;
  uid_ = GOOGLE_ULONGLONG(0);
  uname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connectnum_ = 0u;
  rpgpost_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGuildUserInfo::~TLevyGuildUserInfo() {
  // @@protoc_insertion_point(destructor:pb.TLevyGuildUserInfo)
  SharedDtor();
}

void TLevyGuildUserInfo::SharedDtor() {
  if (uname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uname_;
  }
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyGuildUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGuildUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGuildUserInfo_descriptor_;
}

const TLevyGuildUserInfo& TLevyGuildUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGuildUserInfo* TLevyGuildUserInfo::default_instance_ = NULL;

TLevyGuildUserInfo* TLevyGuildUserInfo::New() const {
  return new TLevyGuildUserInfo;
}

void TLevyGuildUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyGuildUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(connectnum_, rpgpost_);
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_uname()) {
      if (uname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGuildUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGuildUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 3;
      case 3: {
        if (tag == 24) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Uname;
        break;
      }

      // optional string Uname = 4;
      case 4: {
        if (tag == 34) {
         parse_Uname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uname().data(), this->uname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ConnectNum;
        break;
      }

      // optional uint32 ConnectNum = 5;
      case 5: {
        if (tag == 40) {
         parse_ConnectNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connectnum_)));
          set_has_connectnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RpgPost;
        break;
      }

      // optional .pb.EGuildPost RpgPost = 6;
      case 6: {
        if (tag == 48) {
         parse_RpgPost:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EGuildPost_IsValid(value)) {
            set_rpgpost(static_cast< ::pb::EGuildPost >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGuildUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGuildUserInfo)
  return false;
#undef DO_
}

void TLevyGuildUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGuildUserInfo)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uid(), output);
  }

  // optional string Uname = 4;
  if (has_uname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uname(), output);
  }

  // optional uint32 ConnectNum = 5;
  if (has_connectnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->connectnum(), output);
  }

  // optional .pb.EGuildPost RpgPost = 6;
  if (has_rpgpost()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->rpgpost(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGuildUserInfo)
}

::google::protobuf::uint8* TLevyGuildUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGuildUserInfo)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uid(), target);
  }

  // optional string Uname = 4;
  if (has_uname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uname(), target);
  }

  // optional uint32 ConnectNum = 5;
  if (has_connectnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->connectnum(), target);
  }

  // optional .pb.EGuildPost RpgPost = 6;
  if (has_rpgpost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->rpgpost(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGuildUserInfo)
  return target;
}

int TLevyGuildUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 Uid = 3;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string Uname = 4;
    if (has_uname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uname());
    }

    // optional uint32 ConnectNum = 5;
    if (has_connectnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connectnum());
    }

    // optional .pb.EGuildPost RpgPost = 6;
    if (has_rpgpost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rpgpost());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGuildUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGuildUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGuildUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGuildUserInfo::MergeFrom(const TLevyGuildUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_uname()) {
      set_uname(from.uname());
    }
    if (from.has_connectnum()) {
      set_connectnum(from.connectnum());
    }
    if (from.has_rpgpost()) {
      set_rpgpost(from.rpgpost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGuildUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGuildUserInfo::CopyFrom(const TLevyGuildUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGuildUserInfo::IsInitialized() const {

  return true;
}

void TLevyGuildUserInfo::Swap(TLevyGuildUserInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(uid_, other->uid_);
    std::swap(uname_, other->uname_);
    std::swap(connectnum_, other->connectnum_);
    std::swap(rpgpost_, other->rpgpost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGuildUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGuildUserInfo_descriptor_;
  metadata.reflection = TLevyGuildUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetUserInfoRsp::kUserInfoFieldNumber;
#endif  // !_MSC_VER

TLevyGetUserInfoRsp::TLevyGetUserInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetUserInfoRsp)
}

void TLevyGetUserInfoRsp::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TLevyUserInfo*>(&::pb::TLevyUserInfo::default_instance());
}

TLevyGetUserInfoRsp::TLevyGetUserInfoRsp(const TLevyGetUserInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetUserInfoRsp)
}

void TLevyGetUserInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetUserInfoRsp::~TLevyGetUserInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetUserInfoRsp)
  SharedDtor();
}

void TLevyGetUserInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TLevyGetUserInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetUserInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetUserInfoRsp_descriptor_;
}

const TLevyGetUserInfoRsp& TLevyGetUserInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetUserInfoRsp* TLevyGetUserInfoRsp::default_instance_ = NULL;

TLevyGetUserInfoRsp* TLevyGetUserInfoRsp::New() const {
  return new TLevyGetUserInfoRsp;
}

void TLevyGetUserInfoRsp::Clear() {
  if (has_userinfo()) {
    if (userinfo_ != NULL) userinfo_->::pb::TLevyUserInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetUserInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetUserInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyUserInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetUserInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetUserInfoRsp)
  return false;
#undef DO_
}

void TLevyGetUserInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetUserInfoRsp)
  // optional .pb.TLevyUserInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetUserInfoRsp)
}

::google::protobuf::uint8* TLevyGetUserInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetUserInfoRsp)
  // optional .pb.TLevyUserInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetUserInfoRsp)
  return target;
}

int TLevyGetUserInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyUserInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetUserInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetUserInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetUserInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetUserInfoRsp::MergeFrom(const TLevyGetUserInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TLevyUserInfo::MergeFrom(from.userinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetUserInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetUserInfoRsp::CopyFrom(const TLevyGetUserInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetUserInfoRsp::IsInitialized() const {

  return true;
}

void TLevyGetUserInfoRsp::Swap(TLevyGetUserInfoRsp* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetUserInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetUserInfoRsp_descriptor_;
  metadata.reflection = TLevyGetUserInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyEnterRsp::kMaxPageIdFieldNumber;
const int TLevyEnterRsp::kArrRecordFieldNumber;
const int TLevyEnterRsp::kPosFieldNumber;
#endif  // !_MSC_VER

TLevyEnterRsp::TLevyEnterRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyEnterRsp)
}

void TLevyEnterRsp::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyEnterRsp::TLevyEnterRsp(const TLevyEnterRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyEnterRsp)
}

void TLevyEnterRsp::SharedCtor() {
  _cached_size_ = 0;
  maxpageid_ = 0u;
  pos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyEnterRsp::~TLevyEnterRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyEnterRsp)
  SharedDtor();
}

void TLevyEnterRsp::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyEnterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyEnterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyEnterRsp_descriptor_;
}

const TLevyEnterRsp& TLevyEnterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyEnterRsp* TLevyEnterRsp::default_instance_ = NULL;

TLevyEnterRsp* TLevyEnterRsp::New() const {
  return new TLevyEnterRsp;
}

void TLevyEnterRsp::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    maxpageid_ = 0u;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
  }
  arrrecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyEnterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyEnterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxPageId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxpageid_)));
          set_has_maxpageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRecord;
        break;
      }

      // repeated .pb.TLevyRecordInfo ArrRecord = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRecord;
        if (input->ExpectTag(26)) goto parse_Pos;
        break;
      }

      // optional .pb.TLevyPos Pos = 3;
      case 3: {
        if (tag == 26) {
         parse_Pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyEnterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyEnterRsp)
  return false;
#undef DO_
}

void TLevyEnterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyEnterRsp)
  // optional uint32 MaxPageId = 1;
  if (has_maxpageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxpageid(), output);
  }

  // repeated .pb.TLevyRecordInfo ArrRecord = 2;
  for (int i = 0; i < this->arrrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrecord(i), output);
  }

  // optional .pb.TLevyPos Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyEnterRsp)
}

::google::protobuf::uint8* TLevyEnterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyEnterRsp)
  // optional uint32 MaxPageId = 1;
  if (has_maxpageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxpageid(), target);
  }

  // repeated .pb.TLevyRecordInfo ArrRecord = 2;
  for (int i = 0; i < this->arrrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrecord(i), target);
  }

  // optional .pb.TLevyPos Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyEnterRsp)
  return target;
}

int TLevyEnterRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MaxPageId = 1;
    if (has_maxpageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxpageid());
    }

    // optional .pb.TLevyPos Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

  }
  // repeated .pb.TLevyRecordInfo ArrRecord = 2;
  total_size += 1 * this->arrrecord_size();
  for (int i = 0; i < this->arrrecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrecord(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyEnterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyEnterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyEnterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyEnterRsp::MergeFrom(const TLevyEnterRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrecord_.MergeFrom(from.arrrecord_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxpageid()) {
      set_maxpageid(from.maxpageid());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyEnterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyEnterRsp::CopyFrom(const TLevyEnterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyEnterRsp::IsInitialized() const {

  return true;
}

void TLevyEnterRsp::Swap(TLevyEnterRsp* other) {
  if (other != this) {
    std::swap(maxpageid_, other->maxpageid_);
    arrrecord_.Swap(&other->arrrecord_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyEnterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyEnterRsp_descriptor_;
  metadata.reflection = TLevyEnterRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyPreviewRsp::kSliverNumFieldNumber;
const int TLevyPreviewRsp::kArrRewardFieldNumber;
const int TLevyPreviewRsp::kOutputDurationFieldNumber;
const int TLevyPreviewRsp::kSettleTimeFieldNumber;
const int TLevyPreviewRsp::kConnectNumFieldNumber;
#endif  // !_MSC_VER

TLevyPreviewRsp::TLevyPreviewRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyPreviewRsp)
}

void TLevyPreviewRsp::InitAsDefaultInstance() {
}

TLevyPreviewRsp::TLevyPreviewRsp(const TLevyPreviewRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyPreviewRsp)
}

void TLevyPreviewRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  outputduration_ = 0u;
  settletime_ = GOOGLE_ULONGLONG(0);
  connectnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyPreviewRsp::~TLevyPreviewRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyPreviewRsp)
  SharedDtor();
}

void TLevyPreviewRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyPreviewRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyPreviewRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyPreviewRsp_descriptor_;
}

const TLevyPreviewRsp& TLevyPreviewRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyPreviewRsp* TLevyPreviewRsp::default_instance_ = NULL;

TLevyPreviewRsp* TLevyPreviewRsp::New() const {
  return new TLevyPreviewRsp;
}

void TLevyPreviewRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyPreviewRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 29) {
    ZR_(settletime_, connectnum_);
    slivernum_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyPreviewRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyPreviewRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        break;
      }

      // repeated .pb.TCommonReward ArrReward = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        if (input->ExpectTag(24)) goto parse_OutputDuration;
        break;
      }

      // optional uint32 OutputDuration = 3;
      case 3: {
        if (tag == 24) {
         parse_OutputDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outputduration_)));
          set_has_outputduration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 4;
      case 4: {
        if (tag == 32) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ConnectNum;
        break;
      }

      // optional uint32 ConnectNum = 5;
      case 5: {
        if (tag == 40) {
         parse_ConnectNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connectnum_)));
          set_has_connectnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyPreviewRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyPreviewRsp)
  return false;
#undef DO_
}

void TLevyPreviewRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyPreviewRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrreward(i), output);
  }

  // optional uint32 OutputDuration = 3;
  if (has_outputduration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->outputduration(), output);
  }

  // optional uint64 SettleTime = 4;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->settletime(), output);
  }

  // optional uint32 ConnectNum = 5;
  if (has_connectnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->connectnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyPreviewRsp)
}

::google::protobuf::uint8* TLevyPreviewRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyPreviewRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrreward(i), target);
  }

  // optional uint32 OutputDuration = 3;
  if (has_outputduration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->outputduration(), target);
  }

  // optional uint64 SettleTime = 4;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->settletime(), target);
  }

  // optional uint32 ConnectNum = 5;
  if (has_connectnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->connectnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyPreviewRsp)
  return target;
}

int TLevyPreviewRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

    // optional uint32 OutputDuration = 3;
    if (has_outputduration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->outputduration());
    }

    // optional uint64 SettleTime = 4;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

    // optional uint32 ConnectNum = 5;
    if (has_connectnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connectnum());
    }

  }
  // repeated .pb.TCommonReward ArrReward = 2;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyPreviewRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyPreviewRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyPreviewRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyPreviewRsp::MergeFrom(const TLevyPreviewRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
    if (from.has_outputduration()) {
      set_outputduration(from.outputduration());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
    if (from.has_connectnum()) {
      set_connectnum(from.connectnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyPreviewRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyPreviewRsp::CopyFrom(const TLevyPreviewRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyPreviewRsp::IsInitialized() const {

  return true;
}

void TLevyPreviewRsp::Swap(TLevyPreviewRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    arrreward_.Swap(&other->arrreward_);
    std::swap(outputduration_, other->outputduration_);
    std::swap(settletime_, other->settletime_);
    std::swap(connectnum_, other->connectnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyPreviewRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyPreviewRsp_descriptor_;
  metadata.reflection = TLevyPreviewRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyReceiveRsp::kSliverNumFieldNumber;
const int TLevyReceiveRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TLevyReceiveRsp::TLevyReceiveRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyReceiveRsp)
}

void TLevyReceiveRsp::InitAsDefaultInstance() {
}

TLevyReceiveRsp::TLevyReceiveRsp(const TLevyReceiveRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyReceiveRsp)
}

void TLevyReceiveRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyReceiveRsp::~TLevyReceiveRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyReceiveRsp)
  SharedDtor();
}

void TLevyReceiveRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyReceiveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyReceiveRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyReceiveRsp_descriptor_;
}

const TLevyReceiveRsp& TLevyReceiveRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyReceiveRsp* TLevyReceiveRsp::default_instance_ = NULL;

TLevyReceiveRsp* TLevyReceiveRsp::New() const {
  return new TLevyReceiveRsp;
}

void TLevyReceiveRsp::Clear() {
  slivernum_ = GOOGLE_ULONGLONG(0);
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyReceiveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyReceiveRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        break;
      }

      // repeated .pb.TCommonReward ArrReward = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyReceiveRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyReceiveRsp)
  return false;
#undef DO_
}

void TLevyReceiveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyReceiveRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyReceiveRsp)
}

::google::protobuf::uint8* TLevyReceiveRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyReceiveRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyReceiveRsp)
  return target;
}

int TLevyReceiveRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

  }
  // repeated .pb.TCommonReward ArrReward = 2;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyReceiveRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyReceiveRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyReceiveRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyReceiveRsp::MergeFrom(const TLevyReceiveRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyReceiveRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyReceiveRsp::CopyFrom(const TLevyReceiveRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyReceiveRsp::IsInitialized() const {

  return true;
}

void TLevyReceiveRsp::Swap(TLevyReceiveRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyReceiveRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyReceiveRsp_descriptor_;
  metadata.reflection = TLevyReceiveRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetRecordReq::kArrRecordTypeFieldNumber;
#endif  // !_MSC_VER

TLevyGetRecordReq::TLevyGetRecordReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetRecordReq)
}

void TLevyGetRecordReq::InitAsDefaultInstance() {
}

TLevyGetRecordReq::TLevyGetRecordReq(const TLevyGetRecordReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetRecordReq)
}

void TLevyGetRecordReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetRecordReq::~TLevyGetRecordReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetRecordReq)
  SharedDtor();
}

void TLevyGetRecordReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetRecordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetRecordReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetRecordReq_descriptor_;
}

const TLevyGetRecordReq& TLevyGetRecordReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetRecordReq* TLevyGetRecordReq::default_instance_ = NULL;

TLevyGetRecordReq* TLevyGetRecordReq::New() const {
  return new TLevyGetRecordReq;
}

void TLevyGetRecordReq::Clear() {
  arrrecordtype_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetRecordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetRecordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.ELevyRecordType ArrRecordType = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrRecordType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ELevyRecordType_IsValid(value)) {
            add_arrrecordtype(static_cast< ::pb::ELevyRecordType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::pb::ELevyRecordType_IsValid,
                 this->mutable_arrrecordtype())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrRecordType;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetRecordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetRecordReq)
  return false;
#undef DO_
}

void TLevyGetRecordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetRecordReq)
  // repeated .pb.ELevyRecordType ArrRecordType = 1;
  for (int i = 0; i < this->arrrecordtype_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->arrrecordtype(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetRecordReq)
}

::google::protobuf::uint8* TLevyGetRecordReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetRecordReq)
  // repeated .pb.ELevyRecordType ArrRecordType = 1;
  for (int i = 0; i < this->arrrecordtype_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->arrrecordtype(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetRecordReq)
  return target;
}

int TLevyGetRecordReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.ELevyRecordType ArrRecordType = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrrecordtype_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->arrrecordtype(i));
    }
    total_size += 1 * this->arrrecordtype_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetRecordReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetRecordReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetRecordReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetRecordReq::MergeFrom(const TLevyGetRecordReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrecordtype_.MergeFrom(from.arrrecordtype_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetRecordReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetRecordReq::CopyFrom(const TLevyGetRecordReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetRecordReq::IsInitialized() const {

  return true;
}

void TLevyGetRecordReq::Swap(TLevyGetRecordReq* other) {
  if (other != this) {
    arrrecordtype_.Swap(&other->arrrecordtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetRecordReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetRecordReq_descriptor_;
  metadata.reflection = TLevyGetRecordReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetRecordRsp::kArrRecordFieldNumber;
#endif  // !_MSC_VER

TLevyGetRecordRsp::TLevyGetRecordRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetRecordRsp)
}

void TLevyGetRecordRsp::InitAsDefaultInstance() {
}

TLevyGetRecordRsp::TLevyGetRecordRsp(const TLevyGetRecordRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetRecordRsp)
}

void TLevyGetRecordRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetRecordRsp::~TLevyGetRecordRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetRecordRsp)
  SharedDtor();
}

void TLevyGetRecordRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetRecordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetRecordRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetRecordRsp_descriptor_;
}

const TLevyGetRecordRsp& TLevyGetRecordRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetRecordRsp* TLevyGetRecordRsp::default_instance_ = NULL;

TLevyGetRecordRsp* TLevyGetRecordRsp::New() const {
  return new TLevyGetRecordRsp;
}

void TLevyGetRecordRsp::Clear() {
  arrrecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetRecordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetRecordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyRecordInfo ArrRecord = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrRecord;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetRecordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetRecordRsp)
  return false;
#undef DO_
}

void TLevyGetRecordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetRecordRsp)
  // repeated .pb.TLevyRecordInfo ArrRecord = 1;
  for (int i = 0; i < this->arrrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrrecord(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetRecordRsp)
}

::google::protobuf::uint8* TLevyGetRecordRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetRecordRsp)
  // repeated .pb.TLevyRecordInfo ArrRecord = 1;
  for (int i = 0; i < this->arrrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrrecord(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetRecordRsp)
  return target;
}

int TLevyGetRecordRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyRecordInfo ArrRecord = 1;
  total_size += 1 * this->arrrecord_size();
  for (int i = 0; i < this->arrrecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrecord(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetRecordRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetRecordRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetRecordRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetRecordRsp::MergeFrom(const TLevyGetRecordRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrecord_.MergeFrom(from.arrrecord_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetRecordRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetRecordRsp::CopyFrom(const TLevyGetRecordRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetRecordRsp::IsInitialized() const {

  return true;
}

void TLevyGetRecordRsp::Swap(TLevyGetRecordRsp* other) {
  if (other != this) {
    arrrecord_.Swap(&other->arrrecord_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetRecordRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetRecordRsp_descriptor_;
  metadata.reflection = TLevyGetRecordRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetPageInfoReq::kPageIdFieldNumber;
const int TLevyGetPageInfoReq::kIndexFieldNumber;
const int TLevyGetPageInfoReq::kArrPageIndexFieldNumber;
#endif  // !_MSC_VER

TLevyGetPageInfoReq::TLevyGetPageInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetPageInfoReq)
}

void TLevyGetPageInfoReq::InitAsDefaultInstance() {
}

TLevyGetPageInfoReq::TLevyGetPageInfoReq(const TLevyGetPageInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetPageInfoReq)
}

void TLevyGetPageInfoReq::SharedCtor() {
  _cached_size_ = 0;
  pageid_ = 0u;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetPageInfoReq::~TLevyGetPageInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetPageInfoReq)
  SharedDtor();
}

void TLevyGetPageInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetPageInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetPageInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetPageInfoReq_descriptor_;
}

const TLevyGetPageInfoReq& TLevyGetPageInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetPageInfoReq* TLevyGetPageInfoReq::default_instance_ = NULL;

TLevyGetPageInfoReq* TLevyGetPageInfoReq::New() const {
  return new TLevyGetPageInfoReq;
}

void TLevyGetPageInfoReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyGetPageInfoReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pageid_, index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrpageindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetPageInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetPageInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PageId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageid_)));
          set_has_pageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Index;
        break;
      }

      // optional uint32 Index = 2;
      case 2: {
        if (tag == 16) {
         parse_Index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ArrPageIndex;
        break;
      }

      // repeated uint32 ArrPageIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_ArrPageIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_arrpageindex())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrpageindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ArrPageIndex;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetPageInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetPageInfoReq)
  return false;
#undef DO_
}

void TLevyGetPageInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetPageInfoReq)
  // optional uint32 PageId = 1;
  if (has_pageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pageid(), output);
  }

  // optional uint32 Index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // repeated uint32 ArrPageIndex = 3;
  for (int i = 0; i < this->arrpageindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->arrpageindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetPageInfoReq)
}

::google::protobuf::uint8* TLevyGetPageInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetPageInfoReq)
  // optional uint32 PageId = 1;
  if (has_pageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pageid(), target);
  }

  // optional uint32 Index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // repeated uint32 ArrPageIndex = 3;
  for (int i = 0; i < this->arrpageindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->arrpageindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetPageInfoReq)
  return target;
}

int TLevyGetPageInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PageId = 1;
    if (has_pageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageid());
    }

    // optional uint32 Index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  // repeated uint32 ArrPageIndex = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrpageindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrpageindex(i));
    }
    total_size += 1 * this->arrpageindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetPageInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetPageInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetPageInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetPageInfoReq::MergeFrom(const TLevyGetPageInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrpageindex_.MergeFrom(from.arrpageindex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pageid()) {
      set_pageid(from.pageid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetPageInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetPageInfoReq::CopyFrom(const TLevyGetPageInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetPageInfoReq::IsInitialized() const {

  return true;
}

void TLevyGetPageInfoReq::Swap(TLevyGetPageInfoReq* other) {
  if (other != this) {
    std::swap(pageid_, other->pageid_);
    std::swap(index_, other->index_);
    arrpageindex_.Swap(&other->arrpageindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetPageInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetPageInfoReq_descriptor_;
  metadata.reflection = TLevyGetPageInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetPageInfoRsp::kArrUserLevyInfoFieldNumber;
const int TLevyGetPageInfoRsp::kArrUserInfoFieldNumber;
#endif  // !_MSC_VER

TLevyGetPageInfoRsp::TLevyGetPageInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetPageInfoRsp)
}

void TLevyGetPageInfoRsp::InitAsDefaultInstance() {
}

TLevyGetPageInfoRsp::TLevyGetPageInfoRsp(const TLevyGetPageInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetPageInfoRsp)
}

void TLevyGetPageInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetPageInfoRsp::~TLevyGetPageInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetPageInfoRsp)
  SharedDtor();
}

void TLevyGetPageInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetPageInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetPageInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetPageInfoRsp_descriptor_;
}

const TLevyGetPageInfoRsp& TLevyGetPageInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetPageInfoRsp* TLevyGetPageInfoRsp::default_instance_ = NULL;

TLevyGetPageInfoRsp* TLevyGetPageInfoRsp::New() const {
  return new TLevyGetPageInfoRsp;
}

void TLevyGetPageInfoRsp::Clear() {
  arruserlevyinfo_.Clear();
  arruserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetPageInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetPageInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrUserLevyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserlevyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrUserLevyInfo;
        if (input->ExpectTag(18)) goto parse_ArrUserInfo;
        break;
      }

      // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUserInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetPageInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetPageInfoRsp)
  return false;
#undef DO_
}

void TLevyGetPageInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetPageInfoRsp)
  // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
  for (int i = 0; i < this->arruserlevyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arruserlevyinfo(i), output);
  }

  // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arruserinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetPageInfoRsp)
}

::google::protobuf::uint8* TLevyGetPageInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetPageInfoRsp)
  // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
  for (int i = 0; i < this->arruserlevyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arruserlevyinfo(i), target);
  }

  // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arruserinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetPageInfoRsp)
  return target;
}

int TLevyGetPageInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
  total_size += 1 * this->arruserlevyinfo_size();
  for (int i = 0; i < this->arruserlevyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserlevyinfo(i));
  }

  // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetPageInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetPageInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetPageInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetPageInfoRsp::MergeFrom(const TLevyGetPageInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arruserlevyinfo_.MergeFrom(from.arruserlevyinfo_);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetPageInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetPageInfoRsp::CopyFrom(const TLevyGetPageInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetPageInfoRsp::IsInitialized() const {

  return true;
}

void TLevyGetPageInfoRsp::Swap(TLevyGetPageInfoRsp* other) {
  if (other != this) {
    arruserlevyinfo_.Swap(&other->arruserlevyinfo_);
    arruserinfo_.Swap(&other->arruserinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetPageInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetPageInfoRsp_descriptor_;
  metadata.reflection = TLevyGetPageInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetCityInfoReq::kArrPosFieldNumber;
const int TLevyGetCityInfoReq::kArrTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyGetCityInfoReq::TLevyGetCityInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetCityInfoReq)
}

void TLevyGetCityInfoReq::InitAsDefaultInstance() {
}

TLevyGetCityInfoReq::TLevyGetCityInfoReq(const TLevyGetCityInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetCityInfoReq)
}

void TLevyGetCityInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetCityInfoReq::~TLevyGetCityInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetCityInfoReq)
  SharedDtor();
}

void TLevyGetCityInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetCityInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetCityInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetCityInfoReq_descriptor_;
}

const TLevyGetCityInfoReq& TLevyGetCityInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetCityInfoReq* TLevyGetCityInfoReq::default_instance_ = NULL;

TLevyGetCityInfoReq* TLevyGetCityInfoReq::New() const {
  return new TLevyGetCityInfoReq;
}

void TLevyGetCityInfoReq::Clear() {
  arrpos_.Clear();
  arrtargetuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetCityInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetCityInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyPos ArrPos = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrPos;
        if (input->ExpectTag(16)) goto parse_ArrTargetUid;
        break;
      }

      // repeated uint64 ArrTargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrTargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_arrtargetuid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_arrtargetuid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrTargetUid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetCityInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetCityInfoReq)
  return false;
#undef DO_
}

void TLevyGetCityInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetCityInfoReq)
  // repeated .pb.TLevyPos ArrPos = 1;
  for (int i = 0; i < this->arrpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrpos(i), output);
  }

  // repeated uint64 ArrTargetUid = 2;
  for (int i = 0; i < this->arrtargetuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->arrtargetuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetCityInfoReq)
}

::google::protobuf::uint8* TLevyGetCityInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetCityInfoReq)
  // repeated .pb.TLevyPos ArrPos = 1;
  for (int i = 0; i < this->arrpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrpos(i), target);
  }

  // repeated uint64 ArrTargetUid = 2;
  for (int i = 0; i < this->arrtargetuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->arrtargetuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetCityInfoReq)
  return target;
}

int TLevyGetCityInfoReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyPos ArrPos = 1;
  total_size += 1 * this->arrpos_size();
  for (int i = 0; i < this->arrpos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrpos(i));
  }

  // repeated uint64 ArrTargetUid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrtargetuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->arrtargetuid(i));
    }
    total_size += 1 * this->arrtargetuid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetCityInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetCityInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetCityInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetCityInfoReq::MergeFrom(const TLevyGetCityInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrpos_.MergeFrom(from.arrpos_);
  arrtargetuid_.MergeFrom(from.arrtargetuid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetCityInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetCityInfoReq::CopyFrom(const TLevyGetCityInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetCityInfoReq::IsInitialized() const {

  return true;
}

void TLevyGetCityInfoReq::Swap(TLevyGetCityInfoReq* other) {
  if (other != this) {
    arrpos_.Swap(&other->arrpos_);
    arrtargetuid_.Swap(&other->arrtargetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetCityInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetCityInfoReq_descriptor_;
  metadata.reflection = TLevyGetCityInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetCityInfoRsp::kArrUserLevyInfoFieldNumber;
const int TLevyGetCityInfoRsp::kArrUserInfoFieldNumber;
#endif  // !_MSC_VER

TLevyGetCityInfoRsp::TLevyGetCityInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetCityInfoRsp)
}

void TLevyGetCityInfoRsp::InitAsDefaultInstance() {
}

TLevyGetCityInfoRsp::TLevyGetCityInfoRsp(const TLevyGetCityInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetCityInfoRsp)
}

void TLevyGetCityInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetCityInfoRsp::~TLevyGetCityInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetCityInfoRsp)
  SharedDtor();
}

void TLevyGetCityInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetCityInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetCityInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetCityInfoRsp_descriptor_;
}

const TLevyGetCityInfoRsp& TLevyGetCityInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetCityInfoRsp* TLevyGetCityInfoRsp::default_instance_ = NULL;

TLevyGetCityInfoRsp* TLevyGetCityInfoRsp::New() const {
  return new TLevyGetCityInfoRsp;
}

void TLevyGetCityInfoRsp::Clear() {
  arruserlevyinfo_.Clear();
  arruserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetCityInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetCityInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrUserLevyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserlevyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrUserLevyInfo;
        if (input->ExpectTag(18)) goto parse_ArrUserInfo;
        break;
      }

      // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUserInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetCityInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetCityInfoRsp)
  return false;
#undef DO_
}

void TLevyGetCityInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetCityInfoRsp)
  // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
  for (int i = 0; i < this->arruserlevyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arruserlevyinfo(i), output);
  }

  // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arruserinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetCityInfoRsp)
}

::google::protobuf::uint8* TLevyGetCityInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetCityInfoRsp)
  // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
  for (int i = 0; i < this->arruserlevyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arruserlevyinfo(i), target);
  }

  // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arruserinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetCityInfoRsp)
  return target;
}

int TLevyGetCityInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyOtherUserInfo ArrUserLevyInfo = 1;
  total_size += 1 * this->arruserlevyinfo_size();
  for (int i = 0; i < this->arruserlevyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserlevyinfo(i));
  }

  // repeated .pb.TUserSimpleInfo ArrUserInfo = 2;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetCityInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetCityInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetCityInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetCityInfoRsp::MergeFrom(const TLevyGetCityInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arruserlevyinfo_.MergeFrom(from.arruserlevyinfo_);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetCityInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetCityInfoRsp::CopyFrom(const TLevyGetCityInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetCityInfoRsp::IsInitialized() const {

  return true;
}

void TLevyGetCityInfoRsp::Swap(TLevyGetCityInfoRsp* other) {
  if (other != this) {
    arruserlevyinfo_.Swap(&other->arruserlevyinfo_);
    arruserinfo_.Swap(&other->arruserinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetCityInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetCityInfoRsp_descriptor_;
  metadata.reflection = TLevyGetCityInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyForceLevyRsp::kSliverNumFieldNumber;
const int TLevyForceLevyRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TLevyForceLevyRsp::TLevyForceLevyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyForceLevyRsp)
}

void TLevyForceLevyRsp::InitAsDefaultInstance() {
}

TLevyForceLevyRsp::TLevyForceLevyRsp(const TLevyForceLevyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyForceLevyRsp)
}

void TLevyForceLevyRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyForceLevyRsp::~TLevyForceLevyRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyForceLevyRsp)
  SharedDtor();
}

void TLevyForceLevyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyForceLevyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyForceLevyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyForceLevyRsp_descriptor_;
}

const TLevyForceLevyRsp& TLevyForceLevyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyForceLevyRsp* TLevyForceLevyRsp::default_instance_ = NULL;

TLevyForceLevyRsp* TLevyForceLevyRsp::New() const {
  return new TLevyForceLevyRsp;
}

void TLevyForceLevyRsp::Clear() {
  slivernum_ = GOOGLE_ULONGLONG(0);
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyForceLevyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyForceLevyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        break;
      }

      // repeated .pb.TCommonReward ArrReward = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyForceLevyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyForceLevyRsp)
  return false;
#undef DO_
}

void TLevyForceLevyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyForceLevyRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyForceLevyRsp)
}

::google::protobuf::uint8* TLevyForceLevyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyForceLevyRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyForceLevyRsp)
  return target;
}

int TLevyForceLevyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

  }
  // repeated .pb.TCommonReward ArrReward = 2;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyForceLevyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyForceLevyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyForceLevyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyForceLevyRsp::MergeFrom(const TLevyForceLevyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyForceLevyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyForceLevyRsp::CopyFrom(const TLevyForceLevyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyForceLevyRsp::IsInitialized() const {

  return true;
}

void TLevyForceLevyRsp::Swap(TLevyForceLevyRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyForceLevyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyForceLevyRsp_descriptor_;
  metadata.reflection = TLevyForceLevyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyHelpReq::kPosFieldNumber;
const int TLevyHelpReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyHelpReq::TLevyHelpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyHelpReq)
}

void TLevyHelpReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyHelpReq::TLevyHelpReq(const TLevyHelpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyHelpReq)
}

void TLevyHelpReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyHelpReq::~TLevyHelpReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyHelpReq)
  SharedDtor();
}

void TLevyHelpReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyHelpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyHelpReq_descriptor_;
}

const TLevyHelpReq& TLevyHelpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyHelpReq* TLevyHelpReq::default_instance_ = NULL;

TLevyHelpReq* TLevyHelpReq::New() const {
  return new TLevyHelpReq;
}

void TLevyHelpReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyHelpReq)
  return false;
#undef DO_
}

void TLevyHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyHelpReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyHelpReq)
}

::google::protobuf::uint8* TLevyHelpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyHelpReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyHelpReq)
  return target;
}

int TLevyHelpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyHelpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyHelpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyHelpReq::MergeFrom(const TLevyHelpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyHelpReq::CopyFrom(const TLevyHelpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyHelpReq::IsInitialized() const {

  return true;
}

void TLevyHelpReq::Swap(TLevyHelpReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyHelpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyHelpReq_descriptor_;
  metadata.reflection = TLevyHelpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyHelpRsp::kSliverNumFieldNumber;
#endif  // !_MSC_VER

TLevyHelpRsp::TLevyHelpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyHelpRsp)
}

void TLevyHelpRsp::InitAsDefaultInstance() {
}

TLevyHelpRsp::TLevyHelpRsp(const TLevyHelpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyHelpRsp)
}

void TLevyHelpRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyHelpRsp::~TLevyHelpRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyHelpRsp)
  SharedDtor();
}

void TLevyHelpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyHelpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyHelpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyHelpRsp_descriptor_;
}

const TLevyHelpRsp& TLevyHelpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyHelpRsp* TLevyHelpRsp::default_instance_ = NULL;

TLevyHelpRsp* TLevyHelpRsp::New() const {
  return new TLevyHelpRsp;
}

void TLevyHelpRsp::Clear() {
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyHelpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyHelpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyHelpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyHelpRsp)
  return false;
#undef DO_
}

void TLevyHelpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyHelpRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyHelpRsp)
}

::google::protobuf::uint8* TLevyHelpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyHelpRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyHelpRsp)
  return target;
}

int TLevyHelpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyHelpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyHelpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyHelpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyHelpRsp::MergeFrom(const TLevyHelpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyHelpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyHelpRsp::CopyFrom(const TLevyHelpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyHelpRsp::IsInitialized() const {

  return true;
}

void TLevyHelpRsp::Swap(TLevyHelpRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyHelpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyHelpRsp_descriptor_;
  metadata.reflection = TLevyHelpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyConquerReq::kPosFieldNumber;
const int TLevyConquerReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyConquerReq::TLevyConquerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyConquerReq)
}

void TLevyConquerReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyConquerReq::TLevyConquerReq(const TLevyConquerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyConquerReq)
}

void TLevyConquerReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyConquerReq::~TLevyConquerReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyConquerReq)
  SharedDtor();
}

void TLevyConquerReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyConquerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyConquerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyConquerReq_descriptor_;
}

const TLevyConquerReq& TLevyConquerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyConquerReq* TLevyConquerReq::default_instance_ = NULL;

TLevyConquerReq* TLevyConquerReq::New() const {
  return new TLevyConquerReq;
}

void TLevyConquerReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyConquerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyConquerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyConquerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyConquerReq)
  return false;
#undef DO_
}

void TLevyConquerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyConquerReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyConquerReq)
}

::google::protobuf::uint8* TLevyConquerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyConquerReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyConquerReq)
  return target;
}

int TLevyConquerReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyConquerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyConquerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyConquerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyConquerReq::MergeFrom(const TLevyConquerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyConquerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyConquerReq::CopyFrom(const TLevyConquerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyConquerReq::IsInitialized() const {

  return true;
}

void TLevyConquerReq::Swap(TLevyConquerReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyConquerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyConquerReq_descriptor_;
  metadata.reflection = TLevyConquerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyConquerRsp::kBattleRetFieldNumber;
const int TLevyConquerRsp::kSuccessFieldNumber;
#endif  // !_MSC_VER

TLevyConquerRsp::TLevyConquerRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyConquerRsp)
}

void TLevyConquerRsp::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TLevyConquerRsp::TLevyConquerRsp(const TLevyConquerRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyConquerRsp)
}

void TLevyConquerRsp::SharedCtor() {
  _cached_size_ = 0;
  battleret_ = NULL;
  success_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyConquerRsp::~TLevyConquerRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyConquerRsp)
  SharedDtor();
}

void TLevyConquerRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TLevyConquerRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyConquerRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyConquerRsp_descriptor_;
}

const TLevyConquerRsp& TLevyConquerRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyConquerRsp* TLevyConquerRsp::default_instance_ = NULL;

TLevyConquerRsp* TLevyConquerRsp::New() const {
  return new TLevyConquerRsp;
}

void TLevyConquerRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    success_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyConquerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyConquerRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleResult BattleRet = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Success;
        break;
      }

      // optional uint32 Success = 2;
      case 2: {
        if (tag == 16) {
         parse_Success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyConquerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyConquerRsp)
  return false;
#undef DO_
}

void TLevyConquerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyConquerRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleret(), output);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyConquerRsp)
}

::google::protobuf::uint8* TLevyConquerRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyConquerRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleret(), target);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyConquerRsp)
  return target;
}

int TLevyConquerRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleResult BattleRet = 1;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional uint32 Success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyConquerRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyConquerRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyConquerRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyConquerRsp::MergeFrom(const TLevyConquerRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyConquerRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyConquerRsp::CopyFrom(const TLevyConquerRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyConquerRsp::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TLevyConquerRsp::Swap(TLevyConquerRsp* other) {
  if (other != this) {
    std::swap(battleret_, other->battleret_);
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyConquerRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyConquerRsp_descriptor_;
  metadata.reflection = TLevyConquerRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyReleaseSlaveReq::kSlaveUidFieldNumber;
#endif  // !_MSC_VER

TLevyReleaseSlaveReq::TLevyReleaseSlaveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyReleaseSlaveReq)
}

void TLevyReleaseSlaveReq::InitAsDefaultInstance() {
}

TLevyReleaseSlaveReq::TLevyReleaseSlaveReq(const TLevyReleaseSlaveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyReleaseSlaveReq)
}

void TLevyReleaseSlaveReq::SharedCtor() {
  _cached_size_ = 0;
  slaveuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyReleaseSlaveReq::~TLevyReleaseSlaveReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyReleaseSlaveReq)
  SharedDtor();
}

void TLevyReleaseSlaveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyReleaseSlaveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyReleaseSlaveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyReleaseSlaveReq_descriptor_;
}

const TLevyReleaseSlaveReq& TLevyReleaseSlaveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyReleaseSlaveReq* TLevyReleaseSlaveReq::default_instance_ = NULL;

TLevyReleaseSlaveReq* TLevyReleaseSlaveReq::New() const {
  return new TLevyReleaseSlaveReq;
}

void TLevyReleaseSlaveReq::Clear() {
  slaveuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyReleaseSlaveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyReleaseSlaveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SlaveUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slaveuid_)));
          set_has_slaveuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyReleaseSlaveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyReleaseSlaveReq)
  return false;
#undef DO_
}

void TLevyReleaseSlaveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyReleaseSlaveReq)
  // optional uint64 SlaveUid = 1;
  if (has_slaveuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slaveuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyReleaseSlaveReq)
}

::google::protobuf::uint8* TLevyReleaseSlaveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyReleaseSlaveReq)
  // optional uint64 SlaveUid = 1;
  if (has_slaveuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slaveuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyReleaseSlaveReq)
  return target;
}

int TLevyReleaseSlaveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SlaveUid = 1;
    if (has_slaveuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slaveuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyReleaseSlaveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyReleaseSlaveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyReleaseSlaveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyReleaseSlaveReq::MergeFrom(const TLevyReleaseSlaveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slaveuid()) {
      set_slaveuid(from.slaveuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyReleaseSlaveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyReleaseSlaveReq::CopyFrom(const TLevyReleaseSlaveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyReleaseSlaveReq::IsInitialized() const {

  return true;
}

void TLevyReleaseSlaveReq::Swap(TLevyReleaseSlaveReq* other) {
  if (other != this) {
    std::swap(slaveuid_, other->slaveuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyReleaseSlaveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyReleaseSlaveReq_descriptor_;
  metadata.reflection = TLevyReleaseSlaveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyRebelRsp::kBattleRetFieldNumber;
const int TLevyRebelRsp::kSuccessFieldNumber;
#endif  // !_MSC_VER

TLevyRebelRsp::TLevyRebelRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyRebelRsp)
}

void TLevyRebelRsp::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TLevyRebelRsp::TLevyRebelRsp(const TLevyRebelRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyRebelRsp)
}

void TLevyRebelRsp::SharedCtor() {
  _cached_size_ = 0;
  battleret_ = NULL;
  success_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyRebelRsp::~TLevyRebelRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyRebelRsp)
  SharedDtor();
}

void TLevyRebelRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TLevyRebelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyRebelRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyRebelRsp_descriptor_;
}

const TLevyRebelRsp& TLevyRebelRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyRebelRsp* TLevyRebelRsp::default_instance_ = NULL;

TLevyRebelRsp* TLevyRebelRsp::New() const {
  return new TLevyRebelRsp;
}

void TLevyRebelRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    success_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyRebelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyRebelRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleResult BattleRet = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Success;
        break;
      }

      // optional uint32 Success = 2;
      case 2: {
        if (tag == 16) {
         parse_Success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyRebelRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyRebelRsp)
  return false;
#undef DO_
}

void TLevyRebelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyRebelRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleret(), output);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyRebelRsp)
}

::google::protobuf::uint8* TLevyRebelRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyRebelRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleret(), target);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyRebelRsp)
  return target;
}

int TLevyRebelRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleResult BattleRet = 1;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional uint32 Success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyRebelRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyRebelRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyRebelRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyRebelRsp::MergeFrom(const TLevyRebelRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyRebelRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyRebelRsp::CopyFrom(const TLevyRebelRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyRebelRsp::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TLevyRebelRsp::Swap(TLevyRebelRsp* other) {
  if (other != this) {
    std::swap(battleret_, other->battleret_);
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyRebelRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyRebelRsp_descriptor_;
  metadata.reflection = TLevyRebelRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyPlunderReq::kPosFieldNumber;
const int TLevyPlunderReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyPlunderReq::TLevyPlunderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyPlunderReq)
}

void TLevyPlunderReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyPlunderReq::TLevyPlunderReq(const TLevyPlunderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyPlunderReq)
}

void TLevyPlunderReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyPlunderReq::~TLevyPlunderReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyPlunderReq)
  SharedDtor();
}

void TLevyPlunderReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyPlunderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyPlunderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyPlunderReq_descriptor_;
}

const TLevyPlunderReq& TLevyPlunderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyPlunderReq* TLevyPlunderReq::default_instance_ = NULL;

TLevyPlunderReq* TLevyPlunderReq::New() const {
  return new TLevyPlunderReq;
}

void TLevyPlunderReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyPlunderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyPlunderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyPlunderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyPlunderReq)
  return false;
#undef DO_
}

void TLevyPlunderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyPlunderReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyPlunderReq)
}

::google::protobuf::uint8* TLevyPlunderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyPlunderReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyPlunderReq)
  return target;
}

int TLevyPlunderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyPlunderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyPlunderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyPlunderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyPlunderReq::MergeFrom(const TLevyPlunderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyPlunderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyPlunderReq::CopyFrom(const TLevyPlunderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyPlunderReq::IsInitialized() const {

  return true;
}

void TLevyPlunderReq::Swap(TLevyPlunderReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyPlunderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyPlunderReq_descriptor_;
  metadata.reflection = TLevyPlunderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyPlunderRsp::kBattleRetFieldNumber;
const int TLevyPlunderRsp::kSuccessFieldNumber;
const int TLevyPlunderRsp::kSliverNumFieldNumber;
#endif  // !_MSC_VER

TLevyPlunderRsp::TLevyPlunderRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyPlunderRsp)
}

void TLevyPlunderRsp::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TLevyPlunderRsp::TLevyPlunderRsp(const TLevyPlunderRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyPlunderRsp)
}

void TLevyPlunderRsp::SharedCtor() {
  _cached_size_ = 0;
  battleret_ = NULL;
  success_ = 0u;
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyPlunderRsp::~TLevyPlunderRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyPlunderRsp)
  SharedDtor();
}

void TLevyPlunderRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TLevyPlunderRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyPlunderRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyPlunderRsp_descriptor_;
}

const TLevyPlunderRsp& TLevyPlunderRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyPlunderRsp* TLevyPlunderRsp::default_instance_ = NULL;

TLevyPlunderRsp* TLevyPlunderRsp::New() const {
  return new TLevyPlunderRsp;
}

void TLevyPlunderRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyPlunderRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(slivernum_, success_);
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyPlunderRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyPlunderRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleResult BattleRet = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Success;
        break;
      }

      // optional uint32 Success = 2;
      case 2: {
        if (tag == 16) {
         parse_Success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SliverNum;
        break;
      }

      // optional uint64 SliverNum = 3;
      case 3: {
        if (tag == 24) {
         parse_SliverNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyPlunderRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyPlunderRsp)
  return false;
#undef DO_
}

void TLevyPlunderRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyPlunderRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleret(), output);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  // optional uint64 SliverNum = 3;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->slivernum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyPlunderRsp)
}

::google::protobuf::uint8* TLevyPlunderRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyPlunderRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleret(), target);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  // optional uint64 SliverNum = 3;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->slivernum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyPlunderRsp)
  return target;
}

int TLevyPlunderRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleResult BattleRet = 1;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional uint32 Success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

    // optional uint64 SliverNum = 3;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyPlunderRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyPlunderRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyPlunderRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyPlunderRsp::MergeFrom(const TLevyPlunderRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyPlunderRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyPlunderRsp::CopyFrom(const TLevyPlunderRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyPlunderRsp::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TLevyPlunderRsp::Swap(TLevyPlunderRsp* other) {
  if (other != this) {
    std::swap(battleret_, other->battleret_);
    std::swap(success_, other->success_);
    std::swap(slivernum_, other->slivernum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyPlunderRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyPlunderRsp_descriptor_;
  metadata.reflection = TLevyPlunderRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyPlunderPreviewReq::kPosFieldNumber;
const int TLevyPlunderPreviewReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyPlunderPreviewReq::TLevyPlunderPreviewReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyPlunderPreviewReq)
}

void TLevyPlunderPreviewReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyPlunderPreviewReq::TLevyPlunderPreviewReq(const TLevyPlunderPreviewReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyPlunderPreviewReq)
}

void TLevyPlunderPreviewReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyPlunderPreviewReq::~TLevyPlunderPreviewReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyPlunderPreviewReq)
  SharedDtor();
}

void TLevyPlunderPreviewReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyPlunderPreviewReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyPlunderPreviewReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyPlunderPreviewReq_descriptor_;
}

const TLevyPlunderPreviewReq& TLevyPlunderPreviewReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyPlunderPreviewReq* TLevyPlunderPreviewReq::default_instance_ = NULL;

TLevyPlunderPreviewReq* TLevyPlunderPreviewReq::New() const {
  return new TLevyPlunderPreviewReq;
}

void TLevyPlunderPreviewReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyPlunderPreviewReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyPlunderPreviewReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyPlunderPreviewReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyPlunderPreviewReq)
  return false;
#undef DO_
}

void TLevyPlunderPreviewReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyPlunderPreviewReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyPlunderPreviewReq)
}

::google::protobuf::uint8* TLevyPlunderPreviewReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyPlunderPreviewReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyPlunderPreviewReq)
  return target;
}

int TLevyPlunderPreviewReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyPlunderPreviewReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyPlunderPreviewReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyPlunderPreviewReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyPlunderPreviewReq::MergeFrom(const TLevyPlunderPreviewReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyPlunderPreviewReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyPlunderPreviewReq::CopyFrom(const TLevyPlunderPreviewReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyPlunderPreviewReq::IsInitialized() const {

  return true;
}

void TLevyPlunderPreviewReq::Swap(TLevyPlunderPreviewReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyPlunderPreviewReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyPlunderPreviewReq_descriptor_;
  metadata.reflection = TLevyPlunderPreviewReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyPlunderPreviewRsp::kSliverNumFieldNumber;
#endif  // !_MSC_VER

TLevyPlunderPreviewRsp::TLevyPlunderPreviewRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyPlunderPreviewRsp)
}

void TLevyPlunderPreviewRsp::InitAsDefaultInstance() {
}

TLevyPlunderPreviewRsp::TLevyPlunderPreviewRsp(const TLevyPlunderPreviewRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyPlunderPreviewRsp)
}

void TLevyPlunderPreviewRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyPlunderPreviewRsp::~TLevyPlunderPreviewRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyPlunderPreviewRsp)
  SharedDtor();
}

void TLevyPlunderPreviewRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyPlunderPreviewRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyPlunderPreviewRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyPlunderPreviewRsp_descriptor_;
}

const TLevyPlunderPreviewRsp& TLevyPlunderPreviewRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyPlunderPreviewRsp* TLevyPlunderPreviewRsp::default_instance_ = NULL;

TLevyPlunderPreviewRsp* TLevyPlunderPreviewRsp::New() const {
  return new TLevyPlunderPreviewRsp;
}

void TLevyPlunderPreviewRsp::Clear() {
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyPlunderPreviewRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyPlunderPreviewRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyPlunderPreviewRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyPlunderPreviewRsp)
  return false;
#undef DO_
}

void TLevyPlunderPreviewRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyPlunderPreviewRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyPlunderPreviewRsp)
}

::google::protobuf::uint8* TLevyPlunderPreviewRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyPlunderPreviewRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyPlunderPreviewRsp)
  return target;
}

int TLevyPlunderPreviewRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyPlunderPreviewRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyPlunderPreviewRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyPlunderPreviewRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyPlunderPreviewRsp::MergeFrom(const TLevyPlunderPreviewRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyPlunderPreviewRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyPlunderPreviewRsp::CopyFrom(const TLevyPlunderPreviewRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyPlunderPreviewRsp::IsInitialized() const {

  return true;
}

void TLevyPlunderPreviewRsp::Swap(TLevyPlunderPreviewRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyPlunderPreviewRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyPlunderPreviewRsp_descriptor_;
  metadata.reflection = TLevyPlunderPreviewRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyTrainReq::kSlaveUidFieldNumber;
const int TLevyTrainReq::kTrainIdFieldNumber;
#endif  // !_MSC_VER

TLevyTrainReq::TLevyTrainReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyTrainReq)
}

void TLevyTrainReq::InitAsDefaultInstance() {
}

TLevyTrainReq::TLevyTrainReq(const TLevyTrainReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyTrainReq)
}

void TLevyTrainReq::SharedCtor() {
  _cached_size_ = 0;
  slaveuid_ = GOOGLE_ULONGLONG(0);
  trainid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyTrainReq::~TLevyTrainReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyTrainReq)
  SharedDtor();
}

void TLevyTrainReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyTrainReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyTrainReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyTrainReq_descriptor_;
}

const TLevyTrainReq& TLevyTrainReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyTrainReq* TLevyTrainReq::default_instance_ = NULL;

TLevyTrainReq* TLevyTrainReq::New() const {
  return new TLevyTrainReq;
}

void TLevyTrainReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyTrainReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(slaveuid_, trainid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyTrainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyTrainReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SlaveUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slaveuid_)));
          set_has_slaveuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TrainId;
        break;
      }

      // optional uint32 TrainId = 2;
      case 2: {
        if (tag == 16) {
         parse_TrainId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trainid_)));
          set_has_trainid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyTrainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyTrainReq)
  return false;
#undef DO_
}

void TLevyTrainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyTrainReq)
  // optional uint64 SlaveUid = 1;
  if (has_slaveuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slaveuid(), output);
  }

  // optional uint32 TrainId = 2;
  if (has_trainid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->trainid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyTrainReq)
}

::google::protobuf::uint8* TLevyTrainReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyTrainReq)
  // optional uint64 SlaveUid = 1;
  if (has_slaveuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slaveuid(), target);
  }

  // optional uint32 TrainId = 2;
  if (has_trainid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->trainid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyTrainReq)
  return target;
}

int TLevyTrainReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SlaveUid = 1;
    if (has_slaveuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slaveuid());
    }

    // optional uint32 TrainId = 2;
    if (has_trainid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trainid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyTrainReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyTrainReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyTrainReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyTrainReq::MergeFrom(const TLevyTrainReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slaveuid()) {
      set_slaveuid(from.slaveuid());
    }
    if (from.has_trainid()) {
      set_trainid(from.trainid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyTrainReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyTrainReq::CopyFrom(const TLevyTrainReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyTrainReq::IsInitialized() const {

  return true;
}

void TLevyTrainReq::Swap(TLevyTrainReq* other) {
  if (other != this) {
    std::swap(slaveuid_, other->slaveuid_);
    std::swap(trainid_, other->trainid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyTrainReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyTrainReq_descriptor_;
  metadata.reflection = TLevyTrainReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyMoveCityToEmptyReq::kPosFieldNumber;
#endif  // !_MSC_VER

TLevyMoveCityToEmptyReq::TLevyMoveCityToEmptyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyMoveCityToEmptyReq)
}

void TLevyMoveCityToEmptyReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyMoveCityToEmptyReq::TLevyMoveCityToEmptyReq(const TLevyMoveCityToEmptyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyMoveCityToEmptyReq)
}

void TLevyMoveCityToEmptyReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyMoveCityToEmptyReq::~TLevyMoveCityToEmptyReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyMoveCityToEmptyReq)
  SharedDtor();
}

void TLevyMoveCityToEmptyReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyMoveCityToEmptyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyMoveCityToEmptyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyMoveCityToEmptyReq_descriptor_;
}

const TLevyMoveCityToEmptyReq& TLevyMoveCityToEmptyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyMoveCityToEmptyReq* TLevyMoveCityToEmptyReq::default_instance_ = NULL;

TLevyMoveCityToEmptyReq* TLevyMoveCityToEmptyReq::New() const {
  return new TLevyMoveCityToEmptyReq;
}

void TLevyMoveCityToEmptyReq::Clear() {
  if (has_pos()) {
    if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyMoveCityToEmptyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyMoveCityToEmptyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyMoveCityToEmptyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyMoveCityToEmptyReq)
  return false;
#undef DO_
}

void TLevyMoveCityToEmptyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyMoveCityToEmptyReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyMoveCityToEmptyReq)
}

::google::protobuf::uint8* TLevyMoveCityToEmptyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyMoveCityToEmptyReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyMoveCityToEmptyReq)
  return target;
}

int TLevyMoveCityToEmptyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyMoveCityToEmptyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyMoveCityToEmptyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyMoveCityToEmptyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyMoveCityToEmptyReq::MergeFrom(const TLevyMoveCityToEmptyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyMoveCityToEmptyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyMoveCityToEmptyReq::CopyFrom(const TLevyMoveCityToEmptyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyMoveCityToEmptyReq::IsInitialized() const {

  return true;
}

void TLevyMoveCityToEmptyReq::Swap(TLevyMoveCityToEmptyReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyMoveCityToEmptyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyMoveCityToEmptyReq_descriptor_;
  metadata.reflection = TLevyMoveCityToEmptyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyMoveCityToEmptyRsp::kSliverNumFieldNumber;
const int TLevyMoveCityToEmptyRsp::kOutputDurationFieldNumber;
const int TLevyMoveCityToEmptyRsp::kSettleTimeFieldNumber;
#endif  // !_MSC_VER

TLevyMoveCityToEmptyRsp::TLevyMoveCityToEmptyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyMoveCityToEmptyRsp)
}

void TLevyMoveCityToEmptyRsp::InitAsDefaultInstance() {
}

TLevyMoveCityToEmptyRsp::TLevyMoveCityToEmptyRsp(const TLevyMoveCityToEmptyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyMoveCityToEmptyRsp)
}

void TLevyMoveCityToEmptyRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  outputduration_ = 0u;
  settletime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyMoveCityToEmptyRsp::~TLevyMoveCityToEmptyRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyMoveCityToEmptyRsp)
  SharedDtor();
}

void TLevyMoveCityToEmptyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyMoveCityToEmptyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyMoveCityToEmptyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyMoveCityToEmptyRsp_descriptor_;
}

const TLevyMoveCityToEmptyRsp& TLevyMoveCityToEmptyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyMoveCityToEmptyRsp* TLevyMoveCityToEmptyRsp::default_instance_ = NULL;

TLevyMoveCityToEmptyRsp* TLevyMoveCityToEmptyRsp::New() const {
  return new TLevyMoveCityToEmptyRsp;
}

void TLevyMoveCityToEmptyRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyMoveCityToEmptyRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(slivernum_, outputduration_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyMoveCityToEmptyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyMoveCityToEmptyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_OutputDuration;
        break;
      }

      // optional uint32 OutputDuration = 2;
      case 2: {
        if (tag == 16) {
         parse_OutputDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outputduration_)));
          set_has_outputduration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 3;
      case 3: {
        if (tag == 24) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyMoveCityToEmptyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyMoveCityToEmptyRsp)
  return false;
#undef DO_
}

void TLevyMoveCityToEmptyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyMoveCityToEmptyRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  // optional uint32 OutputDuration = 2;
  if (has_outputduration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->outputduration(), output);
  }

  // optional uint64 SettleTime = 3;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->settletime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyMoveCityToEmptyRsp)
}

::google::protobuf::uint8* TLevyMoveCityToEmptyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyMoveCityToEmptyRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  // optional uint32 OutputDuration = 2;
  if (has_outputduration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->outputduration(), target);
  }

  // optional uint64 SettleTime = 3;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->settletime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyMoveCityToEmptyRsp)
  return target;
}

int TLevyMoveCityToEmptyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

    // optional uint32 OutputDuration = 2;
    if (has_outputduration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->outputduration());
    }

    // optional uint64 SettleTime = 3;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyMoveCityToEmptyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyMoveCityToEmptyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyMoveCityToEmptyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyMoveCityToEmptyRsp::MergeFrom(const TLevyMoveCityToEmptyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
    if (from.has_outputduration()) {
      set_outputduration(from.outputduration());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyMoveCityToEmptyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyMoveCityToEmptyRsp::CopyFrom(const TLevyMoveCityToEmptyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyMoveCityToEmptyRsp::IsInitialized() const {

  return true;
}

void TLevyMoveCityToEmptyRsp::Swap(TLevyMoveCityToEmptyRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    std::swap(outputduration_, other->outputduration_);
    std::swap(settletime_, other->settletime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyMoveCityToEmptyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyMoveCityToEmptyRsp_descriptor_;
  metadata.reflection = TLevyMoveCityToEmptyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyForceMoveCityReq::kPosFieldNumber;
const int TLevyForceMoveCityReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyForceMoveCityReq::TLevyForceMoveCityReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyForceMoveCityReq)
}

void TLevyForceMoveCityReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyForceMoveCityReq::TLevyForceMoveCityReq(const TLevyForceMoveCityReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyForceMoveCityReq)
}

void TLevyForceMoveCityReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyForceMoveCityReq::~TLevyForceMoveCityReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyForceMoveCityReq)
  SharedDtor();
}

void TLevyForceMoveCityReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyForceMoveCityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyForceMoveCityReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyForceMoveCityReq_descriptor_;
}

const TLevyForceMoveCityReq& TLevyForceMoveCityReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyForceMoveCityReq* TLevyForceMoveCityReq::default_instance_ = NULL;

TLevyForceMoveCityReq* TLevyForceMoveCityReq::New() const {
  return new TLevyForceMoveCityReq;
}

void TLevyForceMoveCityReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyForceMoveCityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyForceMoveCityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyForceMoveCityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyForceMoveCityReq)
  return false;
#undef DO_
}

void TLevyForceMoveCityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyForceMoveCityReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyForceMoveCityReq)
}

::google::protobuf::uint8* TLevyForceMoveCityReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyForceMoveCityReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyForceMoveCityReq)
  return target;
}

int TLevyForceMoveCityReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyForceMoveCityReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyForceMoveCityReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyForceMoveCityReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyForceMoveCityReq::MergeFrom(const TLevyForceMoveCityReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyForceMoveCityReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyForceMoveCityReq::CopyFrom(const TLevyForceMoveCityReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyForceMoveCityReq::IsInitialized() const {

  return true;
}

void TLevyForceMoveCityReq::Swap(TLevyForceMoveCityReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyForceMoveCityReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyForceMoveCityReq_descriptor_;
  metadata.reflection = TLevyForceMoveCityReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyForceMoveCityRsp::kBattleRetFieldNumber;
const int TLevyForceMoveCityRsp::kSuccessFieldNumber;
#endif  // !_MSC_VER

TLevyForceMoveCityRsp::TLevyForceMoveCityRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyForceMoveCityRsp)
}

void TLevyForceMoveCityRsp::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TLevyForceMoveCityRsp::TLevyForceMoveCityRsp(const TLevyForceMoveCityRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyForceMoveCityRsp)
}

void TLevyForceMoveCityRsp::SharedCtor() {
  _cached_size_ = 0;
  battleret_ = NULL;
  success_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyForceMoveCityRsp::~TLevyForceMoveCityRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyForceMoveCityRsp)
  SharedDtor();
}

void TLevyForceMoveCityRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TLevyForceMoveCityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyForceMoveCityRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyForceMoveCityRsp_descriptor_;
}

const TLevyForceMoveCityRsp& TLevyForceMoveCityRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyForceMoveCityRsp* TLevyForceMoveCityRsp::default_instance_ = NULL;

TLevyForceMoveCityRsp* TLevyForceMoveCityRsp::New() const {
  return new TLevyForceMoveCityRsp;
}

void TLevyForceMoveCityRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    success_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyForceMoveCityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyForceMoveCityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleResult BattleRet = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Success;
        break;
      }

      // optional uint32 Success = 2;
      case 2: {
        if (tag == 16) {
         parse_Success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyForceMoveCityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyForceMoveCityRsp)
  return false;
#undef DO_
}

void TLevyForceMoveCityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyForceMoveCityRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleret(), output);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyForceMoveCityRsp)
}

::google::protobuf::uint8* TLevyForceMoveCityRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyForceMoveCityRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleret(), target);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyForceMoveCityRsp)
  return target;
}

int TLevyForceMoveCityRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleResult BattleRet = 1;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional uint32 Success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyForceMoveCityRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyForceMoveCityRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyForceMoveCityRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyForceMoveCityRsp::MergeFrom(const TLevyForceMoveCityRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyForceMoveCityRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyForceMoveCityRsp::CopyFrom(const TLevyForceMoveCityRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyForceMoveCityRsp::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TLevyForceMoveCityRsp::Swap(TLevyForceMoveCityRsp* other) {
  if (other != this) {
    std::swap(battleret_, other->battleret_);
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyForceMoveCityRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyForceMoveCityRsp_descriptor_;
  metadata.reflection = TLevyForceMoveCityRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyStormReq::kPosFieldNumber;
const int TLevyStormReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyStormReq::TLevyStormReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyStormReq)
}

void TLevyStormReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyStormReq::TLevyStormReq(const TLevyStormReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyStormReq)
}

void TLevyStormReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyStormReq::~TLevyStormReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyStormReq)
  SharedDtor();
}

void TLevyStormReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyStormReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyStormReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyStormReq_descriptor_;
}

const TLevyStormReq& TLevyStormReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyStormReq* TLevyStormReq::default_instance_ = NULL;

TLevyStormReq* TLevyStormReq::New() const {
  return new TLevyStormReq;
}

void TLevyStormReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyStormReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyStormReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyStormReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyStormReq)
  return false;
#undef DO_
}

void TLevyStormReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyStormReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyStormReq)
}

::google::protobuf::uint8* TLevyStormReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyStormReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyStormReq)
  return target;
}

int TLevyStormReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyStormReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyStormReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyStormReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyStormReq::MergeFrom(const TLevyStormReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyStormReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyStormReq::CopyFrom(const TLevyStormReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyStormReq::IsInitialized() const {

  return true;
}

void TLevyStormReq::Swap(TLevyStormReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyStormReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyStormReq_descriptor_;
  metadata.reflection = TLevyStormReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyStormRsp::kBattleRetFieldNumber;
const int TLevyStormRsp::kSuccessFieldNumber;
const int TLevyStormRsp::kSliverNumFieldNumber;
const int TLevyStormRsp::kTargetNewPosFieldNumber;
#endif  // !_MSC_VER

TLevyStormRsp::TLevyStormRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyStormRsp)
}

void TLevyStormRsp::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
  targetnewpos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyStormRsp::TLevyStormRsp(const TLevyStormRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyStormRsp)
}

void TLevyStormRsp::SharedCtor() {
  _cached_size_ = 0;
  battleret_ = NULL;
  success_ = 0u;
  slivernum_ = GOOGLE_ULONGLONG(0);
  targetnewpos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyStormRsp::~TLevyStormRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyStormRsp)
  SharedDtor();
}

void TLevyStormRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
    delete targetnewpos_;
  }
}

void TLevyStormRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyStormRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyStormRsp_descriptor_;
}

const TLevyStormRsp& TLevyStormRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyStormRsp* TLevyStormRsp::default_instance_ = NULL;

TLevyStormRsp* TLevyStormRsp::New() const {
  return new TLevyStormRsp;
}

void TLevyStormRsp::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    success_ = 0u;
    slivernum_ = GOOGLE_ULONGLONG(0);
    if (has_targetnewpos()) {
      if (targetnewpos_ != NULL) targetnewpos_->::pb::TLevyPos::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyStormRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyStormRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleResult BattleRet = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Success;
        break;
      }

      // optional uint32 Success = 2;
      case 2: {
        if (tag == 16) {
         parse_Success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SliverNum;
        break;
      }

      // optional uint64 SliverNum = 3;
      case 3: {
        if (tag == 24) {
         parse_SliverNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TargetNewPos;
        break;
      }

      // optional .pb.TLevyPos TargetNewPos = 4;
      case 4: {
        if (tag == 34) {
         parse_TargetNewPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_targetnewpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyStormRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyStormRsp)
  return false;
#undef DO_
}

void TLevyStormRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyStormRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleret(), output);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  // optional uint64 SliverNum = 3;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->slivernum(), output);
  }

  // optional .pb.TLevyPos TargetNewPos = 4;
  if (has_targetnewpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->targetnewpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyStormRsp)
}

::google::protobuf::uint8* TLevyStormRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyStormRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleret(), target);
  }

  // optional uint32 Success = 2;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  // optional uint64 SliverNum = 3;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->slivernum(), target);
  }

  // optional .pb.TLevyPos TargetNewPos = 4;
  if (has_targetnewpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->targetnewpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyStormRsp)
  return target;
}

int TLevyStormRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleResult BattleRet = 1;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional uint32 Success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

    // optional uint64 SliverNum = 3;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

    // optional .pb.TLevyPos TargetNewPos = 4;
    if (has_targetnewpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->targetnewpos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyStormRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyStormRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyStormRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyStormRsp::MergeFrom(const TLevyStormRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
    if (from.has_targetnewpos()) {
      mutable_targetnewpos()->::pb::TLevyPos::MergeFrom(from.targetnewpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyStormRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyStormRsp::CopyFrom(const TLevyStormRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyStormRsp::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TLevyStormRsp::Swap(TLevyStormRsp* other) {
  if (other != this) {
    std::swap(battleret_, other->battleret_);
    std::swap(success_, other->success_);
    std::swap(slivernum_, other->slivernum_);
    std::swap(targetnewpos_, other->targetnewpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyStormRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyStormRsp_descriptor_;
  metadata.reflection = TLevyStormRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyStormPreviewReq::kPosFieldNumber;
const int TLevyStormPreviewReq::kTargetUidFieldNumber;
#endif  // !_MSC_VER

TLevyStormPreviewReq::TLevyStormPreviewReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyStormPreviewReq)
}

void TLevyStormPreviewReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
}

TLevyStormPreviewReq::TLevyStormPreviewReq(const TLevyStormPreviewReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyStormPreviewReq)
}

void TLevyStormPreviewReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  targetuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyStormPreviewReq::~TLevyStormPreviewReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyStormPreviewReq)
  SharedDtor();
}

void TLevyStormPreviewReq::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void TLevyStormPreviewReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyStormPreviewReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyStormPreviewReq_descriptor_;
}

const TLevyStormPreviewReq& TLevyStormPreviewReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyStormPreviewReq* TLevyStormPreviewReq::default_instance_ = NULL;

TLevyStormPreviewReq* TLevyStormPreviewReq::New() const {
  return new TLevyStormPreviewReq;
}

void TLevyStormPreviewReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::TLevyPos::Clear();
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyStormPreviewReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyStormPreviewReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetUid;
        break;
      }

      // optional uint64 TargetUid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyStormPreviewReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyStormPreviewReq)
  return false;
#undef DO_
}

void TLevyStormPreviewReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyStormPreviewReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyStormPreviewReq)
}

::google::protobuf::uint8* TLevyStormPreviewReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyStormPreviewReq)
  // optional .pb.TLevyPos Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // optional uint64 TargetUid = 2;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyStormPreviewReq)
  return target;
}

int TLevyStormPreviewReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional uint64 TargetUid = 2;
    if (has_targetuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->targetuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyStormPreviewReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyStormPreviewReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyStormPreviewReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyStormPreviewReq::MergeFrom(const TLevyStormPreviewReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::TLevyPos::MergeFrom(from.pos());
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyStormPreviewReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyStormPreviewReq::CopyFrom(const TLevyStormPreviewReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyStormPreviewReq::IsInitialized() const {

  return true;
}

void TLevyStormPreviewReq::Swap(TLevyStormPreviewReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(targetuid_, other->targetuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyStormPreviewReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyStormPreviewReq_descriptor_;
  metadata.reflection = TLevyStormPreviewReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyStormPreviewRsp::kSliverNumFieldNumber;
#endif  // !_MSC_VER

TLevyStormPreviewRsp::TLevyStormPreviewRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyStormPreviewRsp)
}

void TLevyStormPreviewRsp::InitAsDefaultInstance() {
}

TLevyStormPreviewRsp::TLevyStormPreviewRsp(const TLevyStormPreviewRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyStormPreviewRsp)
}

void TLevyStormPreviewRsp::SharedCtor() {
  _cached_size_ = 0;
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyStormPreviewRsp::~TLevyStormPreviewRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyStormPreviewRsp)
  SharedDtor();
}

void TLevyStormPreviewRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyStormPreviewRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyStormPreviewRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyStormPreviewRsp_descriptor_;
}

const TLevyStormPreviewRsp& TLevyStormPreviewRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyStormPreviewRsp* TLevyStormPreviewRsp::default_instance_ = NULL;

TLevyStormPreviewRsp* TLevyStormPreviewRsp::New() const {
  return new TLevyStormPreviewRsp;
}

void TLevyStormPreviewRsp::Clear() {
  slivernum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyStormPreviewRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyStormPreviewRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SliverNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slivernum_)));
          set_has_slivernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyStormPreviewRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyStormPreviewRsp)
  return false;
#undef DO_
}

void TLevyStormPreviewRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyStormPreviewRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slivernum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyStormPreviewRsp)
}

::google::protobuf::uint8* TLevyStormPreviewRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyStormPreviewRsp)
  // optional uint64 SliverNum = 1;
  if (has_slivernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slivernum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyStormPreviewRsp)
  return target;
}

int TLevyStormPreviewRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SliverNum = 1;
    if (has_slivernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->slivernum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyStormPreviewRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyStormPreviewRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyStormPreviewRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyStormPreviewRsp::MergeFrom(const TLevyStormPreviewRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slivernum()) {
      set_slivernum(from.slivernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyStormPreviewRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyStormPreviewRsp::CopyFrom(const TLevyStormPreviewRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyStormPreviewRsp::IsInitialized() const {

  return true;
}

void TLevyStormPreviewRsp::Swap(TLevyStormPreviewRsp* other) {
  if (other != this) {
    std::swap(slivernum_, other->slivernum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyStormPreviewRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyStormPreviewRsp_descriptor_;
  metadata.reflection = TLevyStormPreviewRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetLevyBattleReportReq::kOffsetFieldNumber;
const int TLevyGetLevyBattleReportReq::kNumFieldNumber;
#endif  // !_MSC_VER

TLevyGetLevyBattleReportReq::TLevyGetLevyBattleReportReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetLevyBattleReportReq)
}

void TLevyGetLevyBattleReportReq::InitAsDefaultInstance() {
}

TLevyGetLevyBattleReportReq::TLevyGetLevyBattleReportReq(const TLevyGetLevyBattleReportReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetLevyBattleReportReq)
}

void TLevyGetLevyBattleReportReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetLevyBattleReportReq::~TLevyGetLevyBattleReportReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetLevyBattleReportReq)
  SharedDtor();
}

void TLevyGetLevyBattleReportReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetLevyBattleReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetLevyBattleReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetLevyBattleReportReq_descriptor_;
}

const TLevyGetLevyBattleReportReq& TLevyGetLevyBattleReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetLevyBattleReportReq* TLevyGetLevyBattleReportReq::default_instance_ = NULL;

TLevyGetLevyBattleReportReq* TLevyGetLevyBattleReportReq::New() const {
  return new TLevyGetLevyBattleReportReq;
}

void TLevyGetLevyBattleReportReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TLevyGetLevyBattleReportReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetLevyBattleReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetLevyBattleReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetLevyBattleReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetLevyBattleReportReq)
  return false;
#undef DO_
}

void TLevyGetLevyBattleReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetLevyBattleReportReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetLevyBattleReportReq)
}

::google::protobuf::uint8* TLevyGetLevyBattleReportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetLevyBattleReportReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetLevyBattleReportReq)
  return target;
}

int TLevyGetLevyBattleReportReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetLevyBattleReportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetLevyBattleReportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetLevyBattleReportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetLevyBattleReportReq::MergeFrom(const TLevyGetLevyBattleReportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetLevyBattleReportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetLevyBattleReportReq::CopyFrom(const TLevyGetLevyBattleReportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetLevyBattleReportReq::IsInitialized() const {

  return true;
}

void TLevyGetLevyBattleReportReq::Swap(TLevyGetLevyBattleReportReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetLevyBattleReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetLevyBattleReportReq_descriptor_;
  metadata.reflection = TLevyGetLevyBattleReportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetLevyBattleReportRsp::kArrReportInfoFieldNumber;
#endif  // !_MSC_VER

TLevyGetLevyBattleReportRsp::TLevyGetLevyBattleReportRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetLevyBattleReportRsp)
}

void TLevyGetLevyBattleReportRsp::InitAsDefaultInstance() {
}

TLevyGetLevyBattleReportRsp::TLevyGetLevyBattleReportRsp(const TLevyGetLevyBattleReportRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetLevyBattleReportRsp)
}

void TLevyGetLevyBattleReportRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetLevyBattleReportRsp::~TLevyGetLevyBattleReportRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetLevyBattleReportRsp)
  SharedDtor();
}

void TLevyGetLevyBattleReportRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetLevyBattleReportRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetLevyBattleReportRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetLevyBattleReportRsp_descriptor_;
}

const TLevyGetLevyBattleReportRsp& TLevyGetLevyBattleReportRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetLevyBattleReportRsp* TLevyGetLevyBattleReportRsp::default_instance_ = NULL;

TLevyGetLevyBattleReportRsp* TLevyGetLevyBattleReportRsp::New() const {
  return new TLevyGetLevyBattleReportRsp;
}

void TLevyGetLevyBattleReportRsp::Clear() {
  arrreportinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetLevyBattleReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetLevyBattleReportRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyBattleReportInfo ArrReportInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReportInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreportinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReportInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetLevyBattleReportRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetLevyBattleReportRsp)
  return false;
#undef DO_
}

void TLevyGetLevyBattleReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetLevyBattleReportRsp)
  // repeated .pb.TLevyBattleReportInfo ArrReportInfo = 1;
  for (int i = 0; i < this->arrreportinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreportinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetLevyBattleReportRsp)
}

::google::protobuf::uint8* TLevyGetLevyBattleReportRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetLevyBattleReportRsp)
  // repeated .pb.TLevyBattleReportInfo ArrReportInfo = 1;
  for (int i = 0; i < this->arrreportinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreportinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetLevyBattleReportRsp)
  return target;
}

int TLevyGetLevyBattleReportRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyBattleReportInfo ArrReportInfo = 1;
  total_size += 1 * this->arrreportinfo_size();
  for (int i = 0; i < this->arrreportinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreportinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetLevyBattleReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetLevyBattleReportRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetLevyBattleReportRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetLevyBattleReportRsp::MergeFrom(const TLevyGetLevyBattleReportRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreportinfo_.MergeFrom(from.arrreportinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetLevyBattleReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetLevyBattleReportRsp::CopyFrom(const TLevyGetLevyBattleReportRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetLevyBattleReportRsp::IsInitialized() const {

  return true;
}

void TLevyGetLevyBattleReportRsp::Swap(TLevyGetLevyBattleReportRsp* other) {
  if (other != this) {
    arrreportinfo_.Swap(&other->arrreportinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetLevyBattleReportRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetLevyBattleReportRsp_descriptor_;
  metadata.reflection = TLevyGetLevyBattleReportRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyGetGuildUserListRsp::kArrGuildUserInfoFieldNumber;
#endif  // !_MSC_VER

TLevyGetGuildUserListRsp::TLevyGetGuildUserListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyGetGuildUserListRsp)
}

void TLevyGetGuildUserListRsp::InitAsDefaultInstance() {
}

TLevyGetGuildUserListRsp::TLevyGetGuildUserListRsp(const TLevyGetGuildUserListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyGetGuildUserListRsp)
}

void TLevyGetGuildUserListRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyGetGuildUserListRsp::~TLevyGetGuildUserListRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyGetGuildUserListRsp)
  SharedDtor();
}

void TLevyGetGuildUserListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyGetGuildUserListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyGetGuildUserListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyGetGuildUserListRsp_descriptor_;
}

const TLevyGetGuildUserListRsp& TLevyGetGuildUserListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyGetGuildUserListRsp* TLevyGetGuildUserListRsp::default_instance_ = NULL;

TLevyGetGuildUserListRsp* TLevyGetGuildUserListRsp::New() const {
  return new TLevyGetGuildUserListRsp;
}

void TLevyGetGuildUserListRsp::Clear() {
  arrguilduserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyGetGuildUserListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyGetGuildUserListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyGuildUserInfo ArrGuildUserInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrGuildUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrguilduserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrGuildUserInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyGetGuildUserListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyGetGuildUserListRsp)
  return false;
#undef DO_
}

void TLevyGetGuildUserListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyGetGuildUserListRsp)
  // repeated .pb.TLevyGuildUserInfo ArrGuildUserInfo = 1;
  for (int i = 0; i < this->arrguilduserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrguilduserinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyGetGuildUserListRsp)
}

::google::protobuf::uint8* TLevyGetGuildUserListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyGetGuildUserListRsp)
  // repeated .pb.TLevyGuildUserInfo ArrGuildUserInfo = 1;
  for (int i = 0; i < this->arrguilduserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrguilduserinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyGetGuildUserListRsp)
  return target;
}

int TLevyGetGuildUserListRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyGuildUserInfo ArrGuildUserInfo = 1;
  total_size += 1 * this->arrguilduserinfo_size();
  for (int i = 0; i < this->arrguilduserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrguilduserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyGetGuildUserListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyGetGuildUserListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyGetGuildUserListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyGetGuildUserListRsp::MergeFrom(const TLevyGetGuildUserListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrguilduserinfo_.MergeFrom(from.arrguilduserinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyGetGuildUserListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyGetGuildUserListRsp::CopyFrom(const TLevyGetGuildUserListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyGetGuildUserListRsp::IsInitialized() const {

  return true;
}

void TLevyGetGuildUserListRsp::Swap(TLevyGetGuildUserListRsp* other) {
  if (other != this) {
    arrguilduserinfo_.Swap(&other->arrguilduserinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyGetGuildUserListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyGetGuildUserListRsp_descriptor_;
  metadata.reflection = TLevyGetGuildUserListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyReceiveAchievementRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TLevyReceiveAchievementRewardReq::TLevyReceiveAchievementRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyReceiveAchievementRewardReq)
}

void TLevyReceiveAchievementRewardReq::InitAsDefaultInstance() {
}

TLevyReceiveAchievementRewardReq::TLevyReceiveAchievementRewardReq(const TLevyReceiveAchievementRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyReceiveAchievementRewardReq)
}

void TLevyReceiveAchievementRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyReceiveAchievementRewardReq::~TLevyReceiveAchievementRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TLevyReceiveAchievementRewardReq)
  SharedDtor();
}

void TLevyReceiveAchievementRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyReceiveAchievementRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyReceiveAchievementRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyReceiveAchievementRewardReq_descriptor_;
}

const TLevyReceiveAchievementRewardReq& TLevyReceiveAchievementRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyReceiveAchievementRewardReq* TLevyReceiveAchievementRewardReq::default_instance_ = NULL;

TLevyReceiveAchievementRewardReq* TLevyReceiveAchievementRewardReq::New() const {
  return new TLevyReceiveAchievementRewardReq;
}

void TLevyReceiveAchievementRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyReceiveAchievementRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyReceiveAchievementRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyReceiveAchievementRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyReceiveAchievementRewardReq)
  return false;
#undef DO_
}

void TLevyReceiveAchievementRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyReceiveAchievementRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyReceiveAchievementRewardReq)
}

::google::protobuf::uint8* TLevyReceiveAchievementRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyReceiveAchievementRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyReceiveAchievementRewardReq)
  return target;
}

int TLevyReceiveAchievementRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyReceiveAchievementRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyReceiveAchievementRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyReceiveAchievementRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyReceiveAchievementRewardReq::MergeFrom(const TLevyReceiveAchievementRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyReceiveAchievementRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyReceiveAchievementRewardReq::CopyFrom(const TLevyReceiveAchievementRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyReceiveAchievementRewardReq::IsInitialized() const {

  return true;
}

void TLevyReceiveAchievementRewardReq::Swap(TLevyReceiveAchievementRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyReceiveAchievementRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyReceiveAchievementRewardReq_descriptor_;
  metadata.reflection = TLevyReceiveAchievementRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyReceiveAchievementRewardRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TLevyReceiveAchievementRewardRsp::TLevyReceiveAchievementRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyReceiveAchievementRewardRsp)
}

void TLevyReceiveAchievementRewardRsp::InitAsDefaultInstance() {
}

TLevyReceiveAchievementRewardRsp::TLevyReceiveAchievementRewardRsp(const TLevyReceiveAchievementRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyReceiveAchievementRewardRsp)
}

void TLevyReceiveAchievementRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyReceiveAchievementRewardRsp::~TLevyReceiveAchievementRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TLevyReceiveAchievementRewardRsp)
  SharedDtor();
}

void TLevyReceiveAchievementRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyReceiveAchievementRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyReceiveAchievementRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyReceiveAchievementRewardRsp_descriptor_;
}

const TLevyReceiveAchievementRewardRsp& TLevyReceiveAchievementRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyReceiveAchievementRewardRsp* TLevyReceiveAchievementRewardRsp::default_instance_ = NULL;

TLevyReceiveAchievementRewardRsp* TLevyReceiveAchievementRewardRsp::New() const {
  return new TLevyReceiveAchievementRewardRsp;
}

void TLevyReceiveAchievementRewardRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyReceiveAchievementRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyReceiveAchievementRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyReceiveAchievementRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyReceiveAchievementRewardRsp)
  return false;
#undef DO_
}

void TLevyReceiveAchievementRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyReceiveAchievementRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyReceiveAchievementRewardRsp)
}

::google::protobuf::uint8* TLevyReceiveAchievementRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyReceiveAchievementRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyReceiveAchievementRewardRsp)
  return target;
}

int TLevyReceiveAchievementRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyReceiveAchievementRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyReceiveAchievementRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyReceiveAchievementRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyReceiveAchievementRewardRsp::MergeFrom(const TLevyReceiveAchievementRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyReceiveAchievementRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyReceiveAchievementRewardRsp::CopyFrom(const TLevyReceiveAchievementRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyReceiveAchievementRewardRsp::IsInitialized() const {

  return true;
}

void TLevyReceiveAchievementRewardRsp::Swap(TLevyReceiveAchievementRewardRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyReceiveAchievementRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyReceiveAchievementRewardRsp_descriptor_;
  metadata.reflection = TLevyReceiveAchievementRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyUserInfoChangeNotify::kPosChangeFieldNumber;
const int TLevyUserInfoChangeNotify::kMasterChangeInfoFieldNumber;
const int TLevyUserInfoChangeNotify::kSlaveChangeInfoFieldNumber;
const int TLevyUserInfoChangeNotify::kRecordInfoFieldNumber;
const int TLevyUserInfoChangeNotify::kAchievementInfoFieldNumber;
#endif  // !_MSC_VER

TLevyUserInfoChangeNotify::TLevyUserInfoChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyUserInfoChangeNotify)
}

void TLevyUserInfoChangeNotify::InitAsDefaultInstance() {
  poschange_ = const_cast< ::pb::TLevyPos*>(&::pb::TLevyPos::default_instance());
  masterchangeinfo_ = const_cast< ::pb::TLevyMasterInfo*>(&::pb::TLevyMasterInfo::default_instance());
  recordinfo_ = const_cast< ::pb::TLevyRecordInfo*>(&::pb::TLevyRecordInfo::default_instance());
  achievementinfo_ = const_cast< ::pb::TLevyAchievementInfo*>(&::pb::TLevyAchievementInfo::default_instance());
}

TLevyUserInfoChangeNotify::TLevyUserInfoChangeNotify(const TLevyUserInfoChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyUserInfoChangeNotify)
}

void TLevyUserInfoChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  poschange_ = NULL;
  masterchangeinfo_ = NULL;
  recordinfo_ = NULL;
  achievementinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyUserInfoChangeNotify::~TLevyUserInfoChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TLevyUserInfoChangeNotify)
  SharedDtor();
}

void TLevyUserInfoChangeNotify::SharedDtor() {
  if (this != default_instance_) {
    delete poschange_;
    delete masterchangeinfo_;
    delete recordinfo_;
    delete achievementinfo_;
  }
}

void TLevyUserInfoChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyUserInfoChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyUserInfoChangeNotify_descriptor_;
}

const TLevyUserInfoChangeNotify& TLevyUserInfoChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyUserInfoChangeNotify* TLevyUserInfoChangeNotify::default_instance_ = NULL;

TLevyUserInfoChangeNotify* TLevyUserInfoChangeNotify::New() const {
  return new TLevyUserInfoChangeNotify;
}

void TLevyUserInfoChangeNotify::Clear() {
  if (_has_bits_[0 / 32] & 27) {
    if (has_poschange()) {
      if (poschange_ != NULL) poschange_->::pb::TLevyPos::Clear();
    }
    if (has_masterchangeinfo()) {
      if (masterchangeinfo_ != NULL) masterchangeinfo_->::pb::TLevyMasterInfo::Clear();
    }
    if (has_recordinfo()) {
      if (recordinfo_ != NULL) recordinfo_->::pb::TLevyRecordInfo::Clear();
    }
    if (has_achievementinfo()) {
      if (achievementinfo_ != NULL) achievementinfo_->::pb::TLevyAchievementInfo::Clear();
    }
  }
  slavechangeinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyUserInfoChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyUserInfoChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyPos PosChange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_poschange()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MasterChangeInfo;
        break;
      }

      // optional .pb.TLevyMasterInfo MasterChangeInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_MasterChangeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_masterchangeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SlaveChangeInfo;
        break;
      }

      // repeated .pb.TLevySlaveInfo SlaveChangeInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_SlaveChangeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slavechangeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SlaveChangeInfo;
        if (input->ExpectTag(34)) goto parse_RecordInfo;
        break;
      }

      // optional .pb.TLevyRecordInfo RecordInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_RecordInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recordinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AchievementInfo;
        break;
      }

      // optional .pb.TLevyAchievementInfo AchievementInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_AchievementInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_achievementinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyUserInfoChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyUserInfoChangeNotify)
  return false;
#undef DO_
}

void TLevyUserInfoChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyUserInfoChangeNotify)
  // optional .pb.TLevyPos PosChange = 1;
  if (has_poschange()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->poschange(), output);
  }

  // optional .pb.TLevyMasterInfo MasterChangeInfo = 2;
  if (has_masterchangeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->masterchangeinfo(), output);
  }

  // repeated .pb.TLevySlaveInfo SlaveChangeInfo = 3;
  for (int i = 0; i < this->slavechangeinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->slavechangeinfo(i), output);
  }

  // optional .pb.TLevyRecordInfo RecordInfo = 4;
  if (has_recordinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->recordinfo(), output);
  }

  // optional .pb.TLevyAchievementInfo AchievementInfo = 5;
  if (has_achievementinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->achievementinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyUserInfoChangeNotify)
}

::google::protobuf::uint8* TLevyUserInfoChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyUserInfoChangeNotify)
  // optional .pb.TLevyPos PosChange = 1;
  if (has_poschange()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->poschange(), target);
  }

  // optional .pb.TLevyMasterInfo MasterChangeInfo = 2;
  if (has_masterchangeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->masterchangeinfo(), target);
  }

  // repeated .pb.TLevySlaveInfo SlaveChangeInfo = 3;
  for (int i = 0; i < this->slavechangeinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->slavechangeinfo(i), target);
  }

  // optional .pb.TLevyRecordInfo RecordInfo = 4;
  if (has_recordinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->recordinfo(), target);
  }

  // optional .pb.TLevyAchievementInfo AchievementInfo = 5;
  if (has_achievementinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->achievementinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyUserInfoChangeNotify)
  return target;
}

int TLevyUserInfoChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyPos PosChange = 1;
    if (has_poschange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->poschange());
    }

    // optional .pb.TLevyMasterInfo MasterChangeInfo = 2;
    if (has_masterchangeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->masterchangeinfo());
    }

    // optional .pb.TLevyRecordInfo RecordInfo = 4;
    if (has_recordinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recordinfo());
    }

    // optional .pb.TLevyAchievementInfo AchievementInfo = 5;
    if (has_achievementinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->achievementinfo());
    }

  }
  // repeated .pb.TLevySlaveInfo SlaveChangeInfo = 3;
  total_size += 1 * this->slavechangeinfo_size();
  for (int i = 0; i < this->slavechangeinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slavechangeinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyUserInfoChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyUserInfoChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyUserInfoChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyUserInfoChangeNotify::MergeFrom(const TLevyUserInfoChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  slavechangeinfo_.MergeFrom(from.slavechangeinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_poschange()) {
      mutable_poschange()->::pb::TLevyPos::MergeFrom(from.poschange());
    }
    if (from.has_masterchangeinfo()) {
      mutable_masterchangeinfo()->::pb::TLevyMasterInfo::MergeFrom(from.masterchangeinfo());
    }
    if (from.has_recordinfo()) {
      mutable_recordinfo()->::pb::TLevyRecordInfo::MergeFrom(from.recordinfo());
    }
    if (from.has_achievementinfo()) {
      mutable_achievementinfo()->::pb::TLevyAchievementInfo::MergeFrom(from.achievementinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyUserInfoChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyUserInfoChangeNotify::CopyFrom(const TLevyUserInfoChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyUserInfoChangeNotify::IsInitialized() const {

  return true;
}

void TLevyUserInfoChangeNotify::Swap(TLevyUserInfoChangeNotify* other) {
  if (other != this) {
    std::swap(poschange_, other->poschange_);
    std::swap(masterchangeinfo_, other->masterchangeinfo_);
    slavechangeinfo_.Swap(&other->slavechangeinfo_);
    std::swap(recordinfo_, other->recordinfo_);
    std::swap(achievementinfo_, other->achievementinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyUserInfoChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyUserInfoChangeNotify_descriptor_;
  metadata.reflection = TLevyUserInfoChangeNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyInfoChangeNotify::kUserLevyInfoFieldNumber;
const int TLevyInfoChangeNotify::kUserInfoFieldNumber;
#endif  // !_MSC_VER

TLevyInfoChangeNotify::TLevyInfoChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyInfoChangeNotify)
}

void TLevyInfoChangeNotify::InitAsDefaultInstance() {
  userlevyinfo_ = const_cast< ::pb::TLevyOtherUserInfo*>(&::pb::TLevyOtherUserInfo::default_instance());
}

TLevyInfoChangeNotify::TLevyInfoChangeNotify(const TLevyInfoChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyInfoChangeNotify)
}

void TLevyInfoChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  userlevyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyInfoChangeNotify::~TLevyInfoChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TLevyInfoChangeNotify)
  SharedDtor();
}

void TLevyInfoChangeNotify::SharedDtor() {
  if (this != default_instance_) {
    delete userlevyinfo_;
  }
}

void TLevyInfoChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyInfoChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyInfoChangeNotify_descriptor_;
}

const TLevyInfoChangeNotify& TLevyInfoChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyInfoChangeNotify* TLevyInfoChangeNotify::default_instance_ = NULL;

TLevyInfoChangeNotify* TLevyInfoChangeNotify::New() const {
  return new TLevyInfoChangeNotify;
}

void TLevyInfoChangeNotify::Clear() {
  if (has_userlevyinfo()) {
    if (userlevyinfo_ != NULL) userlevyinfo_->::pb::TLevyOtherUserInfo::Clear();
  }
  userinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyInfoChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyInfoChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TLevyOtherUserInfo UserLevyInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userlevyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UserInfo;
        break;
      }

      // repeated .pb.TUserSimpleInfo UserInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_UserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UserInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyInfoChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyInfoChangeNotify)
  return false;
#undef DO_
}

void TLevyInfoChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyInfoChangeNotify)
  // optional .pb.TLevyOtherUserInfo UserLevyInfo = 1;
  if (has_userlevyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userlevyinfo(), output);
  }

  // repeated .pb.TUserSimpleInfo UserInfo = 2;
  for (int i = 0; i < this->userinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyInfoChangeNotify)
}

::google::protobuf::uint8* TLevyInfoChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyInfoChangeNotify)
  // optional .pb.TLevyOtherUserInfo UserLevyInfo = 1;
  if (has_userlevyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userlevyinfo(), target);
  }

  // repeated .pb.TUserSimpleInfo UserInfo = 2;
  for (int i = 0; i < this->userinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->userinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyInfoChangeNotify)
  return target;
}

int TLevyInfoChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TLevyOtherUserInfo UserLevyInfo = 1;
    if (has_userlevyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userlevyinfo());
    }

  }
  // repeated .pb.TUserSimpleInfo UserInfo = 2;
  total_size += 1 * this->userinfo_size();
  for (int i = 0; i < this->userinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyInfoChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyInfoChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyInfoChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyInfoChangeNotify::MergeFrom(const TLevyInfoChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  userinfo_.MergeFrom(from.userinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userlevyinfo()) {
      mutable_userlevyinfo()->::pb::TLevyOtherUserInfo::MergeFrom(from.userlevyinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyInfoChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyInfoChangeNotify::CopyFrom(const TLevyInfoChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyInfoChangeNotify::IsInitialized() const {

  return true;
}

void TLevyInfoChangeNotify::Swap(TLevyInfoChangeNotify* other) {
  if (other != this) {
    std::swap(userlevyinfo_, other->userlevyinfo_);
    userinfo_.Swap(&other->userinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyInfoChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyInfoChangeNotify_descriptor_;
  metadata.reflection = TLevyInfoChangeNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TLevyNewBattleReportNotify::kReportInfoFieldNumber;
#endif  // !_MSC_VER

TLevyNewBattleReportNotify::TLevyNewBattleReportNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TLevyNewBattleReportNotify)
}

void TLevyNewBattleReportNotify::InitAsDefaultInstance() {
}

TLevyNewBattleReportNotify::TLevyNewBattleReportNotify(const TLevyNewBattleReportNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TLevyNewBattleReportNotify)
}

void TLevyNewBattleReportNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TLevyNewBattleReportNotify::~TLevyNewBattleReportNotify() {
  // @@protoc_insertion_point(destructor:pb.TLevyNewBattleReportNotify)
  SharedDtor();
}

void TLevyNewBattleReportNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TLevyNewBattleReportNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TLevyNewBattleReportNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TLevyNewBattleReportNotify_descriptor_;
}

const TLevyNewBattleReportNotify& TLevyNewBattleReportNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fLevy_2eproto();
  return *default_instance_;
}

TLevyNewBattleReportNotify* TLevyNewBattleReportNotify::default_instance_ = NULL;

TLevyNewBattleReportNotify* TLevyNewBattleReportNotify::New() const {
  return new TLevyNewBattleReportNotify;
}

void TLevyNewBattleReportNotify::Clear() {
  reportinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TLevyNewBattleReportNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TLevyNewBattleReportNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLevyBattleReportInfo ReportInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ReportInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reportinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ReportInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TLevyNewBattleReportNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TLevyNewBattleReportNotify)
  return false;
#undef DO_
}

void TLevyNewBattleReportNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TLevyNewBattleReportNotify)
  // repeated .pb.TLevyBattleReportInfo ReportInfo = 1;
  for (int i = 0; i < this->reportinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reportinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TLevyNewBattleReportNotify)
}

::google::protobuf::uint8* TLevyNewBattleReportNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TLevyNewBattleReportNotify)
  // repeated .pb.TLevyBattleReportInfo ReportInfo = 1;
  for (int i = 0; i < this->reportinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reportinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TLevyNewBattleReportNotify)
  return target;
}

int TLevyNewBattleReportNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLevyBattleReportInfo ReportInfo = 1;
  total_size += 1 * this->reportinfo_size();
  for (int i = 0; i < this->reportinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reportinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TLevyNewBattleReportNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TLevyNewBattleReportNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TLevyNewBattleReportNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TLevyNewBattleReportNotify::MergeFrom(const TLevyNewBattleReportNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  reportinfo_.MergeFrom(from.reportinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TLevyNewBattleReportNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLevyNewBattleReportNotify::CopyFrom(const TLevyNewBattleReportNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLevyNewBattleReportNotify::IsInitialized() const {

  return true;
}

void TLevyNewBattleReportNotify::Swap(TLevyNewBattleReportNotify* other) {
  if (other != this) {
    reportinfo_.Swap(&other->reportinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TLevyNewBattleReportNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TLevyNewBattleReportNotify_descriptor_;
  metadata.reflection = TLevyNewBattleReportNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
