// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Beast.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Beast.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TBeastEquipItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastEquipItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastFosterAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastFosterAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSoulLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSoulLocation_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSoulMaterial_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSoulMaterial_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSingleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSingleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastContractHelpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastContractHelpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSquadPosInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSquadPosInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOthersBeastSingleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOthersBeastSingleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOthersBeastInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOthersBeastInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastFosterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastFosterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastFosterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastFosterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastFosterLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastFosterLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastStarLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastStarLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastEquipItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastEquipItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastEquipBeastReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastEquipBeastReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastCombineBeastReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastCombineBeastReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSetAssistBeastReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSetAssistBeastReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastPurpleGoldLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastPurpleGoldLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSoulSaveIllustrationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSoulSaveIllustrationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeastSoulGenerateSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeastSoulGenerateSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TNewBeastNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TNewBeastNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fBeast_2eproto() {
  protobuf_AddDesc_net_2fBeast_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Beast.proto");
  GOOGLE_CHECK(file != NULL);
  TBeastEquipItem_descriptor_ = file->message_type(0);
  static const int TBeastEquipItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItem, itemtid_),
  };
  TBeastEquipItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastEquipItem_descriptor_,
      TBeastEquipItem::default_instance_,
      TBeastEquipItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastEquipItem));
  TBeastFosterAttr_descriptor_ = file->message_type(1);
  static const int TBeastFosterAttr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterAttr, attrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterAttr, attrvalue_),
  };
  TBeastFosterAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastFosterAttr_descriptor_,
      TBeastFosterAttr::default_instance_,
      TBeastFosterAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastFosterAttr));
  TBeastSoulLocation_descriptor_ = file->message_type(2);
  static const int TBeastSoulLocation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulLocation, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulLocation, color_),
  };
  TBeastSoulLocation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSoulLocation_descriptor_,
      TBeastSoulLocation::default_instance_,
      TBeastSoulLocation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulLocation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulLocation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSoulLocation));
  TBeastSoulMaterial_descriptor_ = file->message_type(3);
  static const int TBeastSoulMaterial_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulMaterial, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulMaterial, num_),
  };
  TBeastSoulMaterial_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSoulMaterial_descriptor_,
      TBeastSoulMaterial::default_instance_,
      TBeastSoulMaterial_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulMaterial, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulMaterial, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSoulMaterial));
  TBeastSingleInfo_descriptor_ = file->message_type(4);
  static const int TBeastSingleInfo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, beasttid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, curfosterlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, starlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, equiparr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, fosterattrarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, fostercostarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, starlvupcostunifragnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, purplegoldcurlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, purplegoldcostarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, beastsoulmaterialarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, beastsoulgeneratenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, nodeinfoarr_),
  };
  TBeastSingleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSingleInfo_descriptor_,
      TBeastSingleInfo::default_instance_,
      TBeastSingleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSingleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSingleInfo));
  TBeastContractHelpReq_descriptor_ = file->message_type(5);
  static const int TBeastContractHelpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastContractHelpReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastContractHelpReq, beastassistid_),
  };
  TBeastContractHelpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastContractHelpReq_descriptor_,
      TBeastContractHelpReq::default_instance_,
      TBeastContractHelpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastContractHelpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastContractHelpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastContractHelpReq));
  TBeastSquadPosInfo_descriptor_ = file->message_type(6);
  static const int TBeastSquadPosInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, assistbeastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, assistbeastidpos2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, assistbeastidpurplegoldpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, assistbeastcontractid_),
  };
  TBeastSquadPosInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSquadPosInfo_descriptor_,
      TBeastSquadPosInfo::default_instance_,
      TBeastSquadPosInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSquadPosInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSquadPosInfo));
  TBeastGetInfoRsp_descriptor_ = file->message_type(7);
  static const int TBeastGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastGetInfoRsp, beastarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastGetInfoRsp, beastsquadarr_),
  };
  TBeastGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastGetInfoRsp_descriptor_,
      TBeastGetInfoRsp::default_instance_,
      TBeastGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastGetInfoRsp));
  TOthersBeastSingleInfo_descriptor_ = file->message_type(8);
  static const int TOthersBeastSingleInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, beastinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, assistbeastinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, assistbeastinfopos2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, assistbeastidpurplegoldpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, assistbeastcontractinfopos_),
  };
  TOthersBeastSingleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOthersBeastSingleInfo_descriptor_,
      TOthersBeastSingleInfo::default_instance_,
      TOthersBeastSingleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastSingleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOthersBeastSingleInfo));
  TOthersBeastInfo_descriptor_ = file->message_type(9);
  static const int TOthersBeastInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastInfo, singlebeastinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastInfo, beastarmarr_),
  };
  TOthersBeastInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOthersBeastInfo_descriptor_,
      TOthersBeastInfo::default_instance_,
      TOthersBeastInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOthersBeastInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOthersBeastInfo));
  TBeastFosterReq_descriptor_ = file->message_type(10);
  static const int TBeastFosterReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterReq, fosternum_),
  };
  TBeastFosterReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastFosterReq_descriptor_,
      TBeastFosterReq::default_instance_,
      TBeastFosterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastFosterReq));
  TBeastFosterRsp_descriptor_ = file->message_type(11);
  static const int TBeastFosterRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterRsp, fosterattrarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterRsp, fosternum_),
  };
  TBeastFosterRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastFosterRsp_descriptor_,
      TBeastFosterRsp::default_instance_,
      TBeastFosterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastFosterRsp));
  TBeastFosterLevelUpReq_descriptor_ = file->message_type(12);
  static const int TBeastFosterLevelUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterLevelUpReq, beastid_),
  };
  TBeastFosterLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastFosterLevelUpReq_descriptor_,
      TBeastFosterLevelUpReq::default_instance_,
      TBeastFosterLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastFosterLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastFosterLevelUpReq));
  TBeastStarLevelUpReq_descriptor_ = file->message_type(13);
  static const int TBeastStarLevelUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastStarLevelUpReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastStarLevelUpReq, costuniversalfragnum_),
  };
  TBeastStarLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastStarLevelUpReq_descriptor_,
      TBeastStarLevelUpReq::default_instance_,
      TBeastStarLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastStarLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastStarLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastStarLevelUpReq));
  TBeastEquipItemReq_descriptor_ = file->message_type(14);
  static const int TBeastEquipItemReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItemReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItemReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItemReq, itemid_),
  };
  TBeastEquipItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastEquipItemReq_descriptor_,
      TBeastEquipItemReq::default_instance_,
      TBeastEquipItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastEquipItemReq));
  TBeastEquipBeastReq_descriptor_ = file->message_type(15);
  static const int TBeastEquipBeastReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipBeastReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipBeastReq, beastid_),
  };
  TBeastEquipBeastReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastEquipBeastReq_descriptor_,
      TBeastEquipBeastReq::default_instance_,
      TBeastEquipBeastReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipBeastReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastEquipBeastReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastEquipBeastReq));
  TBeastCombineBeastReq_descriptor_ = file->message_type(16);
  static const int TBeastCombineBeastReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastCombineBeastReq, tid_),
  };
  TBeastCombineBeastReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastCombineBeastReq_descriptor_,
      TBeastCombineBeastReq::default_instance_,
      TBeastCombineBeastReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastCombineBeastReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastCombineBeastReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastCombineBeastReq));
  TBeastSetAssistBeastReq_descriptor_ = file->message_type(17);
  static const int TBeastSetAssistBeastReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSetAssistBeastReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSetAssistBeastReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSetAssistBeastReq, beastidpos2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSetAssistBeastReq, beastidpurplegoldpos_),
  };
  TBeastSetAssistBeastReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSetAssistBeastReq_descriptor_,
      TBeastSetAssistBeastReq::default_instance_,
      TBeastSetAssistBeastReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSetAssistBeastReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSetAssistBeastReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSetAssistBeastReq));
  TBeastPurpleGoldLevelUpReq_descriptor_ = file->message_type(18);
  static const int TBeastPurpleGoldLevelUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastPurpleGoldLevelUpReq, beastid_),
  };
  TBeastPurpleGoldLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastPurpleGoldLevelUpReq_descriptor_,
      TBeastPurpleGoldLevelUpReq::default_instance_,
      TBeastPurpleGoldLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastPurpleGoldLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastPurpleGoldLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastPurpleGoldLevelUpReq));
  TBeastSoulSaveIllustrationReq_descriptor_ = file->message_type(19);
  static const int TBeastSoulSaveIllustrationReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulSaveIllustrationReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulSaveIllustrationReq, nodeinfoarr_),
  };
  TBeastSoulSaveIllustrationReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSoulSaveIllustrationReq_descriptor_,
      TBeastSoulSaveIllustrationReq::default_instance_,
      TBeastSoulSaveIllustrationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulSaveIllustrationReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulSaveIllustrationReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSoulSaveIllustrationReq));
  TBeastSoulGenerateSoulReq_descriptor_ = file->message_type(20);
  static const int TBeastSoulGenerateSoulReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulGenerateSoulReq, beastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulGenerateSoulReq, cositemarray_),
  };
  TBeastSoulGenerateSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeastSoulGenerateSoulReq_descriptor_,
      TBeastSoulGenerateSoulReq::default_instance_,
      TBeastSoulGenerateSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulGenerateSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeastSoulGenerateSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeastSoulGenerateSoulReq));
  TNewBeastNotify_descriptor_ = file->message_type(21);
  static const int TNewBeastNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TNewBeastNotify, beastarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TNewBeastNotify, beastsquadarr_),
  };
  TNewBeastNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TNewBeastNotify_descriptor_,
      TNewBeastNotify::default_instance_,
      TNewBeastNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TNewBeastNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TNewBeastNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TNewBeastNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fBeast_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastEquipItem_descriptor_, &TBeastEquipItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastFosterAttr_descriptor_, &TBeastFosterAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSoulLocation_descriptor_, &TBeastSoulLocation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSoulMaterial_descriptor_, &TBeastSoulMaterial::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSingleInfo_descriptor_, &TBeastSingleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastContractHelpReq_descriptor_, &TBeastContractHelpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSquadPosInfo_descriptor_, &TBeastSquadPosInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastGetInfoRsp_descriptor_, &TBeastGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOthersBeastSingleInfo_descriptor_, &TOthersBeastSingleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOthersBeastInfo_descriptor_, &TOthersBeastInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastFosterReq_descriptor_, &TBeastFosterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastFosterRsp_descriptor_, &TBeastFosterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastFosterLevelUpReq_descriptor_, &TBeastFosterLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastStarLevelUpReq_descriptor_, &TBeastStarLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastEquipItemReq_descriptor_, &TBeastEquipItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastEquipBeastReq_descriptor_, &TBeastEquipBeastReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastCombineBeastReq_descriptor_, &TBeastCombineBeastReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSetAssistBeastReq_descriptor_, &TBeastSetAssistBeastReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastPurpleGoldLevelUpReq_descriptor_, &TBeastPurpleGoldLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSoulSaveIllustrationReq_descriptor_, &TBeastSoulSaveIllustrationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeastSoulGenerateSoulReq_descriptor_, &TBeastSoulGenerateSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TNewBeastNotify_descriptor_, &TNewBeastNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fBeast_2eproto() {
  delete TBeastEquipItem::default_instance_;
  delete TBeastEquipItem_reflection_;
  delete TBeastFosterAttr::default_instance_;
  delete TBeastFosterAttr_reflection_;
  delete TBeastSoulLocation::default_instance_;
  delete TBeastSoulLocation_reflection_;
  delete TBeastSoulMaterial::default_instance_;
  delete TBeastSoulMaterial_reflection_;
  delete TBeastSingleInfo::default_instance_;
  delete TBeastSingleInfo_reflection_;
  delete TBeastContractHelpReq::default_instance_;
  delete TBeastContractHelpReq_reflection_;
  delete TBeastSquadPosInfo::default_instance_;
  delete TBeastSquadPosInfo_reflection_;
  delete TBeastGetInfoRsp::default_instance_;
  delete TBeastGetInfoRsp_reflection_;
  delete TOthersBeastSingleInfo::default_instance_;
  delete TOthersBeastSingleInfo_reflection_;
  delete TOthersBeastInfo::default_instance_;
  delete TOthersBeastInfo_reflection_;
  delete TBeastFosterReq::default_instance_;
  delete TBeastFosterReq_reflection_;
  delete TBeastFosterRsp::default_instance_;
  delete TBeastFosterRsp_reflection_;
  delete TBeastFosterLevelUpReq::default_instance_;
  delete TBeastFosterLevelUpReq_reflection_;
  delete TBeastStarLevelUpReq::default_instance_;
  delete TBeastStarLevelUpReq_reflection_;
  delete TBeastEquipItemReq::default_instance_;
  delete TBeastEquipItemReq_reflection_;
  delete TBeastEquipBeastReq::default_instance_;
  delete TBeastEquipBeastReq_reflection_;
  delete TBeastCombineBeastReq::default_instance_;
  delete TBeastCombineBeastReq_reflection_;
  delete TBeastSetAssistBeastReq::default_instance_;
  delete TBeastSetAssistBeastReq_reflection_;
  delete TBeastPurpleGoldLevelUpReq::default_instance_;
  delete TBeastPurpleGoldLevelUpReq_reflection_;
  delete TBeastSoulSaveIllustrationReq::default_instance_;
  delete TBeastSoulSaveIllustrationReq_reflection_;
  delete TBeastSoulGenerateSoulReq::default_instance_;
  delete TBeastSoulGenerateSoulReq_reflection_;
  delete TNewBeastNotify::default_instance_;
  delete TNewBeastNotify_reflection_;
}

void protobuf_AddDesc_net_2fBeast_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017net/Beast.proto\022\002pb\032\020net/Common.proto\032"
    "\026net/CommonReward.proto\"\?\n\017TBeastEquipIt"
    "em\022\013\n\003Pos\030\001 \001(\r\022\016\n\006ItemId\030\002 \001(\r\022\017\n\007ItemT"
    "id\030\003 \001(\r\"5\n\020TBeastFosterAttr\022\016\n\006AttrId\030\001"
    " \001(\r\022\021\n\tAttrValue\030\002 \001(\r\"0\n\022TBeastSoulLoc"
    "ation\022\013\n\003Pos\030\001 \001(\r\022\r\n\005Color\030\002 \001(\r\".\n\022TBe"
    "astSoulMaterial\022\013\n\003Tid\030\001 \001(\r\022\013\n\003Num\030\002 \001("
    "\r\"\306\003\n\020TBeastSingleInfo\022\017\n\007BeastId\030\001 \001(\r\022"
    "\020\n\010BeastTid\030\002 \001(\r\022\026\n\016CurFosterLevel\030\003 \001("
    "\r\022\016\n\006StarLv\030\004 \001(\r\022%\n\010EquipArr\030\005 \003(\0132\023.pb"
    ".TBeastEquipItem\022+\n\rFosterAttrArr\030\006 \003(\0132"
    "\024.pb.TBeastFosterAttr\022(\n\rFosterCostArr\030\007"
    " \003(\0132\021.pb.TCommonReward\022\036\n\026StarLvUpCostU"
    "niFragNum\030\010 \001(\r\022\032\n\022PurpleGoldCurLevel\030\t "
    "\001(\r\022,\n\021PurpleGoldCostArr\030\n \003(\0132\021.pb.TCom"
    "monReward\0224\n\024BeastSoulMaterialArr\030\013 \003(\0132"
    "\026.pb.TBeastSoulMaterial\022\034\n\024BeastSoulGene"
    "rateNum\030\014 \001(\r\022+\n\013NodeInfoArr\030\r \003(\0132\026.pb."
    "TBeastSoulLocation\"\?\n\025TBeastContractHelp"
    "Req\022\017\n\007BeastId\030\001 \001(\r\022\025\n\rBeastAssistId\030\002 "
    "\001(\r\"\247\001\n\022TBeastSquadPosInfo\022\013\n\003Pos\030\001 \001(\r\022"
    "\017\n\007BeastId\030\002 \001(\r\022\025\n\rAssistBeastId\030\003 \001(\r\022"
    "\031\n\021AssistBeastIdPos2\030\004 \001(\r\022\"\n\032AssistBeas"
    "tIdPurpleGoldPos\030\005 \001(\r\022\035\n\025AssistBeastCon"
    "tractId\030\006 \001(\r\"i\n\020TBeastGetInfoRsp\022&\n\010Bea"
    "stArr\030\001 \003(\0132\024.pb.TBeastSingleInfo\022-\n\rBea"
    "stSquadArr\030\002 \003(\0132\026.pb.TBeastSquadPosInfo"
    "\"\244\002\n\026TOthersBeastSingleInfo\022\013\n\003Pos\030\001 \001(\r"
    "\022\'\n\tBeastInfo\030\002 \001(\0132\024.pb.TBeastSingleInf"
    "o\022-\n\017AssistBeastInfo\030\003 \001(\0132\024.pb.TBeastSi"
    "ngleInfo\0221\n\023AssistBeastInfoPos2\030\004 \001(\0132\024."
    "pb.TBeastSingleInfo\0228\n\032AssistBeastIdPurp"
    "leGoldPos\030\005 \001(\0132\024.pb.TBeastSingleInfo\0228\n"
    "\032AssistBeastContractInfoPos\030\006 \001(\0132\024.pb.T"
    "BeastSingleInfo\"r\n\020TOthersBeastInfo\0226\n\022S"
    "ingleBeastInfoArr\030\001 \003(\0132\032.pb.TOthersBeas"
    "tSingleInfo\022&\n\013BeastArmArr\030\002 \003(\0132\021.pb.TB"
    "eastArmItem\"5\n\017TBeastFosterReq\022\017\n\007BeastI"
    "d\030\001 \001(\r\022\021\n\tFosterNum\030\002 \001(\r\"Q\n\017TBeastFost"
    "erRsp\022+\n\rFosterAttrArr\030\001 \003(\0132\024.pb.TBeast"
    "FosterAttr\022\021\n\tFosterNum\030\002 \001(\r\")\n\026TBeastF"
    "osterLevelUpReq\022\017\n\007BeastId\030\001 \001(\r\"E\n\024TBea"
    "stStarLevelUpReq\022\017\n\007BeastId\030\001 \001(\r\022\034\n\024Cos"
    "tUniversalFragNum\030\002 \001(\r\"B\n\022TBeastEquipIt"
    "emReq\022\017\n\007BeastId\030\001 \001(\r\022\013\n\003Pos\030\002 \001(\r\022\016\n\006I"
    "temId\030\003 \001(\r\"3\n\023TBeastEquipBeastReq\022\013\n\003Po"
    "s\030\001 \001(\r\022\017\n\007BeastId\030\002 \001(\r\"$\n\025TBeastCombin"
    "eBeastReq\022\013\n\003Tid\030\001 \001(\r\"j\n\027TBeastSetAssis"
    "tBeastReq\022\013\n\003Pos\030\001 \001(\r\022\017\n\007BeastId\030\002 \001(\r\022"
    "\023\n\013BeastIdPos2\030\003 \001(\r\022\034\n\024BeastIdPurpleGol"
    "dPos\030\004 \001(\r\"-\n\032TBeastPurpleGoldLevelUpReq"
    "\022\017\n\007BeastId\030\001 \001(\r\"]\n\035TBeastSoulSaveIllus"
    "trationReq\022\017\n\007BeastId\030\001 \001(\r\022+\n\013NodeInfoA"
    "rr\030\002 \003(\0132\026.pb.TBeastSoulLocation\"S\n\031TBea"
    "stSoulGenerateSoulReq\022\017\n\007BeastId\030\001 \001(\r\022%"
    "\n\014CosItemArray\030\002 \003(\0132\017.pb.TSimpleItem\"h\n"
    "\017TNewBeastNotify\022&\n\010BeastArr\030\001 \003(\0132\024.pb."
    "TBeastSingleInfo\022-\n\rBeastSquadArr\030\002 \003(\0132"
    "\026.pb.TBeastSquadPosInfo", 2343);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Beast.proto", &protobuf_RegisterTypes);
  TBeastEquipItem::default_instance_ = new TBeastEquipItem();
  TBeastFosterAttr::default_instance_ = new TBeastFosterAttr();
  TBeastSoulLocation::default_instance_ = new TBeastSoulLocation();
  TBeastSoulMaterial::default_instance_ = new TBeastSoulMaterial();
  TBeastSingleInfo::default_instance_ = new TBeastSingleInfo();
  TBeastContractHelpReq::default_instance_ = new TBeastContractHelpReq();
  TBeastSquadPosInfo::default_instance_ = new TBeastSquadPosInfo();
  TBeastGetInfoRsp::default_instance_ = new TBeastGetInfoRsp();
  TOthersBeastSingleInfo::default_instance_ = new TOthersBeastSingleInfo();
  TOthersBeastInfo::default_instance_ = new TOthersBeastInfo();
  TBeastFosterReq::default_instance_ = new TBeastFosterReq();
  TBeastFosterRsp::default_instance_ = new TBeastFosterRsp();
  TBeastFosterLevelUpReq::default_instance_ = new TBeastFosterLevelUpReq();
  TBeastStarLevelUpReq::default_instance_ = new TBeastStarLevelUpReq();
  TBeastEquipItemReq::default_instance_ = new TBeastEquipItemReq();
  TBeastEquipBeastReq::default_instance_ = new TBeastEquipBeastReq();
  TBeastCombineBeastReq::default_instance_ = new TBeastCombineBeastReq();
  TBeastSetAssistBeastReq::default_instance_ = new TBeastSetAssistBeastReq();
  TBeastPurpleGoldLevelUpReq::default_instance_ = new TBeastPurpleGoldLevelUpReq();
  TBeastSoulSaveIllustrationReq::default_instance_ = new TBeastSoulSaveIllustrationReq();
  TBeastSoulGenerateSoulReq::default_instance_ = new TBeastSoulGenerateSoulReq();
  TNewBeastNotify::default_instance_ = new TNewBeastNotify();
  TBeastEquipItem::default_instance_->InitAsDefaultInstance();
  TBeastFosterAttr::default_instance_->InitAsDefaultInstance();
  TBeastSoulLocation::default_instance_->InitAsDefaultInstance();
  TBeastSoulMaterial::default_instance_->InitAsDefaultInstance();
  TBeastSingleInfo::default_instance_->InitAsDefaultInstance();
  TBeastContractHelpReq::default_instance_->InitAsDefaultInstance();
  TBeastSquadPosInfo::default_instance_->InitAsDefaultInstance();
  TBeastGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOthersBeastSingleInfo::default_instance_->InitAsDefaultInstance();
  TOthersBeastInfo::default_instance_->InitAsDefaultInstance();
  TBeastFosterReq::default_instance_->InitAsDefaultInstance();
  TBeastFosterRsp::default_instance_->InitAsDefaultInstance();
  TBeastFosterLevelUpReq::default_instance_->InitAsDefaultInstance();
  TBeastStarLevelUpReq::default_instance_->InitAsDefaultInstance();
  TBeastEquipItemReq::default_instance_->InitAsDefaultInstance();
  TBeastEquipBeastReq::default_instance_->InitAsDefaultInstance();
  TBeastCombineBeastReq::default_instance_->InitAsDefaultInstance();
  TBeastSetAssistBeastReq::default_instance_->InitAsDefaultInstance();
  TBeastPurpleGoldLevelUpReq::default_instance_->InitAsDefaultInstance();
  TBeastSoulSaveIllustrationReq::default_instance_->InitAsDefaultInstance();
  TBeastSoulGenerateSoulReq::default_instance_->InitAsDefaultInstance();
  TNewBeastNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fBeast_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fBeast_2eproto {
  StaticDescriptorInitializer_net_2fBeast_2eproto() {
    protobuf_AddDesc_net_2fBeast_2eproto();
  }
} static_descriptor_initializer_net_2fBeast_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TBeastEquipItem::kPosFieldNumber;
const int TBeastEquipItem::kItemIdFieldNumber;
const int TBeastEquipItem::kItemTidFieldNumber;
#endif  // !_MSC_VER

TBeastEquipItem::TBeastEquipItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastEquipItem)
}

void TBeastEquipItem::InitAsDefaultInstance() {
}

TBeastEquipItem::TBeastEquipItem(const TBeastEquipItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastEquipItem)
}

void TBeastEquipItem::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  itemid_ = 0u;
  itemtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastEquipItem::~TBeastEquipItem() {
  // @@protoc_insertion_point(destructor:pb.TBeastEquipItem)
  SharedDtor();
}

void TBeastEquipItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastEquipItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastEquipItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastEquipItem_descriptor_;
}

const TBeastEquipItem& TBeastEquipItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastEquipItem* TBeastEquipItem::default_instance_ = NULL;

TBeastEquipItem* TBeastEquipItem::New() const {
  return new TBeastEquipItem;
}

void TBeastEquipItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastEquipItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, itemtid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastEquipItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastEquipItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemId;
        break;
      }

      // optional uint32 ItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemTid;
        break;
      }

      // optional uint32 ItemTid = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtid_)));
          set_has_itemtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastEquipItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastEquipItem)
  return false;
#undef DO_
}

void TBeastEquipItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastEquipItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 ItemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemid(), output);
  }

  // optional uint32 ItemTid = 3;
  if (has_itemtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastEquipItem)
}

::google::protobuf::uint8* TBeastEquipItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastEquipItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 ItemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemid(), target);
  }

  // optional uint32 ItemTid = 3;
  if (has_itemtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->itemtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastEquipItem)
  return target;
}

int TBeastEquipItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 ItemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 ItemTid = 3;
    if (has_itemtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastEquipItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastEquipItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastEquipItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastEquipItem::MergeFrom(const TBeastEquipItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemtid()) {
      set_itemtid(from.itemtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastEquipItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastEquipItem::CopyFrom(const TBeastEquipItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastEquipItem::IsInitialized() const {

  return true;
}

void TBeastEquipItem::Swap(TBeastEquipItem* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemtid_, other->itemtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastEquipItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastEquipItem_descriptor_;
  metadata.reflection = TBeastEquipItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastFosterAttr::kAttrIdFieldNumber;
const int TBeastFosterAttr::kAttrValueFieldNumber;
#endif  // !_MSC_VER

TBeastFosterAttr::TBeastFosterAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastFosterAttr)
}

void TBeastFosterAttr::InitAsDefaultInstance() {
}

TBeastFosterAttr::TBeastFosterAttr(const TBeastFosterAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastFosterAttr)
}

void TBeastFosterAttr::SharedCtor() {
  _cached_size_ = 0;
  attrid_ = 0u;
  attrvalue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastFosterAttr::~TBeastFosterAttr() {
  // @@protoc_insertion_point(destructor:pb.TBeastFosterAttr)
  SharedDtor();
}

void TBeastFosterAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastFosterAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastFosterAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastFosterAttr_descriptor_;
}

const TBeastFosterAttr& TBeastFosterAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastFosterAttr* TBeastFosterAttr::default_instance_ = NULL;

TBeastFosterAttr* TBeastFosterAttr::New() const {
  return new TBeastFosterAttr;
}

void TBeastFosterAttr::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastFosterAttr*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(attrid_, attrvalue_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastFosterAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastFosterAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AttrId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attrid_)));
          set_has_attrid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AttrValue;
        break;
      }

      // optional uint32 AttrValue = 2;
      case 2: {
        if (tag == 16) {
         parse_AttrValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attrvalue_)));
          set_has_attrvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastFosterAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastFosterAttr)
  return false;
#undef DO_
}

void TBeastFosterAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastFosterAttr)
  // optional uint32 AttrId = 1;
  if (has_attrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attrid(), output);
  }

  // optional uint32 AttrValue = 2;
  if (has_attrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attrvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastFosterAttr)
}

::google::protobuf::uint8* TBeastFosterAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastFosterAttr)
  // optional uint32 AttrId = 1;
  if (has_attrid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attrid(), target);
  }

  // optional uint32 AttrValue = 2;
  if (has_attrvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attrvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastFosterAttr)
  return target;
}

int TBeastFosterAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AttrId = 1;
    if (has_attrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attrid());
    }

    // optional uint32 AttrValue = 2;
    if (has_attrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attrvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastFosterAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastFosterAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastFosterAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastFosterAttr::MergeFrom(const TBeastFosterAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attrid()) {
      set_attrid(from.attrid());
    }
    if (from.has_attrvalue()) {
      set_attrvalue(from.attrvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastFosterAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastFosterAttr::CopyFrom(const TBeastFosterAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastFosterAttr::IsInitialized() const {

  return true;
}

void TBeastFosterAttr::Swap(TBeastFosterAttr* other) {
  if (other != this) {
    std::swap(attrid_, other->attrid_);
    std::swap(attrvalue_, other->attrvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastFosterAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastFosterAttr_descriptor_;
  metadata.reflection = TBeastFosterAttr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSoulLocation::kPosFieldNumber;
const int TBeastSoulLocation::kColorFieldNumber;
#endif  // !_MSC_VER

TBeastSoulLocation::TBeastSoulLocation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSoulLocation)
}

void TBeastSoulLocation::InitAsDefaultInstance() {
}

TBeastSoulLocation::TBeastSoulLocation(const TBeastSoulLocation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSoulLocation)
}

void TBeastSoulLocation::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  color_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSoulLocation::~TBeastSoulLocation() {
  // @@protoc_insertion_point(destructor:pb.TBeastSoulLocation)
  SharedDtor();
}

void TBeastSoulLocation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSoulLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSoulLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSoulLocation_descriptor_;
}

const TBeastSoulLocation& TBeastSoulLocation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSoulLocation* TBeastSoulLocation::default_instance_ = NULL;

TBeastSoulLocation* TBeastSoulLocation::New() const {
  return new TBeastSoulLocation;
}

void TBeastSoulLocation::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastSoulLocation*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, color_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSoulLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSoulLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Color;
        break;
      }

      // optional uint32 Color = 2;
      case 2: {
        if (tag == 16) {
         parse_Color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSoulLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSoulLocation)
  return false;
#undef DO_
}

void TBeastSoulLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSoulLocation)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 Color = 2;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->color(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSoulLocation)
}

::google::protobuf::uint8* TBeastSoulLocation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSoulLocation)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 Color = 2;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->color(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSoulLocation)
  return target;
}

int TBeastSoulLocation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSoulLocation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSoulLocation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSoulLocation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSoulLocation::MergeFrom(const TBeastSoulLocation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSoulLocation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSoulLocation::CopyFrom(const TBeastSoulLocation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSoulLocation::IsInitialized() const {

  return true;
}

void TBeastSoulLocation::Swap(TBeastSoulLocation* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(color_, other->color_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSoulLocation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSoulLocation_descriptor_;
  metadata.reflection = TBeastSoulLocation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSoulMaterial::kTidFieldNumber;
const int TBeastSoulMaterial::kNumFieldNumber;
#endif  // !_MSC_VER

TBeastSoulMaterial::TBeastSoulMaterial()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSoulMaterial)
}

void TBeastSoulMaterial::InitAsDefaultInstance() {
}

TBeastSoulMaterial::TBeastSoulMaterial(const TBeastSoulMaterial& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSoulMaterial)
}

void TBeastSoulMaterial::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSoulMaterial::~TBeastSoulMaterial() {
  // @@protoc_insertion_point(destructor:pb.TBeastSoulMaterial)
  SharedDtor();
}

void TBeastSoulMaterial::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSoulMaterial::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSoulMaterial::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSoulMaterial_descriptor_;
}

const TBeastSoulMaterial& TBeastSoulMaterial::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSoulMaterial* TBeastSoulMaterial::default_instance_ = NULL;

TBeastSoulMaterial* TBeastSoulMaterial::New() const {
  return new TBeastSoulMaterial;
}

void TBeastSoulMaterial::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastSoulMaterial*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSoulMaterial::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSoulMaterial)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSoulMaterial)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSoulMaterial)
  return false;
#undef DO_
}

void TBeastSoulMaterial::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSoulMaterial)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSoulMaterial)
}

::google::protobuf::uint8* TBeastSoulMaterial::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSoulMaterial)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSoulMaterial)
  return target;
}

int TBeastSoulMaterial::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSoulMaterial::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSoulMaterial* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSoulMaterial*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSoulMaterial::MergeFrom(const TBeastSoulMaterial& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSoulMaterial::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSoulMaterial::CopyFrom(const TBeastSoulMaterial& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSoulMaterial::IsInitialized() const {

  return true;
}

void TBeastSoulMaterial::Swap(TBeastSoulMaterial* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSoulMaterial::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSoulMaterial_descriptor_;
  metadata.reflection = TBeastSoulMaterial_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSingleInfo::kBeastIdFieldNumber;
const int TBeastSingleInfo::kBeastTidFieldNumber;
const int TBeastSingleInfo::kCurFosterLevelFieldNumber;
const int TBeastSingleInfo::kStarLvFieldNumber;
const int TBeastSingleInfo::kEquipArrFieldNumber;
const int TBeastSingleInfo::kFosterAttrArrFieldNumber;
const int TBeastSingleInfo::kFosterCostArrFieldNumber;
const int TBeastSingleInfo::kStarLvUpCostUniFragNumFieldNumber;
const int TBeastSingleInfo::kPurpleGoldCurLevelFieldNumber;
const int TBeastSingleInfo::kPurpleGoldCostArrFieldNumber;
const int TBeastSingleInfo::kBeastSoulMaterialArrFieldNumber;
const int TBeastSingleInfo::kBeastSoulGenerateNumFieldNumber;
const int TBeastSingleInfo::kNodeInfoArrFieldNumber;
#endif  // !_MSC_VER

TBeastSingleInfo::TBeastSingleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSingleInfo)
}

void TBeastSingleInfo::InitAsDefaultInstance() {
}

TBeastSingleInfo::TBeastSingleInfo(const TBeastSingleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSingleInfo)
}

void TBeastSingleInfo::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  beasttid_ = 0u;
  curfosterlevel_ = 0u;
  starlv_ = 0u;
  starlvupcostunifragnum_ = 0u;
  purplegoldcurlevel_ = 0u;
  beastsoulgeneratenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSingleInfo::~TBeastSingleInfo() {
  // @@protoc_insertion_point(destructor:pb.TBeastSingleInfo)
  SharedDtor();
}

void TBeastSingleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSingleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSingleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSingleInfo_descriptor_;
}

const TBeastSingleInfo& TBeastSingleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSingleInfo* TBeastSingleInfo::default_instance_ = NULL;

TBeastSingleInfo* TBeastSingleInfo::New() const {
  return new TBeastSingleInfo;
}

void TBeastSingleInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastSingleInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 143) {
    ZR_(beastid_, starlv_);
    starlvupcostunifragnum_ = 0u;
  }
  if (_has_bits_[8 / 32] & 2304) {
    purplegoldcurlevel_ = 0u;
    beastsoulgeneratenum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  equiparr_.Clear();
  fosterattrarr_.Clear();
  fostercostarr_.Clear();
  purplegoldcostarr_.Clear();
  beastsoulmaterialarr_.Clear();
  nodeinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSingleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSingleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeastTid;
        break;
      }

      // optional uint32 BeastTid = 2;
      case 2: {
        if (tag == 16) {
         parse_BeastTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beasttid_)));
          set_has_beasttid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CurFosterLevel;
        break;
      }

      // optional uint32 CurFosterLevel = 3;
      case 3: {
        if (tag == 24) {
         parse_CurFosterLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curfosterlevel_)));
          set_has_curfosterlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StarLv;
        break;
      }

      // optional uint32 StarLv = 4;
      case 4: {
        if (tag == 32) {
         parse_StarLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starlv_)));
          set_has_starlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_EquipArr;
        break;
      }

      // repeated .pb.TBeastEquipItem EquipArr = 5;
      case 5: {
        if (tag == 42) {
         parse_EquipArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equiparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_EquipArr;
        if (input->ExpectTag(50)) goto parse_FosterAttrArr;
        break;
      }

      // repeated .pb.TBeastFosterAttr FosterAttrArr = 6;
      case 6: {
        if (tag == 50) {
         parse_FosterAttrArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fosterattrarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_FosterAttrArr;
        if (input->ExpectTag(58)) goto parse_FosterCostArr;
        break;
      }

      // repeated .pb.TCommonReward FosterCostArr = 7;
      case 7: {
        if (tag == 58) {
         parse_FosterCostArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fostercostarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_FosterCostArr;
        if (input->ExpectTag(64)) goto parse_StarLvUpCostUniFragNum;
        break;
      }

      // optional uint32 StarLvUpCostUniFragNum = 8;
      case 8: {
        if (tag == 64) {
         parse_StarLvUpCostUniFragNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starlvupcostunifragnum_)));
          set_has_starlvupcostunifragnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_PurpleGoldCurLevel;
        break;
      }

      // optional uint32 PurpleGoldCurLevel = 9;
      case 9: {
        if (tag == 72) {
         parse_PurpleGoldCurLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purplegoldcurlevel_)));
          set_has_purplegoldcurlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_PurpleGoldCostArr;
        break;
      }

      // repeated .pb.TCommonReward PurpleGoldCostArr = 10;
      case 10: {
        if (tag == 82) {
         parse_PurpleGoldCostArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_purplegoldcostarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_PurpleGoldCostArr;
        if (input->ExpectTag(90)) goto parse_BeastSoulMaterialArr;
        break;
      }

      // repeated .pb.TBeastSoulMaterial BeastSoulMaterialArr = 11;
      case 11: {
        if (tag == 90) {
         parse_BeastSoulMaterialArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beastsoulmaterialarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_BeastSoulMaterialArr;
        if (input->ExpectTag(96)) goto parse_BeastSoulGenerateNum;
        break;
      }

      // optional uint32 BeastSoulGenerateNum = 12;
      case 12: {
        if (tag == 96) {
         parse_BeastSoulGenerateNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastsoulgeneratenum_)));
          set_has_beastsoulgeneratenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_NodeInfoArr;
        break;
      }

      // repeated .pb.TBeastSoulLocation NodeInfoArr = 13;
      case 13: {
        if (tag == 106) {
         parse_NodeInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodeinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_NodeInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSingleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSingleInfo)
  return false;
#undef DO_
}

void TBeastSingleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSingleInfo)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // optional uint32 BeastTid = 2;
  if (has_beasttid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beasttid(), output);
  }

  // optional uint32 CurFosterLevel = 3;
  if (has_curfosterlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->curfosterlevel(), output);
  }

  // optional uint32 StarLv = 4;
  if (has_starlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->starlv(), output);
  }

  // repeated .pb.TBeastEquipItem EquipArr = 5;
  for (int i = 0; i < this->equiparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->equiparr(i), output);
  }

  // repeated .pb.TBeastFosterAttr FosterAttrArr = 6;
  for (int i = 0; i < this->fosterattrarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fosterattrarr(i), output);
  }

  // repeated .pb.TCommonReward FosterCostArr = 7;
  for (int i = 0; i < this->fostercostarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fostercostarr(i), output);
  }

  // optional uint32 StarLvUpCostUniFragNum = 8;
  if (has_starlvupcostunifragnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->starlvupcostunifragnum(), output);
  }

  // optional uint32 PurpleGoldCurLevel = 9;
  if (has_purplegoldcurlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->purplegoldcurlevel(), output);
  }

  // repeated .pb.TCommonReward PurpleGoldCostArr = 10;
  for (int i = 0; i < this->purplegoldcostarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->purplegoldcostarr(i), output);
  }

  // repeated .pb.TBeastSoulMaterial BeastSoulMaterialArr = 11;
  for (int i = 0; i < this->beastsoulmaterialarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->beastsoulmaterialarr(i), output);
  }

  // optional uint32 BeastSoulGenerateNum = 12;
  if (has_beastsoulgeneratenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->beastsoulgeneratenum(), output);
  }

  // repeated .pb.TBeastSoulLocation NodeInfoArr = 13;
  for (int i = 0; i < this->nodeinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->nodeinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSingleInfo)
}

::google::protobuf::uint8* TBeastSingleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSingleInfo)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // optional uint32 BeastTid = 2;
  if (has_beasttid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beasttid(), target);
  }

  // optional uint32 CurFosterLevel = 3;
  if (has_curfosterlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->curfosterlevel(), target);
  }

  // optional uint32 StarLv = 4;
  if (has_starlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->starlv(), target);
  }

  // repeated .pb.TBeastEquipItem EquipArr = 5;
  for (int i = 0; i < this->equiparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->equiparr(i), target);
  }

  // repeated .pb.TBeastFosterAttr FosterAttrArr = 6;
  for (int i = 0; i < this->fosterattrarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->fosterattrarr(i), target);
  }

  // repeated .pb.TCommonReward FosterCostArr = 7;
  for (int i = 0; i < this->fostercostarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fostercostarr(i), target);
  }

  // optional uint32 StarLvUpCostUniFragNum = 8;
  if (has_starlvupcostunifragnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->starlvupcostunifragnum(), target);
  }

  // optional uint32 PurpleGoldCurLevel = 9;
  if (has_purplegoldcurlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->purplegoldcurlevel(), target);
  }

  // repeated .pb.TCommonReward PurpleGoldCostArr = 10;
  for (int i = 0; i < this->purplegoldcostarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->purplegoldcostarr(i), target);
  }

  // repeated .pb.TBeastSoulMaterial BeastSoulMaterialArr = 11;
  for (int i = 0; i < this->beastsoulmaterialarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->beastsoulmaterialarr(i), target);
  }

  // optional uint32 BeastSoulGenerateNum = 12;
  if (has_beastsoulgeneratenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->beastsoulgeneratenum(), target);
  }

  // repeated .pb.TBeastSoulLocation NodeInfoArr = 13;
  for (int i = 0; i < this->nodeinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->nodeinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSingleInfo)
  return target;
}

int TBeastSingleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 BeastTid = 2;
    if (has_beasttid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beasttid());
    }

    // optional uint32 CurFosterLevel = 3;
    if (has_curfosterlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curfosterlevel());
    }

    // optional uint32 StarLv = 4;
    if (has_starlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starlv());
    }

    // optional uint32 StarLvUpCostUniFragNum = 8;
    if (has_starlvupcostunifragnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starlvupcostunifragnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 PurpleGoldCurLevel = 9;
    if (has_purplegoldcurlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->purplegoldcurlevel());
    }

    // optional uint32 BeastSoulGenerateNum = 12;
    if (has_beastsoulgeneratenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastsoulgeneratenum());
    }

  }
  // repeated .pb.TBeastEquipItem EquipArr = 5;
  total_size += 1 * this->equiparr_size();
  for (int i = 0; i < this->equiparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equiparr(i));
  }

  // repeated .pb.TBeastFosterAttr FosterAttrArr = 6;
  total_size += 1 * this->fosterattrarr_size();
  for (int i = 0; i < this->fosterattrarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fosterattrarr(i));
  }

  // repeated .pb.TCommonReward FosterCostArr = 7;
  total_size += 1 * this->fostercostarr_size();
  for (int i = 0; i < this->fostercostarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fostercostarr(i));
  }

  // repeated .pb.TCommonReward PurpleGoldCostArr = 10;
  total_size += 1 * this->purplegoldcostarr_size();
  for (int i = 0; i < this->purplegoldcostarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->purplegoldcostarr(i));
  }

  // repeated .pb.TBeastSoulMaterial BeastSoulMaterialArr = 11;
  total_size += 1 * this->beastsoulmaterialarr_size();
  for (int i = 0; i < this->beastsoulmaterialarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beastsoulmaterialarr(i));
  }

  // repeated .pb.TBeastSoulLocation NodeInfoArr = 13;
  total_size += 1 * this->nodeinfoarr_size();
  for (int i = 0; i < this->nodeinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodeinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSingleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSingleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSingleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSingleInfo::MergeFrom(const TBeastSingleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  equiparr_.MergeFrom(from.equiparr_);
  fosterattrarr_.MergeFrom(from.fosterattrarr_);
  fostercostarr_.MergeFrom(from.fostercostarr_);
  purplegoldcostarr_.MergeFrom(from.purplegoldcostarr_);
  beastsoulmaterialarr_.MergeFrom(from.beastsoulmaterialarr_);
  nodeinfoarr_.MergeFrom(from.nodeinfoarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_beasttid()) {
      set_beasttid(from.beasttid());
    }
    if (from.has_curfosterlevel()) {
      set_curfosterlevel(from.curfosterlevel());
    }
    if (from.has_starlv()) {
      set_starlv(from.starlv());
    }
    if (from.has_starlvupcostunifragnum()) {
      set_starlvupcostunifragnum(from.starlvupcostunifragnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_purplegoldcurlevel()) {
      set_purplegoldcurlevel(from.purplegoldcurlevel());
    }
    if (from.has_beastsoulgeneratenum()) {
      set_beastsoulgeneratenum(from.beastsoulgeneratenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSingleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSingleInfo::CopyFrom(const TBeastSingleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSingleInfo::IsInitialized() const {

  return true;
}

void TBeastSingleInfo::Swap(TBeastSingleInfo* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(beasttid_, other->beasttid_);
    std::swap(curfosterlevel_, other->curfosterlevel_);
    std::swap(starlv_, other->starlv_);
    equiparr_.Swap(&other->equiparr_);
    fosterattrarr_.Swap(&other->fosterattrarr_);
    fostercostarr_.Swap(&other->fostercostarr_);
    std::swap(starlvupcostunifragnum_, other->starlvupcostunifragnum_);
    std::swap(purplegoldcurlevel_, other->purplegoldcurlevel_);
    purplegoldcostarr_.Swap(&other->purplegoldcostarr_);
    beastsoulmaterialarr_.Swap(&other->beastsoulmaterialarr_);
    std::swap(beastsoulgeneratenum_, other->beastsoulgeneratenum_);
    nodeinfoarr_.Swap(&other->nodeinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSingleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSingleInfo_descriptor_;
  metadata.reflection = TBeastSingleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastContractHelpReq::kBeastIdFieldNumber;
const int TBeastContractHelpReq::kBeastAssistIdFieldNumber;
#endif  // !_MSC_VER

TBeastContractHelpReq::TBeastContractHelpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastContractHelpReq)
}

void TBeastContractHelpReq::InitAsDefaultInstance() {
}

TBeastContractHelpReq::TBeastContractHelpReq(const TBeastContractHelpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastContractHelpReq)
}

void TBeastContractHelpReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  beastassistid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastContractHelpReq::~TBeastContractHelpReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastContractHelpReq)
  SharedDtor();
}

void TBeastContractHelpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastContractHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastContractHelpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastContractHelpReq_descriptor_;
}

const TBeastContractHelpReq& TBeastContractHelpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastContractHelpReq* TBeastContractHelpReq::default_instance_ = NULL;

TBeastContractHelpReq* TBeastContractHelpReq::New() const {
  return new TBeastContractHelpReq;
}

void TBeastContractHelpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastContractHelpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(beastid_, beastassistid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastContractHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastContractHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeastAssistId;
        break;
      }

      // optional uint32 BeastAssistId = 2;
      case 2: {
        if (tag == 16) {
         parse_BeastAssistId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastassistid_)));
          set_has_beastassistid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastContractHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastContractHelpReq)
  return false;
#undef DO_
}

void TBeastContractHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastContractHelpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // optional uint32 BeastAssistId = 2;
  if (has_beastassistid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beastassistid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastContractHelpReq)
}

::google::protobuf::uint8* TBeastContractHelpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastContractHelpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // optional uint32 BeastAssistId = 2;
  if (has_beastassistid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beastassistid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastContractHelpReq)
  return target;
}

int TBeastContractHelpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 BeastAssistId = 2;
    if (has_beastassistid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastassistid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastContractHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastContractHelpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastContractHelpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastContractHelpReq::MergeFrom(const TBeastContractHelpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_beastassistid()) {
      set_beastassistid(from.beastassistid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastContractHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastContractHelpReq::CopyFrom(const TBeastContractHelpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastContractHelpReq::IsInitialized() const {

  return true;
}

void TBeastContractHelpReq::Swap(TBeastContractHelpReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(beastassistid_, other->beastassistid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastContractHelpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastContractHelpReq_descriptor_;
  metadata.reflection = TBeastContractHelpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSquadPosInfo::kPosFieldNumber;
const int TBeastSquadPosInfo::kBeastIdFieldNumber;
const int TBeastSquadPosInfo::kAssistBeastIdFieldNumber;
const int TBeastSquadPosInfo::kAssistBeastIdPos2FieldNumber;
const int TBeastSquadPosInfo::kAssistBeastIdPurpleGoldPosFieldNumber;
const int TBeastSquadPosInfo::kAssistBeastContractIdFieldNumber;
#endif  // !_MSC_VER

TBeastSquadPosInfo::TBeastSquadPosInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSquadPosInfo)
}

void TBeastSquadPosInfo::InitAsDefaultInstance() {
}

TBeastSquadPosInfo::TBeastSquadPosInfo(const TBeastSquadPosInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSquadPosInfo)
}

void TBeastSquadPosInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  beastid_ = 0u;
  assistbeastid_ = 0u;
  assistbeastidpos2_ = 0u;
  assistbeastidpurplegoldpos_ = 0u;
  assistbeastcontractid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSquadPosInfo::~TBeastSquadPosInfo() {
  // @@protoc_insertion_point(destructor:pb.TBeastSquadPosInfo)
  SharedDtor();
}

void TBeastSquadPosInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSquadPosInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSquadPosInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSquadPosInfo_descriptor_;
}

const TBeastSquadPosInfo& TBeastSquadPosInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSquadPosInfo* TBeastSquadPosInfo::default_instance_ = NULL;

TBeastSquadPosInfo* TBeastSquadPosInfo::New() const {
  return new TBeastSquadPosInfo;
}

void TBeastSquadPosInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastSquadPosInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_, assistbeastcontractid_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSquadPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSquadPosInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeastId;
        break;
      }

      // optional uint32 BeastId = 2;
      case 2: {
        if (tag == 16) {
         parse_BeastId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AssistBeastId;
        break;
      }

      // optional uint32 AssistBeastId = 3;
      case 3: {
        if (tag == 24) {
         parse_AssistBeastId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assistbeastid_)));
          set_has_assistbeastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_AssistBeastIdPos2;
        break;
      }

      // optional uint32 AssistBeastIdPos2 = 4;
      case 4: {
        if (tag == 32) {
         parse_AssistBeastIdPos2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assistbeastidpos2_)));
          set_has_assistbeastidpos2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AssistBeastIdPurpleGoldPos;
        break;
      }

      // optional uint32 AssistBeastIdPurpleGoldPos = 5;
      case 5: {
        if (tag == 40) {
         parse_AssistBeastIdPurpleGoldPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assistbeastidpurplegoldpos_)));
          set_has_assistbeastidpurplegoldpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_AssistBeastContractId;
        break;
      }

      // optional uint32 AssistBeastContractId = 6;
      case 6: {
        if (tag == 48) {
         parse_AssistBeastContractId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assistbeastcontractid_)));
          set_has_assistbeastcontractid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSquadPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSquadPosInfo)
  return false;
#undef DO_
}

void TBeastSquadPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSquadPosInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 BeastId = 2;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beastid(), output);
  }

  // optional uint32 AssistBeastId = 3;
  if (has_assistbeastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->assistbeastid(), output);
  }

  // optional uint32 AssistBeastIdPos2 = 4;
  if (has_assistbeastidpos2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->assistbeastidpos2(), output);
  }

  // optional uint32 AssistBeastIdPurpleGoldPos = 5;
  if (has_assistbeastidpurplegoldpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->assistbeastidpurplegoldpos(), output);
  }

  // optional uint32 AssistBeastContractId = 6;
  if (has_assistbeastcontractid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->assistbeastcontractid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSquadPosInfo)
}

::google::protobuf::uint8* TBeastSquadPosInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSquadPosInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 BeastId = 2;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beastid(), target);
  }

  // optional uint32 AssistBeastId = 3;
  if (has_assistbeastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->assistbeastid(), target);
  }

  // optional uint32 AssistBeastIdPos2 = 4;
  if (has_assistbeastidpos2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->assistbeastidpos2(), target);
  }

  // optional uint32 AssistBeastIdPurpleGoldPos = 5;
  if (has_assistbeastidpurplegoldpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->assistbeastidpurplegoldpos(), target);
  }

  // optional uint32 AssistBeastContractId = 6;
  if (has_assistbeastcontractid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->assistbeastcontractid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSquadPosInfo)
  return target;
}

int TBeastSquadPosInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 BeastId = 2;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 AssistBeastId = 3;
    if (has_assistbeastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assistbeastid());
    }

    // optional uint32 AssistBeastIdPos2 = 4;
    if (has_assistbeastidpos2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assistbeastidpos2());
    }

    // optional uint32 AssistBeastIdPurpleGoldPos = 5;
    if (has_assistbeastidpurplegoldpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assistbeastidpurplegoldpos());
    }

    // optional uint32 AssistBeastContractId = 6;
    if (has_assistbeastcontractid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assistbeastcontractid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSquadPosInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSquadPosInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSquadPosInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSquadPosInfo::MergeFrom(const TBeastSquadPosInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_assistbeastid()) {
      set_assistbeastid(from.assistbeastid());
    }
    if (from.has_assistbeastidpos2()) {
      set_assistbeastidpos2(from.assistbeastidpos2());
    }
    if (from.has_assistbeastidpurplegoldpos()) {
      set_assistbeastidpurplegoldpos(from.assistbeastidpurplegoldpos());
    }
    if (from.has_assistbeastcontractid()) {
      set_assistbeastcontractid(from.assistbeastcontractid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSquadPosInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSquadPosInfo::CopyFrom(const TBeastSquadPosInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSquadPosInfo::IsInitialized() const {

  return true;
}

void TBeastSquadPosInfo::Swap(TBeastSquadPosInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(beastid_, other->beastid_);
    std::swap(assistbeastid_, other->assistbeastid_);
    std::swap(assistbeastidpos2_, other->assistbeastidpos2_);
    std::swap(assistbeastidpurplegoldpos_, other->assistbeastidpurplegoldpos_);
    std::swap(assistbeastcontractid_, other->assistbeastcontractid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSquadPosInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSquadPosInfo_descriptor_;
  metadata.reflection = TBeastSquadPosInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastGetInfoRsp::kBeastArrFieldNumber;
const int TBeastGetInfoRsp::kBeastSquadArrFieldNumber;
#endif  // !_MSC_VER

TBeastGetInfoRsp::TBeastGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastGetInfoRsp)
}

void TBeastGetInfoRsp::InitAsDefaultInstance() {
}

TBeastGetInfoRsp::TBeastGetInfoRsp(const TBeastGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastGetInfoRsp)
}

void TBeastGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastGetInfoRsp::~TBeastGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TBeastGetInfoRsp)
  SharedDtor();
}

void TBeastGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastGetInfoRsp_descriptor_;
}

const TBeastGetInfoRsp& TBeastGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastGetInfoRsp* TBeastGetInfoRsp::default_instance_ = NULL;

TBeastGetInfoRsp* TBeastGetInfoRsp::New() const {
  return new TBeastGetInfoRsp;
}

void TBeastGetInfoRsp::Clear() {
  beastarr_.Clear();
  beastsquadarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBeastSingleInfo BeastArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BeastArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beastarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BeastArr;
        if (input->ExpectTag(18)) goto parse_BeastSquadArr;
        break;
      }

      // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
      case 2: {
        if (tag == 18) {
         parse_BeastSquadArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beastsquadarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BeastSquadArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastGetInfoRsp)
  return false;
#undef DO_
}

void TBeastGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastGetInfoRsp)
  // repeated .pb.TBeastSingleInfo BeastArr = 1;
  for (int i = 0; i < this->beastarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->beastarr(i), output);
  }

  // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
  for (int i = 0; i < this->beastsquadarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->beastsquadarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastGetInfoRsp)
}

::google::protobuf::uint8* TBeastGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastGetInfoRsp)
  // repeated .pb.TBeastSingleInfo BeastArr = 1;
  for (int i = 0; i < this->beastarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->beastarr(i), target);
  }

  // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
  for (int i = 0; i < this->beastsquadarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->beastsquadarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastGetInfoRsp)
  return target;
}

int TBeastGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBeastSingleInfo BeastArr = 1;
  total_size += 1 * this->beastarr_size();
  for (int i = 0; i < this->beastarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beastarr(i));
  }

  // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
  total_size += 1 * this->beastsquadarr_size();
  for (int i = 0; i < this->beastsquadarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beastsquadarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastGetInfoRsp::MergeFrom(const TBeastGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  beastarr_.MergeFrom(from.beastarr_);
  beastsquadarr_.MergeFrom(from.beastsquadarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastGetInfoRsp::CopyFrom(const TBeastGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastGetInfoRsp::IsInitialized() const {

  return true;
}

void TBeastGetInfoRsp::Swap(TBeastGetInfoRsp* other) {
  if (other != this) {
    beastarr_.Swap(&other->beastarr_);
    beastsquadarr_.Swap(&other->beastsquadarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastGetInfoRsp_descriptor_;
  metadata.reflection = TBeastGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOthersBeastSingleInfo::kPosFieldNumber;
const int TOthersBeastSingleInfo::kBeastInfoFieldNumber;
const int TOthersBeastSingleInfo::kAssistBeastInfoFieldNumber;
const int TOthersBeastSingleInfo::kAssistBeastInfoPos2FieldNumber;
const int TOthersBeastSingleInfo::kAssistBeastIdPurpleGoldPosFieldNumber;
const int TOthersBeastSingleInfo::kAssistBeastContractInfoPosFieldNumber;
#endif  // !_MSC_VER

TOthersBeastSingleInfo::TOthersBeastSingleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOthersBeastSingleInfo)
}

void TOthersBeastSingleInfo::InitAsDefaultInstance() {
  beastinfo_ = const_cast< ::pb::TBeastSingleInfo*>(&::pb::TBeastSingleInfo::default_instance());
  assistbeastinfo_ = const_cast< ::pb::TBeastSingleInfo*>(&::pb::TBeastSingleInfo::default_instance());
  assistbeastinfopos2_ = const_cast< ::pb::TBeastSingleInfo*>(&::pb::TBeastSingleInfo::default_instance());
  assistbeastidpurplegoldpos_ = const_cast< ::pb::TBeastSingleInfo*>(&::pb::TBeastSingleInfo::default_instance());
  assistbeastcontractinfopos_ = const_cast< ::pb::TBeastSingleInfo*>(&::pb::TBeastSingleInfo::default_instance());
}

TOthersBeastSingleInfo::TOthersBeastSingleInfo(const TOthersBeastSingleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOthersBeastSingleInfo)
}

void TOthersBeastSingleInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  beastinfo_ = NULL;
  assistbeastinfo_ = NULL;
  assistbeastinfopos2_ = NULL;
  assistbeastidpurplegoldpos_ = NULL;
  assistbeastcontractinfopos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOthersBeastSingleInfo::~TOthersBeastSingleInfo() {
  // @@protoc_insertion_point(destructor:pb.TOthersBeastSingleInfo)
  SharedDtor();
}

void TOthersBeastSingleInfo::SharedDtor() {
  if (this != default_instance_) {
    delete beastinfo_;
    delete assistbeastinfo_;
    delete assistbeastinfopos2_;
    delete assistbeastidpurplegoldpos_;
    delete assistbeastcontractinfopos_;
  }
}

void TOthersBeastSingleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOthersBeastSingleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOthersBeastSingleInfo_descriptor_;
}

const TOthersBeastSingleInfo& TOthersBeastSingleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TOthersBeastSingleInfo* TOthersBeastSingleInfo::default_instance_ = NULL;

TOthersBeastSingleInfo* TOthersBeastSingleInfo::New() const {
  return new TOthersBeastSingleInfo;
}

void TOthersBeastSingleInfo::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    pos_ = 0u;
    if (has_beastinfo()) {
      if (beastinfo_ != NULL) beastinfo_->::pb::TBeastSingleInfo::Clear();
    }
    if (has_assistbeastinfo()) {
      if (assistbeastinfo_ != NULL) assistbeastinfo_->::pb::TBeastSingleInfo::Clear();
    }
    if (has_assistbeastinfopos2()) {
      if (assistbeastinfopos2_ != NULL) assistbeastinfopos2_->::pb::TBeastSingleInfo::Clear();
    }
    if (has_assistbeastidpurplegoldpos()) {
      if (assistbeastidpurplegoldpos_ != NULL) assistbeastidpurplegoldpos_->::pb::TBeastSingleInfo::Clear();
    }
    if (has_assistbeastcontractinfopos()) {
      if (assistbeastcontractinfopos_ != NULL) assistbeastcontractinfopos_->::pb::TBeastSingleInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOthersBeastSingleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOthersBeastSingleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BeastInfo;
        break;
      }

      // optional .pb.TBeastSingleInfo BeastInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_BeastInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_beastinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AssistBeastInfo;
        break;
      }

      // optional .pb.TBeastSingleInfo AssistBeastInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_AssistBeastInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assistbeastinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_AssistBeastInfoPos2;
        break;
      }

      // optional .pb.TBeastSingleInfo AssistBeastInfoPos2 = 4;
      case 4: {
        if (tag == 34) {
         parse_AssistBeastInfoPos2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assistbeastinfopos2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AssistBeastIdPurpleGoldPos;
        break;
      }

      // optional .pb.TBeastSingleInfo AssistBeastIdPurpleGoldPos = 5;
      case 5: {
        if (tag == 42) {
         parse_AssistBeastIdPurpleGoldPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assistbeastidpurplegoldpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_AssistBeastContractInfoPos;
        break;
      }

      // optional .pb.TBeastSingleInfo AssistBeastContractInfoPos = 6;
      case 6: {
        if (tag == 50) {
         parse_AssistBeastContractInfoPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assistbeastcontractinfopos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOthersBeastSingleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOthersBeastSingleInfo)
  return false;
#undef DO_
}

void TOthersBeastSingleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOthersBeastSingleInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional .pb.TBeastSingleInfo BeastInfo = 2;
  if (has_beastinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->beastinfo(), output);
  }

  // optional .pb.TBeastSingleInfo AssistBeastInfo = 3;
  if (has_assistbeastinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->assistbeastinfo(), output);
  }

  // optional .pb.TBeastSingleInfo AssistBeastInfoPos2 = 4;
  if (has_assistbeastinfopos2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->assistbeastinfopos2(), output);
  }

  // optional .pb.TBeastSingleInfo AssistBeastIdPurpleGoldPos = 5;
  if (has_assistbeastidpurplegoldpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->assistbeastidpurplegoldpos(), output);
  }

  // optional .pb.TBeastSingleInfo AssistBeastContractInfoPos = 6;
  if (has_assistbeastcontractinfopos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->assistbeastcontractinfopos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOthersBeastSingleInfo)
}

::google::protobuf::uint8* TOthersBeastSingleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOthersBeastSingleInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional .pb.TBeastSingleInfo BeastInfo = 2;
  if (has_beastinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->beastinfo(), target);
  }

  // optional .pb.TBeastSingleInfo AssistBeastInfo = 3;
  if (has_assistbeastinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->assistbeastinfo(), target);
  }

  // optional .pb.TBeastSingleInfo AssistBeastInfoPos2 = 4;
  if (has_assistbeastinfopos2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->assistbeastinfopos2(), target);
  }

  // optional .pb.TBeastSingleInfo AssistBeastIdPurpleGoldPos = 5;
  if (has_assistbeastidpurplegoldpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->assistbeastidpurplegoldpos(), target);
  }

  // optional .pb.TBeastSingleInfo AssistBeastContractInfoPos = 6;
  if (has_assistbeastcontractinfopos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->assistbeastcontractinfopos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOthersBeastSingleInfo)
  return target;
}

int TOthersBeastSingleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.TBeastSingleInfo BeastInfo = 2;
    if (has_beastinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->beastinfo());
    }

    // optional .pb.TBeastSingleInfo AssistBeastInfo = 3;
    if (has_assistbeastinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assistbeastinfo());
    }

    // optional .pb.TBeastSingleInfo AssistBeastInfoPos2 = 4;
    if (has_assistbeastinfopos2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assistbeastinfopos2());
    }

    // optional .pb.TBeastSingleInfo AssistBeastIdPurpleGoldPos = 5;
    if (has_assistbeastidpurplegoldpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assistbeastidpurplegoldpos());
    }

    // optional .pb.TBeastSingleInfo AssistBeastContractInfoPos = 6;
    if (has_assistbeastcontractinfopos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assistbeastcontractinfopos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOthersBeastSingleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOthersBeastSingleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOthersBeastSingleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOthersBeastSingleInfo::MergeFrom(const TOthersBeastSingleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_beastinfo()) {
      mutable_beastinfo()->::pb::TBeastSingleInfo::MergeFrom(from.beastinfo());
    }
    if (from.has_assistbeastinfo()) {
      mutable_assistbeastinfo()->::pb::TBeastSingleInfo::MergeFrom(from.assistbeastinfo());
    }
    if (from.has_assistbeastinfopos2()) {
      mutable_assistbeastinfopos2()->::pb::TBeastSingleInfo::MergeFrom(from.assistbeastinfopos2());
    }
    if (from.has_assistbeastidpurplegoldpos()) {
      mutable_assistbeastidpurplegoldpos()->::pb::TBeastSingleInfo::MergeFrom(from.assistbeastidpurplegoldpos());
    }
    if (from.has_assistbeastcontractinfopos()) {
      mutable_assistbeastcontractinfopos()->::pb::TBeastSingleInfo::MergeFrom(from.assistbeastcontractinfopos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOthersBeastSingleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOthersBeastSingleInfo::CopyFrom(const TOthersBeastSingleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOthersBeastSingleInfo::IsInitialized() const {

  return true;
}

void TOthersBeastSingleInfo::Swap(TOthersBeastSingleInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(beastinfo_, other->beastinfo_);
    std::swap(assistbeastinfo_, other->assistbeastinfo_);
    std::swap(assistbeastinfopos2_, other->assistbeastinfopos2_);
    std::swap(assistbeastidpurplegoldpos_, other->assistbeastidpurplegoldpos_);
    std::swap(assistbeastcontractinfopos_, other->assistbeastcontractinfopos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOthersBeastSingleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOthersBeastSingleInfo_descriptor_;
  metadata.reflection = TOthersBeastSingleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOthersBeastInfo::kSingleBeastInfoArrFieldNumber;
const int TOthersBeastInfo::kBeastArmArrFieldNumber;
#endif  // !_MSC_VER

TOthersBeastInfo::TOthersBeastInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOthersBeastInfo)
}

void TOthersBeastInfo::InitAsDefaultInstance() {
}

TOthersBeastInfo::TOthersBeastInfo(const TOthersBeastInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOthersBeastInfo)
}

void TOthersBeastInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOthersBeastInfo::~TOthersBeastInfo() {
  // @@protoc_insertion_point(destructor:pb.TOthersBeastInfo)
  SharedDtor();
}

void TOthersBeastInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOthersBeastInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOthersBeastInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOthersBeastInfo_descriptor_;
}

const TOthersBeastInfo& TOthersBeastInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TOthersBeastInfo* TOthersBeastInfo::default_instance_ = NULL;

TOthersBeastInfo* TOthersBeastInfo::New() const {
  return new TOthersBeastInfo;
}

void TOthersBeastInfo::Clear() {
  singlebeastinfoarr_.Clear();
  beastarmarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOthersBeastInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOthersBeastInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TOthersBeastSingleInfo SingleBeastInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_SingleBeastInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_singlebeastinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_SingleBeastInfoArr;
        if (input->ExpectTag(18)) goto parse_BeastArmArr;
        break;
      }

      // repeated .pb.TBeastArmItem BeastArmArr = 2;
      case 2: {
        if (tag == 18) {
         parse_BeastArmArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beastarmarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BeastArmArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOthersBeastInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOthersBeastInfo)
  return false;
#undef DO_
}

void TOthersBeastInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOthersBeastInfo)
  // repeated .pb.TOthersBeastSingleInfo SingleBeastInfoArr = 1;
  for (int i = 0; i < this->singlebeastinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlebeastinfoarr(i), output);
  }

  // repeated .pb.TBeastArmItem BeastArmArr = 2;
  for (int i = 0; i < this->beastarmarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->beastarmarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOthersBeastInfo)
}

::google::protobuf::uint8* TOthersBeastInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOthersBeastInfo)
  // repeated .pb.TOthersBeastSingleInfo SingleBeastInfoArr = 1;
  for (int i = 0; i < this->singlebeastinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlebeastinfoarr(i), target);
  }

  // repeated .pb.TBeastArmItem BeastArmArr = 2;
  for (int i = 0; i < this->beastarmarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->beastarmarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOthersBeastInfo)
  return target;
}

int TOthersBeastInfo::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TOthersBeastSingleInfo SingleBeastInfoArr = 1;
  total_size += 1 * this->singlebeastinfoarr_size();
  for (int i = 0; i < this->singlebeastinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->singlebeastinfoarr(i));
  }

  // repeated .pb.TBeastArmItem BeastArmArr = 2;
  total_size += 1 * this->beastarmarr_size();
  for (int i = 0; i < this->beastarmarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beastarmarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOthersBeastInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOthersBeastInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOthersBeastInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOthersBeastInfo::MergeFrom(const TOthersBeastInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  singlebeastinfoarr_.MergeFrom(from.singlebeastinfoarr_);
  beastarmarr_.MergeFrom(from.beastarmarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOthersBeastInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOthersBeastInfo::CopyFrom(const TOthersBeastInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOthersBeastInfo::IsInitialized() const {

  return true;
}

void TOthersBeastInfo::Swap(TOthersBeastInfo* other) {
  if (other != this) {
    singlebeastinfoarr_.Swap(&other->singlebeastinfoarr_);
    beastarmarr_.Swap(&other->beastarmarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOthersBeastInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOthersBeastInfo_descriptor_;
  metadata.reflection = TOthersBeastInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastFosterReq::kBeastIdFieldNumber;
const int TBeastFosterReq::kFosterNumFieldNumber;
#endif  // !_MSC_VER

TBeastFosterReq::TBeastFosterReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastFosterReq)
}

void TBeastFosterReq::InitAsDefaultInstance() {
}

TBeastFosterReq::TBeastFosterReq(const TBeastFosterReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastFosterReq)
}

void TBeastFosterReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  fosternum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastFosterReq::~TBeastFosterReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastFosterReq)
  SharedDtor();
}

void TBeastFosterReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastFosterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastFosterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastFosterReq_descriptor_;
}

const TBeastFosterReq& TBeastFosterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastFosterReq* TBeastFosterReq::default_instance_ = NULL;

TBeastFosterReq* TBeastFosterReq::New() const {
  return new TBeastFosterReq;
}

void TBeastFosterReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastFosterReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(beastid_, fosternum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastFosterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastFosterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FosterNum;
        break;
      }

      // optional uint32 FosterNum = 2;
      case 2: {
        if (tag == 16) {
         parse_FosterNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fosternum_)));
          set_has_fosternum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastFosterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastFosterReq)
  return false;
#undef DO_
}

void TBeastFosterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastFosterReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // optional uint32 FosterNum = 2;
  if (has_fosternum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fosternum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastFosterReq)
}

::google::protobuf::uint8* TBeastFosterReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastFosterReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // optional uint32 FosterNum = 2;
  if (has_fosternum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fosternum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastFosterReq)
  return target;
}

int TBeastFosterReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 FosterNum = 2;
    if (has_fosternum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fosternum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastFosterReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastFosterReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastFosterReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastFosterReq::MergeFrom(const TBeastFosterReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_fosternum()) {
      set_fosternum(from.fosternum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastFosterReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastFosterReq::CopyFrom(const TBeastFosterReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastFosterReq::IsInitialized() const {

  return true;
}

void TBeastFosterReq::Swap(TBeastFosterReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(fosternum_, other->fosternum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastFosterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastFosterReq_descriptor_;
  metadata.reflection = TBeastFosterReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastFosterRsp::kFosterAttrArrFieldNumber;
const int TBeastFosterRsp::kFosterNumFieldNumber;
#endif  // !_MSC_VER

TBeastFosterRsp::TBeastFosterRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastFosterRsp)
}

void TBeastFosterRsp::InitAsDefaultInstance() {
}

TBeastFosterRsp::TBeastFosterRsp(const TBeastFosterRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastFosterRsp)
}

void TBeastFosterRsp::SharedCtor() {
  _cached_size_ = 0;
  fosternum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastFosterRsp::~TBeastFosterRsp() {
  // @@protoc_insertion_point(destructor:pb.TBeastFosterRsp)
  SharedDtor();
}

void TBeastFosterRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastFosterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastFosterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastFosterRsp_descriptor_;
}

const TBeastFosterRsp& TBeastFosterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastFosterRsp* TBeastFosterRsp::default_instance_ = NULL;

TBeastFosterRsp* TBeastFosterRsp::New() const {
  return new TBeastFosterRsp;
}

void TBeastFosterRsp::Clear() {
  fosternum_ = 0u;
  fosterattrarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastFosterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastFosterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBeastFosterAttr FosterAttrArr = 1;
      case 1: {
        if (tag == 10) {
         parse_FosterAttrArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fosterattrarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_FosterAttrArr;
        if (input->ExpectTag(16)) goto parse_FosterNum;
        break;
      }

      // optional uint32 FosterNum = 2;
      case 2: {
        if (tag == 16) {
         parse_FosterNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fosternum_)));
          set_has_fosternum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastFosterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastFosterRsp)
  return false;
#undef DO_
}

void TBeastFosterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastFosterRsp)
  // repeated .pb.TBeastFosterAttr FosterAttrArr = 1;
  for (int i = 0; i < this->fosterattrarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fosterattrarr(i), output);
  }

  // optional uint32 FosterNum = 2;
  if (has_fosternum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fosternum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastFosterRsp)
}

::google::protobuf::uint8* TBeastFosterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastFosterRsp)
  // repeated .pb.TBeastFosterAttr FosterAttrArr = 1;
  for (int i = 0; i < this->fosterattrarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fosterattrarr(i), target);
  }

  // optional uint32 FosterNum = 2;
  if (has_fosternum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fosternum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastFosterRsp)
  return target;
}

int TBeastFosterRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 FosterNum = 2;
    if (has_fosternum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fosternum());
    }

  }
  // repeated .pb.TBeastFosterAttr FosterAttrArr = 1;
  total_size += 1 * this->fosterattrarr_size();
  for (int i = 0; i < this->fosterattrarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fosterattrarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastFosterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastFosterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastFosterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastFosterRsp::MergeFrom(const TBeastFosterRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fosterattrarr_.MergeFrom(from.fosterattrarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_fosternum()) {
      set_fosternum(from.fosternum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastFosterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastFosterRsp::CopyFrom(const TBeastFosterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastFosterRsp::IsInitialized() const {

  return true;
}

void TBeastFosterRsp::Swap(TBeastFosterRsp* other) {
  if (other != this) {
    fosterattrarr_.Swap(&other->fosterattrarr_);
    std::swap(fosternum_, other->fosternum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastFosterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastFosterRsp_descriptor_;
  metadata.reflection = TBeastFosterRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastFosterLevelUpReq::kBeastIdFieldNumber;
#endif  // !_MSC_VER

TBeastFosterLevelUpReq::TBeastFosterLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastFosterLevelUpReq)
}

void TBeastFosterLevelUpReq::InitAsDefaultInstance() {
}

TBeastFosterLevelUpReq::TBeastFosterLevelUpReq(const TBeastFosterLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastFosterLevelUpReq)
}

void TBeastFosterLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastFosterLevelUpReq::~TBeastFosterLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastFosterLevelUpReq)
  SharedDtor();
}

void TBeastFosterLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastFosterLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastFosterLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastFosterLevelUpReq_descriptor_;
}

const TBeastFosterLevelUpReq& TBeastFosterLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastFosterLevelUpReq* TBeastFosterLevelUpReq::default_instance_ = NULL;

TBeastFosterLevelUpReq* TBeastFosterLevelUpReq::New() const {
  return new TBeastFosterLevelUpReq;
}

void TBeastFosterLevelUpReq::Clear() {
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastFosterLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastFosterLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastFosterLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastFosterLevelUpReq)
  return false;
#undef DO_
}

void TBeastFosterLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastFosterLevelUpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastFosterLevelUpReq)
}

::google::protobuf::uint8* TBeastFosterLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastFosterLevelUpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastFosterLevelUpReq)
  return target;
}

int TBeastFosterLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastFosterLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastFosterLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastFosterLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastFosterLevelUpReq::MergeFrom(const TBeastFosterLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastFosterLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastFosterLevelUpReq::CopyFrom(const TBeastFosterLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastFosterLevelUpReq::IsInitialized() const {

  return true;
}

void TBeastFosterLevelUpReq::Swap(TBeastFosterLevelUpReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastFosterLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastFosterLevelUpReq_descriptor_;
  metadata.reflection = TBeastFosterLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastStarLevelUpReq::kBeastIdFieldNumber;
const int TBeastStarLevelUpReq::kCostUniversalFragNumFieldNumber;
#endif  // !_MSC_VER

TBeastStarLevelUpReq::TBeastStarLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastStarLevelUpReq)
}

void TBeastStarLevelUpReq::InitAsDefaultInstance() {
}

TBeastStarLevelUpReq::TBeastStarLevelUpReq(const TBeastStarLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastStarLevelUpReq)
}

void TBeastStarLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  costuniversalfragnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastStarLevelUpReq::~TBeastStarLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastStarLevelUpReq)
  SharedDtor();
}

void TBeastStarLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastStarLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastStarLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastStarLevelUpReq_descriptor_;
}

const TBeastStarLevelUpReq& TBeastStarLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastStarLevelUpReq* TBeastStarLevelUpReq::default_instance_ = NULL;

TBeastStarLevelUpReq* TBeastStarLevelUpReq::New() const {
  return new TBeastStarLevelUpReq;
}

void TBeastStarLevelUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastStarLevelUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(beastid_, costuniversalfragnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastStarLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastStarLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CostUniversalFragNum;
        break;
      }

      // optional uint32 CostUniversalFragNum = 2;
      case 2: {
        if (tag == 16) {
         parse_CostUniversalFragNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costuniversalfragnum_)));
          set_has_costuniversalfragnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastStarLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastStarLevelUpReq)
  return false;
#undef DO_
}

void TBeastStarLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastStarLevelUpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // optional uint32 CostUniversalFragNum = 2;
  if (has_costuniversalfragnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->costuniversalfragnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastStarLevelUpReq)
}

::google::protobuf::uint8* TBeastStarLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastStarLevelUpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // optional uint32 CostUniversalFragNum = 2;
  if (has_costuniversalfragnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->costuniversalfragnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastStarLevelUpReq)
  return target;
}

int TBeastStarLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 CostUniversalFragNum = 2;
    if (has_costuniversalfragnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->costuniversalfragnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastStarLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastStarLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastStarLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastStarLevelUpReq::MergeFrom(const TBeastStarLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_costuniversalfragnum()) {
      set_costuniversalfragnum(from.costuniversalfragnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastStarLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastStarLevelUpReq::CopyFrom(const TBeastStarLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastStarLevelUpReq::IsInitialized() const {

  return true;
}

void TBeastStarLevelUpReq::Swap(TBeastStarLevelUpReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(costuniversalfragnum_, other->costuniversalfragnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastStarLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastStarLevelUpReq_descriptor_;
  metadata.reflection = TBeastStarLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastEquipItemReq::kBeastIdFieldNumber;
const int TBeastEquipItemReq::kPosFieldNumber;
const int TBeastEquipItemReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TBeastEquipItemReq::TBeastEquipItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastEquipItemReq)
}

void TBeastEquipItemReq::InitAsDefaultInstance() {
}

TBeastEquipItemReq::TBeastEquipItemReq(const TBeastEquipItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastEquipItemReq)
}

void TBeastEquipItemReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  pos_ = 0u;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastEquipItemReq::~TBeastEquipItemReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastEquipItemReq)
  SharedDtor();
}

void TBeastEquipItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastEquipItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastEquipItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastEquipItemReq_descriptor_;
}

const TBeastEquipItemReq& TBeastEquipItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastEquipItemReq* TBeastEquipItemReq::default_instance_ = NULL;

TBeastEquipItemReq* TBeastEquipItemReq::New() const {
  return new TBeastEquipItemReq;
}

void TBeastEquipItemReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastEquipItemReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(beastid_, itemid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastEquipItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastEquipItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemId;
        break;
      }

      // optional uint32 ItemId = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastEquipItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastEquipItemReq)
  return false;
#undef DO_
}

void TBeastEquipItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastEquipItemReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  // optional uint32 ItemId = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastEquipItemReq)
}

::google::protobuf::uint8* TBeastEquipItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastEquipItemReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  // optional uint32 ItemId = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastEquipItemReq)
  return target;
}

int TBeastEquipItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 ItemId = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastEquipItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastEquipItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastEquipItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastEquipItemReq::MergeFrom(const TBeastEquipItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastEquipItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastEquipItemReq::CopyFrom(const TBeastEquipItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastEquipItemReq::IsInitialized() const {

  return true;
}

void TBeastEquipItemReq::Swap(TBeastEquipItemReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(pos_, other->pos_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastEquipItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastEquipItemReq_descriptor_;
  metadata.reflection = TBeastEquipItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastEquipBeastReq::kPosFieldNumber;
const int TBeastEquipBeastReq::kBeastIdFieldNumber;
#endif  // !_MSC_VER

TBeastEquipBeastReq::TBeastEquipBeastReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastEquipBeastReq)
}

void TBeastEquipBeastReq::InitAsDefaultInstance() {
}

TBeastEquipBeastReq::TBeastEquipBeastReq(const TBeastEquipBeastReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastEquipBeastReq)
}

void TBeastEquipBeastReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastEquipBeastReq::~TBeastEquipBeastReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastEquipBeastReq)
  SharedDtor();
}

void TBeastEquipBeastReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastEquipBeastReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastEquipBeastReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastEquipBeastReq_descriptor_;
}

const TBeastEquipBeastReq& TBeastEquipBeastReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastEquipBeastReq* TBeastEquipBeastReq::default_instance_ = NULL;

TBeastEquipBeastReq* TBeastEquipBeastReq::New() const {
  return new TBeastEquipBeastReq;
}

void TBeastEquipBeastReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastEquipBeastReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, beastid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastEquipBeastReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastEquipBeastReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeastId;
        break;
      }

      // optional uint32 BeastId = 2;
      case 2: {
        if (tag == 16) {
         parse_BeastId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastEquipBeastReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastEquipBeastReq)
  return false;
#undef DO_
}

void TBeastEquipBeastReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastEquipBeastReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 BeastId = 2;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beastid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastEquipBeastReq)
}

::google::protobuf::uint8* TBeastEquipBeastReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastEquipBeastReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 BeastId = 2;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beastid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastEquipBeastReq)
  return target;
}

int TBeastEquipBeastReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 BeastId = 2;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastEquipBeastReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastEquipBeastReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastEquipBeastReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastEquipBeastReq::MergeFrom(const TBeastEquipBeastReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastEquipBeastReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastEquipBeastReq::CopyFrom(const TBeastEquipBeastReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastEquipBeastReq::IsInitialized() const {

  return true;
}

void TBeastEquipBeastReq::Swap(TBeastEquipBeastReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(beastid_, other->beastid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastEquipBeastReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastEquipBeastReq_descriptor_;
  metadata.reflection = TBeastEquipBeastReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastCombineBeastReq::kTidFieldNumber;
#endif  // !_MSC_VER

TBeastCombineBeastReq::TBeastCombineBeastReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastCombineBeastReq)
}

void TBeastCombineBeastReq::InitAsDefaultInstance() {
}

TBeastCombineBeastReq::TBeastCombineBeastReq(const TBeastCombineBeastReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastCombineBeastReq)
}

void TBeastCombineBeastReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastCombineBeastReq::~TBeastCombineBeastReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastCombineBeastReq)
  SharedDtor();
}

void TBeastCombineBeastReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastCombineBeastReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastCombineBeastReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastCombineBeastReq_descriptor_;
}

const TBeastCombineBeastReq& TBeastCombineBeastReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastCombineBeastReq* TBeastCombineBeastReq::default_instance_ = NULL;

TBeastCombineBeastReq* TBeastCombineBeastReq::New() const {
  return new TBeastCombineBeastReq;
}

void TBeastCombineBeastReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastCombineBeastReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastCombineBeastReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastCombineBeastReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastCombineBeastReq)
  return false;
#undef DO_
}

void TBeastCombineBeastReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastCombineBeastReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastCombineBeastReq)
}

::google::protobuf::uint8* TBeastCombineBeastReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastCombineBeastReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastCombineBeastReq)
  return target;
}

int TBeastCombineBeastReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastCombineBeastReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastCombineBeastReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastCombineBeastReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastCombineBeastReq::MergeFrom(const TBeastCombineBeastReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastCombineBeastReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastCombineBeastReq::CopyFrom(const TBeastCombineBeastReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastCombineBeastReq::IsInitialized() const {

  return true;
}

void TBeastCombineBeastReq::Swap(TBeastCombineBeastReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastCombineBeastReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastCombineBeastReq_descriptor_;
  metadata.reflection = TBeastCombineBeastReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSetAssistBeastReq::kPosFieldNumber;
const int TBeastSetAssistBeastReq::kBeastIdFieldNumber;
const int TBeastSetAssistBeastReq::kBeastIdPos2FieldNumber;
const int TBeastSetAssistBeastReq::kBeastIdPurpleGoldPosFieldNumber;
#endif  // !_MSC_VER

TBeastSetAssistBeastReq::TBeastSetAssistBeastReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSetAssistBeastReq)
}

void TBeastSetAssistBeastReq::InitAsDefaultInstance() {
}

TBeastSetAssistBeastReq::TBeastSetAssistBeastReq(const TBeastSetAssistBeastReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSetAssistBeastReq)
}

void TBeastSetAssistBeastReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  beastid_ = 0u;
  beastidpos2_ = 0u;
  beastidpurplegoldpos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSetAssistBeastReq::~TBeastSetAssistBeastReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastSetAssistBeastReq)
  SharedDtor();
}

void TBeastSetAssistBeastReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSetAssistBeastReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSetAssistBeastReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSetAssistBeastReq_descriptor_;
}

const TBeastSetAssistBeastReq& TBeastSetAssistBeastReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSetAssistBeastReq* TBeastSetAssistBeastReq::default_instance_ = NULL;

TBeastSetAssistBeastReq* TBeastSetAssistBeastReq::New() const {
  return new TBeastSetAssistBeastReq;
}

void TBeastSetAssistBeastReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeastSetAssistBeastReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, beastidpurplegoldpos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSetAssistBeastReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSetAssistBeastReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeastId;
        break;
      }

      // optional uint32 BeastId = 2;
      case 2: {
        if (tag == 16) {
         parse_BeastId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BeastIdPos2;
        break;
      }

      // optional uint32 BeastIdPos2 = 3;
      case 3: {
        if (tag == 24) {
         parse_BeastIdPos2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastidpos2_)));
          set_has_beastidpos2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BeastIdPurpleGoldPos;
        break;
      }

      // optional uint32 BeastIdPurpleGoldPos = 4;
      case 4: {
        if (tag == 32) {
         parse_BeastIdPurpleGoldPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastidpurplegoldpos_)));
          set_has_beastidpurplegoldpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSetAssistBeastReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSetAssistBeastReq)
  return false;
#undef DO_
}

void TBeastSetAssistBeastReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSetAssistBeastReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 BeastId = 2;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beastid(), output);
  }

  // optional uint32 BeastIdPos2 = 3;
  if (has_beastidpos2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->beastidpos2(), output);
  }

  // optional uint32 BeastIdPurpleGoldPos = 4;
  if (has_beastidpurplegoldpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->beastidpurplegoldpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSetAssistBeastReq)
}

::google::protobuf::uint8* TBeastSetAssistBeastReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSetAssistBeastReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 BeastId = 2;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beastid(), target);
  }

  // optional uint32 BeastIdPos2 = 3;
  if (has_beastidpos2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->beastidpos2(), target);
  }

  // optional uint32 BeastIdPurpleGoldPos = 4;
  if (has_beastidpurplegoldpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->beastidpurplegoldpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSetAssistBeastReq)
  return target;
}

int TBeastSetAssistBeastReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 BeastId = 2;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

    // optional uint32 BeastIdPos2 = 3;
    if (has_beastidpos2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastidpos2());
    }

    // optional uint32 BeastIdPurpleGoldPos = 4;
    if (has_beastidpurplegoldpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastidpurplegoldpos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSetAssistBeastReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSetAssistBeastReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSetAssistBeastReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSetAssistBeastReq::MergeFrom(const TBeastSetAssistBeastReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
    if (from.has_beastidpos2()) {
      set_beastidpos2(from.beastidpos2());
    }
    if (from.has_beastidpurplegoldpos()) {
      set_beastidpurplegoldpos(from.beastidpurplegoldpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSetAssistBeastReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSetAssistBeastReq::CopyFrom(const TBeastSetAssistBeastReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSetAssistBeastReq::IsInitialized() const {

  return true;
}

void TBeastSetAssistBeastReq::Swap(TBeastSetAssistBeastReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(beastid_, other->beastid_);
    std::swap(beastidpos2_, other->beastidpos2_);
    std::swap(beastidpurplegoldpos_, other->beastidpurplegoldpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSetAssistBeastReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSetAssistBeastReq_descriptor_;
  metadata.reflection = TBeastSetAssistBeastReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastPurpleGoldLevelUpReq::kBeastIdFieldNumber;
#endif  // !_MSC_VER

TBeastPurpleGoldLevelUpReq::TBeastPurpleGoldLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastPurpleGoldLevelUpReq)
}

void TBeastPurpleGoldLevelUpReq::InitAsDefaultInstance() {
}

TBeastPurpleGoldLevelUpReq::TBeastPurpleGoldLevelUpReq(const TBeastPurpleGoldLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastPurpleGoldLevelUpReq)
}

void TBeastPurpleGoldLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastPurpleGoldLevelUpReq::~TBeastPurpleGoldLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastPurpleGoldLevelUpReq)
  SharedDtor();
}

void TBeastPurpleGoldLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastPurpleGoldLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastPurpleGoldLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastPurpleGoldLevelUpReq_descriptor_;
}

const TBeastPurpleGoldLevelUpReq& TBeastPurpleGoldLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastPurpleGoldLevelUpReq* TBeastPurpleGoldLevelUpReq::default_instance_ = NULL;

TBeastPurpleGoldLevelUpReq* TBeastPurpleGoldLevelUpReq::New() const {
  return new TBeastPurpleGoldLevelUpReq;
}

void TBeastPurpleGoldLevelUpReq::Clear() {
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastPurpleGoldLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastPurpleGoldLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastPurpleGoldLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastPurpleGoldLevelUpReq)
  return false;
#undef DO_
}

void TBeastPurpleGoldLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastPurpleGoldLevelUpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastPurpleGoldLevelUpReq)
}

::google::protobuf::uint8* TBeastPurpleGoldLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastPurpleGoldLevelUpReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastPurpleGoldLevelUpReq)
  return target;
}

int TBeastPurpleGoldLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastPurpleGoldLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastPurpleGoldLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastPurpleGoldLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastPurpleGoldLevelUpReq::MergeFrom(const TBeastPurpleGoldLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastPurpleGoldLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastPurpleGoldLevelUpReq::CopyFrom(const TBeastPurpleGoldLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastPurpleGoldLevelUpReq::IsInitialized() const {

  return true;
}

void TBeastPurpleGoldLevelUpReq::Swap(TBeastPurpleGoldLevelUpReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastPurpleGoldLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastPurpleGoldLevelUpReq_descriptor_;
  metadata.reflection = TBeastPurpleGoldLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSoulSaveIllustrationReq::kBeastIdFieldNumber;
const int TBeastSoulSaveIllustrationReq::kNodeInfoArrFieldNumber;
#endif  // !_MSC_VER

TBeastSoulSaveIllustrationReq::TBeastSoulSaveIllustrationReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSoulSaveIllustrationReq)
}

void TBeastSoulSaveIllustrationReq::InitAsDefaultInstance() {
}

TBeastSoulSaveIllustrationReq::TBeastSoulSaveIllustrationReq(const TBeastSoulSaveIllustrationReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSoulSaveIllustrationReq)
}

void TBeastSoulSaveIllustrationReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSoulSaveIllustrationReq::~TBeastSoulSaveIllustrationReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastSoulSaveIllustrationReq)
  SharedDtor();
}

void TBeastSoulSaveIllustrationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSoulSaveIllustrationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSoulSaveIllustrationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSoulSaveIllustrationReq_descriptor_;
}

const TBeastSoulSaveIllustrationReq& TBeastSoulSaveIllustrationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSoulSaveIllustrationReq* TBeastSoulSaveIllustrationReq::default_instance_ = NULL;

TBeastSoulSaveIllustrationReq* TBeastSoulSaveIllustrationReq::New() const {
  return new TBeastSoulSaveIllustrationReq;
}

void TBeastSoulSaveIllustrationReq::Clear() {
  beastid_ = 0u;
  nodeinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSoulSaveIllustrationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSoulSaveIllustrationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NodeInfoArr;
        break;
      }

      // repeated .pb.TBeastSoulLocation NodeInfoArr = 2;
      case 2: {
        if (tag == 18) {
         parse_NodeInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodeinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NodeInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSoulSaveIllustrationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSoulSaveIllustrationReq)
  return false;
#undef DO_
}

void TBeastSoulSaveIllustrationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSoulSaveIllustrationReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // repeated .pb.TBeastSoulLocation NodeInfoArr = 2;
  for (int i = 0; i < this->nodeinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nodeinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSoulSaveIllustrationReq)
}

::google::protobuf::uint8* TBeastSoulSaveIllustrationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSoulSaveIllustrationReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // repeated .pb.TBeastSoulLocation NodeInfoArr = 2;
  for (int i = 0; i < this->nodeinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->nodeinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSoulSaveIllustrationReq)
  return target;
}

int TBeastSoulSaveIllustrationReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

  }
  // repeated .pb.TBeastSoulLocation NodeInfoArr = 2;
  total_size += 1 * this->nodeinfoarr_size();
  for (int i = 0; i < this->nodeinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodeinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSoulSaveIllustrationReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSoulSaveIllustrationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSoulSaveIllustrationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSoulSaveIllustrationReq::MergeFrom(const TBeastSoulSaveIllustrationReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  nodeinfoarr_.MergeFrom(from.nodeinfoarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSoulSaveIllustrationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSoulSaveIllustrationReq::CopyFrom(const TBeastSoulSaveIllustrationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSoulSaveIllustrationReq::IsInitialized() const {

  return true;
}

void TBeastSoulSaveIllustrationReq::Swap(TBeastSoulSaveIllustrationReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    nodeinfoarr_.Swap(&other->nodeinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSoulSaveIllustrationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSoulSaveIllustrationReq_descriptor_;
  metadata.reflection = TBeastSoulSaveIllustrationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeastSoulGenerateSoulReq::kBeastIdFieldNumber;
const int TBeastSoulGenerateSoulReq::kCosItemArrayFieldNumber;
#endif  // !_MSC_VER

TBeastSoulGenerateSoulReq::TBeastSoulGenerateSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeastSoulGenerateSoulReq)
}

void TBeastSoulGenerateSoulReq::InitAsDefaultInstance() {
}

TBeastSoulGenerateSoulReq::TBeastSoulGenerateSoulReq(const TBeastSoulGenerateSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeastSoulGenerateSoulReq)
}

void TBeastSoulGenerateSoulReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeastSoulGenerateSoulReq::~TBeastSoulGenerateSoulReq() {
  // @@protoc_insertion_point(destructor:pb.TBeastSoulGenerateSoulReq)
  SharedDtor();
}

void TBeastSoulGenerateSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeastSoulGenerateSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeastSoulGenerateSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeastSoulGenerateSoulReq_descriptor_;
}

const TBeastSoulGenerateSoulReq& TBeastSoulGenerateSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TBeastSoulGenerateSoulReq* TBeastSoulGenerateSoulReq::default_instance_ = NULL;

TBeastSoulGenerateSoulReq* TBeastSoulGenerateSoulReq::New() const {
  return new TBeastSoulGenerateSoulReq;
}

void TBeastSoulGenerateSoulReq::Clear() {
  beastid_ = 0u;
  cositemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeastSoulGenerateSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeastSoulGenerateSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        break;
      }

      // repeated .pb.TSimpleItem CosItemArray = 2;
      case 2: {
        if (tag == 18) {
         parse_CosItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cositemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeastSoulGenerateSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeastSoulGenerateSoulReq)
  return false;
#undef DO_
}

void TBeastSoulGenerateSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeastSoulGenerateSoulReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cositemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeastSoulGenerateSoulReq)
}

::google::protobuf::uint8* TBeastSoulGenerateSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeastSoulGenerateSoulReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cositemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeastSoulGenerateSoulReq)
  return target;
}

int TBeastSoulGenerateSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

  }
  // repeated .pb.TSimpleItem CosItemArray = 2;
  total_size += 1 * this->cositemarray_size();
  for (int i = 0; i < this->cositemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cositemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeastSoulGenerateSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeastSoulGenerateSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeastSoulGenerateSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeastSoulGenerateSoulReq::MergeFrom(const TBeastSoulGenerateSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cositemarray_.MergeFrom(from.cositemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeastSoulGenerateSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeastSoulGenerateSoulReq::CopyFrom(const TBeastSoulGenerateSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeastSoulGenerateSoulReq::IsInitialized() const {

  return true;
}

void TBeastSoulGenerateSoulReq::Swap(TBeastSoulGenerateSoulReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    cositemarray_.Swap(&other->cositemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeastSoulGenerateSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeastSoulGenerateSoulReq_descriptor_;
  metadata.reflection = TBeastSoulGenerateSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TNewBeastNotify::kBeastArrFieldNumber;
const int TNewBeastNotify::kBeastSquadArrFieldNumber;
#endif  // !_MSC_VER

TNewBeastNotify::TNewBeastNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TNewBeastNotify)
}

void TNewBeastNotify::InitAsDefaultInstance() {
}

TNewBeastNotify::TNewBeastNotify(const TNewBeastNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TNewBeastNotify)
}

void TNewBeastNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TNewBeastNotify::~TNewBeastNotify() {
  // @@protoc_insertion_point(destructor:pb.TNewBeastNotify)
  SharedDtor();
}

void TNewBeastNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TNewBeastNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TNewBeastNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TNewBeastNotify_descriptor_;
}

const TNewBeastNotify& TNewBeastNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeast_2eproto();
  return *default_instance_;
}

TNewBeastNotify* TNewBeastNotify::default_instance_ = NULL;

TNewBeastNotify* TNewBeastNotify::New() const {
  return new TNewBeastNotify;
}

void TNewBeastNotify::Clear() {
  beastarr_.Clear();
  beastsquadarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TNewBeastNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TNewBeastNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBeastSingleInfo BeastArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BeastArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beastarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BeastArr;
        if (input->ExpectTag(18)) goto parse_BeastSquadArr;
        break;
      }

      // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
      case 2: {
        if (tag == 18) {
         parse_BeastSquadArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beastsquadarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BeastSquadArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TNewBeastNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TNewBeastNotify)
  return false;
#undef DO_
}

void TNewBeastNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TNewBeastNotify)
  // repeated .pb.TBeastSingleInfo BeastArr = 1;
  for (int i = 0; i < this->beastarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->beastarr(i), output);
  }

  // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
  for (int i = 0; i < this->beastsquadarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->beastsquadarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TNewBeastNotify)
}

::google::protobuf::uint8* TNewBeastNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TNewBeastNotify)
  // repeated .pb.TBeastSingleInfo BeastArr = 1;
  for (int i = 0; i < this->beastarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->beastarr(i), target);
  }

  // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
  for (int i = 0; i < this->beastsquadarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->beastsquadarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TNewBeastNotify)
  return target;
}

int TNewBeastNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBeastSingleInfo BeastArr = 1;
  total_size += 1 * this->beastarr_size();
  for (int i = 0; i < this->beastarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beastarr(i));
  }

  // repeated .pb.TBeastSquadPosInfo BeastSquadArr = 2;
  total_size += 1 * this->beastsquadarr_size();
  for (int i = 0; i < this->beastsquadarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beastsquadarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TNewBeastNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TNewBeastNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TNewBeastNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TNewBeastNotify::MergeFrom(const TNewBeastNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  beastarr_.MergeFrom(from.beastarr_);
  beastsquadarr_.MergeFrom(from.beastsquadarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TNewBeastNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TNewBeastNotify::CopyFrom(const TNewBeastNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNewBeastNotify::IsInitialized() const {

  return true;
}

void TNewBeastNotify::Swap(TNewBeastNotify* other) {
  if (other != this) {
    beastarr_.Swap(&other->beastarr_);
    beastsquadarr_.Swap(&other->beastsquadarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TNewBeastNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TNewBeastNotify_descriptor_;
  metadata.reflection = TNewBeastNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
