// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/AllyWar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/AllyWar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TAllyWarExpectProcess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarExpectProcess_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarActualProcess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarActualProcess_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarAllyBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarAllyBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarUserBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarUserBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGuildContriInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGuildContriInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarAllyMatchInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarAllyMatchInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarFieldUnitInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarFieldUnitInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarFieldAreaInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarFieldAreaInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarDeployInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarDeployInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarPosInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarPosInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarFmtInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarFmtInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarFmtRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarFmtRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarUnitRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarUnitRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarAreaRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarAreaRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllianceSimpleInfoWithUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllianceSimpleInfoWithUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetBaseInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetBaseInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetMatchInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetMatchInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetFieldInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetFieldInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetWinnerInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetWinnerInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarSignRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarSignRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetFmtRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetFmtRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarSetFmtReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarSetFmtReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarSetPosReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarSetPosReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetDeployRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetDeployRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarSetDeployReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarSetDeployReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarSetOptionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarSetOptionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetRecordReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetRecordReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAllyWarGetRecordRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAllyWarGetRecordRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInnerAllyWarGetServerTeamInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInnerAllyWarGetServerTeamInfoRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EAllyWarStage_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fAllyWar_2eproto() {
  protobuf_AddDesc_net_2fAllyWar_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/AllyWar.proto");
  GOOGLE_CHECK(file != NULL);
  TAllyWarExpectProcess_descriptor_ = file->message_type(0);
  static const int TAllyWarExpectProcess_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarExpectProcess, round_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarExpectProcess, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarExpectProcess, begtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarExpectProcess, endtime_),
  };
  TAllyWarExpectProcess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarExpectProcess_descriptor_,
      TAllyWarExpectProcess::default_instance_,
      TAllyWarExpectProcess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarExpectProcess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarExpectProcess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarExpectProcess));
  TAllyWarActualProcess_descriptor_ = file->message_type(1);
  static const int TAllyWarActualProcess_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarActualProcess, expectprocess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarActualProcess, donetime_),
  };
  TAllyWarActualProcess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarActualProcess_descriptor_,
      TAllyWarActualProcess::default_instance_,
      TAllyWarActualProcess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarActualProcess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarActualProcess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarActualProcess));
  TAllyWarAllyBaseInfo_descriptor_ = file->message_type(2);
  static const int TAllyWarAllyBaseInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, allyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, fightforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, bannerbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, bannername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, bannerfigure_),
  };
  TAllyWarAllyBaseInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarAllyBaseInfo_descriptor_,
      TAllyWarAllyBaseInfo::default_instance_,
      TAllyWarAllyBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyBaseInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarAllyBaseInfo));
  TAllyWarUserBaseInfo_descriptor_ = file->message_type(3);
  static const int TAllyWarUserBaseInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUserBaseInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUserBaseInfo, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUserBaseInfo, post_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUserBaseInfo, userinfo_),
  };
  TAllyWarUserBaseInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarUserBaseInfo_descriptor_,
      TAllyWarUserBaseInfo::default_instance_,
      TAllyWarUserBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUserBaseInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUserBaseInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarUserBaseInfo));
  TAllyWarGuildContriInfo_descriptor_ = file->message_type(4);
  static const int TAllyWarGuildContriInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGuildContriInfo, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGuildContriInfo, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGuildContriInfo, contrinum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGuildContriInfo, guildinfo_),
  };
  TAllyWarGuildContriInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGuildContriInfo_descriptor_,
      TAllyWarGuildContriInfo::default_instance_,
      TAllyWarGuildContriInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGuildContriInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGuildContriInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGuildContriInfo));
  TAllyWarAllyMatchInfo_descriptor_ = file->message_type(5);
  static const int TAllyWarAllyMatchInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, matchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, atkallyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, defallyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, donetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, winallyid_),
  };
  TAllyWarAllyMatchInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarAllyMatchInfo_descriptor_,
      TAllyWarAllyMatchInfo::default_instance_,
      TAllyWarAllyMatchInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAllyMatchInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarAllyMatchInfo));
  TAllyWarFieldUnitInfo_descriptor_ = file->message_type(6);
  static const int TAllyWarFieldUnitInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldUnitInfo, posid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldUnitInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldUnitInfo, serverid_),
  };
  TAllyWarFieldUnitInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarFieldUnitInfo_descriptor_,
      TAllyWarFieldUnitInfo::default_instance_,
      TAllyWarFieldUnitInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldUnitInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldUnitInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarFieldUnitInfo));
  TAllyWarFieldAreaInfo_descriptor_ = file->message_type(7);
  static const int TAllyWarFieldAreaInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldAreaInfo, areaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldAreaInfo, arrunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldAreaInfo, donetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldAreaInfo, winallyid_),
  };
  TAllyWarFieldAreaInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarFieldAreaInfo_descriptor_,
      TAllyWarFieldAreaInfo::default_instance_,
      TAllyWarFieldAreaInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldAreaInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFieldAreaInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarFieldAreaInfo));
  TAllyWarDeployInfo_descriptor_ = file->message_type(8);
  static const int TAllyWarDeployInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarDeployInfo, areaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarDeployInfo, posid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarDeployInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarDeployInfo, serverid_),
  };
  TAllyWarDeployInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarDeployInfo_descriptor_,
      TAllyWarDeployInfo::default_instance_,
      TAllyWarDeployInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarDeployInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarDeployInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarDeployInfo));
  TAllyWarPosInfo_descriptor_ = file->message_type(9);
  static const int TAllyWarPosInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarPosInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarPosInfo, hid_),
  };
  TAllyWarPosInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarPosInfo_descriptor_,
      TAllyWarPosInfo::default_instance_,
      TAllyWarPosInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarPosInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarPosInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarPosInfo));
  TAllyWarFmtInfo_descriptor_ = file->message_type(10);
  static const int TAllyWarFmtInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtInfo, fmtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtInfo, arrpos_),
  };
  TAllyWarFmtInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarFmtInfo_descriptor_,
      TAllyWarFmtInfo::default_instance_,
      TAllyWarFmtInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarFmtInfo));
  TAllyWarFmtRecordInfo_descriptor_ = file->message_type(11);
  static const int TAllyWarFmtRecordInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtRecordInfo, fmtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtRecordInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtRecordInfo, rid_),
  };
  TAllyWarFmtRecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarFmtRecordInfo_descriptor_,
      TAllyWarFmtRecordInfo::default_instance_,
      TAllyWarFmtRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtRecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarFmtRecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarFmtRecordInfo));
  TAllyWarUnitRecordInfo_descriptor_ = file->message_type(12);
  static const int TAllyWarUnitRecordInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, atkuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, atkserverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, defuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, defserverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, winuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, contiwinnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, arrfmtrecord_),
  };
  TAllyWarUnitRecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarUnitRecordInfo_descriptor_,
      TAllyWarUnitRecordInfo::default_instance_,
      TAllyWarUnitRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarUnitRecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarUnitRecordInfo));
  TAllyWarAreaRecordInfo_descriptor_ = file->message_type(13);
  static const int TAllyWarAreaRecordInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAreaRecordInfo, areaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAreaRecordInfo, arrunitrecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAreaRecordInfo, donetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAreaRecordInfo, winallyid_),
  };
  TAllyWarAreaRecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarAreaRecordInfo_descriptor_,
      TAllyWarAreaRecordInfo::default_instance_,
      TAllyWarAreaRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAreaRecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarAreaRecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarAreaRecordInfo));
  TAllianceSimpleInfoWithUser_descriptor_ = file->message_type(14);
  static const int TAllianceSimpleInfoWithUser_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllianceSimpleInfoWithUser, alliancesimpleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllianceSimpleInfoWithUser, arruserbaseinfo_),
  };
  TAllianceSimpleInfoWithUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllianceSimpleInfoWithUser_descriptor_,
      TAllianceSimpleInfoWithUser::default_instance_,
      TAllianceSimpleInfoWithUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllianceSimpleInfoWithUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllianceSimpleInfoWithUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllianceSimpleInfoWithUser));
  TAllyWarGetBaseInfoRsp_descriptor_ = file->message_type(15);
  static const int TAllyWarGetBaseInfoRsp_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, arrexpectprocess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, funcopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, actualprocess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, sceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, signallynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, signtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, myareaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, myposid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, myallyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, enemyallyinfo_),
  };
  TAllyWarGetBaseInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetBaseInfoRsp_descriptor_,
      TAllyWarGetBaseInfoRsp::default_instance_,
      TAllyWarGetBaseInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetBaseInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetBaseInfoRsp));
  TAllyWarGetMatchInfoRsp_descriptor_ = file->message_type(16);
  static const int TAllyWarGetMatchInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetMatchInfoRsp, arrmatch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetMatchInfoRsp, arrbase_),
  };
  TAllyWarGetMatchInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetMatchInfoRsp_descriptor_,
      TAllyWarGetMatchInfoRsp::default_instance_,
      TAllyWarGetMatchInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetMatchInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetMatchInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetMatchInfoRsp));
  TAllyWarGetFieldInfoRsp_descriptor_ = file->message_type(17);
  static const int TAllyWarGetFieldInfoRsp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, myallyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, enemyallyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, arrarea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, arrcandi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, arruserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, donetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, winallyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, matchid_),
  };
  TAllyWarGetFieldInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetFieldInfoRsp_descriptor_,
      TAllyWarGetFieldInfoRsp::default_instance_,
      TAllyWarGetFieldInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFieldInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetFieldInfoRsp));
  TAllyWarGetWinnerInfoRsp_descriptor_ = file->message_type(18);
  static const int TAllyWarGetWinnerInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetWinnerInfoRsp, winallyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetWinnerInfoRsp, arrshowuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetWinnerInfoRsp, arrguildcontri_),
  };
  TAllyWarGetWinnerInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetWinnerInfoRsp_descriptor_,
      TAllyWarGetWinnerInfoRsp::default_instance_,
      TAllyWarGetWinnerInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetWinnerInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetWinnerInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetWinnerInfoRsp));
  TAllyWarSignRsp_descriptor_ = file->message_type(19);
  static const int TAllyWarSignRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSignRsp, signtime_),
  };
  TAllyWarSignRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarSignRsp_descriptor_,
      TAllyWarSignRsp::default_instance_,
      TAllyWarSignRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSignRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSignRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarSignRsp));
  TAllyWarGetFmtRsp_descriptor_ = file->message_type(20);
  static const int TAllyWarGetFmtRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFmtRsp, arrfmt_),
  };
  TAllyWarGetFmtRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetFmtRsp_descriptor_,
      TAllyWarGetFmtRsp::default_instance_,
      TAllyWarGetFmtRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFmtRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetFmtRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetFmtRsp));
  TAllyWarSetFmtReq_descriptor_ = file->message_type(21);
  static const int TAllyWarSetFmtReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetFmtReq, arrfmt_),
  };
  TAllyWarSetFmtReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarSetFmtReq_descriptor_,
      TAllyWarSetFmtReq::default_instance_,
      TAllyWarSetFmtReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetFmtReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetFmtReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarSetFmtReq));
  TAllyWarSetPosReq_descriptor_ = file->message_type(22);
  static const int TAllyWarSetPosReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetPosReq, areaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetPosReq, posid_),
  };
  TAllyWarSetPosReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarSetPosReq_descriptor_,
      TAllyWarSetPosReq::default_instance_,
      TAllyWarSetPosReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetPosReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetPosReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarSetPosReq));
  TAllyWarGetDeployRsp_descriptor_ = file->message_type(23);
  static const int TAllyWarGetDeployRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetDeployRsp, arrdeploy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetDeployRsp, arrcandi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetDeployRsp, arruserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetDeployRsp, autocomplete_),
  };
  TAllyWarGetDeployRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetDeployRsp_descriptor_,
      TAllyWarGetDeployRsp::default_instance_,
      TAllyWarGetDeployRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetDeployRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetDeployRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetDeployRsp));
  TAllyWarSetDeployReq_descriptor_ = file->message_type(24);
  static const int TAllyWarSetDeployReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetDeployReq, arrpredeploy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetDeployReq, arrcurdeploy_),
  };
  TAllyWarSetDeployReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarSetDeployReq_descriptor_,
      TAllyWarSetDeployReq::default_instance_,
      TAllyWarSetDeployReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetDeployReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetDeployReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarSetDeployReq));
  TAllyWarSetOptionReq_descriptor_ = file->message_type(25);
  static const int TAllyWarSetOptionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetOptionReq, autocomplete_),
  };
  TAllyWarSetOptionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarSetOptionReq_descriptor_,
      TAllyWarSetOptionReq::default_instance_,
      TAllyWarSetOptionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetOptionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarSetOptionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarSetOptionReq));
  TAllyWarGetRecordReq_descriptor_ = file->message_type(26);
  static const int TAllyWarGetRecordReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordReq, matchid_),
  };
  TAllyWarGetRecordReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetRecordReq_descriptor_,
      TAllyWarGetRecordReq::default_instance_,
      TAllyWarGetRecordReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetRecordReq));
  TAllyWarGetRecordRsp_descriptor_ = file->message_type(27);
  static const int TAllyWarGetRecordRsp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, atkally_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, defally_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, atkscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, defscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, winallyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, arratkuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, arrdefuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, arrarearecord_),
  };
  TAllyWarGetRecordRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAllyWarGetRecordRsp_descriptor_,
      TAllyWarGetRecordRsp::default_instance_,
      TAllyWarGetRecordRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAllyWarGetRecordRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAllyWarGetRecordRsp));
  TInnerAllyWarGetServerTeamInfoRsp_descriptor_ = file->message_type(28);
  static const int TInnerAllyWarGetServerTeamInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInnerAllyWarGetServerTeamInfoRsp, serverteamid_),
  };
  TInnerAllyWarGetServerTeamInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInnerAllyWarGetServerTeamInfoRsp_descriptor_,
      TInnerAllyWarGetServerTeamInfoRsp::default_instance_,
      TInnerAllyWarGetServerTeamInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInnerAllyWarGetServerTeamInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInnerAllyWarGetServerTeamInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInnerAllyWarGetServerTeamInfoRsp));
  EAllyWarStage_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fAllyWar_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarExpectProcess_descriptor_, &TAllyWarExpectProcess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarActualProcess_descriptor_, &TAllyWarActualProcess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarAllyBaseInfo_descriptor_, &TAllyWarAllyBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarUserBaseInfo_descriptor_, &TAllyWarUserBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGuildContriInfo_descriptor_, &TAllyWarGuildContriInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarAllyMatchInfo_descriptor_, &TAllyWarAllyMatchInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarFieldUnitInfo_descriptor_, &TAllyWarFieldUnitInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarFieldAreaInfo_descriptor_, &TAllyWarFieldAreaInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarDeployInfo_descriptor_, &TAllyWarDeployInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarPosInfo_descriptor_, &TAllyWarPosInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarFmtInfo_descriptor_, &TAllyWarFmtInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarFmtRecordInfo_descriptor_, &TAllyWarFmtRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarUnitRecordInfo_descriptor_, &TAllyWarUnitRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarAreaRecordInfo_descriptor_, &TAllyWarAreaRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllianceSimpleInfoWithUser_descriptor_, &TAllianceSimpleInfoWithUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetBaseInfoRsp_descriptor_, &TAllyWarGetBaseInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetMatchInfoRsp_descriptor_, &TAllyWarGetMatchInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetFieldInfoRsp_descriptor_, &TAllyWarGetFieldInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetWinnerInfoRsp_descriptor_, &TAllyWarGetWinnerInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarSignRsp_descriptor_, &TAllyWarSignRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetFmtRsp_descriptor_, &TAllyWarGetFmtRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarSetFmtReq_descriptor_, &TAllyWarSetFmtReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarSetPosReq_descriptor_, &TAllyWarSetPosReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetDeployRsp_descriptor_, &TAllyWarGetDeployRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarSetDeployReq_descriptor_, &TAllyWarSetDeployReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarSetOptionReq_descriptor_, &TAllyWarSetOptionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetRecordReq_descriptor_, &TAllyWarGetRecordReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAllyWarGetRecordRsp_descriptor_, &TAllyWarGetRecordRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInnerAllyWarGetServerTeamInfoRsp_descriptor_, &TInnerAllyWarGetServerTeamInfoRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fAllyWar_2eproto() {
  delete TAllyWarExpectProcess::default_instance_;
  delete TAllyWarExpectProcess_reflection_;
  delete TAllyWarActualProcess::default_instance_;
  delete TAllyWarActualProcess_reflection_;
  delete TAllyWarAllyBaseInfo::default_instance_;
  delete TAllyWarAllyBaseInfo_reflection_;
  delete TAllyWarUserBaseInfo::default_instance_;
  delete TAllyWarUserBaseInfo_reflection_;
  delete TAllyWarGuildContriInfo::default_instance_;
  delete TAllyWarGuildContriInfo_reflection_;
  delete TAllyWarAllyMatchInfo::default_instance_;
  delete TAllyWarAllyMatchInfo_reflection_;
  delete TAllyWarFieldUnitInfo::default_instance_;
  delete TAllyWarFieldUnitInfo_reflection_;
  delete TAllyWarFieldAreaInfo::default_instance_;
  delete TAllyWarFieldAreaInfo_reflection_;
  delete TAllyWarDeployInfo::default_instance_;
  delete TAllyWarDeployInfo_reflection_;
  delete TAllyWarPosInfo::default_instance_;
  delete TAllyWarPosInfo_reflection_;
  delete TAllyWarFmtInfo::default_instance_;
  delete TAllyWarFmtInfo_reflection_;
  delete TAllyWarFmtRecordInfo::default_instance_;
  delete TAllyWarFmtRecordInfo_reflection_;
  delete TAllyWarUnitRecordInfo::default_instance_;
  delete TAllyWarUnitRecordInfo_reflection_;
  delete TAllyWarAreaRecordInfo::default_instance_;
  delete TAllyWarAreaRecordInfo_reflection_;
  delete TAllianceSimpleInfoWithUser::default_instance_;
  delete TAllianceSimpleInfoWithUser_reflection_;
  delete TAllyWarGetBaseInfoRsp::default_instance_;
  delete TAllyWarGetBaseInfoRsp_reflection_;
  delete TAllyWarGetMatchInfoRsp::default_instance_;
  delete TAllyWarGetMatchInfoRsp_reflection_;
  delete TAllyWarGetFieldInfoRsp::default_instance_;
  delete TAllyWarGetFieldInfoRsp_reflection_;
  delete TAllyWarGetWinnerInfoRsp::default_instance_;
  delete TAllyWarGetWinnerInfoRsp_reflection_;
  delete TAllyWarSignRsp::default_instance_;
  delete TAllyWarSignRsp_reflection_;
  delete TAllyWarGetFmtRsp::default_instance_;
  delete TAllyWarGetFmtRsp_reflection_;
  delete TAllyWarSetFmtReq::default_instance_;
  delete TAllyWarSetFmtReq_reflection_;
  delete TAllyWarSetPosReq::default_instance_;
  delete TAllyWarSetPosReq_reflection_;
  delete TAllyWarGetDeployRsp::default_instance_;
  delete TAllyWarGetDeployRsp_reflection_;
  delete TAllyWarSetDeployReq::default_instance_;
  delete TAllyWarSetDeployReq_reflection_;
  delete TAllyWarSetOptionReq::default_instance_;
  delete TAllyWarSetOptionReq_reflection_;
  delete TAllyWarGetRecordReq::default_instance_;
  delete TAllyWarGetRecordReq_reflection_;
  delete TAllyWarGetRecordRsp::default_instance_;
  delete TAllyWarGetRecordRsp_reflection_;
  delete TInnerAllyWarGetServerTeamInfoRsp::default_instance_;
  delete TInnerAllyWarGetServerTeamInfoRsp_reflection_;
}

void protobuf_AddDesc_net_2fAllyWar_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::pb::protobuf_AddDesc_net_2fAlliance_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021net/AllyWar.proto\022\002pb\032\016net/User.proto\032"
    "\022net/Alliance.proto\"j\n\025TAllyWarExpectPro"
    "cess\022\r\n\005Round\030\001 \001(\r\022 \n\005Stage\030\002 \001(\0162\021.pb."
    "EAllyWarStage\022\017\n\007BegTime\030\003 \001(\004\022\017\n\007EndTim"
    "e\030\004 \001(\004\"[\n\025TAllyWarActualProcess\0220\n\rExpe"
    "ctProcess\030\001 \001(\0132\031.pb.TAllyWarExpectProce"
    "ss\022\020\n\010DoneTime\030\002 \001(\004\"\225\001\n\024TAllyWarAllyBas"
    "eInfo\022\016\n\006AllyId\030\001 \001(\004\022\r\n\005Level\030\002 \001(\r\022\014\n\004"
    "Name\030\003 \001(\t\022\022\n\nFightForce\030\004 \001(\004\022\022\n\nBanner"
    "Base\030\005 \001(\r\022\022\n\nBannerName\030\006 \001(\t\022\024\n\014Banner"
    "Figure\030\007 \001(\r\"}\n\024TAllyWarUserBaseInfo\022\013\n\003"
    "Uid\030\001 \001(\004\022\020\n\010ServerId\030\002 \001(\t\022\037\n\004Post\030\003 \001("
    "\0162\021.pb.EAlliancePost\022%\n\010UserInfo\030\004 \001(\0132\023"
    ".pb.TUserSimpleInfo\"|\n\027TAllyWarGuildCont"
    "riInfo\022\013\n\003Gid\030\001 \001(\004\022\020\n\010ServerId\030\002 \001(\t\022\021\n"
    "\tContriNum\030\003 \001(\r\022/\n\tGuildInfo\030\004 \001(\0132\034.pb"
    ".TAllianceGuildMemberInfo\"s\n\025TAllyWarAll"
    "yMatchInfo\022\017\n\007MatchId\030\001 \001(\r\022\021\n\tAtkAllyId"
    "\030\002 \001(\004\022\021\n\tDefAllyId\030\003 \001(\004\022\020\n\010DoneTime\030\004 "
    "\001(\004\022\021\n\tWinAllyId\030\005 \001(\004\"E\n\025TAllyWarFieldU"
    "nitInfo\022\r\n\005PosId\030\001 \001(\r\022\013\n\003Uid\030\002 \001(\004\022\020\n\010S"
    "erverId\030\003 \001(\t\"x\n\025TAllyWarFieldAreaInfo\022\016"
    "\n\006AreaId\030\001 \001(\r\022*\n\007ArrUnit\030\002 \003(\0132\031.pb.TAl"
    "lyWarFieldUnitInfo\022\020\n\010DoneTime\030\003 \001(\004\022\021\n\t"
    "WinAllyId\030\004 \001(\004\"R\n\022TAllyWarDeployInfo\022\016\n"
    "\006AreaId\030\001 \001(\r\022\r\n\005PosId\030\002 \001(\r\022\013\n\003Uid\030\003 \001("
    "\004\022\020\n\010ServerId\030\004 \001(\t\"+\n\017TAllyWarPosInfo\022\013"
    "\n\003Pos\030\001 \001(\r\022\013\n\003Hid\030\002 \001(\r\"E\n\017TAllyWarFmtI"
    "nfo\022\r\n\005FmtId\030\001 \001(\r\022#\n\006ArrPos\030\002 \003(\0132\023.pb."
    "TAllyWarPosInfo\"C\n\025TAllyWarFmtRecordInfo"
    "\022\r\n\005FmtId\030\001 \001(\r\022\016\n\006Result\030\002 \001(\010\022\013\n\003Rid\030\003"
    " \001(\004\"\270\001\n\026TAllyWarUnitRecordInfo\022\016\n\006AtkUi"
    "d\030\001 \001(\004\022\023\n\013AtkServerId\030\002 \001(\t\022\016\n\006DefUid\030\003"
    " \001(\004\022\023\n\013DefServerId\030\004 \001(\t\022\016\n\006WinUid\030\005 \001("
    "\004\022\023\n\013ContiWinNum\030\006 \001(\r\022/\n\014ArrFmtRecord\030\007"
    " \003(\0132\031.pb.TAllyWarFmtRecordInfo\"\200\001\n\026TAll"
    "yWarAreaRecordInfo\022\016\n\006AreaId\030\001 \001(\r\0221\n\rAr"
    "rUnitRecord\030\002 \003(\0132\032.pb.TAllyWarUnitRecor"
    "dInfo\022\020\n\010DoneTime\030\003 \001(\004\022\021\n\tWinAllyId\030\005 \001"
    "(\004\"\205\001\n\033TAllianceSimpleInfoWithUser\0223\n\022Al"
    "lianceSimpleInfo\030\001 \001(\0132\027.pb.TAllianceSim"
    "pleInfo\0221\n\017ArrUserBaseInfo\030\002 \003(\0132\030.pb.TA"
    "llyWarUserBaseInfo\"\313\002\n\026TAllyWarGetBaseIn"
    "foRsp\0223\n\020ArrExpectProcess\030\001 \003(\0132\031.pb.TAl"
    "lyWarExpectProcess\022\020\n\010FuncOpen\030\002 \001(\010\0220\n\r"
    "ActualProcess\030\003 \001(\0132\031.pb.TAllyWarActualP"
    "rocess\022\017\n\007SceneId\030\004 \001(\t\022\023\n\013SignAllyNum\030\005"
    " \001(\r\022\020\n\010SignTime\030\006 \001(\004\022\020\n\010MyAreaId\030\007 \001(\r"
    "\022\017\n\007MyPosId\030\010 \001(\r\022,\n\nMyAllyInfo\030\t \001(\0132\030."
    "pb.TAllyWarAllyBaseInfo\022/\n\rEnemyAllyInfo"
    "\030\n \001(\0132\030.pb.TAllyWarAllyBaseInfo\"q\n\027TAll"
    "yWarGetMatchInfoRsp\022+\n\010ArrMatch\030\001 \003(\0132\031."
    "pb.TAllyWarAllyMatchInfo\022)\n\007ArrBase\030\002 \003("
    "\0132\030.pb.TAllyWarAllyBaseInfo\"\233\002\n\027TAllyWar"
    "GetFieldInfoRsp\022,\n\nMyAllyInfo\030\001 \001(\0132\030.pb"
    ".TAllyWarAllyBaseInfo\022/\n\rEnemyAllyInfo\030\002"
    " \001(\0132\030.pb.TAllyWarAllyBaseInfo\022*\n\007ArrAre"
    "a\030\003 \003(\0132\031.pb.TAllyWarFieldAreaInfo\022\020\n\010Ar"
    "rCandi\030\004 \003(\004\022-\n\013ArrUserInfo\030\005 \003(\0132\030.pb.T"
    "AllyWarUserBaseInfo\022\020\n\010DoneTime\030\006 \001(\004\022\021\n"
    "\tWinAllyId\030\007 \001(\004\022\017\n\007MatchId\030\010 \001(\r\"\255\001\n\030TA"
    "llyWarGetWinnerInfoRsp\022-\n\013WinAllyInfo\030\001 "
    "\001(\0132\030.pb.TAllyWarAllyBaseInfo\022-\n\013ArrShow"
    "User\030\002 \003(\0132\030.pb.TAllyWarUserBaseInfo\0223\n\016"
    "ArrGuildContri\030\003 \003(\0132\033.pb.TAllyWarGuildC"
    "ontriInfo\"#\n\017TAllyWarSignRsp\022\020\n\010SignTime"
    "\030\001 \001(\004\"8\n\021TAllyWarGetFmtRsp\022#\n\006ArrFmt\030\001 "
    "\003(\0132\023.pb.TAllyWarFmtInfo\"8\n\021TAllyWarSetF"
    "mtReq\022#\n\006ArrFmt\030\001 \003(\0132\023.pb.TAllyWarFmtIn"
    "fo\"2\n\021TAllyWarSetPosReq\022\016\n\006AreaId\030\001 \001(\r\022"
    "\r\n\005PosId\030\002 \001(\r\"\230\001\n\024TAllyWarGetDeployRsp\022"
    ")\n\tArrDeploy\030\001 \003(\0132\026.pb.TAllyWarDeployIn"
    "fo\022\020\n\010ArrCandi\030\002 \003(\004\022-\n\013ArrUserInfo\030\003 \003("
    "\0132\030.pb.TAllyWarUserBaseInfo\022\024\n\014AutoCompl"
    "ete\030\004 \001(\010\"r\n\024TAllyWarSetDeployReq\022,\n\014Arr"
    "PreDeploy\030\001 \003(\0132\026.pb.TAllyWarDeployInfo\022"
    ",\n\014ArrCurDeploy\030\002 \003(\0132\026.pb.TAllyWarDeplo"
    "yInfo\",\n\024TAllyWarSetOptionReq\022\024\n\014AutoCom"
    "plete\030\001 \001(\010\"\'\n\024TAllyWarGetRecordReq\022\017\n\007M"
    "atchId\030\001 \001(\r\"\250\002\n\024TAllyWarGetRecordRsp\022)\n"
    "\007AtkAlly\030\001 \001(\0132\030.pb.TAllyWarAllyBaseInfo"
    "\022)\n\007DefAlly\030\002 \001(\0132\030.pb.TAllyWarAllyBaseI"
    "nfo\022\020\n\010AtkScore\030\003 \001(\r\022\020\n\010DefScore\030\004 \001(\r\022"
    "\021\n\tWinAllyId\030\005 \001(\004\022\'\n\nArrAtkUser\030\006 \003(\0132\023"
    ".pb.TUserSimpleInfo\022\'\n\nArrDefUser\030\007 \003(\0132"
    "\023.pb.TUserSimpleInfo\0221\n\rArrAreaRecord\030\010 "
    "\003(\0132\032.pb.TAllyWarAreaRecordInfo\"9\n!TInne"
    "rAllyWarGetServerTeamInfoRsp\022\024\n\014ServerTe"
    "amId\030\001 \001(\r*\336\001\n\rEAllyWarStage\022\032\n\026EALLYWAR"
    "_STAGE_INVALID\020\000\022\030\n\024EALLYWAR_STAGE_GROUP"
    "\020\001\022\027\n\023EALLYWAR_STAGE_SIGN\020\002\022\033\n\027EALLYWAR_"
    "STAGE_AUDITION\020\003\022$\n EALLYWAR_STAGE_PROMO"
    "TION_PREPARE\020\004\022\"\n\036EALLYWAR_STAGE_PROMOTI"
    "ON_FIGHT\020\005\022\027\n\023EALLYWAR_STAGE_SHOW\020d", 3755);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/AllyWar.proto", &protobuf_RegisterTypes);
  TAllyWarExpectProcess::default_instance_ = new TAllyWarExpectProcess();
  TAllyWarActualProcess::default_instance_ = new TAllyWarActualProcess();
  TAllyWarAllyBaseInfo::default_instance_ = new TAllyWarAllyBaseInfo();
  TAllyWarUserBaseInfo::default_instance_ = new TAllyWarUserBaseInfo();
  TAllyWarGuildContriInfo::default_instance_ = new TAllyWarGuildContriInfo();
  TAllyWarAllyMatchInfo::default_instance_ = new TAllyWarAllyMatchInfo();
  TAllyWarFieldUnitInfo::default_instance_ = new TAllyWarFieldUnitInfo();
  TAllyWarFieldAreaInfo::default_instance_ = new TAllyWarFieldAreaInfo();
  TAllyWarDeployInfo::default_instance_ = new TAllyWarDeployInfo();
  TAllyWarPosInfo::default_instance_ = new TAllyWarPosInfo();
  TAllyWarFmtInfo::default_instance_ = new TAllyWarFmtInfo();
  TAllyWarFmtRecordInfo::default_instance_ = new TAllyWarFmtRecordInfo();
  TAllyWarUnitRecordInfo::default_instance_ = new TAllyWarUnitRecordInfo();
  TAllyWarAreaRecordInfo::default_instance_ = new TAllyWarAreaRecordInfo();
  TAllianceSimpleInfoWithUser::default_instance_ = new TAllianceSimpleInfoWithUser();
  TAllyWarGetBaseInfoRsp::default_instance_ = new TAllyWarGetBaseInfoRsp();
  TAllyWarGetMatchInfoRsp::default_instance_ = new TAllyWarGetMatchInfoRsp();
  TAllyWarGetFieldInfoRsp::default_instance_ = new TAllyWarGetFieldInfoRsp();
  TAllyWarGetWinnerInfoRsp::default_instance_ = new TAllyWarGetWinnerInfoRsp();
  TAllyWarSignRsp::default_instance_ = new TAllyWarSignRsp();
  TAllyWarGetFmtRsp::default_instance_ = new TAllyWarGetFmtRsp();
  TAllyWarSetFmtReq::default_instance_ = new TAllyWarSetFmtReq();
  TAllyWarSetPosReq::default_instance_ = new TAllyWarSetPosReq();
  TAllyWarGetDeployRsp::default_instance_ = new TAllyWarGetDeployRsp();
  TAllyWarSetDeployReq::default_instance_ = new TAllyWarSetDeployReq();
  TAllyWarSetOptionReq::default_instance_ = new TAllyWarSetOptionReq();
  TAllyWarGetRecordReq::default_instance_ = new TAllyWarGetRecordReq();
  TAllyWarGetRecordRsp::default_instance_ = new TAllyWarGetRecordRsp();
  TInnerAllyWarGetServerTeamInfoRsp::default_instance_ = new TInnerAllyWarGetServerTeamInfoRsp();
  TAllyWarExpectProcess::default_instance_->InitAsDefaultInstance();
  TAllyWarActualProcess::default_instance_->InitAsDefaultInstance();
  TAllyWarAllyBaseInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarUserBaseInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarGuildContriInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarAllyMatchInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarFieldUnitInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarFieldAreaInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarDeployInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarPosInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarFmtInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarFmtRecordInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarUnitRecordInfo::default_instance_->InitAsDefaultInstance();
  TAllyWarAreaRecordInfo::default_instance_->InitAsDefaultInstance();
  TAllianceSimpleInfoWithUser::default_instance_->InitAsDefaultInstance();
  TAllyWarGetBaseInfoRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarGetMatchInfoRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarGetFieldInfoRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarGetWinnerInfoRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarSignRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarGetFmtRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarSetFmtReq::default_instance_->InitAsDefaultInstance();
  TAllyWarSetPosReq::default_instance_->InitAsDefaultInstance();
  TAllyWarGetDeployRsp::default_instance_->InitAsDefaultInstance();
  TAllyWarSetDeployReq::default_instance_->InitAsDefaultInstance();
  TAllyWarSetOptionReq::default_instance_->InitAsDefaultInstance();
  TAllyWarGetRecordReq::default_instance_->InitAsDefaultInstance();
  TAllyWarGetRecordRsp::default_instance_->InitAsDefaultInstance();
  TInnerAllyWarGetServerTeamInfoRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fAllyWar_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fAllyWar_2eproto {
  StaticDescriptorInitializer_net_2fAllyWar_2eproto() {
    protobuf_AddDesc_net_2fAllyWar_2eproto();
  }
} static_descriptor_initializer_net_2fAllyWar_2eproto_;
const ::google::protobuf::EnumDescriptor* EAllyWarStage_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EAllyWarStage_descriptor_;
}
bool EAllyWarStage_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 100:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarExpectProcess::kRoundFieldNumber;
const int TAllyWarExpectProcess::kStageFieldNumber;
const int TAllyWarExpectProcess::kBegTimeFieldNumber;
const int TAllyWarExpectProcess::kEndTimeFieldNumber;
#endif  // !_MSC_VER

TAllyWarExpectProcess::TAllyWarExpectProcess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarExpectProcess)
}

void TAllyWarExpectProcess::InitAsDefaultInstance() {
}

TAllyWarExpectProcess::TAllyWarExpectProcess(const TAllyWarExpectProcess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarExpectProcess)
}

void TAllyWarExpectProcess::SharedCtor() {
  _cached_size_ = 0;
  round_ = 0u;
  stage_ = 0;
  begtime_ = GOOGLE_ULONGLONG(0);
  endtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarExpectProcess::~TAllyWarExpectProcess() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarExpectProcess)
  SharedDtor();
}

void TAllyWarExpectProcess::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarExpectProcess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarExpectProcess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarExpectProcess_descriptor_;
}

const TAllyWarExpectProcess& TAllyWarExpectProcess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarExpectProcess* TAllyWarExpectProcess::default_instance_ = NULL;

TAllyWarExpectProcess* TAllyWarExpectProcess::New() const {
  return new TAllyWarExpectProcess;
}

void TAllyWarExpectProcess::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarExpectProcess*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(round_, endtime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarExpectProcess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarExpectProcess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Round = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &round_)));
          set_has_round();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Stage;
        break;
      }

      // optional .pb.EAllyWarStage Stage = 2;
      case 2: {
        if (tag == 16) {
         parse_Stage:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EAllyWarStage_IsValid(value)) {
            set_stage(static_cast< ::pb::EAllyWarStage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BegTime;
        break;
      }

      // optional uint64 BegTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BegTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begtime_)));
          set_has_begtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EndTime;
        break;
      }

      // optional uint64 EndTime = 4;
      case 4: {
        if (tag == 32) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarExpectProcess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarExpectProcess)
  return false;
#undef DO_
}

void TAllyWarExpectProcess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarExpectProcess)
  // optional uint32 Round = 1;
  if (has_round()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->round(), output);
  }

  // optional .pb.EAllyWarStage Stage = 2;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stage(), output);
  }

  // optional uint64 BegTime = 3;
  if (has_begtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->begtime(), output);
  }

  // optional uint64 EndTime = 4;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarExpectProcess)
}

::google::protobuf::uint8* TAllyWarExpectProcess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarExpectProcess)
  // optional uint32 Round = 1;
  if (has_round()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->round(), target);
  }

  // optional .pb.EAllyWarStage Stage = 2;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stage(), target);
  }

  // optional uint64 BegTime = 3;
  if (has_begtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->begtime(), target);
  }

  // optional uint64 EndTime = 4;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarExpectProcess)
  return target;
}

int TAllyWarExpectProcess::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Round = 1;
    if (has_round()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->round());
    }

    // optional .pb.EAllyWarStage Stage = 2;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stage());
    }

    // optional uint64 BegTime = 3;
    if (has_begtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->begtime());
    }

    // optional uint64 EndTime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarExpectProcess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarExpectProcess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarExpectProcess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarExpectProcess::MergeFrom(const TAllyWarExpectProcess& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_round()) {
      set_round(from.round());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_begtime()) {
      set_begtime(from.begtime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarExpectProcess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarExpectProcess::CopyFrom(const TAllyWarExpectProcess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarExpectProcess::IsInitialized() const {

  return true;
}

void TAllyWarExpectProcess::Swap(TAllyWarExpectProcess* other) {
  if (other != this) {
    std::swap(round_, other->round_);
    std::swap(stage_, other->stage_);
    std::swap(begtime_, other->begtime_);
    std::swap(endtime_, other->endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarExpectProcess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarExpectProcess_descriptor_;
  metadata.reflection = TAllyWarExpectProcess_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarActualProcess::kExpectProcessFieldNumber;
const int TAllyWarActualProcess::kDoneTimeFieldNumber;
#endif  // !_MSC_VER

TAllyWarActualProcess::TAllyWarActualProcess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarActualProcess)
}

void TAllyWarActualProcess::InitAsDefaultInstance() {
  expectprocess_ = const_cast< ::pb::TAllyWarExpectProcess*>(&::pb::TAllyWarExpectProcess::default_instance());
}

TAllyWarActualProcess::TAllyWarActualProcess(const TAllyWarActualProcess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarActualProcess)
}

void TAllyWarActualProcess::SharedCtor() {
  _cached_size_ = 0;
  expectprocess_ = NULL;
  donetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarActualProcess::~TAllyWarActualProcess() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarActualProcess)
  SharedDtor();
}

void TAllyWarActualProcess::SharedDtor() {
  if (this != default_instance_) {
    delete expectprocess_;
  }
}

void TAllyWarActualProcess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarActualProcess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarActualProcess_descriptor_;
}

const TAllyWarActualProcess& TAllyWarActualProcess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarActualProcess* TAllyWarActualProcess::default_instance_ = NULL;

TAllyWarActualProcess* TAllyWarActualProcess::New() const {
  return new TAllyWarActualProcess;
}

void TAllyWarActualProcess::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_expectprocess()) {
      if (expectprocess_ != NULL) expectprocess_->::pb::TAllyWarExpectProcess::Clear();
    }
    donetime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarActualProcess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarActualProcess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TAllyWarExpectProcess ExpectProcess = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expectprocess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DoneTime;
        break;
      }

      // optional uint64 DoneTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DoneTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &donetime_)));
          set_has_donetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarActualProcess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarActualProcess)
  return false;
#undef DO_
}

void TAllyWarActualProcess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarActualProcess)
  // optional .pb.TAllyWarExpectProcess ExpectProcess = 1;
  if (has_expectprocess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->expectprocess(), output);
  }

  // optional uint64 DoneTime = 2;
  if (has_donetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->donetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarActualProcess)
}

::google::protobuf::uint8* TAllyWarActualProcess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarActualProcess)
  // optional .pb.TAllyWarExpectProcess ExpectProcess = 1;
  if (has_expectprocess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->expectprocess(), target);
  }

  // optional uint64 DoneTime = 2;
  if (has_donetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->donetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarActualProcess)
  return target;
}

int TAllyWarActualProcess::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TAllyWarExpectProcess ExpectProcess = 1;
    if (has_expectprocess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->expectprocess());
    }

    // optional uint64 DoneTime = 2;
    if (has_donetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->donetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarActualProcess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarActualProcess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarActualProcess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarActualProcess::MergeFrom(const TAllyWarActualProcess& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_expectprocess()) {
      mutable_expectprocess()->::pb::TAllyWarExpectProcess::MergeFrom(from.expectprocess());
    }
    if (from.has_donetime()) {
      set_donetime(from.donetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarActualProcess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarActualProcess::CopyFrom(const TAllyWarActualProcess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarActualProcess::IsInitialized() const {

  return true;
}

void TAllyWarActualProcess::Swap(TAllyWarActualProcess* other) {
  if (other != this) {
    std::swap(expectprocess_, other->expectprocess_);
    std::swap(donetime_, other->donetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarActualProcess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarActualProcess_descriptor_;
  metadata.reflection = TAllyWarActualProcess_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarAllyBaseInfo::kAllyIdFieldNumber;
const int TAllyWarAllyBaseInfo::kLevelFieldNumber;
const int TAllyWarAllyBaseInfo::kNameFieldNumber;
const int TAllyWarAllyBaseInfo::kFightForceFieldNumber;
const int TAllyWarAllyBaseInfo::kBannerBaseFieldNumber;
const int TAllyWarAllyBaseInfo::kBannerNameFieldNumber;
const int TAllyWarAllyBaseInfo::kBannerFigureFieldNumber;
#endif  // !_MSC_VER

TAllyWarAllyBaseInfo::TAllyWarAllyBaseInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarAllyBaseInfo)
}

void TAllyWarAllyBaseInfo::InitAsDefaultInstance() {
}

TAllyWarAllyBaseInfo::TAllyWarAllyBaseInfo(const TAllyWarAllyBaseInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarAllyBaseInfo)
}

void TAllyWarAllyBaseInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  allyid_ = GOOGLE_ULONGLONG(0);
  level_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fightforce_ = GOOGLE_ULONGLONG(0);
  bannerbase_ = 0u;
  bannername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannerfigure_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarAllyBaseInfo::~TAllyWarAllyBaseInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarAllyBaseInfo)
  SharedDtor();
}

void TAllyWarAllyBaseInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (bannername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bannername_;
  }
  if (this != default_instance_) {
  }
}

void TAllyWarAllyBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarAllyBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarAllyBaseInfo_descriptor_;
}

const TAllyWarAllyBaseInfo& TAllyWarAllyBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarAllyBaseInfo* TAllyWarAllyBaseInfo::default_instance_ = NULL;

TAllyWarAllyBaseInfo* TAllyWarAllyBaseInfo::New() const {
  return new TAllyWarAllyBaseInfo;
}

void TAllyWarAllyBaseInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarAllyBaseInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(level_, fightforce_);
    allyid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_bannername()) {
      if (bannername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bannername_->clear();
      }
    }
    bannerfigure_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarAllyBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarAllyBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AllyId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allyid_)));
          set_has_allyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Name;
        break;
      }

      // optional string Name = 3;
      case 3: {
        if (tag == 26) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FightForce;
        break;
      }

      // optional uint64 FightForce = 4;
      case 4: {
        if (tag == 32) {
         parse_FightForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fightforce_)));
          set_has_fightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BannerBase;
        break;
      }

      // optional uint32 BannerBase = 5;
      case 5: {
        if (tag == 40) {
         parse_BannerBase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bannerbase_)));
          set_has_bannerbase();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_BannerName;
        break;
      }

      // optional string BannerName = 6;
      case 6: {
        if (tag == 50) {
         parse_BannerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bannername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bannername().data(), this->bannername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bannername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_BannerFigure;
        break;
      }

      // optional uint32 BannerFigure = 7;
      case 7: {
        if (tag == 56) {
         parse_BannerFigure:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bannerfigure_)));
          set_has_bannerfigure();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarAllyBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarAllyBaseInfo)
  return false;
#undef DO_
}

void TAllyWarAllyBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarAllyBaseInfo)
  // optional uint64 AllyId = 1;
  if (has_allyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->allyid(), output);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // optional string Name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional uint64 FightForce = 4;
  if (has_fightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->fightforce(), output);
  }

  // optional uint32 BannerBase = 5;
  if (has_bannerbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->bannerbase(), output);
  }

  // optional string BannerName = 6;
  if (has_bannername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bannername().data(), this->bannername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bannername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bannername(), output);
  }

  // optional uint32 BannerFigure = 7;
  if (has_bannerfigure()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bannerfigure(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarAllyBaseInfo)
}

::google::protobuf::uint8* TAllyWarAllyBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarAllyBaseInfo)
  // optional uint64 AllyId = 1;
  if (has_allyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->allyid(), target);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // optional string Name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional uint64 FightForce = 4;
  if (has_fightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->fightforce(), target);
  }

  // optional uint32 BannerBase = 5;
  if (has_bannerbase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->bannerbase(), target);
  }

  // optional string BannerName = 6;
  if (has_bannername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bannername().data(), this->bannername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bannername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bannername(), target);
  }

  // optional uint32 BannerFigure = 7;
  if (has_bannerfigure()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bannerfigure(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarAllyBaseInfo)
  return target;
}

int TAllyWarAllyBaseInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 AllyId = 1;
    if (has_allyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->allyid());
    }

    // optional uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional string Name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 FightForce = 4;
    if (has_fightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fightforce());
    }

    // optional uint32 BannerBase = 5;
    if (has_bannerbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bannerbase());
    }

    // optional string BannerName = 6;
    if (has_bannername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bannername());
    }

    // optional uint32 BannerFigure = 7;
    if (has_bannerfigure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bannerfigure());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarAllyBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarAllyBaseInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarAllyBaseInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarAllyBaseInfo::MergeFrom(const TAllyWarAllyBaseInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_allyid()) {
      set_allyid(from.allyid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_fightforce()) {
      set_fightforce(from.fightforce());
    }
    if (from.has_bannerbase()) {
      set_bannerbase(from.bannerbase());
    }
    if (from.has_bannername()) {
      set_bannername(from.bannername());
    }
    if (from.has_bannerfigure()) {
      set_bannerfigure(from.bannerfigure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarAllyBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarAllyBaseInfo::CopyFrom(const TAllyWarAllyBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarAllyBaseInfo::IsInitialized() const {

  return true;
}

void TAllyWarAllyBaseInfo::Swap(TAllyWarAllyBaseInfo* other) {
  if (other != this) {
    std::swap(allyid_, other->allyid_);
    std::swap(level_, other->level_);
    std::swap(name_, other->name_);
    std::swap(fightforce_, other->fightforce_);
    std::swap(bannerbase_, other->bannerbase_);
    std::swap(bannername_, other->bannername_);
    std::swap(bannerfigure_, other->bannerfigure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarAllyBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarAllyBaseInfo_descriptor_;
  metadata.reflection = TAllyWarAllyBaseInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarUserBaseInfo::kUidFieldNumber;
const int TAllyWarUserBaseInfo::kServerIdFieldNumber;
const int TAllyWarUserBaseInfo::kPostFieldNumber;
const int TAllyWarUserBaseInfo::kUserInfoFieldNumber;
#endif  // !_MSC_VER

TAllyWarUserBaseInfo::TAllyWarUserBaseInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarUserBaseInfo)
}

void TAllyWarUserBaseInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TAllyWarUserBaseInfo::TAllyWarUserBaseInfo(const TAllyWarUserBaseInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarUserBaseInfo)
}

void TAllyWarUserBaseInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  post_ = 0;
  userinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarUserBaseInfo::~TAllyWarUserBaseInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarUserBaseInfo)
  SharedDtor();
}

void TAllyWarUserBaseInfo::SharedDtor() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TAllyWarUserBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarUserBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarUserBaseInfo_descriptor_;
}

const TAllyWarUserBaseInfo& TAllyWarUserBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarUserBaseInfo* TAllyWarUserBaseInfo::default_instance_ = NULL;

TAllyWarUserBaseInfo* TAllyWarUserBaseInfo::New() const {
  return new TAllyWarUserBaseInfo;
}

void TAllyWarUserBaseInfo::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_serverid()) {
      if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverid_->clear();
      }
    }
    post_ = 0;
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarUserBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarUserBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerId;
        break;
      }

      // optional string ServerId = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverid().data(), this->serverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Post;
        break;
      }

      // optional .pb.EAlliancePost Post = 3;
      case 3: {
        if (tag == 24) {
         parse_Post:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EAlliancePost_IsValid(value)) {
            set_post(static_cast< ::pb::EAlliancePost >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_UserInfo;
        break;
      }

      // optional .pb.TUserSimpleInfo UserInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_UserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarUserBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarUserBaseInfo)
  return false;
#undef DO_
}

void TAllyWarUserBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarUserBaseInfo)
  // optional uint64 Uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serverid(), output);
  }

  // optional .pb.EAlliancePost Post = 3;
  if (has_post()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->post(), output);
  }

  // optional .pb.TUserSimpleInfo UserInfo = 4;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->userinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarUserBaseInfo)
}

::google::protobuf::uint8* TAllyWarUserBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarUserBaseInfo)
  // optional uint64 Uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serverid(), target);
  }

  // optional .pb.EAlliancePost Post = 3;
  if (has_post()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->post(), target);
  }

  // optional .pb.TUserSimpleInfo UserInfo = 4;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->userinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarUserBaseInfo)
  return target;
}

int TAllyWarUserBaseInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string ServerId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverid());
    }

    // optional .pb.EAlliancePost Post = 3;
    if (has_post()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->post());
    }

    // optional .pb.TUserSimpleInfo UserInfo = 4;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarUserBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarUserBaseInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarUserBaseInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarUserBaseInfo::MergeFrom(const TAllyWarUserBaseInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_post()) {
      set_post(from.post());
    }
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarUserBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarUserBaseInfo::CopyFrom(const TAllyWarUserBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarUserBaseInfo::IsInitialized() const {

  return true;
}

void TAllyWarUserBaseInfo::Swap(TAllyWarUserBaseInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(serverid_, other->serverid_);
    std::swap(post_, other->post_);
    std::swap(userinfo_, other->userinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarUserBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarUserBaseInfo_descriptor_;
  metadata.reflection = TAllyWarUserBaseInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGuildContriInfo::kGidFieldNumber;
const int TAllyWarGuildContriInfo::kServerIdFieldNumber;
const int TAllyWarGuildContriInfo::kContriNumFieldNumber;
const int TAllyWarGuildContriInfo::kGuildInfoFieldNumber;
#endif  // !_MSC_VER

TAllyWarGuildContriInfo::TAllyWarGuildContriInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGuildContriInfo)
}

void TAllyWarGuildContriInfo::InitAsDefaultInstance() {
  guildinfo_ = const_cast< ::pb::TAllianceGuildMemberInfo*>(&::pb::TAllianceGuildMemberInfo::default_instance());
}

TAllyWarGuildContriInfo::TAllyWarGuildContriInfo(const TAllyWarGuildContriInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGuildContriInfo)
}

void TAllyWarGuildContriInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gid_ = GOOGLE_ULONGLONG(0);
  serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contrinum_ = 0u;
  guildinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGuildContriInfo::~TAllyWarGuildContriInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGuildContriInfo)
  SharedDtor();
}

void TAllyWarGuildContriInfo::SharedDtor() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (this != default_instance_) {
    delete guildinfo_;
  }
}

void TAllyWarGuildContriInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGuildContriInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGuildContriInfo_descriptor_;
}

const TAllyWarGuildContriInfo& TAllyWarGuildContriInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGuildContriInfo* TAllyWarGuildContriInfo::default_instance_ = NULL;

TAllyWarGuildContriInfo* TAllyWarGuildContriInfo::New() const {
  return new TAllyWarGuildContriInfo;
}

void TAllyWarGuildContriInfo::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    gid_ = GOOGLE_ULONGLONG(0);
    if (has_serverid()) {
      if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverid_->clear();
      }
    }
    contrinum_ = 0u;
    if (has_guildinfo()) {
      if (guildinfo_ != NULL) guildinfo_->::pb::TAllianceGuildMemberInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGuildContriInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGuildContriInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Gid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
          set_has_gid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerId;
        break;
      }

      // optional string ServerId = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverid().data(), this->serverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ContriNum;
        break;
      }

      // optional uint32 ContriNum = 3;
      case 3: {
        if (tag == 24) {
         parse_ContriNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contrinum_)));
          set_has_contrinum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_GuildInfo;
        break;
      }

      // optional .pb.TAllianceGuildMemberInfo GuildInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_GuildInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guildinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGuildContriInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGuildContriInfo)
  return false;
#undef DO_
}

void TAllyWarGuildContriInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGuildContriInfo)
  // optional uint64 Gid = 1;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serverid(), output);
  }

  // optional uint32 ContriNum = 3;
  if (has_contrinum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->contrinum(), output);
  }

  // optional .pb.TAllianceGuildMemberInfo GuildInfo = 4;
  if (has_guildinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->guildinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGuildContriInfo)
}

::google::protobuf::uint8* TAllyWarGuildContriInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGuildContriInfo)
  // optional uint64 Gid = 1;
  if (has_gid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serverid(), target);
  }

  // optional uint32 ContriNum = 3;
  if (has_contrinum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->contrinum(), target);
  }

  // optional .pb.TAllianceGuildMemberInfo GuildInfo = 4;
  if (has_guildinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->guildinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGuildContriInfo)
  return target;
}

int TAllyWarGuildContriInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Gid = 1;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gid());
    }

    // optional string ServerId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverid());
    }

    // optional uint32 ContriNum = 3;
    if (has_contrinum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->contrinum());
    }

    // optional .pb.TAllianceGuildMemberInfo GuildInfo = 4;
    if (has_guildinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->guildinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGuildContriInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGuildContriInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGuildContriInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGuildContriInfo::MergeFrom(const TAllyWarGuildContriInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gid()) {
      set_gid(from.gid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_contrinum()) {
      set_contrinum(from.contrinum());
    }
    if (from.has_guildinfo()) {
      mutable_guildinfo()->::pb::TAllianceGuildMemberInfo::MergeFrom(from.guildinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGuildContriInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGuildContriInfo::CopyFrom(const TAllyWarGuildContriInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGuildContriInfo::IsInitialized() const {

  return true;
}

void TAllyWarGuildContriInfo::Swap(TAllyWarGuildContriInfo* other) {
  if (other != this) {
    std::swap(gid_, other->gid_);
    std::swap(serverid_, other->serverid_);
    std::swap(contrinum_, other->contrinum_);
    std::swap(guildinfo_, other->guildinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGuildContriInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGuildContriInfo_descriptor_;
  metadata.reflection = TAllyWarGuildContriInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarAllyMatchInfo::kMatchIdFieldNumber;
const int TAllyWarAllyMatchInfo::kAtkAllyIdFieldNumber;
const int TAllyWarAllyMatchInfo::kDefAllyIdFieldNumber;
const int TAllyWarAllyMatchInfo::kDoneTimeFieldNumber;
const int TAllyWarAllyMatchInfo::kWinAllyIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarAllyMatchInfo::TAllyWarAllyMatchInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarAllyMatchInfo)
}

void TAllyWarAllyMatchInfo::InitAsDefaultInstance() {
}

TAllyWarAllyMatchInfo::TAllyWarAllyMatchInfo(const TAllyWarAllyMatchInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarAllyMatchInfo)
}

void TAllyWarAllyMatchInfo::SharedCtor() {
  _cached_size_ = 0;
  matchid_ = 0u;
  atkallyid_ = GOOGLE_ULONGLONG(0);
  defallyid_ = GOOGLE_ULONGLONG(0);
  donetime_ = GOOGLE_ULONGLONG(0);
  winallyid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarAllyMatchInfo::~TAllyWarAllyMatchInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarAllyMatchInfo)
  SharedDtor();
}

void TAllyWarAllyMatchInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarAllyMatchInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarAllyMatchInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarAllyMatchInfo_descriptor_;
}

const TAllyWarAllyMatchInfo& TAllyWarAllyMatchInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarAllyMatchInfo* TAllyWarAllyMatchInfo::default_instance_ = NULL;

TAllyWarAllyMatchInfo* TAllyWarAllyMatchInfo::New() const {
  return new TAllyWarAllyMatchInfo;
}

void TAllyWarAllyMatchInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarAllyMatchInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(atkallyid_, matchid_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarAllyMatchInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarAllyMatchInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MatchId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
          set_has_matchid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AtkAllyId;
        break;
      }

      // optional uint64 AtkAllyId = 2;
      case 2: {
        if (tag == 16) {
         parse_AtkAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &atkallyid_)));
          set_has_atkallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DefAllyId;
        break;
      }

      // optional uint64 DefAllyId = 3;
      case 3: {
        if (tag == 24) {
         parse_DefAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &defallyid_)));
          set_has_defallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DoneTime;
        break;
      }

      // optional uint64 DoneTime = 4;
      case 4: {
        if (tag == 32) {
         parse_DoneTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &donetime_)));
          set_has_donetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_WinAllyId;
        break;
      }

      // optional uint64 WinAllyId = 5;
      case 5: {
        if (tag == 40) {
         parse_WinAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &winallyid_)));
          set_has_winallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarAllyMatchInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarAllyMatchInfo)
  return false;
#undef DO_
}

void TAllyWarAllyMatchInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarAllyMatchInfo)
  // optional uint32 MatchId = 1;
  if (has_matchid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // optional uint64 AtkAllyId = 2;
  if (has_atkallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->atkallyid(), output);
  }

  // optional uint64 DefAllyId = 3;
  if (has_defallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->defallyid(), output);
  }

  // optional uint64 DoneTime = 4;
  if (has_donetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->donetime(), output);
  }

  // optional uint64 WinAllyId = 5;
  if (has_winallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->winallyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarAllyMatchInfo)
}

::google::protobuf::uint8* TAllyWarAllyMatchInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarAllyMatchInfo)
  // optional uint32 MatchId = 1;
  if (has_matchid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // optional uint64 AtkAllyId = 2;
  if (has_atkallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->atkallyid(), target);
  }

  // optional uint64 DefAllyId = 3;
  if (has_defallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->defallyid(), target);
  }

  // optional uint64 DoneTime = 4;
  if (has_donetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->donetime(), target);
  }

  // optional uint64 WinAllyId = 5;
  if (has_winallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->winallyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarAllyMatchInfo)
  return target;
}

int TAllyWarAllyMatchInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MatchId = 1;
    if (has_matchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matchid());
    }

    // optional uint64 AtkAllyId = 2;
    if (has_atkallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->atkallyid());
    }

    // optional uint64 DefAllyId = 3;
    if (has_defallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->defallyid());
    }

    // optional uint64 DoneTime = 4;
    if (has_donetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->donetime());
    }

    // optional uint64 WinAllyId = 5;
    if (has_winallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->winallyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarAllyMatchInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarAllyMatchInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarAllyMatchInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarAllyMatchInfo::MergeFrom(const TAllyWarAllyMatchInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_matchid()) {
      set_matchid(from.matchid());
    }
    if (from.has_atkallyid()) {
      set_atkallyid(from.atkallyid());
    }
    if (from.has_defallyid()) {
      set_defallyid(from.defallyid());
    }
    if (from.has_donetime()) {
      set_donetime(from.donetime());
    }
    if (from.has_winallyid()) {
      set_winallyid(from.winallyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarAllyMatchInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarAllyMatchInfo::CopyFrom(const TAllyWarAllyMatchInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarAllyMatchInfo::IsInitialized() const {

  return true;
}

void TAllyWarAllyMatchInfo::Swap(TAllyWarAllyMatchInfo* other) {
  if (other != this) {
    std::swap(matchid_, other->matchid_);
    std::swap(atkallyid_, other->atkallyid_);
    std::swap(defallyid_, other->defallyid_);
    std::swap(donetime_, other->donetime_);
    std::swap(winallyid_, other->winallyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarAllyMatchInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarAllyMatchInfo_descriptor_;
  metadata.reflection = TAllyWarAllyMatchInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarFieldUnitInfo::kPosIdFieldNumber;
const int TAllyWarFieldUnitInfo::kUidFieldNumber;
const int TAllyWarFieldUnitInfo::kServerIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarFieldUnitInfo::TAllyWarFieldUnitInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarFieldUnitInfo)
}

void TAllyWarFieldUnitInfo::InitAsDefaultInstance() {
}

TAllyWarFieldUnitInfo::TAllyWarFieldUnitInfo(const TAllyWarFieldUnitInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarFieldUnitInfo)
}

void TAllyWarFieldUnitInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  posid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarFieldUnitInfo::~TAllyWarFieldUnitInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarFieldUnitInfo)
  SharedDtor();
}

void TAllyWarFieldUnitInfo::SharedDtor() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (this != default_instance_) {
  }
}

void TAllyWarFieldUnitInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarFieldUnitInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarFieldUnitInfo_descriptor_;
}

const TAllyWarFieldUnitInfo& TAllyWarFieldUnitInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarFieldUnitInfo* TAllyWarFieldUnitInfo::default_instance_ = NULL;

TAllyWarFieldUnitInfo* TAllyWarFieldUnitInfo::New() const {
  return new TAllyWarFieldUnitInfo;
}

void TAllyWarFieldUnitInfo::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    posid_ = 0u;
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_serverid()) {
      if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarFieldUnitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarFieldUnitInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PosId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 2;
      case 2: {
        if (tag == 16) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ServerId;
        break;
      }

      // optional string ServerId = 3;
      case 3: {
        if (tag == 26) {
         parse_ServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverid().data(), this->serverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarFieldUnitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarFieldUnitInfo)
  return false;
#undef DO_
}

void TAllyWarFieldUnitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarFieldUnitInfo)
  // optional uint32 PosId = 1;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->posid(), output);
  }

  // optional uint64 Uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // optional string ServerId = 3;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarFieldUnitInfo)
}

::google::protobuf::uint8* TAllyWarFieldUnitInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarFieldUnitInfo)
  // optional uint32 PosId = 1;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->posid(), target);
  }

  // optional uint64 Uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // optional string ServerId = 3;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarFieldUnitInfo)
  return target;
}

int TAllyWarFieldUnitInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PosId = 1;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

    // optional uint64 Uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string ServerId = 3;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarFieldUnitInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarFieldUnitInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarFieldUnitInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarFieldUnitInfo::MergeFrom(const TAllyWarFieldUnitInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_posid()) {
      set_posid(from.posid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarFieldUnitInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarFieldUnitInfo::CopyFrom(const TAllyWarFieldUnitInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarFieldUnitInfo::IsInitialized() const {

  return true;
}

void TAllyWarFieldUnitInfo::Swap(TAllyWarFieldUnitInfo* other) {
  if (other != this) {
    std::swap(posid_, other->posid_);
    std::swap(uid_, other->uid_);
    std::swap(serverid_, other->serverid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarFieldUnitInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarFieldUnitInfo_descriptor_;
  metadata.reflection = TAllyWarFieldUnitInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarFieldAreaInfo::kAreaIdFieldNumber;
const int TAllyWarFieldAreaInfo::kArrUnitFieldNumber;
const int TAllyWarFieldAreaInfo::kDoneTimeFieldNumber;
const int TAllyWarFieldAreaInfo::kWinAllyIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarFieldAreaInfo::TAllyWarFieldAreaInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarFieldAreaInfo)
}

void TAllyWarFieldAreaInfo::InitAsDefaultInstance() {
}

TAllyWarFieldAreaInfo::TAllyWarFieldAreaInfo(const TAllyWarFieldAreaInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarFieldAreaInfo)
}

void TAllyWarFieldAreaInfo::SharedCtor() {
  _cached_size_ = 0;
  areaid_ = 0u;
  donetime_ = GOOGLE_ULONGLONG(0);
  winallyid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarFieldAreaInfo::~TAllyWarFieldAreaInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarFieldAreaInfo)
  SharedDtor();
}

void TAllyWarFieldAreaInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarFieldAreaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarFieldAreaInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarFieldAreaInfo_descriptor_;
}

const TAllyWarFieldAreaInfo& TAllyWarFieldAreaInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarFieldAreaInfo* TAllyWarFieldAreaInfo::default_instance_ = NULL;

TAllyWarFieldAreaInfo* TAllyWarFieldAreaInfo::New() const {
  return new TAllyWarFieldAreaInfo;
}

void TAllyWarFieldAreaInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarFieldAreaInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(donetime_, areaid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrunit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarFieldAreaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarFieldAreaInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AreaId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &areaid_)));
          set_has_areaid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUnit;
        break;
      }

      // repeated .pb.TAllyWarFieldUnitInfo ArrUnit = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrUnit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrunit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUnit;
        if (input->ExpectTag(24)) goto parse_DoneTime;
        break;
      }

      // optional uint64 DoneTime = 3;
      case 3: {
        if (tag == 24) {
         parse_DoneTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &donetime_)));
          set_has_donetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_WinAllyId;
        break;
      }

      // optional uint64 WinAllyId = 4;
      case 4: {
        if (tag == 32) {
         parse_WinAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &winallyid_)));
          set_has_winallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarFieldAreaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarFieldAreaInfo)
  return false;
#undef DO_
}

void TAllyWarFieldAreaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarFieldAreaInfo)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->areaid(), output);
  }

  // repeated .pb.TAllyWarFieldUnitInfo ArrUnit = 2;
  for (int i = 0; i < this->arrunit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrunit(i), output);
  }

  // optional uint64 DoneTime = 3;
  if (has_donetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->donetime(), output);
  }

  // optional uint64 WinAllyId = 4;
  if (has_winallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->winallyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarFieldAreaInfo)
}

::google::protobuf::uint8* TAllyWarFieldAreaInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarFieldAreaInfo)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->areaid(), target);
  }

  // repeated .pb.TAllyWarFieldUnitInfo ArrUnit = 2;
  for (int i = 0; i < this->arrunit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrunit(i), target);
  }

  // optional uint64 DoneTime = 3;
  if (has_donetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->donetime(), target);
  }

  // optional uint64 WinAllyId = 4;
  if (has_winallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->winallyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarFieldAreaInfo)
  return target;
}

int TAllyWarFieldAreaInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AreaId = 1;
    if (has_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->areaid());
    }

    // optional uint64 DoneTime = 3;
    if (has_donetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->donetime());
    }

    // optional uint64 WinAllyId = 4;
    if (has_winallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->winallyid());
    }

  }
  // repeated .pb.TAllyWarFieldUnitInfo ArrUnit = 2;
  total_size += 1 * this->arrunit_size();
  for (int i = 0; i < this->arrunit_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrunit(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarFieldAreaInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarFieldAreaInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarFieldAreaInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarFieldAreaInfo::MergeFrom(const TAllyWarFieldAreaInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrunit_.MergeFrom(from.arrunit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_areaid()) {
      set_areaid(from.areaid());
    }
    if (from.has_donetime()) {
      set_donetime(from.donetime());
    }
    if (from.has_winallyid()) {
      set_winallyid(from.winallyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarFieldAreaInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarFieldAreaInfo::CopyFrom(const TAllyWarFieldAreaInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarFieldAreaInfo::IsInitialized() const {

  return true;
}

void TAllyWarFieldAreaInfo::Swap(TAllyWarFieldAreaInfo* other) {
  if (other != this) {
    std::swap(areaid_, other->areaid_);
    arrunit_.Swap(&other->arrunit_);
    std::swap(donetime_, other->donetime_);
    std::swap(winallyid_, other->winallyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarFieldAreaInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarFieldAreaInfo_descriptor_;
  metadata.reflection = TAllyWarFieldAreaInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarDeployInfo::kAreaIdFieldNumber;
const int TAllyWarDeployInfo::kPosIdFieldNumber;
const int TAllyWarDeployInfo::kUidFieldNumber;
const int TAllyWarDeployInfo::kServerIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarDeployInfo::TAllyWarDeployInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarDeployInfo)
}

void TAllyWarDeployInfo::InitAsDefaultInstance() {
}

TAllyWarDeployInfo::TAllyWarDeployInfo(const TAllyWarDeployInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarDeployInfo)
}

void TAllyWarDeployInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  areaid_ = 0u;
  posid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarDeployInfo::~TAllyWarDeployInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarDeployInfo)
  SharedDtor();
}

void TAllyWarDeployInfo::SharedDtor() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (this != default_instance_) {
  }
}

void TAllyWarDeployInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarDeployInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarDeployInfo_descriptor_;
}

const TAllyWarDeployInfo& TAllyWarDeployInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarDeployInfo* TAllyWarDeployInfo::default_instance_ = NULL;

TAllyWarDeployInfo* TAllyWarDeployInfo::New() const {
  return new TAllyWarDeployInfo;
}

void TAllyWarDeployInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarDeployInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(areaid_, uid_);
    if (has_serverid()) {
      if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarDeployInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarDeployInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AreaId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &areaid_)));
          set_has_areaid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 3;
      case 3: {
        if (tag == 24) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ServerId;
        break;
      }

      // optional string ServerId = 4;
      case 4: {
        if (tag == 34) {
         parse_ServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverid().data(), this->serverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarDeployInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarDeployInfo)
  return false;
#undef DO_
}

void TAllyWarDeployInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarDeployInfo)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->areaid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uid(), output);
  }

  // optional string ServerId = 4;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serverid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarDeployInfo)
}

::google::protobuf::uint8* TAllyWarDeployInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarDeployInfo)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->areaid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uid(), target);
  }

  // optional string ServerId = 4;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serverid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarDeployInfo)
  return target;
}

int TAllyWarDeployInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AreaId = 1;
    if (has_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->areaid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

    // optional uint64 Uid = 3;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string ServerId = 4;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarDeployInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarDeployInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarDeployInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarDeployInfo::MergeFrom(const TAllyWarDeployInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_areaid()) {
      set_areaid(from.areaid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarDeployInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarDeployInfo::CopyFrom(const TAllyWarDeployInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarDeployInfo::IsInitialized() const {

  return true;
}

void TAllyWarDeployInfo::Swap(TAllyWarDeployInfo* other) {
  if (other != this) {
    std::swap(areaid_, other->areaid_);
    std::swap(posid_, other->posid_);
    std::swap(uid_, other->uid_);
    std::swap(serverid_, other->serverid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarDeployInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarDeployInfo_descriptor_;
  metadata.reflection = TAllyWarDeployInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarPosInfo::kPosFieldNumber;
const int TAllyWarPosInfo::kHidFieldNumber;
#endif  // !_MSC_VER

TAllyWarPosInfo::TAllyWarPosInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarPosInfo)
}

void TAllyWarPosInfo::InitAsDefaultInstance() {
}

TAllyWarPosInfo::TAllyWarPosInfo(const TAllyWarPosInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarPosInfo)
}

void TAllyWarPosInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarPosInfo::~TAllyWarPosInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarPosInfo)
  SharedDtor();
}

void TAllyWarPosInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarPosInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarPosInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarPosInfo_descriptor_;
}

const TAllyWarPosInfo& TAllyWarPosInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarPosInfo* TAllyWarPosInfo::default_instance_ = NULL;

TAllyWarPosInfo* TAllyWarPosInfo::New() const {
  return new TAllyWarPosInfo;
}

void TAllyWarPosInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarPosInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarPosInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarPosInfo)
  return false;
#undef DO_
}

void TAllyWarPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarPosInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarPosInfo)
}

::google::protobuf::uint8* TAllyWarPosInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarPosInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarPosInfo)
  return target;
}

int TAllyWarPosInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarPosInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarPosInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarPosInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarPosInfo::MergeFrom(const TAllyWarPosInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarPosInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarPosInfo::CopyFrom(const TAllyWarPosInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarPosInfo::IsInitialized() const {

  return true;
}

void TAllyWarPosInfo::Swap(TAllyWarPosInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarPosInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarPosInfo_descriptor_;
  metadata.reflection = TAllyWarPosInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarFmtInfo::kFmtIdFieldNumber;
const int TAllyWarFmtInfo::kArrPosFieldNumber;
#endif  // !_MSC_VER

TAllyWarFmtInfo::TAllyWarFmtInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarFmtInfo)
}

void TAllyWarFmtInfo::InitAsDefaultInstance() {
}

TAllyWarFmtInfo::TAllyWarFmtInfo(const TAllyWarFmtInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarFmtInfo)
}

void TAllyWarFmtInfo::SharedCtor() {
  _cached_size_ = 0;
  fmtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarFmtInfo::~TAllyWarFmtInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarFmtInfo)
  SharedDtor();
}

void TAllyWarFmtInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarFmtInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarFmtInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarFmtInfo_descriptor_;
}

const TAllyWarFmtInfo& TAllyWarFmtInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarFmtInfo* TAllyWarFmtInfo::default_instance_ = NULL;

TAllyWarFmtInfo* TAllyWarFmtInfo::New() const {
  return new TAllyWarFmtInfo;
}

void TAllyWarFmtInfo::Clear() {
  fmtid_ = 0u;
  arrpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarFmtInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarFmtInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FmtId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fmtid_)));
          set_has_fmtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrPos;
        break;
      }

      // repeated .pb.TAllyWarPosInfo ArrPos = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrPos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarFmtInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarFmtInfo)
  return false;
#undef DO_
}

void TAllyWarFmtInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarFmtInfo)
  // optional uint32 FmtId = 1;
  if (has_fmtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fmtid(), output);
  }

  // repeated .pb.TAllyWarPosInfo ArrPos = 2;
  for (int i = 0; i < this->arrpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrpos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarFmtInfo)
}

::google::protobuf::uint8* TAllyWarFmtInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarFmtInfo)
  // optional uint32 FmtId = 1;
  if (has_fmtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fmtid(), target);
  }

  // repeated .pb.TAllyWarPosInfo ArrPos = 2;
  for (int i = 0; i < this->arrpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrpos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarFmtInfo)
  return target;
}

int TAllyWarFmtInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FmtId = 1;
    if (has_fmtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fmtid());
    }

  }
  // repeated .pb.TAllyWarPosInfo ArrPos = 2;
  total_size += 1 * this->arrpos_size();
  for (int i = 0; i < this->arrpos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrpos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarFmtInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarFmtInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarFmtInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarFmtInfo::MergeFrom(const TAllyWarFmtInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrpos_.MergeFrom(from.arrpos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fmtid()) {
      set_fmtid(from.fmtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarFmtInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarFmtInfo::CopyFrom(const TAllyWarFmtInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarFmtInfo::IsInitialized() const {

  return true;
}

void TAllyWarFmtInfo::Swap(TAllyWarFmtInfo* other) {
  if (other != this) {
    std::swap(fmtid_, other->fmtid_);
    arrpos_.Swap(&other->arrpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarFmtInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarFmtInfo_descriptor_;
  metadata.reflection = TAllyWarFmtInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarFmtRecordInfo::kFmtIdFieldNumber;
const int TAllyWarFmtRecordInfo::kResultFieldNumber;
const int TAllyWarFmtRecordInfo::kRidFieldNumber;
#endif  // !_MSC_VER

TAllyWarFmtRecordInfo::TAllyWarFmtRecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarFmtRecordInfo)
}

void TAllyWarFmtRecordInfo::InitAsDefaultInstance() {
}

TAllyWarFmtRecordInfo::TAllyWarFmtRecordInfo(const TAllyWarFmtRecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarFmtRecordInfo)
}

void TAllyWarFmtRecordInfo::SharedCtor() {
  _cached_size_ = 0;
  fmtid_ = 0u;
  result_ = false;
  rid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarFmtRecordInfo::~TAllyWarFmtRecordInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarFmtRecordInfo)
  SharedDtor();
}

void TAllyWarFmtRecordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarFmtRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarFmtRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarFmtRecordInfo_descriptor_;
}

const TAllyWarFmtRecordInfo& TAllyWarFmtRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarFmtRecordInfo* TAllyWarFmtRecordInfo::default_instance_ = NULL;

TAllyWarFmtRecordInfo* TAllyWarFmtRecordInfo::New() const {
  return new TAllyWarFmtRecordInfo;
}

void TAllyWarFmtRecordInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarFmtRecordInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(fmtid_, rid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarFmtRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarFmtRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FmtId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fmtid_)));
          set_has_fmtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Result;
        break;
      }

      // optional bool Result = 2;
      case 2: {
        if (tag == 16) {
         parse_Result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Rid;
        break;
      }

      // optional uint64 Rid = 3;
      case 3: {
        if (tag == 24) {
         parse_Rid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarFmtRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarFmtRecordInfo)
  return false;
#undef DO_
}

void TAllyWarFmtRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarFmtRecordInfo)
  // optional uint32 FmtId = 1;
  if (has_fmtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fmtid(), output);
  }

  // optional bool Result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->result(), output);
  }

  // optional uint64 Rid = 3;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->rid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarFmtRecordInfo)
}

::google::protobuf::uint8* TAllyWarFmtRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarFmtRecordInfo)
  // optional uint32 FmtId = 1;
  if (has_fmtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fmtid(), target);
  }

  // optional bool Result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->result(), target);
  }

  // optional uint64 Rid = 3;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->rid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarFmtRecordInfo)
  return target;
}

int TAllyWarFmtRecordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FmtId = 1;
    if (has_fmtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fmtid());
    }

    // optional bool Result = 2;
    if (has_result()) {
      total_size += 1 + 1;
    }

    // optional uint64 Rid = 3;
    if (has_rid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarFmtRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarFmtRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarFmtRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarFmtRecordInfo::MergeFrom(const TAllyWarFmtRecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fmtid()) {
      set_fmtid(from.fmtid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_rid()) {
      set_rid(from.rid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarFmtRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarFmtRecordInfo::CopyFrom(const TAllyWarFmtRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarFmtRecordInfo::IsInitialized() const {

  return true;
}

void TAllyWarFmtRecordInfo::Swap(TAllyWarFmtRecordInfo* other) {
  if (other != this) {
    std::swap(fmtid_, other->fmtid_);
    std::swap(result_, other->result_);
    std::swap(rid_, other->rid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarFmtRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarFmtRecordInfo_descriptor_;
  metadata.reflection = TAllyWarFmtRecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarUnitRecordInfo::kAtkUidFieldNumber;
const int TAllyWarUnitRecordInfo::kAtkServerIdFieldNumber;
const int TAllyWarUnitRecordInfo::kDefUidFieldNumber;
const int TAllyWarUnitRecordInfo::kDefServerIdFieldNumber;
const int TAllyWarUnitRecordInfo::kWinUidFieldNumber;
const int TAllyWarUnitRecordInfo::kContiWinNumFieldNumber;
const int TAllyWarUnitRecordInfo::kArrFmtRecordFieldNumber;
#endif  // !_MSC_VER

TAllyWarUnitRecordInfo::TAllyWarUnitRecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarUnitRecordInfo)
}

void TAllyWarUnitRecordInfo::InitAsDefaultInstance() {
}

TAllyWarUnitRecordInfo::TAllyWarUnitRecordInfo(const TAllyWarUnitRecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarUnitRecordInfo)
}

void TAllyWarUnitRecordInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  atkuid_ = GOOGLE_ULONGLONG(0);
  atkserverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defuid_ = GOOGLE_ULONGLONG(0);
  defserverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winuid_ = GOOGLE_ULONGLONG(0);
  contiwinnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarUnitRecordInfo::~TAllyWarUnitRecordInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarUnitRecordInfo)
  SharedDtor();
}

void TAllyWarUnitRecordInfo::SharedDtor() {
  if (atkserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete atkserverid_;
  }
  if (defserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete defserverid_;
  }
  if (this != default_instance_) {
  }
}

void TAllyWarUnitRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarUnitRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarUnitRecordInfo_descriptor_;
}

const TAllyWarUnitRecordInfo& TAllyWarUnitRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarUnitRecordInfo* TAllyWarUnitRecordInfo::default_instance_ = NULL;

TAllyWarUnitRecordInfo* TAllyWarUnitRecordInfo::New() const {
  return new TAllyWarUnitRecordInfo;
}

void TAllyWarUnitRecordInfo::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    atkuid_ = GOOGLE_ULONGLONG(0);
    if (has_atkserverid()) {
      if (atkserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        atkserverid_->clear();
      }
    }
    defuid_ = GOOGLE_ULONGLONG(0);
    if (has_defserverid()) {
      if (defserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        defserverid_->clear();
      }
    }
    winuid_ = GOOGLE_ULONGLONG(0);
    contiwinnum_ = 0u;
  }
  arrfmtrecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarUnitRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarUnitRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AtkUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &atkuid_)));
          set_has_atkuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AtkServerId;
        break;
      }

      // optional string AtkServerId = 2;
      case 2: {
        if (tag == 18) {
         parse_AtkServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_atkserverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->atkserverid().data(), this->atkserverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "atkserverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DefUid;
        break;
      }

      // optional uint64 DefUid = 3;
      case 3: {
        if (tag == 24) {
         parse_DefUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &defuid_)));
          set_has_defuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_DefServerId;
        break;
      }

      // optional string DefServerId = 4;
      case 4: {
        if (tag == 34) {
         parse_DefServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_defserverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->defserverid().data(), this->defserverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "defserverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_WinUid;
        break;
      }

      // optional uint64 WinUid = 5;
      case 5: {
        if (tag == 40) {
         parse_WinUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &winuid_)));
          set_has_winuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ContiWinNum;
        break;
      }

      // optional uint32 ContiWinNum = 6;
      case 6: {
        if (tag == 48) {
         parse_ContiWinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contiwinnum_)));
          set_has_contiwinnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ArrFmtRecord;
        break;
      }

      // repeated .pb.TAllyWarFmtRecordInfo ArrFmtRecord = 7;
      case 7: {
        if (tag == 58) {
         parse_ArrFmtRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrfmtrecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ArrFmtRecord;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarUnitRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarUnitRecordInfo)
  return false;
#undef DO_
}

void TAllyWarUnitRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarUnitRecordInfo)
  // optional uint64 AtkUid = 1;
  if (has_atkuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->atkuid(), output);
  }

  // optional string AtkServerId = 2;
  if (has_atkserverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->atkserverid().data(), this->atkserverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "atkserverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->atkserverid(), output);
  }

  // optional uint64 DefUid = 3;
  if (has_defuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->defuid(), output);
  }

  // optional string DefServerId = 4;
  if (has_defserverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->defserverid().data(), this->defserverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "defserverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->defserverid(), output);
  }

  // optional uint64 WinUid = 5;
  if (has_winuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->winuid(), output);
  }

  // optional uint32 ContiWinNum = 6;
  if (has_contiwinnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->contiwinnum(), output);
  }

  // repeated .pb.TAllyWarFmtRecordInfo ArrFmtRecord = 7;
  for (int i = 0; i < this->arrfmtrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->arrfmtrecord(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarUnitRecordInfo)
}

::google::protobuf::uint8* TAllyWarUnitRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarUnitRecordInfo)
  // optional uint64 AtkUid = 1;
  if (has_atkuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->atkuid(), target);
  }

  // optional string AtkServerId = 2;
  if (has_atkserverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->atkserverid().data(), this->atkserverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "atkserverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->atkserverid(), target);
  }

  // optional uint64 DefUid = 3;
  if (has_defuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->defuid(), target);
  }

  // optional string DefServerId = 4;
  if (has_defserverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->defserverid().data(), this->defserverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "defserverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->defserverid(), target);
  }

  // optional uint64 WinUid = 5;
  if (has_winuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->winuid(), target);
  }

  // optional uint32 ContiWinNum = 6;
  if (has_contiwinnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->contiwinnum(), target);
  }

  // repeated .pb.TAllyWarFmtRecordInfo ArrFmtRecord = 7;
  for (int i = 0; i < this->arrfmtrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->arrfmtrecord(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarUnitRecordInfo)
  return target;
}

int TAllyWarUnitRecordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 AtkUid = 1;
    if (has_atkuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->atkuid());
    }

    // optional string AtkServerId = 2;
    if (has_atkserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->atkserverid());
    }

    // optional uint64 DefUid = 3;
    if (has_defuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->defuid());
    }

    // optional string DefServerId = 4;
    if (has_defserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->defserverid());
    }

    // optional uint64 WinUid = 5;
    if (has_winuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->winuid());
    }

    // optional uint32 ContiWinNum = 6;
    if (has_contiwinnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->contiwinnum());
    }

  }
  // repeated .pb.TAllyWarFmtRecordInfo ArrFmtRecord = 7;
  total_size += 1 * this->arrfmtrecord_size();
  for (int i = 0; i < this->arrfmtrecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrfmtrecord(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarUnitRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarUnitRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarUnitRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarUnitRecordInfo::MergeFrom(const TAllyWarUnitRecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrfmtrecord_.MergeFrom(from.arrfmtrecord_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_atkuid()) {
      set_atkuid(from.atkuid());
    }
    if (from.has_atkserverid()) {
      set_atkserverid(from.atkserverid());
    }
    if (from.has_defuid()) {
      set_defuid(from.defuid());
    }
    if (from.has_defserverid()) {
      set_defserverid(from.defserverid());
    }
    if (from.has_winuid()) {
      set_winuid(from.winuid());
    }
    if (from.has_contiwinnum()) {
      set_contiwinnum(from.contiwinnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarUnitRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarUnitRecordInfo::CopyFrom(const TAllyWarUnitRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarUnitRecordInfo::IsInitialized() const {

  return true;
}

void TAllyWarUnitRecordInfo::Swap(TAllyWarUnitRecordInfo* other) {
  if (other != this) {
    std::swap(atkuid_, other->atkuid_);
    std::swap(atkserverid_, other->atkserverid_);
    std::swap(defuid_, other->defuid_);
    std::swap(defserverid_, other->defserverid_);
    std::swap(winuid_, other->winuid_);
    std::swap(contiwinnum_, other->contiwinnum_);
    arrfmtrecord_.Swap(&other->arrfmtrecord_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarUnitRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarUnitRecordInfo_descriptor_;
  metadata.reflection = TAllyWarUnitRecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarAreaRecordInfo::kAreaIdFieldNumber;
const int TAllyWarAreaRecordInfo::kArrUnitRecordFieldNumber;
const int TAllyWarAreaRecordInfo::kDoneTimeFieldNumber;
const int TAllyWarAreaRecordInfo::kWinAllyIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarAreaRecordInfo::TAllyWarAreaRecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarAreaRecordInfo)
}

void TAllyWarAreaRecordInfo::InitAsDefaultInstance() {
}

TAllyWarAreaRecordInfo::TAllyWarAreaRecordInfo(const TAllyWarAreaRecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarAreaRecordInfo)
}

void TAllyWarAreaRecordInfo::SharedCtor() {
  _cached_size_ = 0;
  areaid_ = 0u;
  donetime_ = GOOGLE_ULONGLONG(0);
  winallyid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarAreaRecordInfo::~TAllyWarAreaRecordInfo() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarAreaRecordInfo)
  SharedDtor();
}

void TAllyWarAreaRecordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarAreaRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarAreaRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarAreaRecordInfo_descriptor_;
}

const TAllyWarAreaRecordInfo& TAllyWarAreaRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarAreaRecordInfo* TAllyWarAreaRecordInfo::default_instance_ = NULL;

TAllyWarAreaRecordInfo* TAllyWarAreaRecordInfo::New() const {
  return new TAllyWarAreaRecordInfo;
}

void TAllyWarAreaRecordInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarAreaRecordInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(donetime_, areaid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrunitrecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarAreaRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarAreaRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AreaId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &areaid_)));
          set_has_areaid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUnitRecord;
        break;
      }

      // repeated .pb.TAllyWarUnitRecordInfo ArrUnitRecord = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrUnitRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrunitrecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUnitRecord;
        if (input->ExpectTag(24)) goto parse_DoneTime;
        break;
      }

      // optional uint64 DoneTime = 3;
      case 3: {
        if (tag == 24) {
         parse_DoneTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &donetime_)));
          set_has_donetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_WinAllyId;
        break;
      }

      // optional uint64 WinAllyId = 5;
      case 5: {
        if (tag == 40) {
         parse_WinAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &winallyid_)));
          set_has_winallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarAreaRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarAreaRecordInfo)
  return false;
#undef DO_
}

void TAllyWarAreaRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarAreaRecordInfo)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->areaid(), output);
  }

  // repeated .pb.TAllyWarUnitRecordInfo ArrUnitRecord = 2;
  for (int i = 0; i < this->arrunitrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrunitrecord(i), output);
  }

  // optional uint64 DoneTime = 3;
  if (has_donetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->donetime(), output);
  }

  // optional uint64 WinAllyId = 5;
  if (has_winallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->winallyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarAreaRecordInfo)
}

::google::protobuf::uint8* TAllyWarAreaRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarAreaRecordInfo)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->areaid(), target);
  }

  // repeated .pb.TAllyWarUnitRecordInfo ArrUnitRecord = 2;
  for (int i = 0; i < this->arrunitrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrunitrecord(i), target);
  }

  // optional uint64 DoneTime = 3;
  if (has_donetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->donetime(), target);
  }

  // optional uint64 WinAllyId = 5;
  if (has_winallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->winallyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarAreaRecordInfo)
  return target;
}

int TAllyWarAreaRecordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AreaId = 1;
    if (has_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->areaid());
    }

    // optional uint64 DoneTime = 3;
    if (has_donetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->donetime());
    }

    // optional uint64 WinAllyId = 5;
    if (has_winallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->winallyid());
    }

  }
  // repeated .pb.TAllyWarUnitRecordInfo ArrUnitRecord = 2;
  total_size += 1 * this->arrunitrecord_size();
  for (int i = 0; i < this->arrunitrecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrunitrecord(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarAreaRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarAreaRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarAreaRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarAreaRecordInfo::MergeFrom(const TAllyWarAreaRecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrunitrecord_.MergeFrom(from.arrunitrecord_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_areaid()) {
      set_areaid(from.areaid());
    }
    if (from.has_donetime()) {
      set_donetime(from.donetime());
    }
    if (from.has_winallyid()) {
      set_winallyid(from.winallyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarAreaRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarAreaRecordInfo::CopyFrom(const TAllyWarAreaRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarAreaRecordInfo::IsInitialized() const {

  return true;
}

void TAllyWarAreaRecordInfo::Swap(TAllyWarAreaRecordInfo* other) {
  if (other != this) {
    std::swap(areaid_, other->areaid_);
    arrunitrecord_.Swap(&other->arrunitrecord_);
    std::swap(donetime_, other->donetime_);
    std::swap(winallyid_, other->winallyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarAreaRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarAreaRecordInfo_descriptor_;
  metadata.reflection = TAllyWarAreaRecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllianceSimpleInfoWithUser::kAllianceSimpleInfoFieldNumber;
const int TAllianceSimpleInfoWithUser::kArrUserBaseInfoFieldNumber;
#endif  // !_MSC_VER

TAllianceSimpleInfoWithUser::TAllianceSimpleInfoWithUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllianceSimpleInfoWithUser)
}

void TAllianceSimpleInfoWithUser::InitAsDefaultInstance() {
  alliancesimpleinfo_ = const_cast< ::pb::TAllianceSimpleInfo*>(&::pb::TAllianceSimpleInfo::default_instance());
}

TAllianceSimpleInfoWithUser::TAllianceSimpleInfoWithUser(const TAllianceSimpleInfoWithUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllianceSimpleInfoWithUser)
}

void TAllianceSimpleInfoWithUser::SharedCtor() {
  _cached_size_ = 0;
  alliancesimpleinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllianceSimpleInfoWithUser::~TAllianceSimpleInfoWithUser() {
  // @@protoc_insertion_point(destructor:pb.TAllianceSimpleInfoWithUser)
  SharedDtor();
}

void TAllianceSimpleInfoWithUser::SharedDtor() {
  if (this != default_instance_) {
    delete alliancesimpleinfo_;
  }
}

void TAllianceSimpleInfoWithUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllianceSimpleInfoWithUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllianceSimpleInfoWithUser_descriptor_;
}

const TAllianceSimpleInfoWithUser& TAllianceSimpleInfoWithUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllianceSimpleInfoWithUser* TAllianceSimpleInfoWithUser::default_instance_ = NULL;

TAllianceSimpleInfoWithUser* TAllianceSimpleInfoWithUser::New() const {
  return new TAllianceSimpleInfoWithUser;
}

void TAllianceSimpleInfoWithUser::Clear() {
  if (has_alliancesimpleinfo()) {
    if (alliancesimpleinfo_ != NULL) alliancesimpleinfo_->::pb::TAllianceSimpleInfo::Clear();
  }
  arruserbaseinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllianceSimpleInfoWithUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllianceSimpleInfoWithUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TAllianceSimpleInfo AllianceSimpleInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alliancesimpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUserBaseInfo;
        break;
      }

      // repeated .pb.TAllyWarUserBaseInfo ArrUserBaseInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrUserBaseInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserbaseinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrUserBaseInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllianceSimpleInfoWithUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllianceSimpleInfoWithUser)
  return false;
#undef DO_
}

void TAllianceSimpleInfoWithUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllianceSimpleInfoWithUser)
  // optional .pb.TAllianceSimpleInfo AllianceSimpleInfo = 1;
  if (has_alliancesimpleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->alliancesimpleinfo(), output);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserBaseInfo = 2;
  for (int i = 0; i < this->arruserbaseinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arruserbaseinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllianceSimpleInfoWithUser)
}

::google::protobuf::uint8* TAllianceSimpleInfoWithUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllianceSimpleInfoWithUser)
  // optional .pb.TAllianceSimpleInfo AllianceSimpleInfo = 1;
  if (has_alliancesimpleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->alliancesimpleinfo(), target);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserBaseInfo = 2;
  for (int i = 0; i < this->arruserbaseinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arruserbaseinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllianceSimpleInfoWithUser)
  return target;
}

int TAllianceSimpleInfoWithUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TAllianceSimpleInfo AllianceSimpleInfo = 1;
    if (has_alliancesimpleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alliancesimpleinfo());
    }

  }
  // repeated .pb.TAllyWarUserBaseInfo ArrUserBaseInfo = 2;
  total_size += 1 * this->arruserbaseinfo_size();
  for (int i = 0; i < this->arruserbaseinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserbaseinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllianceSimpleInfoWithUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllianceSimpleInfoWithUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllianceSimpleInfoWithUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllianceSimpleInfoWithUser::MergeFrom(const TAllianceSimpleInfoWithUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  arruserbaseinfo_.MergeFrom(from.arruserbaseinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_alliancesimpleinfo()) {
      mutable_alliancesimpleinfo()->::pb::TAllianceSimpleInfo::MergeFrom(from.alliancesimpleinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllianceSimpleInfoWithUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllianceSimpleInfoWithUser::CopyFrom(const TAllianceSimpleInfoWithUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllianceSimpleInfoWithUser::IsInitialized() const {

  return true;
}

void TAllianceSimpleInfoWithUser::Swap(TAllianceSimpleInfoWithUser* other) {
  if (other != this) {
    std::swap(alliancesimpleinfo_, other->alliancesimpleinfo_);
    arruserbaseinfo_.Swap(&other->arruserbaseinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllianceSimpleInfoWithUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllianceSimpleInfoWithUser_descriptor_;
  metadata.reflection = TAllianceSimpleInfoWithUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetBaseInfoRsp::kArrExpectProcessFieldNumber;
const int TAllyWarGetBaseInfoRsp::kFuncOpenFieldNumber;
const int TAllyWarGetBaseInfoRsp::kActualProcessFieldNumber;
const int TAllyWarGetBaseInfoRsp::kSceneIdFieldNumber;
const int TAllyWarGetBaseInfoRsp::kSignAllyNumFieldNumber;
const int TAllyWarGetBaseInfoRsp::kSignTimeFieldNumber;
const int TAllyWarGetBaseInfoRsp::kMyAreaIdFieldNumber;
const int TAllyWarGetBaseInfoRsp::kMyPosIdFieldNumber;
const int TAllyWarGetBaseInfoRsp::kMyAllyInfoFieldNumber;
const int TAllyWarGetBaseInfoRsp::kEnemyAllyInfoFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetBaseInfoRsp::TAllyWarGetBaseInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetBaseInfoRsp)
}

void TAllyWarGetBaseInfoRsp::InitAsDefaultInstance() {
  actualprocess_ = const_cast< ::pb::TAllyWarActualProcess*>(&::pb::TAllyWarActualProcess::default_instance());
  myallyinfo_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
  enemyallyinfo_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
}

TAllyWarGetBaseInfoRsp::TAllyWarGetBaseInfoRsp(const TAllyWarGetBaseInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetBaseInfoRsp)
}

void TAllyWarGetBaseInfoRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  funcopen_ = false;
  actualprocess_ = NULL;
  sceneid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signallynum_ = 0u;
  signtime_ = GOOGLE_ULONGLONG(0);
  myareaid_ = 0u;
  myposid_ = 0u;
  myallyinfo_ = NULL;
  enemyallyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetBaseInfoRsp::~TAllyWarGetBaseInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetBaseInfoRsp)
  SharedDtor();
}

void TAllyWarGetBaseInfoRsp::SharedDtor() {
  if (sceneid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sceneid_;
  }
  if (this != default_instance_) {
    delete actualprocess_;
    delete myallyinfo_;
    delete enemyallyinfo_;
  }
}

void TAllyWarGetBaseInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetBaseInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetBaseInfoRsp_descriptor_;
}

const TAllyWarGetBaseInfoRsp& TAllyWarGetBaseInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetBaseInfoRsp* TAllyWarGetBaseInfoRsp::default_instance_ = NULL;

TAllyWarGetBaseInfoRsp* TAllyWarGetBaseInfoRsp::New() const {
  return new TAllyWarGetBaseInfoRsp;
}

void TAllyWarGetBaseInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarGetBaseInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 254) {
    ZR_(funcopen_, signallynum_);
    ZR_(signtime_, myposid_);
    if (has_actualprocess()) {
      if (actualprocess_ != NULL) actualprocess_->::pb::TAllyWarActualProcess::Clear();
    }
    if (has_sceneid()) {
      if (sceneid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sceneid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_myallyinfo()) {
      if (myallyinfo_ != NULL) myallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
    }
    if (has_enemyallyinfo()) {
      if (enemyallyinfo_ != NULL) enemyallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrexpectprocess_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetBaseInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetBaseInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAllyWarExpectProcess ArrExpectProcess = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrExpectProcess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrexpectprocess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrExpectProcess;
        if (input->ExpectTag(16)) goto parse_FuncOpen;
        break;
      }

      // optional bool FuncOpen = 2;
      case 2: {
        if (tag == 16) {
         parse_FuncOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &funcopen_)));
          set_has_funcopen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ActualProcess;
        break;
      }

      // optional .pb.TAllyWarActualProcess ActualProcess = 3;
      case 3: {
        if (tag == 26) {
         parse_ActualProcess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actualprocess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_SceneId;
        break;
      }

      // optional string SceneId = 4;
      case 4: {
        if (tag == 34) {
         parse_SceneId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sceneid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sceneid().data(), this->sceneid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sceneid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SignAllyNum;
        break;
      }

      // optional uint32 SignAllyNum = 5;
      case 5: {
        if (tag == 40) {
         parse_SignAllyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signallynum_)));
          set_has_signallynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_SignTime;
        break;
      }

      // optional uint64 SignTime = 6;
      case 6: {
        if (tag == 48) {
         parse_SignTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &signtime_)));
          set_has_signtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_MyAreaId;
        break;
      }

      // optional uint32 MyAreaId = 7;
      case 7: {
        if (tag == 56) {
         parse_MyAreaId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myareaid_)));
          set_has_myareaid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MyPosId;
        break;
      }

      // optional uint32 MyPosId = 8;
      case 8: {
        if (tag == 64) {
         parse_MyPosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myposid_)));
          set_has_myposid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_MyAllyInfo;
        break;
      }

      // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 9;
      case 9: {
        if (tag == 74) {
         parse_MyAllyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_myallyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_EnemyAllyInfo;
        break;
      }

      // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 10;
      case 10: {
        if (tag == 82) {
         parse_EnemyAllyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enemyallyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetBaseInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetBaseInfoRsp)
  return false;
#undef DO_
}

void TAllyWarGetBaseInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetBaseInfoRsp)
  // repeated .pb.TAllyWarExpectProcess ArrExpectProcess = 1;
  for (int i = 0; i < this->arrexpectprocess_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrexpectprocess(i), output);
  }

  // optional bool FuncOpen = 2;
  if (has_funcopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->funcopen(), output);
  }

  // optional .pb.TAllyWarActualProcess ActualProcess = 3;
  if (has_actualprocess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->actualprocess(), output);
  }

  // optional string SceneId = 4;
  if (has_sceneid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sceneid().data(), this->sceneid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sceneid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sceneid(), output);
  }

  // optional uint32 SignAllyNum = 5;
  if (has_signallynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->signallynum(), output);
  }

  // optional uint64 SignTime = 6;
  if (has_signtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->signtime(), output);
  }

  // optional uint32 MyAreaId = 7;
  if (has_myareaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->myareaid(), output);
  }

  // optional uint32 MyPosId = 8;
  if (has_myposid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->myposid(), output);
  }

  // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 9;
  if (has_myallyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->myallyinfo(), output);
  }

  // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 10;
  if (has_enemyallyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->enemyallyinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetBaseInfoRsp)
}

::google::protobuf::uint8* TAllyWarGetBaseInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetBaseInfoRsp)
  // repeated .pb.TAllyWarExpectProcess ArrExpectProcess = 1;
  for (int i = 0; i < this->arrexpectprocess_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrexpectprocess(i), target);
  }

  // optional bool FuncOpen = 2;
  if (has_funcopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->funcopen(), target);
  }

  // optional .pb.TAllyWarActualProcess ActualProcess = 3;
  if (has_actualprocess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->actualprocess(), target);
  }

  // optional string SceneId = 4;
  if (has_sceneid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sceneid().data(), this->sceneid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sceneid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sceneid(), target);
  }

  // optional uint32 SignAllyNum = 5;
  if (has_signallynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->signallynum(), target);
  }

  // optional uint64 SignTime = 6;
  if (has_signtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->signtime(), target);
  }

  // optional uint32 MyAreaId = 7;
  if (has_myareaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->myareaid(), target);
  }

  // optional uint32 MyPosId = 8;
  if (has_myposid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->myposid(), target);
  }

  // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 9;
  if (has_myallyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->myallyinfo(), target);
  }

  // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 10;
  if (has_enemyallyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->enemyallyinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetBaseInfoRsp)
  return target;
}

int TAllyWarGetBaseInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bool FuncOpen = 2;
    if (has_funcopen()) {
      total_size += 1 + 1;
    }

    // optional .pb.TAllyWarActualProcess ActualProcess = 3;
    if (has_actualprocess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actualprocess());
    }

    // optional string SceneId = 4;
    if (has_sceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sceneid());
    }

    // optional uint32 SignAllyNum = 5;
    if (has_signallynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signallynum());
    }

    // optional uint64 SignTime = 6;
    if (has_signtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->signtime());
    }

    // optional uint32 MyAreaId = 7;
    if (has_myareaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myareaid());
    }

    // optional uint32 MyPosId = 8;
    if (has_myposid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myposid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 9;
    if (has_myallyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->myallyinfo());
    }

    // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 10;
    if (has_enemyallyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enemyallyinfo());
    }

  }
  // repeated .pb.TAllyWarExpectProcess ArrExpectProcess = 1;
  total_size += 1 * this->arrexpectprocess_size();
  for (int i = 0; i < this->arrexpectprocess_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrexpectprocess(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetBaseInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetBaseInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetBaseInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetBaseInfoRsp::MergeFrom(const TAllyWarGetBaseInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrexpectprocess_.MergeFrom(from.arrexpectprocess_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_funcopen()) {
      set_funcopen(from.funcopen());
    }
    if (from.has_actualprocess()) {
      mutable_actualprocess()->::pb::TAllyWarActualProcess::MergeFrom(from.actualprocess());
    }
    if (from.has_sceneid()) {
      set_sceneid(from.sceneid());
    }
    if (from.has_signallynum()) {
      set_signallynum(from.signallynum());
    }
    if (from.has_signtime()) {
      set_signtime(from.signtime());
    }
    if (from.has_myareaid()) {
      set_myareaid(from.myareaid());
    }
    if (from.has_myposid()) {
      set_myposid(from.myposid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_myallyinfo()) {
      mutable_myallyinfo()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.myallyinfo());
    }
    if (from.has_enemyallyinfo()) {
      mutable_enemyallyinfo()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.enemyallyinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetBaseInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetBaseInfoRsp::CopyFrom(const TAllyWarGetBaseInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetBaseInfoRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetBaseInfoRsp::Swap(TAllyWarGetBaseInfoRsp* other) {
  if (other != this) {
    arrexpectprocess_.Swap(&other->arrexpectprocess_);
    std::swap(funcopen_, other->funcopen_);
    std::swap(actualprocess_, other->actualprocess_);
    std::swap(sceneid_, other->sceneid_);
    std::swap(signallynum_, other->signallynum_);
    std::swap(signtime_, other->signtime_);
    std::swap(myareaid_, other->myareaid_);
    std::swap(myposid_, other->myposid_);
    std::swap(myallyinfo_, other->myallyinfo_);
    std::swap(enemyallyinfo_, other->enemyallyinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetBaseInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetBaseInfoRsp_descriptor_;
  metadata.reflection = TAllyWarGetBaseInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetMatchInfoRsp::kArrMatchFieldNumber;
const int TAllyWarGetMatchInfoRsp::kArrBaseFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetMatchInfoRsp::TAllyWarGetMatchInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetMatchInfoRsp)
}

void TAllyWarGetMatchInfoRsp::InitAsDefaultInstance() {
}

TAllyWarGetMatchInfoRsp::TAllyWarGetMatchInfoRsp(const TAllyWarGetMatchInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetMatchInfoRsp)
}

void TAllyWarGetMatchInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetMatchInfoRsp::~TAllyWarGetMatchInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetMatchInfoRsp)
  SharedDtor();
}

void TAllyWarGetMatchInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarGetMatchInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetMatchInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetMatchInfoRsp_descriptor_;
}

const TAllyWarGetMatchInfoRsp& TAllyWarGetMatchInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetMatchInfoRsp* TAllyWarGetMatchInfoRsp::default_instance_ = NULL;

TAllyWarGetMatchInfoRsp* TAllyWarGetMatchInfoRsp::New() const {
  return new TAllyWarGetMatchInfoRsp;
}

void TAllyWarGetMatchInfoRsp::Clear() {
  arrmatch_.Clear();
  arrbase_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetMatchInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetMatchInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAllyWarAllyMatchInfo ArrMatch = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrMatch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrmatch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrMatch;
        if (input->ExpectTag(18)) goto parse_ArrBase;
        break;
      }

      // repeated .pb.TAllyWarAllyBaseInfo ArrBase = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrBase;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetMatchInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetMatchInfoRsp)
  return false;
#undef DO_
}

void TAllyWarGetMatchInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetMatchInfoRsp)
  // repeated .pb.TAllyWarAllyMatchInfo ArrMatch = 1;
  for (int i = 0; i < this->arrmatch_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrmatch(i), output);
  }

  // repeated .pb.TAllyWarAllyBaseInfo ArrBase = 2;
  for (int i = 0; i < this->arrbase_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrbase(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetMatchInfoRsp)
}

::google::protobuf::uint8* TAllyWarGetMatchInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetMatchInfoRsp)
  // repeated .pb.TAllyWarAllyMatchInfo ArrMatch = 1;
  for (int i = 0; i < this->arrmatch_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrmatch(i), target);
  }

  // repeated .pb.TAllyWarAllyBaseInfo ArrBase = 2;
  for (int i = 0; i < this->arrbase_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrbase(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetMatchInfoRsp)
  return target;
}

int TAllyWarGetMatchInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TAllyWarAllyMatchInfo ArrMatch = 1;
  total_size += 1 * this->arrmatch_size();
  for (int i = 0; i < this->arrmatch_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrmatch(i));
  }

  // repeated .pb.TAllyWarAllyBaseInfo ArrBase = 2;
  total_size += 1 * this->arrbase_size();
  for (int i = 0; i < this->arrbase_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrbase(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetMatchInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetMatchInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetMatchInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetMatchInfoRsp::MergeFrom(const TAllyWarGetMatchInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrmatch_.MergeFrom(from.arrmatch_);
  arrbase_.MergeFrom(from.arrbase_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetMatchInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetMatchInfoRsp::CopyFrom(const TAllyWarGetMatchInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetMatchInfoRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetMatchInfoRsp::Swap(TAllyWarGetMatchInfoRsp* other) {
  if (other != this) {
    arrmatch_.Swap(&other->arrmatch_);
    arrbase_.Swap(&other->arrbase_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetMatchInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetMatchInfoRsp_descriptor_;
  metadata.reflection = TAllyWarGetMatchInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetFieldInfoRsp::kMyAllyInfoFieldNumber;
const int TAllyWarGetFieldInfoRsp::kEnemyAllyInfoFieldNumber;
const int TAllyWarGetFieldInfoRsp::kArrAreaFieldNumber;
const int TAllyWarGetFieldInfoRsp::kArrCandiFieldNumber;
const int TAllyWarGetFieldInfoRsp::kArrUserInfoFieldNumber;
const int TAllyWarGetFieldInfoRsp::kDoneTimeFieldNumber;
const int TAllyWarGetFieldInfoRsp::kWinAllyIdFieldNumber;
const int TAllyWarGetFieldInfoRsp::kMatchIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetFieldInfoRsp::TAllyWarGetFieldInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetFieldInfoRsp)
}

void TAllyWarGetFieldInfoRsp::InitAsDefaultInstance() {
  myallyinfo_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
  enemyallyinfo_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
}

TAllyWarGetFieldInfoRsp::TAllyWarGetFieldInfoRsp(const TAllyWarGetFieldInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetFieldInfoRsp)
}

void TAllyWarGetFieldInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  myallyinfo_ = NULL;
  enemyallyinfo_ = NULL;
  donetime_ = GOOGLE_ULONGLONG(0);
  winallyid_ = GOOGLE_ULONGLONG(0);
  matchid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetFieldInfoRsp::~TAllyWarGetFieldInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetFieldInfoRsp)
  SharedDtor();
}

void TAllyWarGetFieldInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete myallyinfo_;
    delete enemyallyinfo_;
  }
}

void TAllyWarGetFieldInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetFieldInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetFieldInfoRsp_descriptor_;
}

const TAllyWarGetFieldInfoRsp& TAllyWarGetFieldInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetFieldInfoRsp* TAllyWarGetFieldInfoRsp::default_instance_ = NULL;

TAllyWarGetFieldInfoRsp* TAllyWarGetFieldInfoRsp::New() const {
  return new TAllyWarGetFieldInfoRsp;
}

void TAllyWarGetFieldInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarGetFieldInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 227) {
    ZR_(donetime_, matchid_);
    if (has_myallyinfo()) {
      if (myallyinfo_ != NULL) myallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
    }
    if (has_enemyallyinfo()) {
      if (enemyallyinfo_ != NULL) enemyallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrarea_.Clear();
  arrcandi_.Clear();
  arruserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetFieldInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetFieldInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_myallyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EnemyAllyInfo;
        break;
      }

      // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_EnemyAllyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enemyallyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrArea;
        break;
      }

      // repeated .pb.TAllyWarFieldAreaInfo ArrArea = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrArea:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrarea()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrArea;
        if (input->ExpectTag(32)) goto parse_ArrCandi;
        break;
      }

      // repeated uint64 ArrCandi = 4;
      case 4: {
        if (tag == 32) {
         parse_ArrCandi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32, input, this->mutable_arrcandi())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_arrcandi())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ArrCandi;
        if (input->ExpectTag(42)) goto parse_ArrUserInfo;
        break;
      }

      // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrUserInfo;
        if (input->ExpectTag(48)) goto parse_DoneTime;
        break;
      }

      // optional uint64 DoneTime = 6;
      case 6: {
        if (tag == 48) {
         parse_DoneTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &donetime_)));
          set_has_donetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_WinAllyId;
        break;
      }

      // optional uint64 WinAllyId = 7;
      case 7: {
        if (tag == 56) {
         parse_WinAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &winallyid_)));
          set_has_winallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MatchId;
        break;
      }

      // optional uint32 MatchId = 8;
      case 8: {
        if (tag == 64) {
         parse_MatchId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
          set_has_matchid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetFieldInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetFieldInfoRsp)
  return false;
#undef DO_
}

void TAllyWarGetFieldInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetFieldInfoRsp)
  // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 1;
  if (has_myallyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->myallyinfo(), output);
  }

  // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 2;
  if (has_enemyallyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->enemyallyinfo(), output);
  }

  // repeated .pb.TAllyWarFieldAreaInfo ArrArea = 3;
  for (int i = 0; i < this->arrarea_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrarea(i), output);
  }

  // repeated uint64 ArrCandi = 4;
  for (int i = 0; i < this->arrcandi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->arrcandi(i), output);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 5;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arruserinfo(i), output);
  }

  // optional uint64 DoneTime = 6;
  if (has_donetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->donetime(), output);
  }

  // optional uint64 WinAllyId = 7;
  if (has_winallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->winallyid(), output);
  }

  // optional uint32 MatchId = 8;
  if (has_matchid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->matchid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetFieldInfoRsp)
}

::google::protobuf::uint8* TAllyWarGetFieldInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetFieldInfoRsp)
  // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 1;
  if (has_myallyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->myallyinfo(), target);
  }

  // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 2;
  if (has_enemyallyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->enemyallyinfo(), target);
  }

  // repeated .pb.TAllyWarFieldAreaInfo ArrArea = 3;
  for (int i = 0; i < this->arrarea_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrarea(i), target);
  }

  // repeated uint64 ArrCandi = 4;
  for (int i = 0; i < this->arrcandi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->arrcandi(i), target);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 5;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arruserinfo(i), target);
  }

  // optional uint64 DoneTime = 6;
  if (has_donetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->donetime(), target);
  }

  // optional uint64 WinAllyId = 7;
  if (has_winallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->winallyid(), target);
  }

  // optional uint32 MatchId = 8;
  if (has_matchid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->matchid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetFieldInfoRsp)
  return target;
}

int TAllyWarGetFieldInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 1;
    if (has_myallyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->myallyinfo());
    }

    // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 2;
    if (has_enemyallyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enemyallyinfo());
    }

    // optional uint64 DoneTime = 6;
    if (has_donetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->donetime());
    }

    // optional uint64 WinAllyId = 7;
    if (has_winallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->winallyid());
    }

    // optional uint32 MatchId = 8;
    if (has_matchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matchid());
    }

  }
  // repeated .pb.TAllyWarFieldAreaInfo ArrArea = 3;
  total_size += 1 * this->arrarea_size();
  for (int i = 0; i < this->arrarea_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrarea(i));
  }

  // repeated uint64 ArrCandi = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrcandi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->arrcandi(i));
    }
    total_size += 1 * this->arrcandi_size() + data_size;
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 5;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetFieldInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetFieldInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetFieldInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetFieldInfoRsp::MergeFrom(const TAllyWarGetFieldInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrarea_.MergeFrom(from.arrarea_);
  arrcandi_.MergeFrom(from.arrcandi_);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myallyinfo()) {
      mutable_myallyinfo()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.myallyinfo());
    }
    if (from.has_enemyallyinfo()) {
      mutable_enemyallyinfo()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.enemyallyinfo());
    }
    if (from.has_donetime()) {
      set_donetime(from.donetime());
    }
    if (from.has_winallyid()) {
      set_winallyid(from.winallyid());
    }
    if (from.has_matchid()) {
      set_matchid(from.matchid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetFieldInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetFieldInfoRsp::CopyFrom(const TAllyWarGetFieldInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetFieldInfoRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetFieldInfoRsp::Swap(TAllyWarGetFieldInfoRsp* other) {
  if (other != this) {
    std::swap(myallyinfo_, other->myallyinfo_);
    std::swap(enemyallyinfo_, other->enemyallyinfo_);
    arrarea_.Swap(&other->arrarea_);
    arrcandi_.Swap(&other->arrcandi_);
    arruserinfo_.Swap(&other->arruserinfo_);
    std::swap(donetime_, other->donetime_);
    std::swap(winallyid_, other->winallyid_);
    std::swap(matchid_, other->matchid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetFieldInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetFieldInfoRsp_descriptor_;
  metadata.reflection = TAllyWarGetFieldInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetWinnerInfoRsp::kWinAllyInfoFieldNumber;
const int TAllyWarGetWinnerInfoRsp::kArrShowUserFieldNumber;
const int TAllyWarGetWinnerInfoRsp::kArrGuildContriFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetWinnerInfoRsp::TAllyWarGetWinnerInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetWinnerInfoRsp)
}

void TAllyWarGetWinnerInfoRsp::InitAsDefaultInstance() {
  winallyinfo_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
}

TAllyWarGetWinnerInfoRsp::TAllyWarGetWinnerInfoRsp(const TAllyWarGetWinnerInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetWinnerInfoRsp)
}

void TAllyWarGetWinnerInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  winallyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetWinnerInfoRsp::~TAllyWarGetWinnerInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetWinnerInfoRsp)
  SharedDtor();
}

void TAllyWarGetWinnerInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete winallyinfo_;
  }
}

void TAllyWarGetWinnerInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetWinnerInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetWinnerInfoRsp_descriptor_;
}

const TAllyWarGetWinnerInfoRsp& TAllyWarGetWinnerInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetWinnerInfoRsp* TAllyWarGetWinnerInfoRsp::default_instance_ = NULL;

TAllyWarGetWinnerInfoRsp* TAllyWarGetWinnerInfoRsp::New() const {
  return new TAllyWarGetWinnerInfoRsp;
}

void TAllyWarGetWinnerInfoRsp::Clear() {
  if (has_winallyinfo()) {
    if (winallyinfo_ != NULL) winallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
  }
  arrshowuser_.Clear();
  arrguildcontri_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetWinnerInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetWinnerInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TAllyWarAllyBaseInfo WinAllyInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_winallyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrShowUser;
        break;
      }

      // repeated .pb.TAllyWarUserBaseInfo ArrShowUser = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrShowUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrshowuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrShowUser;
        if (input->ExpectTag(26)) goto parse_ArrGuildContri;
        break;
      }

      // repeated .pb.TAllyWarGuildContriInfo ArrGuildContri = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrGuildContri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrguildcontri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrGuildContri;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetWinnerInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetWinnerInfoRsp)
  return false;
#undef DO_
}

void TAllyWarGetWinnerInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetWinnerInfoRsp)
  // optional .pb.TAllyWarAllyBaseInfo WinAllyInfo = 1;
  if (has_winallyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->winallyinfo(), output);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrShowUser = 2;
  for (int i = 0; i < this->arrshowuser_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrshowuser(i), output);
  }

  // repeated .pb.TAllyWarGuildContriInfo ArrGuildContri = 3;
  for (int i = 0; i < this->arrguildcontri_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrguildcontri(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetWinnerInfoRsp)
}

::google::protobuf::uint8* TAllyWarGetWinnerInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetWinnerInfoRsp)
  // optional .pb.TAllyWarAllyBaseInfo WinAllyInfo = 1;
  if (has_winallyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->winallyinfo(), target);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrShowUser = 2;
  for (int i = 0; i < this->arrshowuser_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrshowuser(i), target);
  }

  // repeated .pb.TAllyWarGuildContriInfo ArrGuildContri = 3;
  for (int i = 0; i < this->arrguildcontri_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrguildcontri(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetWinnerInfoRsp)
  return target;
}

int TAllyWarGetWinnerInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TAllyWarAllyBaseInfo WinAllyInfo = 1;
    if (has_winallyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->winallyinfo());
    }

  }
  // repeated .pb.TAllyWarUserBaseInfo ArrShowUser = 2;
  total_size += 1 * this->arrshowuser_size();
  for (int i = 0; i < this->arrshowuser_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrshowuser(i));
  }

  // repeated .pb.TAllyWarGuildContriInfo ArrGuildContri = 3;
  total_size += 1 * this->arrguildcontri_size();
  for (int i = 0; i < this->arrguildcontri_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrguildcontri(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetWinnerInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetWinnerInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetWinnerInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetWinnerInfoRsp::MergeFrom(const TAllyWarGetWinnerInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrshowuser_.MergeFrom(from.arrshowuser_);
  arrguildcontri_.MergeFrom(from.arrguildcontri_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_winallyinfo()) {
      mutable_winallyinfo()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.winallyinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetWinnerInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetWinnerInfoRsp::CopyFrom(const TAllyWarGetWinnerInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetWinnerInfoRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetWinnerInfoRsp::Swap(TAllyWarGetWinnerInfoRsp* other) {
  if (other != this) {
    std::swap(winallyinfo_, other->winallyinfo_);
    arrshowuser_.Swap(&other->arrshowuser_);
    arrguildcontri_.Swap(&other->arrguildcontri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetWinnerInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetWinnerInfoRsp_descriptor_;
  metadata.reflection = TAllyWarGetWinnerInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarSignRsp::kSignTimeFieldNumber;
#endif  // !_MSC_VER

TAllyWarSignRsp::TAllyWarSignRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarSignRsp)
}

void TAllyWarSignRsp::InitAsDefaultInstance() {
}

TAllyWarSignRsp::TAllyWarSignRsp(const TAllyWarSignRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarSignRsp)
}

void TAllyWarSignRsp::SharedCtor() {
  _cached_size_ = 0;
  signtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarSignRsp::~TAllyWarSignRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarSignRsp)
  SharedDtor();
}

void TAllyWarSignRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarSignRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarSignRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarSignRsp_descriptor_;
}

const TAllyWarSignRsp& TAllyWarSignRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarSignRsp* TAllyWarSignRsp::default_instance_ = NULL;

TAllyWarSignRsp* TAllyWarSignRsp::New() const {
  return new TAllyWarSignRsp;
}

void TAllyWarSignRsp::Clear() {
  signtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarSignRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarSignRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 SignTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &signtime_)));
          set_has_signtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarSignRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarSignRsp)
  return false;
#undef DO_
}

void TAllyWarSignRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarSignRsp)
  // optional uint64 SignTime = 1;
  if (has_signtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->signtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarSignRsp)
}

::google::protobuf::uint8* TAllyWarSignRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarSignRsp)
  // optional uint64 SignTime = 1;
  if (has_signtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->signtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarSignRsp)
  return target;
}

int TAllyWarSignRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 SignTime = 1;
    if (has_signtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->signtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarSignRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarSignRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarSignRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarSignRsp::MergeFrom(const TAllyWarSignRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_signtime()) {
      set_signtime(from.signtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarSignRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarSignRsp::CopyFrom(const TAllyWarSignRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarSignRsp::IsInitialized() const {

  return true;
}

void TAllyWarSignRsp::Swap(TAllyWarSignRsp* other) {
  if (other != this) {
    std::swap(signtime_, other->signtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarSignRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarSignRsp_descriptor_;
  metadata.reflection = TAllyWarSignRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetFmtRsp::kArrFmtFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetFmtRsp::TAllyWarGetFmtRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetFmtRsp)
}

void TAllyWarGetFmtRsp::InitAsDefaultInstance() {
}

TAllyWarGetFmtRsp::TAllyWarGetFmtRsp(const TAllyWarGetFmtRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetFmtRsp)
}

void TAllyWarGetFmtRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetFmtRsp::~TAllyWarGetFmtRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetFmtRsp)
  SharedDtor();
}

void TAllyWarGetFmtRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarGetFmtRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetFmtRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetFmtRsp_descriptor_;
}

const TAllyWarGetFmtRsp& TAllyWarGetFmtRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetFmtRsp* TAllyWarGetFmtRsp::default_instance_ = NULL;

TAllyWarGetFmtRsp* TAllyWarGetFmtRsp::New() const {
  return new TAllyWarGetFmtRsp;
}

void TAllyWarGetFmtRsp::Clear() {
  arrfmt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetFmtRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetFmtRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrFmt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrfmt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrFmt;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetFmtRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetFmtRsp)
  return false;
#undef DO_
}

void TAllyWarGetFmtRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetFmtRsp)
  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  for (int i = 0; i < this->arrfmt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrfmt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetFmtRsp)
}

::google::protobuf::uint8* TAllyWarGetFmtRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetFmtRsp)
  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  for (int i = 0; i < this->arrfmt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrfmt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetFmtRsp)
  return target;
}

int TAllyWarGetFmtRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  total_size += 1 * this->arrfmt_size();
  for (int i = 0; i < this->arrfmt_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrfmt(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetFmtRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetFmtRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetFmtRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetFmtRsp::MergeFrom(const TAllyWarGetFmtRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrfmt_.MergeFrom(from.arrfmt_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetFmtRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetFmtRsp::CopyFrom(const TAllyWarGetFmtRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetFmtRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetFmtRsp::Swap(TAllyWarGetFmtRsp* other) {
  if (other != this) {
    arrfmt_.Swap(&other->arrfmt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetFmtRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetFmtRsp_descriptor_;
  metadata.reflection = TAllyWarGetFmtRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarSetFmtReq::kArrFmtFieldNumber;
#endif  // !_MSC_VER

TAllyWarSetFmtReq::TAllyWarSetFmtReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarSetFmtReq)
}

void TAllyWarSetFmtReq::InitAsDefaultInstance() {
}

TAllyWarSetFmtReq::TAllyWarSetFmtReq(const TAllyWarSetFmtReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarSetFmtReq)
}

void TAllyWarSetFmtReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarSetFmtReq::~TAllyWarSetFmtReq() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarSetFmtReq)
  SharedDtor();
}

void TAllyWarSetFmtReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarSetFmtReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarSetFmtReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarSetFmtReq_descriptor_;
}

const TAllyWarSetFmtReq& TAllyWarSetFmtReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarSetFmtReq* TAllyWarSetFmtReq::default_instance_ = NULL;

TAllyWarSetFmtReq* TAllyWarSetFmtReq::New() const {
  return new TAllyWarSetFmtReq;
}

void TAllyWarSetFmtReq::Clear() {
  arrfmt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarSetFmtReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarSetFmtReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrFmt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrfmt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrFmt;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarSetFmtReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarSetFmtReq)
  return false;
#undef DO_
}

void TAllyWarSetFmtReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarSetFmtReq)
  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  for (int i = 0; i < this->arrfmt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrfmt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarSetFmtReq)
}

::google::protobuf::uint8* TAllyWarSetFmtReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarSetFmtReq)
  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  for (int i = 0; i < this->arrfmt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrfmt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarSetFmtReq)
  return target;
}

int TAllyWarSetFmtReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  total_size += 1 * this->arrfmt_size();
  for (int i = 0; i < this->arrfmt_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrfmt(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarSetFmtReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarSetFmtReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarSetFmtReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarSetFmtReq::MergeFrom(const TAllyWarSetFmtReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrfmt_.MergeFrom(from.arrfmt_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarSetFmtReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarSetFmtReq::CopyFrom(const TAllyWarSetFmtReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarSetFmtReq::IsInitialized() const {

  return true;
}

void TAllyWarSetFmtReq::Swap(TAllyWarSetFmtReq* other) {
  if (other != this) {
    arrfmt_.Swap(&other->arrfmt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarSetFmtReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarSetFmtReq_descriptor_;
  metadata.reflection = TAllyWarSetFmtReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarSetPosReq::kAreaIdFieldNumber;
const int TAllyWarSetPosReq::kPosIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarSetPosReq::TAllyWarSetPosReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarSetPosReq)
}

void TAllyWarSetPosReq::InitAsDefaultInstance() {
}

TAllyWarSetPosReq::TAllyWarSetPosReq(const TAllyWarSetPosReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarSetPosReq)
}

void TAllyWarSetPosReq::SharedCtor() {
  _cached_size_ = 0;
  areaid_ = 0u;
  posid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarSetPosReq::~TAllyWarSetPosReq() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarSetPosReq)
  SharedDtor();
}

void TAllyWarSetPosReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarSetPosReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarSetPosReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarSetPosReq_descriptor_;
}

const TAllyWarSetPosReq& TAllyWarSetPosReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarSetPosReq* TAllyWarSetPosReq::default_instance_ = NULL;

TAllyWarSetPosReq* TAllyWarSetPosReq::New() const {
  return new TAllyWarSetPosReq;
}

void TAllyWarSetPosReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarSetPosReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(areaid_, posid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarSetPosReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarSetPosReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AreaId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &areaid_)));
          set_has_areaid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarSetPosReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarSetPosReq)
  return false;
#undef DO_
}

void TAllyWarSetPosReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarSetPosReq)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->areaid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarSetPosReq)
}

::google::protobuf::uint8* TAllyWarSetPosReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarSetPosReq)
  // optional uint32 AreaId = 1;
  if (has_areaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->areaid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarSetPosReq)
  return target;
}

int TAllyWarSetPosReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AreaId = 1;
    if (has_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->areaid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarSetPosReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarSetPosReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarSetPosReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarSetPosReq::MergeFrom(const TAllyWarSetPosReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_areaid()) {
      set_areaid(from.areaid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarSetPosReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarSetPosReq::CopyFrom(const TAllyWarSetPosReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarSetPosReq::IsInitialized() const {

  return true;
}

void TAllyWarSetPosReq::Swap(TAllyWarSetPosReq* other) {
  if (other != this) {
    std::swap(areaid_, other->areaid_);
    std::swap(posid_, other->posid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarSetPosReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarSetPosReq_descriptor_;
  metadata.reflection = TAllyWarSetPosReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetDeployRsp::kArrDeployFieldNumber;
const int TAllyWarGetDeployRsp::kArrCandiFieldNumber;
const int TAllyWarGetDeployRsp::kArrUserInfoFieldNumber;
const int TAllyWarGetDeployRsp::kAutoCompleteFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetDeployRsp::TAllyWarGetDeployRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetDeployRsp)
}

void TAllyWarGetDeployRsp::InitAsDefaultInstance() {
}

TAllyWarGetDeployRsp::TAllyWarGetDeployRsp(const TAllyWarGetDeployRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetDeployRsp)
}

void TAllyWarGetDeployRsp::SharedCtor() {
  _cached_size_ = 0;
  autocomplete_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetDeployRsp::~TAllyWarGetDeployRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetDeployRsp)
  SharedDtor();
}

void TAllyWarGetDeployRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarGetDeployRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetDeployRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetDeployRsp_descriptor_;
}

const TAllyWarGetDeployRsp& TAllyWarGetDeployRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetDeployRsp* TAllyWarGetDeployRsp::default_instance_ = NULL;

TAllyWarGetDeployRsp* TAllyWarGetDeployRsp::New() const {
  return new TAllyWarGetDeployRsp;
}

void TAllyWarGetDeployRsp::Clear() {
  autocomplete_ = false;
  arrdeploy_.Clear();
  arrcandi_.Clear();
  arruserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetDeployRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetDeployRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAllyWarDeployInfo ArrDeploy = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrDeploy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrdeploy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrDeploy;
        if (input->ExpectTag(16)) goto parse_ArrCandi;
        break;
      }

      // repeated uint64 ArrCandi = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrCandi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_arrcandi())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_arrcandi())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrCandi;
        if (input->ExpectTag(26)) goto parse_ArrUserInfo;
        break;
      }

      // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrUserInfo;
        if (input->ExpectTag(32)) goto parse_AutoComplete;
        break;
      }

      // optional bool AutoComplete = 4;
      case 4: {
        if (tag == 32) {
         parse_AutoComplete:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autocomplete_)));
          set_has_autocomplete();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetDeployRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetDeployRsp)
  return false;
#undef DO_
}

void TAllyWarGetDeployRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetDeployRsp)
  // repeated .pb.TAllyWarDeployInfo ArrDeploy = 1;
  for (int i = 0; i < this->arrdeploy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrdeploy(i), output);
  }

  // repeated uint64 ArrCandi = 2;
  for (int i = 0; i < this->arrcandi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->arrcandi(i), output);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 3;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arruserinfo(i), output);
  }

  // optional bool AutoComplete = 4;
  if (has_autocomplete()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->autocomplete(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetDeployRsp)
}

::google::protobuf::uint8* TAllyWarGetDeployRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetDeployRsp)
  // repeated .pb.TAllyWarDeployInfo ArrDeploy = 1;
  for (int i = 0; i < this->arrdeploy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrdeploy(i), target);
  }

  // repeated uint64 ArrCandi = 2;
  for (int i = 0; i < this->arrcandi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->arrcandi(i), target);
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 3;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arruserinfo(i), target);
  }

  // optional bool AutoComplete = 4;
  if (has_autocomplete()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->autocomplete(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetDeployRsp)
  return target;
}

int TAllyWarGetDeployRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional bool AutoComplete = 4;
    if (has_autocomplete()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pb.TAllyWarDeployInfo ArrDeploy = 1;
  total_size += 1 * this->arrdeploy_size();
  for (int i = 0; i < this->arrdeploy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrdeploy(i));
  }

  // repeated uint64 ArrCandi = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrcandi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->arrcandi(i));
    }
    total_size += 1 * this->arrcandi_size() + data_size;
  }

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 3;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetDeployRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetDeployRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetDeployRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetDeployRsp::MergeFrom(const TAllyWarGetDeployRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrdeploy_.MergeFrom(from.arrdeploy_);
  arrcandi_.MergeFrom(from.arrcandi_);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_autocomplete()) {
      set_autocomplete(from.autocomplete());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetDeployRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetDeployRsp::CopyFrom(const TAllyWarGetDeployRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetDeployRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetDeployRsp::Swap(TAllyWarGetDeployRsp* other) {
  if (other != this) {
    arrdeploy_.Swap(&other->arrdeploy_);
    arrcandi_.Swap(&other->arrcandi_);
    arruserinfo_.Swap(&other->arruserinfo_);
    std::swap(autocomplete_, other->autocomplete_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetDeployRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetDeployRsp_descriptor_;
  metadata.reflection = TAllyWarGetDeployRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarSetDeployReq::kArrPreDeployFieldNumber;
const int TAllyWarSetDeployReq::kArrCurDeployFieldNumber;
#endif  // !_MSC_VER

TAllyWarSetDeployReq::TAllyWarSetDeployReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarSetDeployReq)
}

void TAllyWarSetDeployReq::InitAsDefaultInstance() {
}

TAllyWarSetDeployReq::TAllyWarSetDeployReq(const TAllyWarSetDeployReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarSetDeployReq)
}

void TAllyWarSetDeployReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarSetDeployReq::~TAllyWarSetDeployReq() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarSetDeployReq)
  SharedDtor();
}

void TAllyWarSetDeployReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarSetDeployReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarSetDeployReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarSetDeployReq_descriptor_;
}

const TAllyWarSetDeployReq& TAllyWarSetDeployReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarSetDeployReq* TAllyWarSetDeployReq::default_instance_ = NULL;

TAllyWarSetDeployReq* TAllyWarSetDeployReq::New() const {
  return new TAllyWarSetDeployReq;
}

void TAllyWarSetDeployReq::Clear() {
  arrpredeploy_.Clear();
  arrcurdeploy_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarSetDeployReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarSetDeployReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAllyWarDeployInfo ArrPreDeploy = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrPreDeploy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrpredeploy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrPreDeploy;
        if (input->ExpectTag(18)) goto parse_ArrCurDeploy;
        break;
      }

      // repeated .pb.TAllyWarDeployInfo ArrCurDeploy = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrCurDeploy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrcurdeploy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrCurDeploy;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarSetDeployReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarSetDeployReq)
  return false;
#undef DO_
}

void TAllyWarSetDeployReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarSetDeployReq)
  // repeated .pb.TAllyWarDeployInfo ArrPreDeploy = 1;
  for (int i = 0; i < this->arrpredeploy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrpredeploy(i), output);
  }

  // repeated .pb.TAllyWarDeployInfo ArrCurDeploy = 2;
  for (int i = 0; i < this->arrcurdeploy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrcurdeploy(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarSetDeployReq)
}

::google::protobuf::uint8* TAllyWarSetDeployReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarSetDeployReq)
  // repeated .pb.TAllyWarDeployInfo ArrPreDeploy = 1;
  for (int i = 0; i < this->arrpredeploy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrpredeploy(i), target);
  }

  // repeated .pb.TAllyWarDeployInfo ArrCurDeploy = 2;
  for (int i = 0; i < this->arrcurdeploy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrcurdeploy(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarSetDeployReq)
  return target;
}

int TAllyWarSetDeployReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TAllyWarDeployInfo ArrPreDeploy = 1;
  total_size += 1 * this->arrpredeploy_size();
  for (int i = 0; i < this->arrpredeploy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrpredeploy(i));
  }

  // repeated .pb.TAllyWarDeployInfo ArrCurDeploy = 2;
  total_size += 1 * this->arrcurdeploy_size();
  for (int i = 0; i < this->arrcurdeploy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrcurdeploy(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarSetDeployReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarSetDeployReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarSetDeployReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarSetDeployReq::MergeFrom(const TAllyWarSetDeployReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrpredeploy_.MergeFrom(from.arrpredeploy_);
  arrcurdeploy_.MergeFrom(from.arrcurdeploy_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarSetDeployReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarSetDeployReq::CopyFrom(const TAllyWarSetDeployReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarSetDeployReq::IsInitialized() const {

  return true;
}

void TAllyWarSetDeployReq::Swap(TAllyWarSetDeployReq* other) {
  if (other != this) {
    arrpredeploy_.Swap(&other->arrpredeploy_);
    arrcurdeploy_.Swap(&other->arrcurdeploy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarSetDeployReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarSetDeployReq_descriptor_;
  metadata.reflection = TAllyWarSetDeployReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarSetOptionReq::kAutoCompleteFieldNumber;
#endif  // !_MSC_VER

TAllyWarSetOptionReq::TAllyWarSetOptionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarSetOptionReq)
}

void TAllyWarSetOptionReq::InitAsDefaultInstance() {
}

TAllyWarSetOptionReq::TAllyWarSetOptionReq(const TAllyWarSetOptionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarSetOptionReq)
}

void TAllyWarSetOptionReq::SharedCtor() {
  _cached_size_ = 0;
  autocomplete_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarSetOptionReq::~TAllyWarSetOptionReq() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarSetOptionReq)
  SharedDtor();
}

void TAllyWarSetOptionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarSetOptionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarSetOptionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarSetOptionReq_descriptor_;
}

const TAllyWarSetOptionReq& TAllyWarSetOptionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarSetOptionReq* TAllyWarSetOptionReq::default_instance_ = NULL;

TAllyWarSetOptionReq* TAllyWarSetOptionReq::New() const {
  return new TAllyWarSetOptionReq;
}

void TAllyWarSetOptionReq::Clear() {
  autocomplete_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarSetOptionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarSetOptionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool AutoComplete = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autocomplete_)));
          set_has_autocomplete();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarSetOptionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarSetOptionReq)
  return false;
#undef DO_
}

void TAllyWarSetOptionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarSetOptionReq)
  // optional bool AutoComplete = 1;
  if (has_autocomplete()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->autocomplete(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarSetOptionReq)
}

::google::protobuf::uint8* TAllyWarSetOptionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarSetOptionReq)
  // optional bool AutoComplete = 1;
  if (has_autocomplete()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->autocomplete(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarSetOptionReq)
  return target;
}

int TAllyWarSetOptionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool AutoComplete = 1;
    if (has_autocomplete()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarSetOptionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarSetOptionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarSetOptionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarSetOptionReq::MergeFrom(const TAllyWarSetOptionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_autocomplete()) {
      set_autocomplete(from.autocomplete());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarSetOptionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarSetOptionReq::CopyFrom(const TAllyWarSetOptionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarSetOptionReq::IsInitialized() const {

  return true;
}

void TAllyWarSetOptionReq::Swap(TAllyWarSetOptionReq* other) {
  if (other != this) {
    std::swap(autocomplete_, other->autocomplete_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarSetOptionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarSetOptionReq_descriptor_;
  metadata.reflection = TAllyWarSetOptionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetRecordReq::kMatchIdFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetRecordReq::TAllyWarGetRecordReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetRecordReq)
}

void TAllyWarGetRecordReq::InitAsDefaultInstance() {
}

TAllyWarGetRecordReq::TAllyWarGetRecordReq(const TAllyWarGetRecordReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetRecordReq)
}

void TAllyWarGetRecordReq::SharedCtor() {
  _cached_size_ = 0;
  matchid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetRecordReq::~TAllyWarGetRecordReq() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetRecordReq)
  SharedDtor();
}

void TAllyWarGetRecordReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAllyWarGetRecordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetRecordReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetRecordReq_descriptor_;
}

const TAllyWarGetRecordReq& TAllyWarGetRecordReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetRecordReq* TAllyWarGetRecordReq::default_instance_ = NULL;

TAllyWarGetRecordReq* TAllyWarGetRecordReq::New() const {
  return new TAllyWarGetRecordReq;
}

void TAllyWarGetRecordReq::Clear() {
  matchid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetRecordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetRecordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MatchId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
          set_has_matchid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetRecordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetRecordReq)
  return false;
#undef DO_
}

void TAllyWarGetRecordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetRecordReq)
  // optional uint32 MatchId = 1;
  if (has_matchid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetRecordReq)
}

::google::protobuf::uint8* TAllyWarGetRecordReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetRecordReq)
  // optional uint32 MatchId = 1;
  if (has_matchid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetRecordReq)
  return target;
}

int TAllyWarGetRecordReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MatchId = 1;
    if (has_matchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matchid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetRecordReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetRecordReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetRecordReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetRecordReq::MergeFrom(const TAllyWarGetRecordReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_matchid()) {
      set_matchid(from.matchid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetRecordReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetRecordReq::CopyFrom(const TAllyWarGetRecordReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetRecordReq::IsInitialized() const {

  return true;
}

void TAllyWarGetRecordReq::Swap(TAllyWarGetRecordReq* other) {
  if (other != this) {
    std::swap(matchid_, other->matchid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetRecordReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetRecordReq_descriptor_;
  metadata.reflection = TAllyWarGetRecordReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAllyWarGetRecordRsp::kAtkAllyFieldNumber;
const int TAllyWarGetRecordRsp::kDefAllyFieldNumber;
const int TAllyWarGetRecordRsp::kAtkScoreFieldNumber;
const int TAllyWarGetRecordRsp::kDefScoreFieldNumber;
const int TAllyWarGetRecordRsp::kWinAllyIdFieldNumber;
const int TAllyWarGetRecordRsp::kArrAtkUserFieldNumber;
const int TAllyWarGetRecordRsp::kArrDefUserFieldNumber;
const int TAllyWarGetRecordRsp::kArrAreaRecordFieldNumber;
#endif  // !_MSC_VER

TAllyWarGetRecordRsp::TAllyWarGetRecordRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAllyWarGetRecordRsp)
}

void TAllyWarGetRecordRsp::InitAsDefaultInstance() {
  atkally_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
  defally_ = const_cast< ::pb::TAllyWarAllyBaseInfo*>(&::pb::TAllyWarAllyBaseInfo::default_instance());
}

TAllyWarGetRecordRsp::TAllyWarGetRecordRsp(const TAllyWarGetRecordRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAllyWarGetRecordRsp)
}

void TAllyWarGetRecordRsp::SharedCtor() {
  _cached_size_ = 0;
  atkally_ = NULL;
  defally_ = NULL;
  atkscore_ = 0u;
  defscore_ = 0u;
  winallyid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAllyWarGetRecordRsp::~TAllyWarGetRecordRsp() {
  // @@protoc_insertion_point(destructor:pb.TAllyWarGetRecordRsp)
  SharedDtor();
}

void TAllyWarGetRecordRsp::SharedDtor() {
  if (this != default_instance_) {
    delete atkally_;
    delete defally_;
  }
}

void TAllyWarGetRecordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAllyWarGetRecordRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAllyWarGetRecordRsp_descriptor_;
}

const TAllyWarGetRecordRsp& TAllyWarGetRecordRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TAllyWarGetRecordRsp* TAllyWarGetRecordRsp::default_instance_ = NULL;

TAllyWarGetRecordRsp* TAllyWarGetRecordRsp::New() const {
  return new TAllyWarGetRecordRsp;
}

void TAllyWarGetRecordRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAllyWarGetRecordRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(atkscore_, winallyid_);
    if (has_atkally()) {
      if (atkally_ != NULL) atkally_->::pb::TAllyWarAllyBaseInfo::Clear();
    }
    if (has_defally()) {
      if (defally_ != NULL) defally_->::pb::TAllyWarAllyBaseInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arratkuser_.Clear();
  arrdefuser_.Clear();
  arrarearecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAllyWarGetRecordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAllyWarGetRecordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TAllyWarAllyBaseInfo AtkAlly = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_atkally()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DefAlly;
        break;
      }

      // optional .pb.TAllyWarAllyBaseInfo DefAlly = 2;
      case 2: {
        if (tag == 18) {
         parse_DefAlly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defally()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AtkScore;
        break;
      }

      // optional uint32 AtkScore = 3;
      case 3: {
        if (tag == 24) {
         parse_AtkScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atkscore_)));
          set_has_atkscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DefScore;
        break;
      }

      // optional uint32 DefScore = 4;
      case 4: {
        if (tag == 32) {
         parse_DefScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &defscore_)));
          set_has_defscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_WinAllyId;
        break;
      }

      // optional uint64 WinAllyId = 5;
      case 5: {
        if (tag == 40) {
         parse_WinAllyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &winallyid_)));
          set_has_winallyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ArrAtkUser;
        break;
      }

      // repeated .pb.TUserSimpleInfo ArrAtkUser = 6;
      case 6: {
        if (tag == 50) {
         parse_ArrAtkUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arratkuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ArrAtkUser;
        if (input->ExpectTag(58)) goto parse_ArrDefUser;
        break;
      }

      // repeated .pb.TUserSimpleInfo ArrDefUser = 7;
      case 7: {
        if (tag == 58) {
         parse_ArrDefUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrdefuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ArrDefUser;
        if (input->ExpectTag(66)) goto parse_ArrAreaRecord;
        break;
      }

      // repeated .pb.TAllyWarAreaRecordInfo ArrAreaRecord = 8;
      case 8: {
        if (tag == 66) {
         parse_ArrAreaRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrarearecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_ArrAreaRecord;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAllyWarGetRecordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAllyWarGetRecordRsp)
  return false;
#undef DO_
}

void TAllyWarGetRecordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAllyWarGetRecordRsp)
  // optional .pb.TAllyWarAllyBaseInfo AtkAlly = 1;
  if (has_atkally()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->atkally(), output);
  }

  // optional .pb.TAllyWarAllyBaseInfo DefAlly = 2;
  if (has_defally()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->defally(), output);
  }

  // optional uint32 AtkScore = 3;
  if (has_atkscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->atkscore(), output);
  }

  // optional uint32 DefScore = 4;
  if (has_defscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->defscore(), output);
  }

  // optional uint64 WinAllyId = 5;
  if (has_winallyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->winallyid(), output);
  }

  // repeated .pb.TUserSimpleInfo ArrAtkUser = 6;
  for (int i = 0; i < this->arratkuser_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->arratkuser(i), output);
  }

  // repeated .pb.TUserSimpleInfo ArrDefUser = 7;
  for (int i = 0; i < this->arrdefuser_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->arrdefuser(i), output);
  }

  // repeated .pb.TAllyWarAreaRecordInfo ArrAreaRecord = 8;
  for (int i = 0; i < this->arrarearecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->arrarearecord(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAllyWarGetRecordRsp)
}

::google::protobuf::uint8* TAllyWarGetRecordRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAllyWarGetRecordRsp)
  // optional .pb.TAllyWarAllyBaseInfo AtkAlly = 1;
  if (has_atkally()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->atkally(), target);
  }

  // optional .pb.TAllyWarAllyBaseInfo DefAlly = 2;
  if (has_defally()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->defally(), target);
  }

  // optional uint32 AtkScore = 3;
  if (has_atkscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->atkscore(), target);
  }

  // optional uint32 DefScore = 4;
  if (has_defscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->defscore(), target);
  }

  // optional uint64 WinAllyId = 5;
  if (has_winallyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->winallyid(), target);
  }

  // repeated .pb.TUserSimpleInfo ArrAtkUser = 6;
  for (int i = 0; i < this->arratkuser_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->arratkuser(i), target);
  }

  // repeated .pb.TUserSimpleInfo ArrDefUser = 7;
  for (int i = 0; i < this->arrdefuser_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->arrdefuser(i), target);
  }

  // repeated .pb.TAllyWarAreaRecordInfo ArrAreaRecord = 8;
  for (int i = 0; i < this->arrarearecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->arrarearecord(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAllyWarGetRecordRsp)
  return target;
}

int TAllyWarGetRecordRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TAllyWarAllyBaseInfo AtkAlly = 1;
    if (has_atkally()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->atkally());
    }

    // optional .pb.TAllyWarAllyBaseInfo DefAlly = 2;
    if (has_defally()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->defally());
    }

    // optional uint32 AtkScore = 3;
    if (has_atkscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->atkscore());
    }

    // optional uint32 DefScore = 4;
    if (has_defscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->defscore());
    }

    // optional uint64 WinAllyId = 5;
    if (has_winallyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->winallyid());
    }

  }
  // repeated .pb.TUserSimpleInfo ArrAtkUser = 6;
  total_size += 1 * this->arratkuser_size();
  for (int i = 0; i < this->arratkuser_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arratkuser(i));
  }

  // repeated .pb.TUserSimpleInfo ArrDefUser = 7;
  total_size += 1 * this->arrdefuser_size();
  for (int i = 0; i < this->arrdefuser_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrdefuser(i));
  }

  // repeated .pb.TAllyWarAreaRecordInfo ArrAreaRecord = 8;
  total_size += 1 * this->arrarearecord_size();
  for (int i = 0; i < this->arrarearecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrarearecord(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAllyWarGetRecordRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAllyWarGetRecordRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAllyWarGetRecordRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAllyWarGetRecordRsp::MergeFrom(const TAllyWarGetRecordRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arratkuser_.MergeFrom(from.arratkuser_);
  arrdefuser_.MergeFrom(from.arrdefuser_);
  arrarearecord_.MergeFrom(from.arrarearecord_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_atkally()) {
      mutable_atkally()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.atkally());
    }
    if (from.has_defally()) {
      mutable_defally()->::pb::TAllyWarAllyBaseInfo::MergeFrom(from.defally());
    }
    if (from.has_atkscore()) {
      set_atkscore(from.atkscore());
    }
    if (from.has_defscore()) {
      set_defscore(from.defscore());
    }
    if (from.has_winallyid()) {
      set_winallyid(from.winallyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAllyWarGetRecordRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAllyWarGetRecordRsp::CopyFrom(const TAllyWarGetRecordRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAllyWarGetRecordRsp::IsInitialized() const {

  return true;
}

void TAllyWarGetRecordRsp::Swap(TAllyWarGetRecordRsp* other) {
  if (other != this) {
    std::swap(atkally_, other->atkally_);
    std::swap(defally_, other->defally_);
    std::swap(atkscore_, other->atkscore_);
    std::swap(defscore_, other->defscore_);
    std::swap(winallyid_, other->winallyid_);
    arratkuser_.Swap(&other->arratkuser_);
    arrdefuser_.Swap(&other->arrdefuser_);
    arrarearecord_.Swap(&other->arrarearecord_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAllyWarGetRecordRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAllyWarGetRecordRsp_descriptor_;
  metadata.reflection = TAllyWarGetRecordRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInnerAllyWarGetServerTeamInfoRsp::kServerTeamIdFieldNumber;
#endif  // !_MSC_VER

TInnerAllyWarGetServerTeamInfoRsp::TInnerAllyWarGetServerTeamInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInnerAllyWarGetServerTeamInfoRsp)
}

void TInnerAllyWarGetServerTeamInfoRsp::InitAsDefaultInstance() {
}

TInnerAllyWarGetServerTeamInfoRsp::TInnerAllyWarGetServerTeamInfoRsp(const TInnerAllyWarGetServerTeamInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInnerAllyWarGetServerTeamInfoRsp)
}

void TInnerAllyWarGetServerTeamInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  serverteamid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInnerAllyWarGetServerTeamInfoRsp::~TInnerAllyWarGetServerTeamInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TInnerAllyWarGetServerTeamInfoRsp)
  SharedDtor();
}

void TInnerAllyWarGetServerTeamInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInnerAllyWarGetServerTeamInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInnerAllyWarGetServerTeamInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInnerAllyWarGetServerTeamInfoRsp_descriptor_;
}

const TInnerAllyWarGetServerTeamInfoRsp& TInnerAllyWarGetServerTeamInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAllyWar_2eproto();
  return *default_instance_;
}

TInnerAllyWarGetServerTeamInfoRsp* TInnerAllyWarGetServerTeamInfoRsp::default_instance_ = NULL;

TInnerAllyWarGetServerTeamInfoRsp* TInnerAllyWarGetServerTeamInfoRsp::New() const {
  return new TInnerAllyWarGetServerTeamInfoRsp;
}

void TInnerAllyWarGetServerTeamInfoRsp::Clear() {
  serverteamid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInnerAllyWarGetServerTeamInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInnerAllyWarGetServerTeamInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ServerTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverteamid_)));
          set_has_serverteamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInnerAllyWarGetServerTeamInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInnerAllyWarGetServerTeamInfoRsp)
  return false;
#undef DO_
}

void TInnerAllyWarGetServerTeamInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInnerAllyWarGetServerTeamInfoRsp)
  // optional uint32 ServerTeamId = 1;
  if (has_serverteamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->serverteamid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInnerAllyWarGetServerTeamInfoRsp)
}

::google::protobuf::uint8* TInnerAllyWarGetServerTeamInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInnerAllyWarGetServerTeamInfoRsp)
  // optional uint32 ServerTeamId = 1;
  if (has_serverteamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->serverteamid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInnerAllyWarGetServerTeamInfoRsp)
  return target;
}

int TInnerAllyWarGetServerTeamInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ServerTeamId = 1;
    if (has_serverteamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->serverteamid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInnerAllyWarGetServerTeamInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInnerAllyWarGetServerTeamInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInnerAllyWarGetServerTeamInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInnerAllyWarGetServerTeamInfoRsp::MergeFrom(const TInnerAllyWarGetServerTeamInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serverteamid()) {
      set_serverteamid(from.serverteamid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInnerAllyWarGetServerTeamInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInnerAllyWarGetServerTeamInfoRsp::CopyFrom(const TInnerAllyWarGetServerTeamInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInnerAllyWarGetServerTeamInfoRsp::IsInitialized() const {

  return true;
}

void TInnerAllyWarGetServerTeamInfoRsp::Swap(TInnerAllyWarGetServerTeamInfoRsp* other) {
  if (other != this) {
    std::swap(serverteamid_, other->serverteamid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInnerAllyWarGetServerTeamInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInnerAllyWarGetServerTeamInfoRsp_descriptor_;
  metadata.reflection = TInnerAllyWarGetServerTeamInfoRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
