// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Moments.proto

#ifndef PROTOBUF_net_2fMoments_2eproto__INCLUDED
#define PROTOBUF_net_2fMoments_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fMoments_2eproto();
void protobuf_AssignDesc_net_2fMoments_2eproto();
void protobuf_ShutdownFile_net_2fMoments_2eproto();

class TMomentsPublishedData;
class TMomentsPrePublishData;
class TMomentsInfoRsp;
class TMomentsNotify;
class TMomentsCommentOnReq;
class TMomentsPublishReq;
class TMomentsLikeOnReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TMomentsPublishedData</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsPublishedData : public ::google::protobuf::Message {
 public:
  TMomentsPublishedData();
  virtual ~TMomentsPublishedData();

  TMomentsPublishedData(const TMomentsPublishedData& from);

  inline TMomentsPublishedData& operator=(const TMomentsPublishedData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsPublishedData& default_instance();

  void Swap(TMomentsPublishedData* other);

  // implements Message ----------------------------------------------

  TMomentsPublishedData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsPublishedData& from);
  void MergeFrom(const TMomentsPublishedData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPublishedData</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // optional int64 PublishTime = 2;
  inline bool has_publishtime() const;
  inline void clear_publishtime();
  static const int kPublishTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPublishedData</name>
  	<Function>
  		<name>publishtime</name>
  		<replaceName>PublishTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_publishtime</name>
  		<replaceName>PublishTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_publishtime</name>
  		<replaceName>PublishTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 publishtime() const;
  inline void set_publishtime(::google::protobuf::int64 value);

  // optional int32 PlayerCommentTid = 3;
  inline bool has_playercommenttid() const;
  inline void clear_playercommenttid();
  static const int kPlayerCommentTidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPublishedData</name>
  	<Function>
  		<name>playercommenttid</name>
  		<replaceName>PlayerCommentTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_playercommenttid</name>
  		<replaceName>PlayerCommentTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_playercommenttid</name>
  		<replaceName>PlayerCommentTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 playercommenttid() const;
  inline void set_playercommenttid(::google::protobuf::int32 value);

  // optional int64 PlayerCommentTime = 4;
  inline bool has_playercommenttime() const;
  inline void clear_playercommenttime();
  static const int kPlayerCommentTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPublishedData</name>
  	<Function>
  		<name>playercommenttime</name>
  		<replaceName>PlayerCommentTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_playercommenttime</name>
  		<replaceName>PlayerCommentTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_playercommenttime</name>
  		<replaceName>PlayerCommentTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 playercommenttime() const;
  inline void set_playercommenttime(::google::protobuf::int64 value);

  // optional int64 PlayerLikeTime = 5;
  inline bool has_playerliketime() const;
  inline void clear_playerliketime();
  static const int kPlayerLikeTimeFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPublishedData</name>
  	<Function>
  		<name>playerliketime</name>
  		<replaceName>PlayerLikeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_playerliketime</name>
  		<replaceName>PlayerLikeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_playerliketime</name>
  		<replaceName>PlayerLikeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 playerliketime() const;
  inline void set_playerliketime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.TMomentsPublishedData)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_publishtime();
  inline void clear_has_publishtime();
  inline void set_has_playercommenttid();
  inline void clear_has_playercommenttid();
  inline void set_has_playercommenttime();
  inline void clear_has_playercommenttime();
  inline void set_has_playerliketime();
  inline void clear_has_playerliketime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 publishtime_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 playercommenttid_;
  ::google::protobuf::int64 playercommenttime_;
  ::google::protobuf::int64 playerliketime_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsPublishedData* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMomentsPrePublishData</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsPrePublishData : public ::google::protobuf::Message {
 public:
  TMomentsPrePublishData();
  virtual ~TMomentsPrePublishData();

  TMomentsPrePublishData(const TMomentsPrePublishData& from);

  inline TMomentsPrePublishData& operator=(const TMomentsPrePublishData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsPrePublishData& default_instance();

  void Swap(TMomentsPrePublishData* other);

  // implements Message ----------------------------------------------

  TMomentsPrePublishData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsPrePublishData& from);
  void MergeFrom(const TMomentsPrePublishData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPrePublishData</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // optional int64 TriggerTime = 2;
  inline bool has_triggertime() const;
  inline void clear_triggertime();
  static const int kTriggerTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPrePublishData</name>
  	<Function>
  		<name>triggertime</name>
  		<replaceName>TriggerTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_triggertime</name>
  		<replaceName>TriggerTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_triggertime</name>
  		<replaceName>TriggerTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 triggertime() const;
  inline void set_triggertime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.TMomentsPrePublishData)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_triggertime();
  inline void clear_has_triggertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 triggertime_;
  ::google::protobuf::int32 tid_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsPrePublishData* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMomentsInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsInfoRsp : public ::google::protobuf::Message {
 public:
  TMomentsInfoRsp();
  virtual ~TMomentsInfoRsp();

  TMomentsInfoRsp(const TMomentsInfoRsp& from);

  inline TMomentsInfoRsp& operator=(const TMomentsInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsInfoRsp& default_instance();

  void Swap(TMomentsInfoRsp* other);

  // implements Message ----------------------------------------------

  TMomentsInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsInfoRsp& from);
  void MergeFrom(const TMomentsInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TMomentsPublishedData PublishArr = 1;
  inline int publisharr_size() const;
  inline void clear_publisharr();
  static const int kPublishArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsInfoRsp</name>
  	<Function>
  		<name>publisharr</name>
  		<replaceName>PublishArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_publisharr</name>
  		<replaceName>PublishArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_publisharr</name>
  		<replaceName>PublishArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_publisharr</name>
  		<replaceName>PublishArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>publisharr_size</name>
  		<replaceName>PublishArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMomentsPublishedData& publisharr(int index) const;
  inline ::pb::TMomentsPublishedData* mutable_publisharr(int index);
  inline ::pb::TMomentsPublishedData* add_publisharr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPublishedData >&
      publisharr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPublishedData >*
      mutable_publisharr();

  // repeated .pb.TMomentsPrePublishData PreArr = 2;
  inline int prearr_size() const;
  inline void clear_prearr();
  static const int kPreArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMomentsInfoRsp</name>
  	<Function>
  		<name>prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>prearr_size</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMomentsPrePublishData& prearr(int index) const;
  inline ::pb::TMomentsPrePublishData* mutable_prearr(int index);
  inline ::pb::TMomentsPrePublishData* add_prearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >&
      prearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >*
      mutable_prearr();

  // @@protoc_insertion_point(class_scope:pb.TMomentsInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPublishedData > publisharr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData > prearr_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMomentsNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsNotify : public ::google::protobuf::Message {
 public:
  TMomentsNotify();
  virtual ~TMomentsNotify();

  TMomentsNotify(const TMomentsNotify& from);

  inline TMomentsNotify& operator=(const TMomentsNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsNotify& default_instance();

  void Swap(TMomentsNotify* other);

  // implements Message ----------------------------------------------

  TMomentsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsNotify& from);
  void MergeFrom(const TMomentsNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TMomentsPublishedData PublishInfo = 1;
  inline bool has_publishinfo() const;
  inline void clear_publishinfo();
  static const int kPublishInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsNotify</name>
  	<Function>
  		<name>publishinfo</name>
  		<replaceName>PublishInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_publishinfo</name>
  		<replaceName>PublishInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_publishinfo</name>
  		<replaceName>PublishInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_publishinfo</name>
  		<replaceName>PublishInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMomentsPublishedData& publishinfo() const;
  inline ::pb::TMomentsPublishedData* mutable_publishinfo();
  inline ::pb::TMomentsPublishedData* release_publishinfo();
  inline void set_allocated_publishinfo(::pb::TMomentsPublishedData* publishinfo);

  // repeated .pb.TMomentsPrePublishData PreArr = 2;
  inline int prearr_size() const;
  inline void clear_prearr();
  static const int kPreArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMomentsNotify</name>
  	<Function>
  		<name>prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_prearr</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>prearr_size</name>
  		<replaceName>PreArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMomentsPrePublishData& prearr(int index) const;
  inline ::pb::TMomentsPrePublishData* mutable_prearr(int index);
  inline ::pb::TMomentsPrePublishData* add_prearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >&
      prearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >*
      mutable_prearr();

  // @@protoc_insertion_point(class_scope:pb.TMomentsNotify)
 private:
  inline void set_has_publishinfo();
  inline void clear_has_publishinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TMomentsPublishedData* publishinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData > prearr_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMomentsCommentOnReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsCommentOnReq : public ::google::protobuf::Message {
 public:
  TMomentsCommentOnReq();
  virtual ~TMomentsCommentOnReq();

  TMomentsCommentOnReq(const TMomentsCommentOnReq& from);

  inline TMomentsCommentOnReq& operator=(const TMomentsCommentOnReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsCommentOnReq& default_instance();

  void Swap(TMomentsCommentOnReq* other);

  // implements Message ----------------------------------------------

  TMomentsCommentOnReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsCommentOnReq& from);
  void MergeFrom(const TMomentsCommentOnReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsCommentOnReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // optional int32 CommentTid = 2;
  inline bool has_commenttid() const;
  inline void clear_commenttid();
  static const int kCommentTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMomentsCommentOnReq</name>
  	<Function>
  		<name>commenttid</name>
  		<replaceName>CommentTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_commenttid</name>
  		<replaceName>CommentTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_commenttid</name>
  		<replaceName>CommentTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 commenttid() const;
  inline void set_commenttid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TMomentsCommentOnReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_commenttid();
  inline void clear_has_commenttid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 commenttid_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsCommentOnReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMomentsPublishReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsPublishReq : public ::google::protobuf::Message {
 public:
  TMomentsPublishReq();
  virtual ~TMomentsPublishReq();

  TMomentsPublishReq(const TMomentsPublishReq& from);

  inline TMomentsPublishReq& operator=(const TMomentsPublishReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsPublishReq& default_instance();

  void Swap(TMomentsPublishReq* other);

  // implements Message ----------------------------------------------

  TMomentsPublishReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsPublishReq& from);
  void MergeFrom(const TMomentsPublishReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsPublishReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TMomentsPublishReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tid_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsPublishReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMomentsLikeOnReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Moments.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMomentsLikeOnReq : public ::google::protobuf::Message {
 public:
  TMomentsLikeOnReq();
  virtual ~TMomentsLikeOnReq();

  TMomentsLikeOnReq(const TMomentsLikeOnReq& from);

  inline TMomentsLikeOnReq& operator=(const TMomentsLikeOnReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMomentsLikeOnReq& default_instance();

  void Swap(TMomentsLikeOnReq* other);

  // implements Message ----------------------------------------------

  TMomentsLikeOnReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMomentsLikeOnReq& from);
  void MergeFrom(const TMomentsLikeOnReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMomentsLikeOnReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TMomentsLikeOnReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tid_;
  friend void  protobuf_AddDesc_net_2fMoments_2eproto();
  friend void protobuf_AssignDesc_net_2fMoments_2eproto();
  friend void protobuf_ShutdownFile_net_2fMoments_2eproto();

  void InitAsDefaultInstance();
  static TMomentsLikeOnReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TMomentsPublishedData

// optional int32 Tid = 1;
inline bool TMomentsPublishedData::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMomentsPublishedData::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMomentsPublishedData::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMomentsPublishedData::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 TMomentsPublishedData::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPublishedData.Tid)
  return tid_;
}
inline void TMomentsPublishedData::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPublishedData.Tid)
}

// optional int64 PublishTime = 2;
inline bool TMomentsPublishedData::has_publishtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMomentsPublishedData::set_has_publishtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMomentsPublishedData::clear_has_publishtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMomentsPublishedData::clear_publishtime() {
  publishtime_ = GOOGLE_LONGLONG(0);
  clear_has_publishtime();
}
inline ::google::protobuf::int64 TMomentsPublishedData::publishtime() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPublishedData.PublishTime)
  return publishtime_;
}
inline void TMomentsPublishedData::set_publishtime(::google::protobuf::int64 value) {
  set_has_publishtime();
  publishtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPublishedData.PublishTime)
}

// optional int32 PlayerCommentTid = 3;
inline bool TMomentsPublishedData::has_playercommenttid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TMomentsPublishedData::set_has_playercommenttid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TMomentsPublishedData::clear_has_playercommenttid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TMomentsPublishedData::clear_playercommenttid() {
  playercommenttid_ = 0;
  clear_has_playercommenttid();
}
inline ::google::protobuf::int32 TMomentsPublishedData::playercommenttid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPublishedData.PlayerCommentTid)
  return playercommenttid_;
}
inline void TMomentsPublishedData::set_playercommenttid(::google::protobuf::int32 value) {
  set_has_playercommenttid();
  playercommenttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPublishedData.PlayerCommentTid)
}

// optional int64 PlayerCommentTime = 4;
inline bool TMomentsPublishedData::has_playercommenttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TMomentsPublishedData::set_has_playercommenttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TMomentsPublishedData::clear_has_playercommenttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TMomentsPublishedData::clear_playercommenttime() {
  playercommenttime_ = GOOGLE_LONGLONG(0);
  clear_has_playercommenttime();
}
inline ::google::protobuf::int64 TMomentsPublishedData::playercommenttime() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPublishedData.PlayerCommentTime)
  return playercommenttime_;
}
inline void TMomentsPublishedData::set_playercommenttime(::google::protobuf::int64 value) {
  set_has_playercommenttime();
  playercommenttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPublishedData.PlayerCommentTime)
}

// optional int64 PlayerLikeTime = 5;
inline bool TMomentsPublishedData::has_playerliketime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TMomentsPublishedData::set_has_playerliketime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TMomentsPublishedData::clear_has_playerliketime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TMomentsPublishedData::clear_playerliketime() {
  playerliketime_ = GOOGLE_LONGLONG(0);
  clear_has_playerliketime();
}
inline ::google::protobuf::int64 TMomentsPublishedData::playerliketime() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPublishedData.PlayerLikeTime)
  return playerliketime_;
}
inline void TMomentsPublishedData::set_playerliketime(::google::protobuf::int64 value) {
  set_has_playerliketime();
  playerliketime_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPublishedData.PlayerLikeTime)
}

// -------------------------------------------------------------------

// TMomentsPrePublishData

// optional int32 Tid = 1;
inline bool TMomentsPrePublishData::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMomentsPrePublishData::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMomentsPrePublishData::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMomentsPrePublishData::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 TMomentsPrePublishData::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPrePublishData.Tid)
  return tid_;
}
inline void TMomentsPrePublishData::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPrePublishData.Tid)
}

// optional int64 TriggerTime = 2;
inline bool TMomentsPrePublishData::has_triggertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMomentsPrePublishData::set_has_triggertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMomentsPrePublishData::clear_has_triggertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMomentsPrePublishData::clear_triggertime() {
  triggertime_ = GOOGLE_LONGLONG(0);
  clear_has_triggertime();
}
inline ::google::protobuf::int64 TMomentsPrePublishData::triggertime() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPrePublishData.TriggerTime)
  return triggertime_;
}
inline void TMomentsPrePublishData::set_triggertime(::google::protobuf::int64 value) {
  set_has_triggertime();
  triggertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPrePublishData.TriggerTime)
}

// -------------------------------------------------------------------

// TMomentsInfoRsp

// repeated .pb.TMomentsPublishedData PublishArr = 1;
inline int TMomentsInfoRsp::publisharr_size() const {
  return publisharr_.size();
}
inline void TMomentsInfoRsp::clear_publisharr() {
  publisharr_.Clear();
}
inline const ::pb::TMomentsPublishedData& TMomentsInfoRsp::publisharr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMomentsInfoRsp.PublishArr)
  return publisharr_.Get(index);
}
inline ::pb::TMomentsPublishedData* TMomentsInfoRsp::mutable_publisharr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMomentsInfoRsp.PublishArr)
  return publisharr_.Mutable(index);
}
inline ::pb::TMomentsPublishedData* TMomentsInfoRsp::add_publisharr() {
  // @@protoc_insertion_point(field_add:pb.TMomentsInfoRsp.PublishArr)
  return publisharr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPublishedData >&
TMomentsInfoRsp::publisharr() const {
  // @@protoc_insertion_point(field_list:pb.TMomentsInfoRsp.PublishArr)
  return publisharr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPublishedData >*
TMomentsInfoRsp::mutable_publisharr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMomentsInfoRsp.PublishArr)
  return &publisharr_;
}

// repeated .pb.TMomentsPrePublishData PreArr = 2;
inline int TMomentsInfoRsp::prearr_size() const {
  return prearr_.size();
}
inline void TMomentsInfoRsp::clear_prearr() {
  prearr_.Clear();
}
inline const ::pb::TMomentsPrePublishData& TMomentsInfoRsp::prearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMomentsInfoRsp.PreArr)
  return prearr_.Get(index);
}
inline ::pb::TMomentsPrePublishData* TMomentsInfoRsp::mutable_prearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMomentsInfoRsp.PreArr)
  return prearr_.Mutable(index);
}
inline ::pb::TMomentsPrePublishData* TMomentsInfoRsp::add_prearr() {
  // @@protoc_insertion_point(field_add:pb.TMomentsInfoRsp.PreArr)
  return prearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >&
TMomentsInfoRsp::prearr() const {
  // @@protoc_insertion_point(field_list:pb.TMomentsInfoRsp.PreArr)
  return prearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >*
TMomentsInfoRsp::mutable_prearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMomentsInfoRsp.PreArr)
  return &prearr_;
}

// -------------------------------------------------------------------

// TMomentsNotify

// optional .pb.TMomentsPublishedData PublishInfo = 1;
inline bool TMomentsNotify::has_publishinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMomentsNotify::set_has_publishinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMomentsNotify::clear_has_publishinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMomentsNotify::clear_publishinfo() {
  if (publishinfo_ != NULL) publishinfo_->::pb::TMomentsPublishedData::Clear();
  clear_has_publishinfo();
}
inline const ::pb::TMomentsPublishedData& TMomentsNotify::publishinfo() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsNotify.PublishInfo)
  return publishinfo_ != NULL ? *publishinfo_ : *default_instance_->publishinfo_;
}
inline ::pb::TMomentsPublishedData* TMomentsNotify::mutable_publishinfo() {
  set_has_publishinfo();
  if (publishinfo_ == NULL) publishinfo_ = new ::pb::TMomentsPublishedData;
  // @@protoc_insertion_point(field_mutable:pb.TMomentsNotify.PublishInfo)
  return publishinfo_;
}
inline ::pb::TMomentsPublishedData* TMomentsNotify::release_publishinfo() {
  clear_has_publishinfo();
  ::pb::TMomentsPublishedData* temp = publishinfo_;
  publishinfo_ = NULL;
  return temp;
}
inline void TMomentsNotify::set_allocated_publishinfo(::pb::TMomentsPublishedData* publishinfo) {
  delete publishinfo_;
  publishinfo_ = publishinfo;
  if (publishinfo) {
    set_has_publishinfo();
  } else {
    clear_has_publishinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TMomentsNotify.PublishInfo)
}

// repeated .pb.TMomentsPrePublishData PreArr = 2;
inline int TMomentsNotify::prearr_size() const {
  return prearr_.size();
}
inline void TMomentsNotify::clear_prearr() {
  prearr_.Clear();
}
inline const ::pb::TMomentsPrePublishData& TMomentsNotify::prearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMomentsNotify.PreArr)
  return prearr_.Get(index);
}
inline ::pb::TMomentsPrePublishData* TMomentsNotify::mutable_prearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMomentsNotify.PreArr)
  return prearr_.Mutable(index);
}
inline ::pb::TMomentsPrePublishData* TMomentsNotify::add_prearr() {
  // @@protoc_insertion_point(field_add:pb.TMomentsNotify.PreArr)
  return prearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >&
TMomentsNotify::prearr() const {
  // @@protoc_insertion_point(field_list:pb.TMomentsNotify.PreArr)
  return prearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TMomentsPrePublishData >*
TMomentsNotify::mutable_prearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMomentsNotify.PreArr)
  return &prearr_;
}

// -------------------------------------------------------------------

// TMomentsCommentOnReq

// optional int32 Tid = 1;
inline bool TMomentsCommentOnReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMomentsCommentOnReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMomentsCommentOnReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMomentsCommentOnReq::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 TMomentsCommentOnReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsCommentOnReq.Tid)
  return tid_;
}
inline void TMomentsCommentOnReq::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsCommentOnReq.Tid)
}

// optional int32 CommentTid = 2;
inline bool TMomentsCommentOnReq::has_commenttid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMomentsCommentOnReq::set_has_commenttid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMomentsCommentOnReq::clear_has_commenttid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMomentsCommentOnReq::clear_commenttid() {
  commenttid_ = 0;
  clear_has_commenttid();
}
inline ::google::protobuf::int32 TMomentsCommentOnReq::commenttid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsCommentOnReq.CommentTid)
  return commenttid_;
}
inline void TMomentsCommentOnReq::set_commenttid(::google::protobuf::int32 value) {
  set_has_commenttid();
  commenttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsCommentOnReq.CommentTid)
}

// -------------------------------------------------------------------

// TMomentsPublishReq

// optional int32 Tid = 1;
inline bool TMomentsPublishReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMomentsPublishReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMomentsPublishReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMomentsPublishReq::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 TMomentsPublishReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsPublishReq.Tid)
  return tid_;
}
inline void TMomentsPublishReq::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsPublishReq.Tid)
}

// -------------------------------------------------------------------

// TMomentsLikeOnReq

// optional int32 Tid = 1;
inline bool TMomentsLikeOnReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMomentsLikeOnReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMomentsLikeOnReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMomentsLikeOnReq::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 TMomentsLikeOnReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMomentsLikeOnReq.Tid)
  return tid_;
}
inline void TMomentsLikeOnReq::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMomentsLikeOnReq.Tid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fMoments_2eproto__INCLUDED
