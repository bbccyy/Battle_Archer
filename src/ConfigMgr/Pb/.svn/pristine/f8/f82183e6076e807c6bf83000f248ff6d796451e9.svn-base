// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActNewYearSign.proto

#ifndef PROTOBUF_net_2fActNewYearSign_2eproto__INCLUDED
#define PROTOBUF_net_2fActNewYearSign_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/OpenActivity.pb.h"
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActNewYearSign_2eproto();
void protobuf_AssignDesc_net_2fActNewYearSign_2eproto();
void protobuf_ShutdownFile_net_2fActNewYearSign_2eproto();

class TActNewYearSignGetInfoRsp;
class TActNewYearSignGetRewardReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActNewYearSignGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActNewYearSign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActNewYearSignGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActNewYearSignGetInfoRsp();
  virtual ~TActNewYearSignGetInfoRsp();

  TActNewYearSignGetInfoRsp(const TActNewYearSignGetInfoRsp& from);

  inline TActNewYearSignGetInfoRsp& operator=(const TActNewYearSignGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActNewYearSignGetInfoRsp& default_instance();

  void Swap(TActNewYearSignGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActNewYearSignGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActNewYearSignGetInfoRsp& from);
  void MergeFrom(const TActNewYearSignGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AccuLoginNum = 1;
  inline bool has_acculoginnum() const;
  inline void clear_acculoginnum();
  static const int kAccuLoginNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActNewYearSignGetInfoRsp</name>
  	<Function>
  		<name>acculoginnum</name>
  		<replaceName>AccuLoginNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_acculoginnum</name>
  		<replaceName>AccuLoginNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_acculoginnum</name>
  		<replaceName>AccuLoginNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 acculoginnum() const;
  inline void set_acculoginnum(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActNewYearSignGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TActNewYearSignGetInfoRsp)
 private:
  inline void set_has_acculoginnum();
  inline void clear_has_acculoginnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  ::google::protobuf::uint32 acculoginnum_;
  friend void  protobuf_AddDesc_net_2fActNewYearSign_2eproto();
  friend void protobuf_AssignDesc_net_2fActNewYearSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fActNewYearSign_2eproto();

  void InitAsDefaultInstance();
  static TActNewYearSignGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActNewYearSignGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActNewYearSign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActNewYearSignGetRewardReq : public ::google::protobuf::Message {
 public:
  TActNewYearSignGetRewardReq();
  virtual ~TActNewYearSignGetRewardReq();

  TActNewYearSignGetRewardReq(const TActNewYearSignGetRewardReq& from);

  inline TActNewYearSignGetRewardReq& operator=(const TActNewYearSignGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActNewYearSignGetRewardReq& default_instance();

  void Swap(TActNewYearSignGetRewardReq* other);

  // implements Message ----------------------------------------------

  TActNewYearSignGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActNewYearSignGetRewardReq& from);
  void MergeFrom(const TActNewYearSignGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActNewYearSignGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActNewYearSignGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActNewYearSign_2eproto();
  friend void protobuf_AssignDesc_net_2fActNewYearSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fActNewYearSign_2eproto();

  void InitAsDefaultInstance();
  static TActNewYearSignGetRewardReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TActNewYearSignGetInfoRsp

// optional uint32 AccuLoginNum = 1;
inline bool TActNewYearSignGetInfoRsp::has_acculoginnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActNewYearSignGetInfoRsp::set_has_acculoginnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActNewYearSignGetInfoRsp::clear_has_acculoginnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActNewYearSignGetInfoRsp::clear_acculoginnum() {
  acculoginnum_ = 0u;
  clear_has_acculoginnum();
}
inline ::google::protobuf::uint32 TActNewYearSignGetInfoRsp::acculoginnum() const {
  // @@protoc_insertion_point(field_get:pb.TActNewYearSignGetInfoRsp.AccuLoginNum)
  return acculoginnum_;
}
inline void TActNewYearSignGetInfoRsp::set_acculoginnum(::google::protobuf::uint32 value) {
  set_has_acculoginnum();
  acculoginnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActNewYearSignGetInfoRsp.AccuLoginNum)
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TActNewYearSignGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TActNewYearSignGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TActNewYearSignGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActNewYearSignGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TActNewYearSignGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActNewYearSignGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TActNewYearSignGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TActNewYearSignGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TActNewYearSignGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActNewYearSignGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TActNewYearSignGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActNewYearSignGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TActNewYearSignGetRewardReq

// optional uint32 Id = 1;
inline bool TActNewYearSignGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActNewYearSignGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActNewYearSignGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActNewYearSignGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActNewYearSignGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActNewYearSignGetRewardReq.Id)
  return id_;
}
inline void TActNewYearSignGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActNewYearSignGetRewardReq.Id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActNewYearSign_2eproto__INCLUDED
