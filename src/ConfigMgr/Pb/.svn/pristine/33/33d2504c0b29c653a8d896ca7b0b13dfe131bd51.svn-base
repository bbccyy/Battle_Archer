// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TaskDaily.proto

#ifndef PROTOBUF_net_2fTaskDaily_2eproto__INCLUDED
#define PROTOBUF_net_2fTaskDaily_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/TaskBase.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fTaskDaily_2eproto();
void protobuf_AssignDesc_net_2fTaskDaily_2eproto();
void protobuf_ShutdownFile_net_2fTaskDaily_2eproto();

class TTaskDailyCell;
class TTaskDailyInfoRsp;
class TTaskDailyReceiveTaskSingleAwardReq;
class TTaskDailyReceiveScoresAwardReq;
class TTaskDailyInfoNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TTaskDailyCell</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TaskDaily.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTaskDailyCell : public ::google::protobuf::Message {
 public:
  TTaskDailyCell();
  virtual ~TTaskDailyCell();

  TTaskDailyCell(const TTaskDailyCell& from);

  inline TTaskDailyCell& operator=(const TTaskDailyCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTaskDailyCell& default_instance();

  void Swap(TTaskDailyCell* other);

  // implements Message ----------------------------------------------

  TTaskDailyCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTaskDailyCell& from);
  void MergeFrom(const TTaskDailyCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyCell</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional .pb.ETaskStatus Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyCell</name>
  	<Function>
  		<name>status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ETaskStatus status() const;
  inline void set_status(::pb::ETaskStatus value);

  // @@protoc_insertion_point(class_scope:pb.TTaskDailyCell)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  int status_;
  friend void  protobuf_AddDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_AssignDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_ShutdownFile_net_2fTaskDaily_2eproto();

  void InitAsDefaultInstance();
  static TTaskDailyCell* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTaskDailyInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TaskDaily.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTaskDailyInfoRsp : public ::google::protobuf::Message {
 public:
  TTaskDailyInfoRsp();
  virtual ~TTaskDailyInfoRsp();

  TTaskDailyInfoRsp(const TTaskDailyInfoRsp& from);

  inline TTaskDailyInfoRsp& operator=(const TTaskDailyInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTaskDailyInfoRsp& default_instance();

  void Swap(TTaskDailyInfoRsp* other);

  // implements Message ----------------------------------------------

  TTaskDailyInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTaskDailyInfoRsp& from);
  void MergeFrom(const TTaskDailyInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  inline int taskstatusarr_size() const;
  inline void clear_taskstatusarr();
  static const int kTaskStatusArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoRsp</name>
  	<Function>
  		<name>taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>taskstatusarr_size</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TTaskDailyCell& taskstatusarr(int index) const;
  inline ::pb::TTaskDailyCell* mutable_taskstatusarr(int index);
  inline ::pb::TTaskDailyCell* add_taskstatusarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >&
      taskstatusarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >*
      mutable_taskstatusarr();

  // repeated uint32 ReceivedAwardTidArr = 2;
  inline int receivedawardtidarr_size() const;
  inline void clear_receivedawardtidarr();
  static const int kReceivedAwardTidArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoRsp</name>
  	<Function>
  		<name>receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receivedawardtidarr_size</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivedawardtidarr(int index) const;
  inline void set_receivedawardtidarr(int index, ::google::protobuf::uint32 value);
  inline void add_receivedawardtidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receivedawardtidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receivedawardtidarr();

  // optional uint32 TotalScores = 3;
  inline bool has_totalscores() const;
  inline void clear_totalscores();
  static const int kTotalScoresFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoRsp</name>
  	<Function>
  		<name>totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalscores() const;
  inline void set_totalscores(::google::protobuf::uint32 value);

  // optional int64 UpdateTime = 4;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoRsp</name>
  	<Function>
  		<name>updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 updatetime() const;
  inline void set_updatetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.TTaskDailyInfoRsp)
 private:
  inline void set_has_totalscores();
  inline void clear_has_totalscores();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell > taskstatusarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receivedawardtidarr_;
  ::google::protobuf::int64 updatetime_;
  ::google::protobuf::uint32 totalscores_;
  friend void  protobuf_AddDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_AssignDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_ShutdownFile_net_2fTaskDaily_2eproto();

  void InitAsDefaultInstance();
  static TTaskDailyInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTaskDailyReceiveTaskSingleAwardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TaskDaily.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTaskDailyReceiveTaskSingleAwardReq : public ::google::protobuf::Message {
 public:
  TTaskDailyReceiveTaskSingleAwardReq();
  virtual ~TTaskDailyReceiveTaskSingleAwardReq();

  TTaskDailyReceiveTaskSingleAwardReq(const TTaskDailyReceiveTaskSingleAwardReq& from);

  inline TTaskDailyReceiveTaskSingleAwardReq& operator=(const TTaskDailyReceiveTaskSingleAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTaskDailyReceiveTaskSingleAwardReq& default_instance();

  void Swap(TTaskDailyReceiveTaskSingleAwardReq* other);

  // implements Message ----------------------------------------------

  TTaskDailyReceiveTaskSingleAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTaskDailyReceiveTaskSingleAwardReq& from);
  void MergeFrom(const TTaskDailyReceiveTaskSingleAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TaskDailyTid = 1;
  inline bool has_taskdailytid() const;
  inline void clear_taskdailytid();
  static const int kTaskDailyTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyReceiveTaskSingleAwardReq</name>
  	<Function>
  		<name>taskdailytid</name>
  		<replaceName>TaskDailyTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_taskdailytid</name>
  		<replaceName>TaskDailyTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_taskdailytid</name>
  		<replaceName>TaskDailyTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 taskdailytid() const;
  inline void set_taskdailytid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TTaskDailyReceiveTaskSingleAwardReq)
 private:
  inline void set_has_taskdailytid();
  inline void clear_has_taskdailytid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskdailytid_;
  friend void  protobuf_AddDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_AssignDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_ShutdownFile_net_2fTaskDaily_2eproto();

  void InitAsDefaultInstance();
  static TTaskDailyReceiveTaskSingleAwardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTaskDailyReceiveScoresAwardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TaskDaily.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTaskDailyReceiveScoresAwardReq : public ::google::protobuf::Message {
 public:
  TTaskDailyReceiveScoresAwardReq();
  virtual ~TTaskDailyReceiveScoresAwardReq();

  TTaskDailyReceiveScoresAwardReq(const TTaskDailyReceiveScoresAwardReq& from);

  inline TTaskDailyReceiveScoresAwardReq& operator=(const TTaskDailyReceiveScoresAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTaskDailyReceiveScoresAwardReq& default_instance();

  void Swap(TTaskDailyReceiveScoresAwardReq* other);

  // implements Message ----------------------------------------------

  TTaskDailyReceiveScoresAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTaskDailyReceiveScoresAwardReq& from);
  void MergeFrom(const TTaskDailyReceiveScoresAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ScoreAwardTid = 1;
  inline bool has_scoreawardtid() const;
  inline void clear_scoreawardtid();
  static const int kScoreAwardTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyReceiveScoresAwardReq</name>
  	<Function>
  		<name>scoreawardtid</name>
  		<replaceName>ScoreAwardTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_scoreawardtid</name>
  		<replaceName>ScoreAwardTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_scoreawardtid</name>
  		<replaceName>ScoreAwardTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 scoreawardtid() const;
  inline void set_scoreawardtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TTaskDailyReceiveScoresAwardReq)
 private:
  inline void set_has_scoreawardtid();
  inline void clear_has_scoreawardtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 scoreawardtid_;
  friend void  protobuf_AddDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_AssignDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_ShutdownFile_net_2fTaskDaily_2eproto();

  void InitAsDefaultInstance();
  static TTaskDailyReceiveScoresAwardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTaskDailyInfoNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TaskDaily.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTaskDailyInfoNotify : public ::google::protobuf::Message {
 public:
  TTaskDailyInfoNotify();
  virtual ~TTaskDailyInfoNotify();

  TTaskDailyInfoNotify(const TTaskDailyInfoNotify& from);

  inline TTaskDailyInfoNotify& operator=(const TTaskDailyInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTaskDailyInfoNotify& default_instance();

  void Swap(TTaskDailyInfoNotify* other);

  // implements Message ----------------------------------------------

  TTaskDailyInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTaskDailyInfoNotify& from);
  void MergeFrom(const TTaskDailyInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  inline int taskstatusarr_size() const;
  inline void clear_taskstatusarr();
  static const int kTaskStatusArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoNotify</name>
  	<Function>
  		<name>taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_taskstatusarr</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>taskstatusarr_size</name>
  		<replaceName>TaskStatusArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TTaskDailyCell& taskstatusarr(int index) const;
  inline ::pb::TTaskDailyCell* mutable_taskstatusarr(int index);
  inline ::pb::TTaskDailyCell* add_taskstatusarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >&
      taskstatusarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >*
      mutable_taskstatusarr();

  // repeated uint32 ReceivedAwardTidArr = 2;
  inline int receivedawardtidarr_size() const;
  inline void clear_receivedawardtidarr();
  static const int kReceivedAwardTidArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoNotify</name>
  	<Function>
  		<name>receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivedawardtidarr</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receivedawardtidarr_size</name>
  		<replaceName>ReceivedAwardTidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivedawardtidarr(int index) const;
  inline void set_receivedawardtidarr(int index, ::google::protobuf::uint32 value);
  inline void add_receivedawardtidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receivedawardtidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receivedawardtidarr();

  // optional uint32 TotalScores = 3;
  inline bool has_totalscores() const;
  inline void clear_totalscores();
  static const int kTotalScoresFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoNotify</name>
  	<Function>
  		<name>totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalscores() const;
  inline void set_totalscores(::google::protobuf::uint32 value);

  // optional int64 UpdateTime = 4;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TTaskDailyInfoNotify</name>
  	<Function>
  		<name>updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 updatetime() const;
  inline void set_updatetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.TTaskDailyInfoNotify)
 private:
  inline void set_has_totalscores();
  inline void clear_has_totalscores();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell > taskstatusarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receivedawardtidarr_;
  ::google::protobuf::int64 updatetime_;
  ::google::protobuf::uint32 totalscores_;
  friend void  protobuf_AddDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_AssignDesc_net_2fTaskDaily_2eproto();
  friend void protobuf_ShutdownFile_net_2fTaskDaily_2eproto();

  void InitAsDefaultInstance();
  static TTaskDailyInfoNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TTaskDailyCell

// optional uint32 Tid = 1;
inline bool TTaskDailyCell::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TTaskDailyCell::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TTaskDailyCell::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TTaskDailyCell::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TTaskDailyCell::tid() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyCell.Tid)
  return tid_;
}
inline void TTaskDailyCell::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyCell.Tid)
}

// optional .pb.ETaskStatus Status = 2;
inline bool TTaskDailyCell::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TTaskDailyCell::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TTaskDailyCell::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TTaskDailyCell::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::pb::ETaskStatus TTaskDailyCell::status() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyCell.Status)
  return static_cast< ::pb::ETaskStatus >(status_);
}
inline void TTaskDailyCell::set_status(::pb::ETaskStatus value) {
  assert(::pb::ETaskStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyCell.Status)
}

// -------------------------------------------------------------------

// TTaskDailyInfoRsp

// repeated .pb.TTaskDailyCell TaskStatusArr = 1;
inline int TTaskDailyInfoRsp::taskstatusarr_size() const {
  return taskstatusarr_.size();
}
inline void TTaskDailyInfoRsp::clear_taskstatusarr() {
  taskstatusarr_.Clear();
}
inline const ::pb::TTaskDailyCell& TTaskDailyInfoRsp::taskstatusarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoRsp.TaskStatusArr)
  return taskstatusarr_.Get(index);
}
inline ::pb::TTaskDailyCell* TTaskDailyInfoRsp::mutable_taskstatusarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TTaskDailyInfoRsp.TaskStatusArr)
  return taskstatusarr_.Mutable(index);
}
inline ::pb::TTaskDailyCell* TTaskDailyInfoRsp::add_taskstatusarr() {
  // @@protoc_insertion_point(field_add:pb.TTaskDailyInfoRsp.TaskStatusArr)
  return taskstatusarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >&
TTaskDailyInfoRsp::taskstatusarr() const {
  // @@protoc_insertion_point(field_list:pb.TTaskDailyInfoRsp.TaskStatusArr)
  return taskstatusarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >*
TTaskDailyInfoRsp::mutable_taskstatusarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTaskDailyInfoRsp.TaskStatusArr)
  return &taskstatusarr_;
}

// repeated uint32 ReceivedAwardTidArr = 2;
inline int TTaskDailyInfoRsp::receivedawardtidarr_size() const {
  return receivedawardtidarr_.size();
}
inline void TTaskDailyInfoRsp::clear_receivedawardtidarr() {
  receivedawardtidarr_.Clear();
}
inline ::google::protobuf::uint32 TTaskDailyInfoRsp::receivedawardtidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoRsp.ReceivedAwardTidArr)
  return receivedawardtidarr_.Get(index);
}
inline void TTaskDailyInfoRsp::set_receivedawardtidarr(int index, ::google::protobuf::uint32 value) {
  receivedawardtidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TTaskDailyInfoRsp.ReceivedAwardTidArr)
}
inline void TTaskDailyInfoRsp::add_receivedawardtidarr(::google::protobuf::uint32 value) {
  receivedawardtidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TTaskDailyInfoRsp.ReceivedAwardTidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TTaskDailyInfoRsp::receivedawardtidarr() const {
  // @@protoc_insertion_point(field_list:pb.TTaskDailyInfoRsp.ReceivedAwardTidArr)
  return receivedawardtidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TTaskDailyInfoRsp::mutable_receivedawardtidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTaskDailyInfoRsp.ReceivedAwardTidArr)
  return &receivedawardtidarr_;
}

// optional uint32 TotalScores = 3;
inline bool TTaskDailyInfoRsp::has_totalscores() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TTaskDailyInfoRsp::set_has_totalscores() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TTaskDailyInfoRsp::clear_has_totalscores() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TTaskDailyInfoRsp::clear_totalscores() {
  totalscores_ = 0u;
  clear_has_totalscores();
}
inline ::google::protobuf::uint32 TTaskDailyInfoRsp::totalscores() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoRsp.TotalScores)
  return totalscores_;
}
inline void TTaskDailyInfoRsp::set_totalscores(::google::protobuf::uint32 value) {
  set_has_totalscores();
  totalscores_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyInfoRsp.TotalScores)
}

// optional int64 UpdateTime = 4;
inline bool TTaskDailyInfoRsp::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TTaskDailyInfoRsp::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TTaskDailyInfoRsp::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TTaskDailyInfoRsp::clear_updatetime() {
  updatetime_ = GOOGLE_LONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::int64 TTaskDailyInfoRsp::updatetime() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoRsp.UpdateTime)
  return updatetime_;
}
inline void TTaskDailyInfoRsp::set_updatetime(::google::protobuf::int64 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyInfoRsp.UpdateTime)
}

// -------------------------------------------------------------------

// TTaskDailyReceiveTaskSingleAwardReq

// optional uint32 TaskDailyTid = 1;
inline bool TTaskDailyReceiveTaskSingleAwardReq::has_taskdailytid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TTaskDailyReceiveTaskSingleAwardReq::set_has_taskdailytid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TTaskDailyReceiveTaskSingleAwardReq::clear_has_taskdailytid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TTaskDailyReceiveTaskSingleAwardReq::clear_taskdailytid() {
  taskdailytid_ = 0u;
  clear_has_taskdailytid();
}
inline ::google::protobuf::uint32 TTaskDailyReceiveTaskSingleAwardReq::taskdailytid() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyReceiveTaskSingleAwardReq.TaskDailyTid)
  return taskdailytid_;
}
inline void TTaskDailyReceiveTaskSingleAwardReq::set_taskdailytid(::google::protobuf::uint32 value) {
  set_has_taskdailytid();
  taskdailytid_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyReceiveTaskSingleAwardReq.TaskDailyTid)
}

// -------------------------------------------------------------------

// TTaskDailyReceiveScoresAwardReq

// optional uint32 ScoreAwardTid = 1;
inline bool TTaskDailyReceiveScoresAwardReq::has_scoreawardtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TTaskDailyReceiveScoresAwardReq::set_has_scoreawardtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TTaskDailyReceiveScoresAwardReq::clear_has_scoreawardtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TTaskDailyReceiveScoresAwardReq::clear_scoreawardtid() {
  scoreawardtid_ = 0u;
  clear_has_scoreawardtid();
}
inline ::google::protobuf::uint32 TTaskDailyReceiveScoresAwardReq::scoreawardtid() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyReceiveScoresAwardReq.ScoreAwardTid)
  return scoreawardtid_;
}
inline void TTaskDailyReceiveScoresAwardReq::set_scoreawardtid(::google::protobuf::uint32 value) {
  set_has_scoreawardtid();
  scoreawardtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyReceiveScoresAwardReq.ScoreAwardTid)
}

// -------------------------------------------------------------------

// TTaskDailyInfoNotify

// repeated .pb.TTaskDailyCell TaskStatusArr = 1;
inline int TTaskDailyInfoNotify::taskstatusarr_size() const {
  return taskstatusarr_.size();
}
inline void TTaskDailyInfoNotify::clear_taskstatusarr() {
  taskstatusarr_.Clear();
}
inline const ::pb::TTaskDailyCell& TTaskDailyInfoNotify::taskstatusarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoNotify.TaskStatusArr)
  return taskstatusarr_.Get(index);
}
inline ::pb::TTaskDailyCell* TTaskDailyInfoNotify::mutable_taskstatusarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TTaskDailyInfoNotify.TaskStatusArr)
  return taskstatusarr_.Mutable(index);
}
inline ::pb::TTaskDailyCell* TTaskDailyInfoNotify::add_taskstatusarr() {
  // @@protoc_insertion_point(field_add:pb.TTaskDailyInfoNotify.TaskStatusArr)
  return taskstatusarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >&
TTaskDailyInfoNotify::taskstatusarr() const {
  // @@protoc_insertion_point(field_list:pb.TTaskDailyInfoNotify.TaskStatusArr)
  return taskstatusarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TTaskDailyCell >*
TTaskDailyInfoNotify::mutable_taskstatusarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTaskDailyInfoNotify.TaskStatusArr)
  return &taskstatusarr_;
}

// repeated uint32 ReceivedAwardTidArr = 2;
inline int TTaskDailyInfoNotify::receivedawardtidarr_size() const {
  return receivedawardtidarr_.size();
}
inline void TTaskDailyInfoNotify::clear_receivedawardtidarr() {
  receivedawardtidarr_.Clear();
}
inline ::google::protobuf::uint32 TTaskDailyInfoNotify::receivedawardtidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoNotify.ReceivedAwardTidArr)
  return receivedawardtidarr_.Get(index);
}
inline void TTaskDailyInfoNotify::set_receivedawardtidarr(int index, ::google::protobuf::uint32 value) {
  receivedawardtidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TTaskDailyInfoNotify.ReceivedAwardTidArr)
}
inline void TTaskDailyInfoNotify::add_receivedawardtidarr(::google::protobuf::uint32 value) {
  receivedawardtidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TTaskDailyInfoNotify.ReceivedAwardTidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TTaskDailyInfoNotify::receivedawardtidarr() const {
  // @@protoc_insertion_point(field_list:pb.TTaskDailyInfoNotify.ReceivedAwardTidArr)
  return receivedawardtidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TTaskDailyInfoNotify::mutable_receivedawardtidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTaskDailyInfoNotify.ReceivedAwardTidArr)
  return &receivedawardtidarr_;
}

// optional uint32 TotalScores = 3;
inline bool TTaskDailyInfoNotify::has_totalscores() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TTaskDailyInfoNotify::set_has_totalscores() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TTaskDailyInfoNotify::clear_has_totalscores() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TTaskDailyInfoNotify::clear_totalscores() {
  totalscores_ = 0u;
  clear_has_totalscores();
}
inline ::google::protobuf::uint32 TTaskDailyInfoNotify::totalscores() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoNotify.TotalScores)
  return totalscores_;
}
inline void TTaskDailyInfoNotify::set_totalscores(::google::protobuf::uint32 value) {
  set_has_totalscores();
  totalscores_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyInfoNotify.TotalScores)
}

// optional int64 UpdateTime = 4;
inline bool TTaskDailyInfoNotify::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TTaskDailyInfoNotify::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TTaskDailyInfoNotify::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TTaskDailyInfoNotify::clear_updatetime() {
  updatetime_ = GOOGLE_LONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::int64 TTaskDailyInfoNotify::updatetime() const {
  // @@protoc_insertion_point(field_get:pb.TTaskDailyInfoNotify.UpdateTime)
  return updatetime_;
}
inline void TTaskDailyInfoNotify::set_updatetime(::google::protobuf::int64 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TTaskDailyInfoNotify.UpdateTime)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fTaskDaily_2eproto__INCLUDED
