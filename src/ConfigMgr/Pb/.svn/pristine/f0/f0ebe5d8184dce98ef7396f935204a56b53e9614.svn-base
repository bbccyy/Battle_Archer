// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Formation.proto

#ifndef PROTOBUF_net_2fFormation_2eproto__INCLUDED
#define PROTOBUF_net_2fFormation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Hero.pb.h"
#include "net/Battle.pb.h"
#include "net/User.pb.h"
#include "net/Common.pb.h"
#include "net/Beast.pb.h"
#include "net/Mount.pb.h"
#include "net/CommonReward.pb.h"
#include "net/WarRiding.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fFormation_2eproto();
void protobuf_AssignDesc_net_2fFormation_2eproto();
void protobuf_ShutdownFile_net_2fFormation_2eproto();

class TFormationPosHero;
class TFormationSquadHero;
class TFormationPresetFunctionData;
class TFormationGetDataRsp;
class TFormationExchangeSquadHeroReq;
class TFormationDeployHeroInFormationReq;
class TFormationGetOtherFormationReq;
class TFormationOtherHeroInfo;
class TFormationGetOtherFormationRsp;
class TFormationGetOtherSimpleFormationReq;
class TFormationOtherHeroSimpleInfo;
class TFormationGetOtherSimpleFormationRsp;
class TFormationGetOtherPlayerBattleArgsReq;
class TFormationGetOtherPlayerBattleArgsRsp;
class TFormationHallHero;
class TFormationGetHallInfoRsp;
class TFormationResetHallRsp;
class TFormationSetHallPosReq;
class TFormationSetHallPosRsp;
class TFormationUseDefaultBattleFormationReq;
class TFormationGetOtherBattleFormationReq;
class TFormationGetOtherBattleFormationRsp;
class TFormationFormationChangePush;
class TFormationGetFormationByOtherServerReq;
class TFormationGetFormationByOtherServerRsp;
class TFormationGetSimpleFormationByOtherServerReq;
class TFormationGetSimpleFormationByOtherServerRsp;
class TFormationGetBattleFormationByOtherServerReq;
class TFormationGetBattleFormationByOtherServerRsp;
class TFormationGetPlayerBattleArgsByOtherServerReq;
class TFormationGetPlayerBattleArgsByOtherServerRsp;
class TFormationGetMasterHeroDefaultPosReq;
class TFormationGetMasterHeroDefaultPosRsp;
class TFormationOfHeroInfo;
class TFormationOfHeroRsp;

enum EFunctionId {
  FORMATION = 1,
  INSTANCE = 2,
  DINSTANCE = 3,
  ARENA = 4,
  TOWER = 5,
  ADVENTURE = 6,
  MINERAL = 7,
  EXPEDITION = 8,
  CAMPTOWER_WEI = 9,
  CAMPTOWER_SHU = 10,
  CAMPTOWER_WU = 11,
  CAMPTOWER_GROUP = 12,
  ADVENTURESINGLE = 13,
  GUILDBOSS = 14,
  WORLDBOSS = 15,
  FRIENDBATTLE = 16,
  BEASTINSTANCE = 17,
  WORLDBOSSCROSS = 18,
  LimitChallenge = 19,
  CROSSLEVY = 20,
  LayerFight = 21,
  SouChainActivity = 22,
  BEASTINSTANCE_WEI = 23,
  BEASTINSTANCE_SHU = 24,
  BEASTINSTANCE_WU = 25,
  BEASTINSTANCE_GROUP = 26,
  TOWERHELL = 27,
  DIVINE_BOSS = 28
};
bool EFunctionId_IsValid(int value);
const EFunctionId EFunctionId_MIN = FORMATION;
const EFunctionId EFunctionId_MAX = DIVINE_BOSS;
const int EFunctionId_ARRAYSIZE = EFunctionId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFunctionId_descriptor();
inline const ::std::string& EFunctionId_Name(EFunctionId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFunctionId_descriptor(), value);
}
inline bool EFunctionId_Parse(
    const ::std::string& name, EFunctionId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFunctionId>(
    EFunctionId_descriptor(), name, value);
}
enum EFormationType {
  ARENAHIGHORDER = 1,
  PUBG = 2,
  CROSSCHALLENGE = 3,
  CROSSCOLLABORATE = 4,
  GUILDWAR = 5,
  CROSSLEVY_FORMATION = 6,
  OUTSMART = 7,
  ADVENTUREENEMY = 8,
  ALLY = 9,
  PLATFORMARENA = 10,
  TOWERHELLSQUAD = 11,
  DIVINE_BATTLE = 12,
  DEFINECHALLENGE = 13
};
bool EFormationType_IsValid(int value);
const EFormationType EFormationType_MIN = ARENAHIGHORDER;
const EFormationType EFormationType_MAX = DEFINECHALLENGE;
const int EFormationType_ARRAYSIZE = EFormationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFormationType_descriptor();
inline const ::std::string& EFormationType_Name(EFormationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFormationType_descriptor(), value);
}
inline bool EFormationType_Parse(
    const ::std::string& name, EFormationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFormationType>(
    EFormationType_descriptor(), name, value);
}
enum EHallType {
  HALLCOMMON = 0,
  HALLTREASURE = 1
};
bool EHallType_IsValid(int value);
const EHallType EHallType_MIN = HALLCOMMON;
const EHallType EHallType_MAX = HALLTREASURE;
const int EHallType_ARRAYSIZE = EHallType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHallType_descriptor();
inline const ::std::string& EHallType_Name(EHallType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHallType_descriptor(), value);
}
inline bool EHallType_Parse(
    const ::std::string& name, EHallType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHallType>(
    EHallType_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TFormationPosHero</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationPosHero : public ::google::protobuf::Message {
 public:
  TFormationPosHero();
  virtual ~TFormationPosHero();

  TFormationPosHero(const TFormationPosHero& from);

  inline TFormationPosHero& operator=(const TFormationPosHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationPosHero& default_instance();

  void Swap(TFormationPosHero* other);

  // implements Message ----------------------------------------------

  TFormationPosHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationPosHero& from);
  void MergeFrom(const TFormationPosHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationPosHero</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationPosHero</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationPosHero)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationPosHero* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationSquadHero</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationSquadHero : public ::google::protobuf::Message {
 public:
  TFormationSquadHero();
  virtual ~TFormationSquadHero();

  TFormationSquadHero(const TFormationSquadHero& from);

  inline TFormationSquadHero& operator=(const TFormationSquadHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationSquadHero& default_instance();

  void Swap(TFormationSquadHero* other);

  // implements Message ----------------------------------------------

  TFormationSquadHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationSquadHero& from);
  void MergeFrom(const TFormationSquadHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationSquadHero</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationSquadHero</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationSquadHero)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationSquadHero* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationPresetFunctionData</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationPresetFunctionData : public ::google::protobuf::Message {
 public:
  TFormationPresetFunctionData();
  virtual ~TFormationPresetFunctionData();

  TFormationPresetFunctionData(const TFormationPresetFunctionData& from);

  inline TFormationPresetFunctionData& operator=(const TFormationPresetFunctionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationPresetFunctionData& default_instance();

  void Swap(TFormationPresetFunctionData* other);

  // implements Message ----------------------------------------------

  TFormationPresetFunctionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationPresetFunctionData& from);
  void MergeFrom(const TFormationPresetFunctionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EFunctionId FuncId = 1;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationPresetFunctionData</name>
  	<Function>
  		<name>funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EFunctionId funcid() const;
  inline void set_funcid(::pb::EFunctionId value);

  // repeated .pb.TFormationPosHero PosArr = 2;
  inline int posarr_size() const;
  inline void clear_posarr();
  static const int kPosArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationPresetFunctionData</name>
  	<Function>
  		<name>posarr</name>
  		<replaceName>PosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_posarr</name>
  		<replaceName>PosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_posarr</name>
  		<replaceName>PosArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_posarr</name>
  		<replaceName>PosArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>posarr_size</name>
  		<replaceName>PosArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationPosHero& posarr(int index) const;
  inline ::pb::TFormationPosHero* mutable_posarr(int index);
  inline ::pb::TFormationPosHero* add_posarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >&
      posarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >*
      mutable_posarr();

  // optional bool UseDefaultBattleFormation = 3;
  inline bool has_usedefaultbattleformation() const;
  inline void clear_usedefaultbattleformation();
  static const int kUseDefaultBattleFormationFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationPresetFunctionData</name>
  	<Function>
  		<name>usedefaultbattleformation</name>
  		<replaceName>UseDefaultBattleFormation</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usedefaultbattleformation</name>
  		<replaceName>UseDefaultBattleFormation</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usedefaultbattleformation</name>
  		<replaceName>UseDefaultBattleFormation</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool usedefaultbattleformation() const;
  inline void set_usedefaultbattleformation(bool value);

  // @@protoc_insertion_point(class_scope:pb.TFormationPresetFunctionData)
 private:
  inline void set_has_funcid();
  inline void clear_has_funcid();
  inline void set_has_usedefaultbattleformation();
  inline void clear_has_usedefaultbattleformation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero > posarr_;
  int funcid_;
  bool usedefaultbattleformation_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationPresetFunctionData* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetDataRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetDataRsp : public ::google::protobuf::Message {
 public:
  TFormationGetDataRsp();
  virtual ~TFormationGetDataRsp();

  TFormationGetDataRsp(const TFormationGetDataRsp& from);

  inline TFormationGetDataRsp& operator=(const TFormationGetDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetDataRsp& default_instance();

  void Swap(TFormationGetDataRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetDataRsp& from);
  void MergeFrom(const TFormationGetDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationSquadHero SquadArr = 1;
  inline int squadarr_size() const;
  inline void clear_squadarr();
  static const int kSquadArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetDataRsp</name>
  	<Function>
  		<name>squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>squadarr_size</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationSquadHero& squadarr(int index) const;
  inline ::pb::TFormationSquadHero* mutable_squadarr(int index);
  inline ::pb::TFormationSquadHero* add_squadarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >&
      squadarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >*
      mutable_squadarr();

  // repeated .pb.TFormationPresetFunctionData PresetArr = 2;
  inline int presetarr_size() const;
  inline void clear_presetarr();
  static const int kPresetArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetDataRsp</name>
  	<Function>
  		<name>presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>presetarr_size</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationPresetFunctionData& presetarr(int index) const;
  inline ::pb::TFormationPresetFunctionData* mutable_presetarr(int index);
  inline ::pb::TFormationPresetFunctionData* add_presetarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >&
      presetarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >*
      mutable_presetarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetDataRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero > squadarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData > presetarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetDataRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationExchangeSquadHeroReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationExchangeSquadHeroReq : public ::google::protobuf::Message {
 public:
  TFormationExchangeSquadHeroReq();
  virtual ~TFormationExchangeSquadHeroReq();

  TFormationExchangeSquadHeroReq(const TFormationExchangeSquadHeroReq& from);

  inline TFormationExchangeSquadHeroReq& operator=(const TFormationExchangeSquadHeroReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationExchangeSquadHeroReq& default_instance();

  void Swap(TFormationExchangeSquadHeroReq* other);

  // implements Message ----------------------------------------------

  TFormationExchangeSquadHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationExchangeSquadHeroReq& from);
  void MergeFrom(const TFormationExchangeSquadHeroReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationExchangeSquadHeroReq</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationExchangeSquadHeroReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional bool NeedInherit = 3;
  inline bool has_needinherit() const;
  inline void clear_needinherit();
  static const int kNeedInheritFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationExchangeSquadHeroReq</name>
  	<Function>
  		<name>needinherit</name>
  		<replaceName>NeedInherit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_needinherit</name>
  		<replaceName>NeedInherit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_needinherit</name>
  		<replaceName>NeedInherit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool needinherit() const;
  inline void set_needinherit(bool value);

  // @@protoc_insertion_point(class_scope:pb.TFormationExchangeSquadHeroReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_needinherit();
  inline void clear_has_needinherit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  bool needinherit_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationExchangeSquadHeroReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationDeployHeroInFormationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationDeployHeroInFormationReq : public ::google::protobuf::Message {
 public:
  TFormationDeployHeroInFormationReq();
  virtual ~TFormationDeployHeroInFormationReq();

  TFormationDeployHeroInFormationReq(const TFormationDeployHeroInFormationReq& from);

  inline TFormationDeployHeroInFormationReq& operator=(const TFormationDeployHeroInFormationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationDeployHeroInFormationReq& default_instance();

  void Swap(TFormationDeployHeroInFormationReq* other);

  // implements Message ----------------------------------------------

  TFormationDeployHeroInFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationDeployHeroInFormationReq& from);
  void MergeFrom(const TFormationDeployHeroInFormationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EFunctionId FuncId = 1;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationDeployHeroInFormationReq</name>
  	<Function>
  		<name>funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EFunctionId funcid() const;
  inline void set_funcid(::pb::EFunctionId value);

  // repeated .pb.TFormationPosHero HeroArray = 2;
  inline int heroarray_size() const;
  inline void clear_heroarray();
  static const int kHeroArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationDeployHeroInFormationReq</name>
  	<Function>
  		<name>heroarray</name>
  		<replaceName>HeroArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroarray</name>
  		<replaceName>HeroArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroarray</name>
  		<replaceName>HeroArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroarray</name>
  		<replaceName>HeroArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroarray_size</name>
  		<replaceName>HeroArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationPosHero& heroarray(int index) const;
  inline ::pb::TFormationPosHero* mutable_heroarray(int index);
  inline ::pb::TFormationPosHero* add_heroarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >&
      heroarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >*
      mutable_heroarray();

  // @@protoc_insertion_point(class_scope:pb.TFormationDeployHeroInFormationReq)
 private:
  inline void set_has_funcid();
  inline void clear_has_funcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero > heroarray_;
  int funcid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationDeployHeroInFormationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherFormationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherFormationReq : public ::google::protobuf::Message {
 public:
  TFormationGetOtherFormationReq();
  virtual ~TFormationGetOtherFormationReq();

  TFormationGetOtherFormationReq(const TFormationGetOtherFormationReq& from);

  inline TFormationGetOtherFormationReq& operator=(const TFormationGetOtherFormationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherFormationReq& default_instance();

  void Swap(TFormationGetOtherFormationReq* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherFormationReq& from);
  void MergeFrom(const TFormationGetOtherFormationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string ServerId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationReq</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherFormationReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherFormationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationOtherHeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationOtherHeroInfo : public ::google::protobuf::Message {
 public:
  TFormationOtherHeroInfo();
  virtual ~TFormationOtherHeroInfo();

  TFormationOtherHeroInfo(const TFormationOtherHeroInfo& from);

  inline TFormationOtherHeroInfo& operator=(const TFormationOtherHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationOtherHeroInfo& default_instance();

  void Swap(TFormationOtherHeroInfo* other);

  // implements Message ----------------------------------------------

  TFormationOtherHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationOtherHeroInfo& from);
  void MergeFrom(const TFormationOtherHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional .pb.TOtherUserHeroInfo HeroInfo = 2;
  inline bool has_heroinfo() const;
  inline void clear_heroinfo();
  static const int kHeroInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherUserHeroInfo& heroinfo() const;
  inline ::pb::TOtherUserHeroInfo* mutable_heroinfo();
  inline ::pb::TOtherUserHeroInfo* release_heroinfo();
  inline void set_allocated_heroinfo(::pb::TOtherUserHeroInfo* heroinfo);

  // repeated .pb.TArmItem ArmArr = 3;
  inline int armarr_size() const;
  inline void clear_armarr();
  static const int kArmArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>armarr</name>
  		<replaceName>ArmArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_armarr</name>
  		<replaceName>ArmArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_armarr</name>
  		<replaceName>ArmArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_armarr</name>
  		<replaceName>ArmArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>armarr_size</name>
  		<replaceName>ArmArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArmItem& armarr(int index) const;
  inline ::pb::TArmItem* mutable_armarr(int index);
  inline ::pb::TArmItem* add_armarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArmItem >&
      armarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArmItem >*
      mutable_armarr();

  // repeated .pb.TAccessoryItem AccessoryArr = 4;
  inline int accessoryarr_size() const;
  inline void clear_accessoryarr();
  static const int kAccessoryArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>accessoryarr</name>
  		<replaceName>AccessoryArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_accessoryarr</name>
  		<replaceName>AccessoryArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_accessoryarr</name>
  		<replaceName>AccessoryArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_accessoryarr</name>
  		<replaceName>AccessoryArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>accessoryarr_size</name>
  		<replaceName>AccessoryArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAccessoryItem& accessoryarr(int index) const;
  inline ::pb::TAccessoryItem* mutable_accessoryarr(int index);
  inline ::pb::TAccessoryItem* add_accessoryarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAccessoryItem >&
      accessoryarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAccessoryItem >*
      mutable_accessoryarr();

  // repeated .pb.TExclEquipItem ExclEquipArr = 5;
  inline int exclequiparr_size() const;
  inline void clear_exclequiparr();
  static const int kExclEquipArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>exclequiparr</name>
  		<replaceName>ExclEquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_exclequiparr</name>
  		<replaceName>ExclEquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_exclequiparr</name>
  		<replaceName>ExclEquipArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exclequiparr</name>
  		<replaceName>ExclEquipArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>exclequiparr_size</name>
  		<replaceName>ExclEquipArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TExclEquipItem& exclequiparr(int index) const;
  inline ::pb::TExclEquipItem* mutable_exclequiparr(int index);
  inline ::pb::TExclEquipItem* add_exclequiparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TExclEquipItem >&
      exclequiparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TExclEquipItem >*
      mutable_exclequiparr();

  // repeated .pb.TSilkBagItem SilkBagArr = 6;
  inline int silkbagarr_size() const;
  inline void clear_silkbagarr();
  static const int kSilkBagArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>silkbagarr</name>
  		<replaceName>SilkBagArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_silkbagarr</name>
  		<replaceName>SilkBagArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_silkbagarr</name>
  		<replaceName>SilkBagArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_silkbagarr</name>
  		<replaceName>SilkBagArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>silkbagarr_size</name>
  		<replaceName>SilkBagArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSilkBagItem& silkbagarr(int index) const;
  inline ::pb::TSilkBagItem* mutable_silkbagarr(int index);
  inline ::pb::TSilkBagItem* add_silkbagarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSilkBagItem >&
      silkbagarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSilkBagItem >*
      mutable_silkbagarr();

  // optional uint32 HeroTitleId = 7;
  inline bool has_herotitleid() const;
  inline void clear_herotitleid();
  static const int kHeroTitleIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>herotitleid</name>
  		<replaceName>HeroTitleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_herotitleid</name>
  		<replaceName>HeroTitleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herotitleid</name>
  		<replaceName>HeroTitleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 herotitleid() const;
  inline void set_herotitleid(::google::protobuf::uint32 value);

  // optional uint32 BackGroundId = 8;
  inline bool has_backgroundid() const;
  inline void clear_backgroundid();
  static const int kBackGroundIdFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroInfo</name>
  	<Function>
  		<name>backgroundid</name>
  		<replaceName>BackGroundId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_backgroundid</name>
  		<replaceName>BackGroundId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_backgroundid</name>
  		<replaceName>BackGroundId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 backgroundid() const;
  inline void set_backgroundid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationOtherHeroInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_heroinfo();
  inline void clear_has_heroinfo();
  inline void set_has_herotitleid();
  inline void clear_has_herotitleid();
  inline void set_has_backgroundid();
  inline void clear_has_backgroundid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TOtherUserHeroInfo* heroinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArmItem > armarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAccessoryItem > accessoryarr_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 herotitleid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TExclEquipItem > exclequiparr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSilkBagItem > silkbagarr_;
  ::google::protobuf::uint32 backgroundid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationOtherHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherFormationRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherFormationRsp : public ::google::protobuf::Message {
 public:
  TFormationGetOtherFormationRsp();
  virtual ~TFormationGetOtherFormationRsp();

  TFormationGetOtherFormationRsp(const TFormationGetOtherFormationRsp& from);

  inline TFormationGetOtherFormationRsp& operator=(const TFormationGetOtherFormationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherFormationRsp& default_instance();

  void Swap(TFormationGetOtherFormationRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherFormationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherFormationRsp& from);
  void MergeFrom(const TFormationGetOtherFormationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOtherHeroInfo& heroinfoarr(int index) const;
  inline ::pb::TFormationOtherHeroInfo* mutable_heroinfoarr(int index);
  inline ::pb::TFormationOtherHeroInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
      mutable_heroinfoarr();

  // repeated .pb.TRankSingle RankArr = 2;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRankSingle& rankarr(int index) const;
  inline ::pb::TRankSingle* mutable_rankarr(int index);
  inline ::pb::TRankSingle* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
      mutable_rankarr();

  // optional .pb.TOthersBeastInfo BeastInfo = 3;
  inline bool has_beastinfo() const;
  inline void clear_beastinfo();
  static const int kBeastInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOthersBeastInfo& beastinfo() const;
  inline ::pb::TOthersBeastInfo* mutable_beastinfo();
  inline ::pb::TOthersBeastInfo* release_beastinfo();
  inline void set_allocated_beastinfo(::pb::TOthersBeastInfo* beastinfo);

  // optional .pb.TOtherMountSingleInfo CurMountInfo = 4;
  inline bool has_curmountinfo() const;
  inline void clear_curmountinfo();
  static const int kCurMountInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherMountSingleInfo& curmountinfo() const;
  inline ::pb::TOtherMountSingleInfo* mutable_curmountinfo();
  inline ::pb::TOtherMountSingleInfo* release_curmountinfo();
  inline void set_allocated_curmountinfo(::pb::TOtherMountSingleInfo* curmountinfo);

  // optional .pb.TOtherMountSingleInfo CurAspectMount = 5;
  inline bool has_curaspectmount() const;
  inline void clear_curaspectmount();
  static const int kCurAspectMountFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherMountSingleInfo& curaspectmount() const;
  inline ::pb::TOtherMountSingleInfo* mutable_curaspectmount();
  inline ::pb::TOtherMountSingleInfo* release_curaspectmount();
  inline void set_allocated_curaspectmount(::pb::TOtherMountSingleInfo* curaspectmount);

  // optional .pb.TOtherWarRidingInfo WarRidingInfo = 6;
  inline bool has_warridinginfo() const;
  inline void clear_warridinginfo();
  static const int kWarRidingInfoFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherWarRidingInfo& warridinginfo() const;
  inline ::pb::TOtherWarRidingInfo* mutable_warridinginfo();
  inline ::pb::TOtherWarRidingInfo* release_warridinginfo();
  inline void set_allocated_warridinginfo(::pb::TOtherWarRidingInfo* warridinginfo);

  // repeated .pb.TDivineEquipItem DivineEquipItemArr = 7;
  inline int divineequipitemarr_size() const;
  inline void clear_divineequipitemarr();
  static const int kDivineEquipItemArrFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherFormationRsp</name>
  	<Function>
  		<name>divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>divineequipitemarr_size</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDivineEquipItem& divineequipitemarr(int index) const;
  inline ::pb::TDivineEquipItem* mutable_divineequipitemarr(int index);
  inline ::pb::TDivineEquipItem* add_divineequipitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >&
      divineequipitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >*
      mutable_divineequipitemarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherFormationRsp)
 private:
  inline void set_has_beastinfo();
  inline void clear_has_beastinfo();
  inline void set_has_curmountinfo();
  inline void clear_has_curmountinfo();
  inline void set_has_curaspectmount();
  inline void clear_has_curaspectmount();
  inline void set_has_warridinginfo();
  inline void clear_has_warridinginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo > heroinfoarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle > rankarr_;
  ::pb::TOthersBeastInfo* beastinfo_;
  ::pb::TOtherMountSingleInfo* curmountinfo_;
  ::pb::TOtherMountSingleInfo* curaspectmount_;
  ::pb::TOtherWarRidingInfo* warridinginfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem > divineequipitemarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherFormationRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherSimpleFormationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherSimpleFormationReq : public ::google::protobuf::Message {
 public:
  TFormationGetOtherSimpleFormationReq();
  virtual ~TFormationGetOtherSimpleFormationReq();

  TFormationGetOtherSimpleFormationReq(const TFormationGetOtherSimpleFormationReq& from);

  inline TFormationGetOtherSimpleFormationReq& operator=(const TFormationGetOtherSimpleFormationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherSimpleFormationReq& default_instance();

  void Swap(TFormationGetOtherSimpleFormationReq* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherSimpleFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherSimpleFormationReq& from);
  void MergeFrom(const TFormationGetOtherSimpleFormationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherSimpleFormationReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string ServerId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherSimpleFormationReq</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherSimpleFormationReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherSimpleFormationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationOtherHeroSimpleInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationOtherHeroSimpleInfo : public ::google::protobuf::Message {
 public:
  TFormationOtherHeroSimpleInfo();
  virtual ~TFormationOtherHeroSimpleInfo();

  TFormationOtherHeroSimpleInfo(const TFormationOtherHeroSimpleInfo& from);

  inline TFormationOtherHeroSimpleInfo& operator=(const TFormationOtherHeroSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationOtherHeroSimpleInfo& default_instance();

  void Swap(TFormationOtherHeroSimpleInfo* other);

  // implements Message ----------------------------------------------

  TFormationOtherHeroSimpleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationOtherHeroSimpleInfo& from);
  void MergeFrom(const TFormationOtherHeroSimpleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroSimpleInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional .pb.THeroSimpleInfo HeroInfo = 2;
  inline bool has_heroinfo() const;
  inline void clear_heroinfo();
  static const int kHeroInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationOtherHeroSimpleInfo</name>
  	<Function>
  		<name>heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroSimpleInfo& heroinfo() const;
  inline ::pb::THeroSimpleInfo* mutable_heroinfo();
  inline ::pb::THeroSimpleInfo* release_heroinfo();
  inline void set_allocated_heroinfo(::pb::THeroSimpleInfo* heroinfo);

  // @@protoc_insertion_point(class_scope:pb.TFormationOtherHeroSimpleInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_heroinfo();
  inline void clear_has_heroinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::THeroSimpleInfo* heroinfo_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationOtherHeroSimpleInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherSimpleFormationRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherSimpleFormationRsp : public ::google::protobuf::Message {
 public:
  TFormationGetOtherSimpleFormationRsp();
  virtual ~TFormationGetOtherSimpleFormationRsp();

  TFormationGetOtherSimpleFormationRsp(const TFormationGetOtherSimpleFormationRsp& from);

  inline TFormationGetOtherSimpleFormationRsp& operator=(const TFormationGetOtherSimpleFormationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherSimpleFormationRsp& default_instance();

  void Swap(TFormationGetOtherSimpleFormationRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherSimpleFormationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherSimpleFormationRsp& from);
  void MergeFrom(const TFormationGetOtherSimpleFormationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOtherHeroSimpleInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherSimpleFormationRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOtherHeroSimpleInfo& heroinfoarr(int index) const;
  inline ::pb::TFormationOtherHeroSimpleInfo* mutable_heroinfoarr(int index);
  inline ::pb::TFormationOtherHeroSimpleInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >*
      mutable_heroinfoarr();

  // optional .pb.TUserSimpleInfo UserInfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherSimpleFormationRsp</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // repeated .pb.TRankSingle RankArr = 3;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherSimpleFormationRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRankSingle& rankarr(int index) const;
  inline ::pb::TRankSingle* mutable_rankarr(int index);
  inline ::pb::TRankSingle* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
      mutable_rankarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherSimpleFormationRsp)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo > heroinfoarr_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle > rankarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherSimpleFormationRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherPlayerBattleArgsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherPlayerBattleArgsReq : public ::google::protobuf::Message {
 public:
  TFormationGetOtherPlayerBattleArgsReq();
  virtual ~TFormationGetOtherPlayerBattleArgsReq();

  TFormationGetOtherPlayerBattleArgsReq(const TFormationGetOtherPlayerBattleArgsReq& from);

  inline TFormationGetOtherPlayerBattleArgsReq& operator=(const TFormationGetOtherPlayerBattleArgsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherPlayerBattleArgsReq& default_instance();

  void Swap(TFormationGetOtherPlayerBattleArgsReq* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherPlayerBattleArgsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherPlayerBattleArgsReq& from);
  void MergeFrom(const TFormationGetOtherPlayerBattleArgsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherPlayerBattleArgsReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string ServerId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherPlayerBattleArgsReq</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherPlayerBattleArgsReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherPlayerBattleArgsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherPlayerBattleArgsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherPlayerBattleArgsRsp : public ::google::protobuf::Message {
 public:
  TFormationGetOtherPlayerBattleArgsRsp();
  virtual ~TFormationGetOtherPlayerBattleArgsRsp();

  TFormationGetOtherPlayerBattleArgsRsp(const TFormationGetOtherPlayerBattleArgsRsp& from);

  inline TFormationGetOtherPlayerBattleArgsRsp& operator=(const TFormationGetOtherPlayerBattleArgsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherPlayerBattleArgsRsp& default_instance();

  void Swap(TFormationGetOtherPlayerBattleArgsRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherPlayerBattleArgsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherPlayerBattleArgsRsp& from);
  void MergeFrom(const TFormationGetOtherPlayerBattleArgsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TUnitInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherPlayerBattleArgsRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUnitInfo& heroinfoarr(int index) const;
  inline ::pb::TUnitInfo* mutable_heroinfoarr(int index);
  inline ::pb::TUnitInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >*
      mutable_heroinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherPlayerBattleArgsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo > heroinfoarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherPlayerBattleArgsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationHallHero</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationHallHero : public ::google::protobuf::Message {
 public:
  TFormationHallHero();
  virtual ~TFormationHallHero();

  TFormationHallHero(const TFormationHallHero& from);

  inline TFormationHallHero& operator=(const TFormationHallHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationHallHero& default_instance();

  void Swap(TFormationHallHero* other);

  // implements Message ----------------------------------------------

  TFormationHallHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationHallHero& from);
  void MergeFrom(const TFormationHallHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationHallHero</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationHallHero</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional .pb.EHallType Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationHallHero</name>
  	<Function>
  		<name>type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallType type() const;
  inline void set_type(::pb::EHallType value);

  // @@protoc_insertion_point(class_scope:pb.TFormationHallHero)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  int type_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationHallHero* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetHallInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetHallInfoRsp : public ::google::protobuf::Message {
 public:
  TFormationGetHallInfoRsp();
  virtual ~TFormationGetHallInfoRsp();

  TFormationGetHallInfoRsp(const TFormationGetHallInfoRsp& from);

  inline TFormationGetHallInfoRsp& operator=(const TFormationGetHallInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetHallInfoRsp& default_instance();

  void Swap(TFormationGetHallInfoRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetHallInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetHallInfoRsp& from);
  void MergeFrom(const TFormationGetHallInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationHallHero HallArr = 1;
  inline int hallarr_size() const;
  inline void clear_hallarr();
  static const int kHallArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetHallInfoRsp</name>
  	<Function>
  		<name>hallarr</name>
  		<replaceName>HallArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_hallarr</name>
  		<replaceName>HallArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_hallarr</name>
  		<replaceName>HallArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hallarr</name>
  		<replaceName>HallArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>hallarr_size</name>
  		<replaceName>HallArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationHallHero& hallarr(int index) const;
  inline ::pb::TFormationHallHero* mutable_hallarr(int index);
  inline ::pb::TFormationHallHero* add_hallarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationHallHero >&
      hallarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationHallHero >*
      mutable_hallarr();

  // optional uint32 EnhanceLevel = 2;
  inline bool has_enhancelevel() const;
  inline void clear_enhancelevel();
  static const int kEnhanceLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetHallInfoRsp</name>
  	<Function>
  		<name>enhancelevel</name>
  		<replaceName>EnhanceLevel</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_enhancelevel</name>
  		<replaceName>EnhanceLevel</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_enhancelevel</name>
  		<replaceName>EnhanceLevel</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 enhancelevel() const;
  inline void set_enhancelevel(::google::protobuf::uint32 value);

  // optional uint32 EnhanceMaxPos = 3;
  inline bool has_enhancemaxpos() const;
  inline void clear_enhancemaxpos();
  static const int kEnhanceMaxPosFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetHallInfoRsp</name>
  	<Function>
  		<name>enhancemaxpos</name>
  		<replaceName>EnhanceMaxPos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_enhancemaxpos</name>
  		<replaceName>EnhanceMaxPos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_enhancemaxpos</name>
  		<replaceName>EnhanceMaxPos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 enhancemaxpos() const;
  inline void set_enhancemaxpos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetHallInfoRsp)
 private:
  inline void set_has_enhancelevel();
  inline void clear_has_enhancelevel();
  inline void set_has_enhancemaxpos();
  inline void clear_has_enhancemaxpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationHallHero > hallarr_;
  ::google::protobuf::uint32 enhancelevel_;
  ::google::protobuf::uint32 enhancemaxpos_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetHallInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationResetHallRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationResetHallRsp : public ::google::protobuf::Message {
 public:
  TFormationResetHallRsp();
  virtual ~TFormationResetHallRsp();

  TFormationResetHallRsp(const TFormationResetHallRsp& from);

  inline TFormationResetHallRsp& operator=(const TFormationResetHallRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationResetHallRsp& default_instance();

  void Swap(TFormationResetHallRsp* other);

  // implements Message ----------------------------------------------

  TFormationResetHallRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationResetHallRsp& from);
  void MergeFrom(const TFormationResetHallRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationResetHallRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TFormationResetHallRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationResetHallRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationSetHallPosReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationSetHallPosReq : public ::google::protobuf::Message {
 public:
  TFormationSetHallPosReq();
  virtual ~TFormationSetHallPosReq();

  TFormationSetHallPosReq(const TFormationSetHallPosReq& from);

  inline TFormationSetHallPosReq& operator=(const TFormationSetHallPosReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationSetHallPosReq& default_instance();

  void Swap(TFormationSetHallPosReq* other);

  // implements Message ----------------------------------------------

  TFormationSetHallPosReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationSetHallPosReq& from);
  void MergeFrom(const TFormationSetHallPosReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationSetHallPosReq</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationSetHallPosReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional .pb.EHallType Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationSetHallPosReq</name>
  	<Function>
  		<name>type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallType type() const;
  inline void set_type(::pb::EHallType value);

  // @@protoc_insertion_point(class_scope:pb.TFormationSetHallPosReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  int type_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationSetHallPosReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationSetHallPosRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationSetHallPosRsp : public ::google::protobuf::Message {
 public:
  TFormationSetHallPosRsp();
  virtual ~TFormationSetHallPosRsp();

  TFormationSetHallPosRsp(const TFormationSetHallPosRsp& from);

  inline TFormationSetHallPosRsp& operator=(const TFormationSetHallPosRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationSetHallPosRsp& default_instance();

  void Swap(TFormationSetHallPosRsp* other);

  // implements Message ----------------------------------------------

  TFormationSetHallPosRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationSetHallPosRsp& from);
  void MergeFrom(const TFormationSetHallPosRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationSetHallPosRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TFormationSetHallPosRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationSetHallPosRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationUseDefaultBattleFormationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationUseDefaultBattleFormationReq : public ::google::protobuf::Message {
 public:
  TFormationUseDefaultBattleFormationReq();
  virtual ~TFormationUseDefaultBattleFormationReq();

  TFormationUseDefaultBattleFormationReq(const TFormationUseDefaultBattleFormationReq& from);

  inline TFormationUseDefaultBattleFormationReq& operator=(const TFormationUseDefaultBattleFormationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationUseDefaultBattleFormationReq& default_instance();

  void Swap(TFormationUseDefaultBattleFormationReq* other);

  // implements Message ----------------------------------------------

  TFormationUseDefaultBattleFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationUseDefaultBattleFormationReq& from);
  void MergeFrom(const TFormationUseDefaultBattleFormationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EFunctionId FuncId = 1;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationUseDefaultBattleFormationReq</name>
  	<Function>
  		<name>funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EFunctionId funcid() const;
  inline void set_funcid(::pb::EFunctionId value);

  // optional bool UseDefault = 2;
  inline bool has_usedefault() const;
  inline void clear_usedefault();
  static const int kUseDefaultFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationUseDefaultBattleFormationReq</name>
  	<Function>
  		<name>usedefault</name>
  		<replaceName>UseDefault</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usedefault</name>
  		<replaceName>UseDefault</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usedefault</name>
  		<replaceName>UseDefault</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool usedefault() const;
  inline void set_usedefault(bool value);

  // @@protoc_insertion_point(class_scope:pb.TFormationUseDefaultBattleFormationReq)
 private:
  inline void set_has_funcid();
  inline void clear_has_funcid();
  inline void set_has_usedefault();
  inline void clear_has_usedefault();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int funcid_;
  bool usedefault_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationUseDefaultBattleFormationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherBattleFormationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherBattleFormationReq : public ::google::protobuf::Message {
 public:
  TFormationGetOtherBattleFormationReq();
  virtual ~TFormationGetOtherBattleFormationReq();

  TFormationGetOtherBattleFormationReq(const TFormationGetOtherBattleFormationReq& from);

  inline TFormationGetOtherBattleFormationReq& operator=(const TFormationGetOtherBattleFormationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherBattleFormationReq& default_instance();

  void Swap(TFormationGetOtherBattleFormationReq* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherBattleFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherBattleFormationReq& from);
  void MergeFrom(const TFormationGetOtherBattleFormationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional .pb.EFunctionId FuncId = 2;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationReq</name>
  	<Function>
  		<name>funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EFunctionId funcid() const;
  inline void set_funcid(::pb::EFunctionId value);

  // optional string ServerId = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationReq</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherBattleFormationReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_funcid();
  inline void clear_has_funcid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  int funcid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherBattleFormationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetOtherBattleFormationRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetOtherBattleFormationRsp : public ::google::protobuf::Message {
 public:
  TFormationGetOtherBattleFormationRsp();
  virtual ~TFormationGetOtherBattleFormationRsp();

  TFormationGetOtherBattleFormationRsp(const TFormationGetOtherBattleFormationRsp& from);

  inline TFormationGetOtherBattleFormationRsp& operator=(const TFormationGetOtherBattleFormationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetOtherBattleFormationRsp& default_instance();

  void Swap(TFormationGetOtherBattleFormationRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetOtherBattleFormationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetOtherBattleFormationRsp& from);
  void MergeFrom(const TFormationGetOtherBattleFormationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOtherHeroInfo& heroinfoarr(int index) const;
  inline ::pb::TFormationOtherHeroInfo* mutable_heroinfoarr(int index);
  inline ::pb::TFormationOtherHeroInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
      mutable_heroinfoarr();

  // optional .pb.TUserSimpleInfo UserInfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationRsp</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // repeated .pb.TRankSingle RankArr = 3;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRankSingle& rankarr(int index) const;
  inline ::pb::TRankSingle* mutable_rankarr(int index);
  inline ::pb::TRankSingle* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
      mutable_rankarr();

  // repeated uint32 BeastSkillArr = 4;
  inline int beastskillarr_size() const;
  inline void clear_beastskillarr();
  static const int kBeastSkillArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetOtherBattleFormationRsp</name>
  	<Function>
  		<name>beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>beastskillarr_size</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 beastskillarr(int index) const;
  inline void set_beastskillarr(int index, ::google::protobuf::uint32 value);
  inline void add_beastskillarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      beastskillarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_beastskillarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetOtherBattleFormationRsp)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo > heroinfoarr_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle > rankarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > beastskillarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetOtherBattleFormationRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationFormationChangePush</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationFormationChangePush : public ::google::protobuf::Message {
 public:
  TFormationFormationChangePush();
  virtual ~TFormationFormationChangePush();

  TFormationFormationChangePush(const TFormationFormationChangePush& from);

  inline TFormationFormationChangePush& operator=(const TFormationFormationChangePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationFormationChangePush& default_instance();

  void Swap(TFormationFormationChangePush* other);

  // implements Message ----------------------------------------------

  TFormationFormationChangePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationFormationChangePush& from);
  void MergeFrom(const TFormationFormationChangePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationSquadHero SquadArr = 1;
  inline int squadarr_size() const;
  inline void clear_squadarr();
  static const int kSquadArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationFormationChangePush</name>
  	<Function>
  		<name>squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>squadarr_size</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationSquadHero& squadarr(int index) const;
  inline ::pb::TFormationSquadHero* mutable_squadarr(int index);
  inline ::pb::TFormationSquadHero* add_squadarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >&
      squadarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >*
      mutable_squadarr();

  // repeated .pb.TFormationPresetFunctionData PresetArr = 2;
  inline int presetarr_size() const;
  inline void clear_presetarr();
  static const int kPresetArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationFormationChangePush</name>
  	<Function>
  		<name>presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_presetarr</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>presetarr_size</name>
  		<replaceName>PresetArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationPresetFunctionData& presetarr(int index) const;
  inline ::pb::TFormationPresetFunctionData* mutable_presetarr(int index);
  inline ::pb::TFormationPresetFunctionData* add_presetarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >&
      presetarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >*
      mutable_presetarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationFormationChangePush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero > squadarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData > presetarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationFormationChangePush* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetFormationByOtherServerReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetFormationByOtherServerReq : public ::google::protobuf::Message {
 public:
  TFormationGetFormationByOtherServerReq();
  virtual ~TFormationGetFormationByOtherServerReq();

  TFormationGetFormationByOtherServerReq(const TFormationGetFormationByOtherServerReq& from);

  inline TFormationGetFormationByOtherServerReq& operator=(const TFormationGetFormationByOtherServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetFormationByOtherServerReq& default_instance();

  void Swap(TFormationGetFormationByOtherServerReq* other);

  // implements Message ----------------------------------------------

  TFormationGetFormationByOtherServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetFormationByOtherServerReq& from);
  void MergeFrom(const TFormationGetFormationByOtherServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetFormationByOtherServerReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetFormationByOtherServerReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetFormationByOtherServerRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetFormationByOtherServerRsp : public ::google::protobuf::Message {
 public:
  TFormationGetFormationByOtherServerRsp();
  virtual ~TFormationGetFormationByOtherServerRsp();

  TFormationGetFormationByOtherServerRsp(const TFormationGetFormationByOtherServerRsp& from);

  inline TFormationGetFormationByOtherServerRsp& operator=(const TFormationGetFormationByOtherServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetFormationByOtherServerRsp& default_instance();

  void Swap(TFormationGetFormationByOtherServerRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetFormationByOtherServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetFormationByOtherServerRsp& from);
  void MergeFrom(const TFormationGetFormationByOtherServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOtherHeroInfo& heroinfoarr(int index) const;
  inline ::pb::TFormationOtherHeroInfo* mutable_heroinfoarr(int index);
  inline ::pb::TFormationOtherHeroInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
      mutable_heroinfoarr();

  // repeated .pb.TRankSingle RankArr = 2;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRankSingle& rankarr(int index) const;
  inline ::pb::TRankSingle* mutable_rankarr(int index);
  inline ::pb::TRankSingle* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
      mutable_rankarr();

  // optional .pb.TOthersBeastInfo BeastInfo = 3;
  inline bool has_beastinfo() const;
  inline void clear_beastinfo();
  static const int kBeastInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerRsp</name>
  	<Function>
  		<name>beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_beastinfo</name>
  		<replaceName>BeastInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOthersBeastInfo& beastinfo() const;
  inline ::pb::TOthersBeastInfo* mutable_beastinfo();
  inline ::pb::TOthersBeastInfo* release_beastinfo();
  inline void set_allocated_beastinfo(::pb::TOthersBeastInfo* beastinfo);

  // optional .pb.TOtherMountSingleInfo CurMountInfo = 4;
  inline bool has_curmountinfo() const;
  inline void clear_curmountinfo();
  static const int kCurMountInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerRsp</name>
  	<Function>
  		<name>curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curmountinfo</name>
  		<replaceName>CurMountInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherMountSingleInfo& curmountinfo() const;
  inline ::pb::TOtherMountSingleInfo* mutable_curmountinfo();
  inline ::pb::TOtherMountSingleInfo* release_curmountinfo();
  inline void set_allocated_curmountinfo(::pb::TOtherMountSingleInfo* curmountinfo);

  // optional .pb.TOtherMountSingleInfo CurAspectMount = 5;
  inline bool has_curaspectmount() const;
  inline void clear_curaspectmount();
  static const int kCurAspectMountFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerRsp</name>
  	<Function>
  		<name>curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherMountSingleInfo& curaspectmount() const;
  inline ::pb::TOtherMountSingleInfo* mutable_curaspectmount();
  inline ::pb::TOtherMountSingleInfo* release_curaspectmount();
  inline void set_allocated_curaspectmount(::pb::TOtherMountSingleInfo* curaspectmount);

  // optional .pb.TOtherWarRidingInfo WarRidingInfo = 6;
  inline bool has_warridinginfo() const;
  inline void clear_warridinginfo();
  static const int kWarRidingInfoFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetFormationByOtherServerRsp</name>
  	<Function>
  		<name>warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinginfo</name>
  		<replaceName>WarRidingInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherWarRidingInfo& warridinginfo() const;
  inline ::pb::TOtherWarRidingInfo* mutable_warridinginfo();
  inline ::pb::TOtherWarRidingInfo* release_warridinginfo();
  inline void set_allocated_warridinginfo(::pb::TOtherWarRidingInfo* warridinginfo);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetFormationByOtherServerRsp)
 private:
  inline void set_has_beastinfo();
  inline void clear_has_beastinfo();
  inline void set_has_curmountinfo();
  inline void clear_has_curmountinfo();
  inline void set_has_curaspectmount();
  inline void clear_has_curaspectmount();
  inline void set_has_warridinginfo();
  inline void clear_has_warridinginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo > heroinfoarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle > rankarr_;
  ::pb::TOthersBeastInfo* beastinfo_;
  ::pb::TOtherMountSingleInfo* curmountinfo_;
  ::pb::TOtherMountSingleInfo* curaspectmount_;
  ::pb::TOtherWarRidingInfo* warridinginfo_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetFormationByOtherServerRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetSimpleFormationByOtherServerReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetSimpleFormationByOtherServerReq : public ::google::protobuf::Message {
 public:
  TFormationGetSimpleFormationByOtherServerReq();
  virtual ~TFormationGetSimpleFormationByOtherServerReq();

  TFormationGetSimpleFormationByOtherServerReq(const TFormationGetSimpleFormationByOtherServerReq& from);

  inline TFormationGetSimpleFormationByOtherServerReq& operator=(const TFormationGetSimpleFormationByOtherServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetSimpleFormationByOtherServerReq& default_instance();

  void Swap(TFormationGetSimpleFormationByOtherServerReq* other);

  // implements Message ----------------------------------------------

  TFormationGetSimpleFormationByOtherServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetSimpleFormationByOtherServerReq& from);
  void MergeFrom(const TFormationGetSimpleFormationByOtherServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetSimpleFormationByOtherServerReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetSimpleFormationByOtherServerReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetSimpleFormationByOtherServerReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetSimpleFormationByOtherServerRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetSimpleFormationByOtherServerRsp : public ::google::protobuf::Message {
 public:
  TFormationGetSimpleFormationByOtherServerRsp();
  virtual ~TFormationGetSimpleFormationByOtherServerRsp();

  TFormationGetSimpleFormationByOtherServerRsp(const TFormationGetSimpleFormationByOtherServerRsp& from);

  inline TFormationGetSimpleFormationByOtherServerRsp& operator=(const TFormationGetSimpleFormationByOtherServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetSimpleFormationByOtherServerRsp& default_instance();

  void Swap(TFormationGetSimpleFormationByOtherServerRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetSimpleFormationByOtherServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetSimpleFormationByOtherServerRsp& from);
  void MergeFrom(const TFormationGetSimpleFormationByOtherServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOtherHeroSimpleInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetSimpleFormationByOtherServerRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOtherHeroSimpleInfo& heroinfoarr(int index) const;
  inline ::pb::TFormationOtherHeroSimpleInfo* mutable_heroinfoarr(int index);
  inline ::pb::TFormationOtherHeroSimpleInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >*
      mutable_heroinfoarr();

  // optional .pb.TUserSimpleInfo UserInfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetSimpleFormationByOtherServerRsp</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // repeated .pb.TRankSingle RankArr = 3;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetSimpleFormationByOtherServerRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRankSingle& rankarr(int index) const;
  inline ::pb::TRankSingle* mutable_rankarr(int index);
  inline ::pb::TRankSingle* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
      mutable_rankarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetSimpleFormationByOtherServerRsp)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo > heroinfoarr_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle > rankarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetSimpleFormationByOtherServerRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetBattleFormationByOtherServerReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetBattleFormationByOtherServerReq : public ::google::protobuf::Message {
 public:
  TFormationGetBattleFormationByOtherServerReq();
  virtual ~TFormationGetBattleFormationByOtherServerReq();

  TFormationGetBattleFormationByOtherServerReq(const TFormationGetBattleFormationByOtherServerReq& from);

  inline TFormationGetBattleFormationByOtherServerReq& operator=(const TFormationGetBattleFormationByOtherServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetBattleFormationByOtherServerReq& default_instance();

  void Swap(TFormationGetBattleFormationByOtherServerReq* other);

  // implements Message ----------------------------------------------

  TFormationGetBattleFormationByOtherServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetBattleFormationByOtherServerReq& from);
  void MergeFrom(const TFormationGetBattleFormationByOtherServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetBattleFormationByOtherServerReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional .pb.EFunctionId FuncId = 2;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetBattleFormationByOtherServerReq</name>
  	<Function>
  		<name>funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_funcid</name>
  		<replaceName>FuncId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EFunctionId funcid() const;
  inline void set_funcid(::pb::EFunctionId value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetBattleFormationByOtherServerReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_funcid();
  inline void clear_has_funcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  int funcid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetBattleFormationByOtherServerReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetBattleFormationByOtherServerRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetBattleFormationByOtherServerRsp : public ::google::protobuf::Message {
 public:
  TFormationGetBattleFormationByOtherServerRsp();
  virtual ~TFormationGetBattleFormationByOtherServerRsp();

  TFormationGetBattleFormationByOtherServerRsp(const TFormationGetBattleFormationByOtherServerRsp& from);

  inline TFormationGetBattleFormationByOtherServerRsp& operator=(const TFormationGetBattleFormationByOtherServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetBattleFormationByOtherServerRsp& default_instance();

  void Swap(TFormationGetBattleFormationByOtherServerRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetBattleFormationByOtherServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetBattleFormationByOtherServerRsp& from);
  void MergeFrom(const TFormationGetBattleFormationByOtherServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetBattleFormationByOtherServerRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOtherHeroInfo& heroinfoarr(int index) const;
  inline ::pb::TFormationOtherHeroInfo* mutable_heroinfoarr(int index);
  inline ::pb::TFormationOtherHeroInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
      mutable_heroinfoarr();

  // optional .pb.TUserSimpleInfo UserInfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetBattleFormationByOtherServerRsp</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // repeated .pb.TRankSingle RankArr = 3;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetBattleFormationByOtherServerRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRankSingle& rankarr(int index) const;
  inline ::pb::TRankSingle* mutable_rankarr(int index);
  inline ::pb::TRankSingle* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
      mutable_rankarr();

  // repeated uint32 BeastSkillArr = 4;
  inline int beastskillarr_size() const;
  inline void clear_beastskillarr();
  static const int kBeastSkillArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetBattleFormationByOtherServerRsp</name>
  	<Function>
  		<name>beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_beastskillarr</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>beastskillarr_size</name>
  		<replaceName>BeastSkillArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 beastskillarr(int index) const;
  inline void set_beastskillarr(int index, ::google::protobuf::uint32 value);
  inline void add_beastskillarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      beastskillarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_beastskillarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetBattleFormationByOtherServerRsp)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo > heroinfoarr_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle > rankarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > beastskillarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetBattleFormationByOtherServerRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetPlayerBattleArgsByOtherServerReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetPlayerBattleArgsByOtherServerReq : public ::google::protobuf::Message {
 public:
  TFormationGetPlayerBattleArgsByOtherServerReq();
  virtual ~TFormationGetPlayerBattleArgsByOtherServerReq();

  TFormationGetPlayerBattleArgsByOtherServerReq(const TFormationGetPlayerBattleArgsByOtherServerReq& from);

  inline TFormationGetPlayerBattleArgsByOtherServerReq& operator=(const TFormationGetPlayerBattleArgsByOtherServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetPlayerBattleArgsByOtherServerReq& default_instance();

  void Swap(TFormationGetPlayerBattleArgsByOtherServerReq* other);

  // implements Message ----------------------------------------------

  TFormationGetPlayerBattleArgsByOtherServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetPlayerBattleArgsByOtherServerReq& from);
  void MergeFrom(const TFormationGetPlayerBattleArgsByOtherServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetPlayerBattleArgsByOtherServerReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetPlayerBattleArgsByOtherServerReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetPlayerBattleArgsByOtherServerReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetPlayerBattleArgsByOtherServerRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetPlayerBattleArgsByOtherServerRsp : public ::google::protobuf::Message {
 public:
  TFormationGetPlayerBattleArgsByOtherServerRsp();
  virtual ~TFormationGetPlayerBattleArgsByOtherServerRsp();

  TFormationGetPlayerBattleArgsByOtherServerRsp(const TFormationGetPlayerBattleArgsByOtherServerRsp& from);

  inline TFormationGetPlayerBattleArgsByOtherServerRsp& operator=(const TFormationGetPlayerBattleArgsByOtherServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetPlayerBattleArgsByOtherServerRsp& default_instance();

  void Swap(TFormationGetPlayerBattleArgsByOtherServerRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetPlayerBattleArgsByOtherServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetPlayerBattleArgsByOtherServerRsp& from);
  void MergeFrom(const TFormationGetPlayerBattleArgsByOtherServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TUnitInfo HeroInfoArr = 1;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetPlayerBattleArgsByOtherServerRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUnitInfo& heroinfoarr(int index) const;
  inline ::pb::TUnitInfo* mutable_heroinfoarr(int index);
  inline ::pb::TUnitInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >*
      mutable_heroinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationGetPlayerBattleArgsByOtherServerRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo > heroinfoarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetPlayerBattleArgsByOtherServerRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetMasterHeroDefaultPosReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetMasterHeroDefaultPosReq : public ::google::protobuf::Message {
 public:
  TFormationGetMasterHeroDefaultPosReq();
  virtual ~TFormationGetMasterHeroDefaultPosReq();

  TFormationGetMasterHeroDefaultPosReq(const TFormationGetMasterHeroDefaultPosReq& from);

  inline TFormationGetMasterHeroDefaultPosReq& operator=(const TFormationGetMasterHeroDefaultPosReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetMasterHeroDefaultPosReq& default_instance();

  void Swap(TFormationGetMasterHeroDefaultPosReq* other);

  // implements Message ----------------------------------------------

  TFormationGetMasterHeroDefaultPosReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetMasterHeroDefaultPosReq& from);
  void MergeFrom(const TFormationGetMasterHeroDefaultPosReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetMasterHeroDefaultPosReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetMasterHeroDefaultPosReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetMasterHeroDefaultPosReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationGetMasterHeroDefaultPosRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationGetMasterHeroDefaultPosRsp : public ::google::protobuf::Message {
 public:
  TFormationGetMasterHeroDefaultPosRsp();
  virtual ~TFormationGetMasterHeroDefaultPosRsp();

  TFormationGetMasterHeroDefaultPosRsp(const TFormationGetMasterHeroDefaultPosRsp& from);

  inline TFormationGetMasterHeroDefaultPosRsp& operator=(const TFormationGetMasterHeroDefaultPosRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationGetMasterHeroDefaultPosRsp& default_instance();

  void Swap(TFormationGetMasterHeroDefaultPosRsp* other);

  // implements Message ----------------------------------------------

  TFormationGetMasterHeroDefaultPosRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationGetMasterHeroDefaultPosRsp& from);
  void MergeFrom(const TFormationGetMasterHeroDefaultPosRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetMasterHeroDefaultPosRsp</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationGetMasterHeroDefaultPosRsp</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFormationGetMasterHeroDefaultPosRsp)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationGetMasterHeroDefaultPosRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationOfHeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationOfHeroInfo : public ::google::protobuf::Message {
 public:
  TFormationOfHeroInfo();
  virtual ~TFormationOfHeroInfo();

  TFormationOfHeroInfo(const TFormationOfHeroInfo& from);

  inline TFormationOfHeroInfo& operator=(const TFormationOfHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationOfHeroInfo& default_instance();

  void Swap(TFormationOfHeroInfo* other);

  // implements Message ----------------------------------------------

  TFormationOfHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationOfHeroInfo& from);
  void MergeFrom(const TFormationOfHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationOfHeroInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional .pb.EFormationType Formation = 2;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFormationOfHeroInfo</name>
  	<Function>
  		<name>formation</name>
  		<replaceName>Formation</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_formation</name>
  		<replaceName>Formation</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_formation</name>
  		<replaceName>Formation</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EFormationType formation() const;
  inline void set_formation(::pb::EFormationType value);

  // @@protoc_insertion_point(class_scope:pb.TFormationOfHeroInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_formation();
  inline void clear_has_formation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  int formation_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationOfHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFormationOfHeroRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Formation.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFormationOfHeroRsp : public ::google::protobuf::Message {
 public:
  TFormationOfHeroRsp();
  virtual ~TFormationOfHeroRsp();

  TFormationOfHeroRsp(const TFormationOfHeroRsp& from);

  inline TFormationOfHeroRsp& operator=(const TFormationOfHeroRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFormationOfHeroRsp& default_instance();

  void Swap(TFormationOfHeroRsp* other);

  // implements Message ----------------------------------------------

  TFormationOfHeroRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFormationOfHeroRsp& from);
  void MergeFrom(const TFormationOfHeroRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFormationOfHeroInfo FormationOfHeroArr = 1;
  inline int formationofheroarr_size() const;
  inline void clear_formationofheroarr();
  static const int kFormationOfHeroArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFormationOfHeroRsp</name>
  	<Function>
  		<name>formationofheroarr</name>
  		<replaceName>FormationOfHeroArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_formationofheroarr</name>
  		<replaceName>FormationOfHeroArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_formationofheroarr</name>
  		<replaceName>FormationOfHeroArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_formationofheroarr</name>
  		<replaceName>FormationOfHeroArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>formationofheroarr_size</name>
  		<replaceName>FormationOfHeroArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFormationOfHeroInfo& formationofheroarr(int index) const;
  inline ::pb::TFormationOfHeroInfo* mutable_formationofheroarr(int index);
  inline ::pb::TFormationOfHeroInfo* add_formationofheroarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOfHeroInfo >&
      formationofheroarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOfHeroInfo >*
      mutable_formationofheroarr();

  // @@protoc_insertion_point(class_scope:pb.TFormationOfHeroRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFormationOfHeroInfo > formationofheroarr_;
  friend void  protobuf_AddDesc_net_2fFormation_2eproto();
  friend void protobuf_AssignDesc_net_2fFormation_2eproto();
  friend void protobuf_ShutdownFile_net_2fFormation_2eproto();

  void InitAsDefaultInstance();
  static TFormationOfHeroRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TFormationPosHero

// optional uint32 Pos = 1;
inline bool TFormationPosHero::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationPosHero::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationPosHero::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationPosHero::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationPosHero::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationPosHero.Pos)
  return pos_;
}
inline void TFormationPosHero::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationPosHero.Pos)
}

// optional uint32 Hid = 2;
inline bool TFormationPosHero::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationPosHero::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationPosHero::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationPosHero::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationPosHero::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationPosHero.Hid)
  return hid_;
}
inline void TFormationPosHero::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationPosHero.Hid)
}

// -------------------------------------------------------------------

// TFormationSquadHero

// optional uint32 Pos = 1;
inline bool TFormationSquadHero::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationSquadHero::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationSquadHero::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationSquadHero::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationSquadHero::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationSquadHero.Pos)
  return pos_;
}
inline void TFormationSquadHero::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationSquadHero.Pos)
}

// optional uint32 Hid = 2;
inline bool TFormationSquadHero::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationSquadHero::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationSquadHero::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationSquadHero::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationSquadHero::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationSquadHero.Hid)
  return hid_;
}
inline void TFormationSquadHero::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationSquadHero.Hid)
}

// -------------------------------------------------------------------

// TFormationPresetFunctionData

// optional .pb.EFunctionId FuncId = 1;
inline bool TFormationPresetFunctionData::has_funcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationPresetFunctionData::set_has_funcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationPresetFunctionData::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationPresetFunctionData::clear_funcid() {
  funcid_ = 1;
  clear_has_funcid();
}
inline ::pb::EFunctionId TFormationPresetFunctionData::funcid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationPresetFunctionData.FuncId)
  return static_cast< ::pb::EFunctionId >(funcid_);
}
inline void TFormationPresetFunctionData::set_funcid(::pb::EFunctionId value) {
  assert(::pb::EFunctionId_IsValid(value));
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationPresetFunctionData.FuncId)
}

// repeated .pb.TFormationPosHero PosArr = 2;
inline int TFormationPresetFunctionData::posarr_size() const {
  return posarr_.size();
}
inline void TFormationPresetFunctionData::clear_posarr() {
  posarr_.Clear();
}
inline const ::pb::TFormationPosHero& TFormationPresetFunctionData::posarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationPresetFunctionData.PosArr)
  return posarr_.Get(index);
}
inline ::pb::TFormationPosHero* TFormationPresetFunctionData::mutable_posarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationPresetFunctionData.PosArr)
  return posarr_.Mutable(index);
}
inline ::pb::TFormationPosHero* TFormationPresetFunctionData::add_posarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationPresetFunctionData.PosArr)
  return posarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >&
TFormationPresetFunctionData::posarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationPresetFunctionData.PosArr)
  return posarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >*
TFormationPresetFunctionData::mutable_posarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationPresetFunctionData.PosArr)
  return &posarr_;
}

// optional bool UseDefaultBattleFormation = 3;
inline bool TFormationPresetFunctionData::has_usedefaultbattleformation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationPresetFunctionData::set_has_usedefaultbattleformation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationPresetFunctionData::clear_has_usedefaultbattleformation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationPresetFunctionData::clear_usedefaultbattleformation() {
  usedefaultbattleformation_ = false;
  clear_has_usedefaultbattleformation();
}
inline bool TFormationPresetFunctionData::usedefaultbattleformation() const {
  // @@protoc_insertion_point(field_get:pb.TFormationPresetFunctionData.UseDefaultBattleFormation)
  return usedefaultbattleformation_;
}
inline void TFormationPresetFunctionData::set_usedefaultbattleformation(bool value) {
  set_has_usedefaultbattleformation();
  usedefaultbattleformation_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationPresetFunctionData.UseDefaultBattleFormation)
}

// -------------------------------------------------------------------

// TFormationGetDataRsp

// repeated .pb.TFormationSquadHero SquadArr = 1;
inline int TFormationGetDataRsp::squadarr_size() const {
  return squadarr_.size();
}
inline void TFormationGetDataRsp::clear_squadarr() {
  squadarr_.Clear();
}
inline const ::pb::TFormationSquadHero& TFormationGetDataRsp::squadarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetDataRsp.SquadArr)
  return squadarr_.Get(index);
}
inline ::pb::TFormationSquadHero* TFormationGetDataRsp::mutable_squadarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetDataRsp.SquadArr)
  return squadarr_.Mutable(index);
}
inline ::pb::TFormationSquadHero* TFormationGetDataRsp::add_squadarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetDataRsp.SquadArr)
  return squadarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >&
TFormationGetDataRsp::squadarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetDataRsp.SquadArr)
  return squadarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >*
TFormationGetDataRsp::mutable_squadarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetDataRsp.SquadArr)
  return &squadarr_;
}

// repeated .pb.TFormationPresetFunctionData PresetArr = 2;
inline int TFormationGetDataRsp::presetarr_size() const {
  return presetarr_.size();
}
inline void TFormationGetDataRsp::clear_presetarr() {
  presetarr_.Clear();
}
inline const ::pb::TFormationPresetFunctionData& TFormationGetDataRsp::presetarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetDataRsp.PresetArr)
  return presetarr_.Get(index);
}
inline ::pb::TFormationPresetFunctionData* TFormationGetDataRsp::mutable_presetarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetDataRsp.PresetArr)
  return presetarr_.Mutable(index);
}
inline ::pb::TFormationPresetFunctionData* TFormationGetDataRsp::add_presetarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetDataRsp.PresetArr)
  return presetarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >&
TFormationGetDataRsp::presetarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetDataRsp.PresetArr)
  return presetarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >*
TFormationGetDataRsp::mutable_presetarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetDataRsp.PresetArr)
  return &presetarr_;
}

// -------------------------------------------------------------------

// TFormationExchangeSquadHeroReq

// optional uint32 Pos = 1;
inline bool TFormationExchangeSquadHeroReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationExchangeSquadHeroReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationExchangeSquadHeroReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationExchangeSquadHeroReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationExchangeSquadHeroReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationExchangeSquadHeroReq.Pos)
  return pos_;
}
inline void TFormationExchangeSquadHeroReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationExchangeSquadHeroReq.Pos)
}

// optional uint32 Hid = 2;
inline bool TFormationExchangeSquadHeroReq::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationExchangeSquadHeroReq::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationExchangeSquadHeroReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationExchangeSquadHeroReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationExchangeSquadHeroReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationExchangeSquadHeroReq.Hid)
  return hid_;
}
inline void TFormationExchangeSquadHeroReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationExchangeSquadHeroReq.Hid)
}

// optional bool NeedInherit = 3;
inline bool TFormationExchangeSquadHeroReq::has_needinherit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationExchangeSquadHeroReq::set_has_needinherit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationExchangeSquadHeroReq::clear_has_needinherit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationExchangeSquadHeroReq::clear_needinherit() {
  needinherit_ = false;
  clear_has_needinherit();
}
inline bool TFormationExchangeSquadHeroReq::needinherit() const {
  // @@protoc_insertion_point(field_get:pb.TFormationExchangeSquadHeroReq.NeedInherit)
  return needinherit_;
}
inline void TFormationExchangeSquadHeroReq::set_needinherit(bool value) {
  set_has_needinherit();
  needinherit_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationExchangeSquadHeroReq.NeedInherit)
}

// -------------------------------------------------------------------

// TFormationDeployHeroInFormationReq

// optional .pb.EFunctionId FuncId = 1;
inline bool TFormationDeployHeroInFormationReq::has_funcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationDeployHeroInFormationReq::set_has_funcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationDeployHeroInFormationReq::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationDeployHeroInFormationReq::clear_funcid() {
  funcid_ = 1;
  clear_has_funcid();
}
inline ::pb::EFunctionId TFormationDeployHeroInFormationReq::funcid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationDeployHeroInFormationReq.FuncId)
  return static_cast< ::pb::EFunctionId >(funcid_);
}
inline void TFormationDeployHeroInFormationReq::set_funcid(::pb::EFunctionId value) {
  assert(::pb::EFunctionId_IsValid(value));
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationDeployHeroInFormationReq.FuncId)
}

// repeated .pb.TFormationPosHero HeroArray = 2;
inline int TFormationDeployHeroInFormationReq::heroarray_size() const {
  return heroarray_.size();
}
inline void TFormationDeployHeroInFormationReq::clear_heroarray() {
  heroarray_.Clear();
}
inline const ::pb::TFormationPosHero& TFormationDeployHeroInFormationReq::heroarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationDeployHeroInFormationReq.HeroArray)
  return heroarray_.Get(index);
}
inline ::pb::TFormationPosHero* TFormationDeployHeroInFormationReq::mutable_heroarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationDeployHeroInFormationReq.HeroArray)
  return heroarray_.Mutable(index);
}
inline ::pb::TFormationPosHero* TFormationDeployHeroInFormationReq::add_heroarray() {
  // @@protoc_insertion_point(field_add:pb.TFormationDeployHeroInFormationReq.HeroArray)
  return heroarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >&
TFormationDeployHeroInFormationReq::heroarray() const {
  // @@protoc_insertion_point(field_list:pb.TFormationDeployHeroInFormationReq.HeroArray)
  return heroarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPosHero >*
TFormationDeployHeroInFormationReq::mutable_heroarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationDeployHeroInFormationReq.HeroArray)
  return &heroarray_;
}

// -------------------------------------------------------------------

// TFormationGetOtherFormationReq

// optional uint64 Uid = 1;
inline bool TFormationGetOtherFormationReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetOtherFormationReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetOtherFormationReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetOtherFormationReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetOtherFormationReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationReq.Uid)
  return uid_;
}
inline void TFormationGetOtherFormationReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherFormationReq.Uid)
}

// optional string ServerId = 2;
inline bool TFormationGetOtherFormationReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetOtherFormationReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetOtherFormationReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetOtherFormationReq::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TFormationGetOtherFormationReq::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationReq.ServerId)
  return *serverid_;
}
inline void TFormationGetOtherFormationReq::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherFormationReq.ServerId)
}
inline void TFormationGetOtherFormationReq::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TFormationGetOtherFormationReq.ServerId)
}
inline void TFormationGetOtherFormationReq::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TFormationGetOtherFormationReq.ServerId)
}
inline ::std::string* TFormationGetOtherFormationReq::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationReq.ServerId)
  return serverid_;
}
inline ::std::string* TFormationGetOtherFormationReq::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TFormationGetOtherFormationReq::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherFormationReq.ServerId)
}

// -------------------------------------------------------------------

// TFormationOtherHeroInfo

// optional uint32 Pos = 1;
inline bool TFormationOtherHeroInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationOtherHeroInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationOtherHeroInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationOtherHeroInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationOtherHeroInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.Pos)
  return pos_;
}
inline void TFormationOtherHeroInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationOtherHeroInfo.Pos)
}

// optional .pb.TOtherUserHeroInfo HeroInfo = 2;
inline bool TFormationOtherHeroInfo::has_heroinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationOtherHeroInfo::set_has_heroinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationOtherHeroInfo::clear_has_heroinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationOtherHeroInfo::clear_heroinfo() {
  if (heroinfo_ != NULL) heroinfo_->::pb::TOtherUserHeroInfo::Clear();
  clear_has_heroinfo();
}
inline const ::pb::TOtherUserHeroInfo& TFormationOtherHeroInfo::heroinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.HeroInfo)
  return heroinfo_ != NULL ? *heroinfo_ : *default_instance_->heroinfo_;
}
inline ::pb::TOtherUserHeroInfo* TFormationOtherHeroInfo::mutable_heroinfo() {
  set_has_heroinfo();
  if (heroinfo_ == NULL) heroinfo_ = new ::pb::TOtherUserHeroInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationOtherHeroInfo.HeroInfo)
  return heroinfo_;
}
inline ::pb::TOtherUserHeroInfo* TFormationOtherHeroInfo::release_heroinfo() {
  clear_has_heroinfo();
  ::pb::TOtherUserHeroInfo* temp = heroinfo_;
  heroinfo_ = NULL;
  return temp;
}
inline void TFormationOtherHeroInfo::set_allocated_heroinfo(::pb::TOtherUserHeroInfo* heroinfo) {
  delete heroinfo_;
  heroinfo_ = heroinfo;
  if (heroinfo) {
    set_has_heroinfo();
  } else {
    clear_has_heroinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationOtherHeroInfo.HeroInfo)
}

// repeated .pb.TArmItem ArmArr = 3;
inline int TFormationOtherHeroInfo::armarr_size() const {
  return armarr_.size();
}
inline void TFormationOtherHeroInfo::clear_armarr() {
  armarr_.Clear();
}
inline const ::pb::TArmItem& TFormationOtherHeroInfo::armarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.ArmArr)
  return armarr_.Get(index);
}
inline ::pb::TArmItem* TFormationOtherHeroInfo::mutable_armarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationOtherHeroInfo.ArmArr)
  return armarr_.Mutable(index);
}
inline ::pb::TArmItem* TFormationOtherHeroInfo::add_armarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationOtherHeroInfo.ArmArr)
  return armarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArmItem >&
TFormationOtherHeroInfo::armarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationOtherHeroInfo.ArmArr)
  return armarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArmItem >*
TFormationOtherHeroInfo::mutable_armarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationOtherHeroInfo.ArmArr)
  return &armarr_;
}

// repeated .pb.TAccessoryItem AccessoryArr = 4;
inline int TFormationOtherHeroInfo::accessoryarr_size() const {
  return accessoryarr_.size();
}
inline void TFormationOtherHeroInfo::clear_accessoryarr() {
  accessoryarr_.Clear();
}
inline const ::pb::TAccessoryItem& TFormationOtherHeroInfo::accessoryarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.AccessoryArr)
  return accessoryarr_.Get(index);
}
inline ::pb::TAccessoryItem* TFormationOtherHeroInfo::mutable_accessoryarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationOtherHeroInfo.AccessoryArr)
  return accessoryarr_.Mutable(index);
}
inline ::pb::TAccessoryItem* TFormationOtherHeroInfo::add_accessoryarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationOtherHeroInfo.AccessoryArr)
  return accessoryarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAccessoryItem >&
TFormationOtherHeroInfo::accessoryarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationOtherHeroInfo.AccessoryArr)
  return accessoryarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAccessoryItem >*
TFormationOtherHeroInfo::mutable_accessoryarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationOtherHeroInfo.AccessoryArr)
  return &accessoryarr_;
}

// repeated .pb.TExclEquipItem ExclEquipArr = 5;
inline int TFormationOtherHeroInfo::exclequiparr_size() const {
  return exclequiparr_.size();
}
inline void TFormationOtherHeroInfo::clear_exclequiparr() {
  exclequiparr_.Clear();
}
inline const ::pb::TExclEquipItem& TFormationOtherHeroInfo::exclequiparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.ExclEquipArr)
  return exclequiparr_.Get(index);
}
inline ::pb::TExclEquipItem* TFormationOtherHeroInfo::mutable_exclequiparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationOtherHeroInfo.ExclEquipArr)
  return exclequiparr_.Mutable(index);
}
inline ::pb::TExclEquipItem* TFormationOtherHeroInfo::add_exclequiparr() {
  // @@protoc_insertion_point(field_add:pb.TFormationOtherHeroInfo.ExclEquipArr)
  return exclequiparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TExclEquipItem >&
TFormationOtherHeroInfo::exclequiparr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationOtherHeroInfo.ExclEquipArr)
  return exclequiparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TExclEquipItem >*
TFormationOtherHeroInfo::mutable_exclequiparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationOtherHeroInfo.ExclEquipArr)
  return &exclequiparr_;
}

// repeated .pb.TSilkBagItem SilkBagArr = 6;
inline int TFormationOtherHeroInfo::silkbagarr_size() const {
  return silkbagarr_.size();
}
inline void TFormationOtherHeroInfo::clear_silkbagarr() {
  silkbagarr_.Clear();
}
inline const ::pb::TSilkBagItem& TFormationOtherHeroInfo::silkbagarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.SilkBagArr)
  return silkbagarr_.Get(index);
}
inline ::pb::TSilkBagItem* TFormationOtherHeroInfo::mutable_silkbagarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationOtherHeroInfo.SilkBagArr)
  return silkbagarr_.Mutable(index);
}
inline ::pb::TSilkBagItem* TFormationOtherHeroInfo::add_silkbagarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationOtherHeroInfo.SilkBagArr)
  return silkbagarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSilkBagItem >&
TFormationOtherHeroInfo::silkbagarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationOtherHeroInfo.SilkBagArr)
  return silkbagarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSilkBagItem >*
TFormationOtherHeroInfo::mutable_silkbagarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationOtherHeroInfo.SilkBagArr)
  return &silkbagarr_;
}

// optional uint32 HeroTitleId = 7;
inline bool TFormationOtherHeroInfo::has_herotitleid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TFormationOtherHeroInfo::set_has_herotitleid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TFormationOtherHeroInfo::clear_has_herotitleid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TFormationOtherHeroInfo::clear_herotitleid() {
  herotitleid_ = 0u;
  clear_has_herotitleid();
}
inline ::google::protobuf::uint32 TFormationOtherHeroInfo::herotitleid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.HeroTitleId)
  return herotitleid_;
}
inline void TFormationOtherHeroInfo::set_herotitleid(::google::protobuf::uint32 value) {
  set_has_herotitleid();
  herotitleid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationOtherHeroInfo.HeroTitleId)
}

// optional uint32 BackGroundId = 8;
inline bool TFormationOtherHeroInfo::has_backgroundid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TFormationOtherHeroInfo::set_has_backgroundid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TFormationOtherHeroInfo::clear_has_backgroundid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TFormationOtherHeroInfo::clear_backgroundid() {
  backgroundid_ = 0u;
  clear_has_backgroundid();
}
inline ::google::protobuf::uint32 TFormationOtherHeroInfo::backgroundid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroInfo.BackGroundId)
  return backgroundid_;
}
inline void TFormationOtherHeroInfo::set_backgroundid(::google::protobuf::uint32 value) {
  set_has_backgroundid();
  backgroundid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationOtherHeroInfo.BackGroundId)
}

// -------------------------------------------------------------------

// TFormationGetOtherFormationRsp

// repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
inline int TFormationGetOtherFormationRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetOtherFormationRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TFormationOtherHeroInfo& TFormationGetOtherFormationRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetOtherFormationRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetOtherFormationRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherFormationRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
TFormationGetOtherFormationRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherFormationRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
TFormationGetOtherFormationRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherFormationRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// repeated .pb.TRankSingle RankArr = 2;
inline int TFormationGetOtherFormationRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TFormationGetOtherFormationRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TRankSingle& TFormationGetOtherFormationRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TRankSingle* TFormationGetOtherFormationRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TRankSingle* TFormationGetOtherFormationRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherFormationRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
TFormationGetOtherFormationRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherFormationRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
TFormationGetOtherFormationRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherFormationRsp.RankArr)
  return &rankarr_;
}

// optional .pb.TOthersBeastInfo BeastInfo = 3;
inline bool TFormationGetOtherFormationRsp::has_beastinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationGetOtherFormationRsp::set_has_beastinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationGetOtherFormationRsp::clear_has_beastinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationGetOtherFormationRsp::clear_beastinfo() {
  if (beastinfo_ != NULL) beastinfo_->::pb::TOthersBeastInfo::Clear();
  clear_has_beastinfo();
}
inline const ::pb::TOthersBeastInfo& TFormationGetOtherFormationRsp::beastinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.BeastInfo)
  return beastinfo_ != NULL ? *beastinfo_ : *default_instance_->beastinfo_;
}
inline ::pb::TOthersBeastInfo* TFormationGetOtherFormationRsp::mutable_beastinfo() {
  set_has_beastinfo();
  if (beastinfo_ == NULL) beastinfo_ = new ::pb::TOthersBeastInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.BeastInfo)
  return beastinfo_;
}
inline ::pb::TOthersBeastInfo* TFormationGetOtherFormationRsp::release_beastinfo() {
  clear_has_beastinfo();
  ::pb::TOthersBeastInfo* temp = beastinfo_;
  beastinfo_ = NULL;
  return temp;
}
inline void TFormationGetOtherFormationRsp::set_allocated_beastinfo(::pb::TOthersBeastInfo* beastinfo) {
  delete beastinfo_;
  beastinfo_ = beastinfo;
  if (beastinfo) {
    set_has_beastinfo();
  } else {
    clear_has_beastinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherFormationRsp.BeastInfo)
}

// optional .pb.TOtherMountSingleInfo CurMountInfo = 4;
inline bool TFormationGetOtherFormationRsp::has_curmountinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TFormationGetOtherFormationRsp::set_has_curmountinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TFormationGetOtherFormationRsp::clear_has_curmountinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TFormationGetOtherFormationRsp::clear_curmountinfo() {
  if (curmountinfo_ != NULL) curmountinfo_->::pb::TOtherMountSingleInfo::Clear();
  clear_has_curmountinfo();
}
inline const ::pb::TOtherMountSingleInfo& TFormationGetOtherFormationRsp::curmountinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.CurMountInfo)
  return curmountinfo_ != NULL ? *curmountinfo_ : *default_instance_->curmountinfo_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetOtherFormationRsp::mutable_curmountinfo() {
  set_has_curmountinfo();
  if (curmountinfo_ == NULL) curmountinfo_ = new ::pb::TOtherMountSingleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.CurMountInfo)
  return curmountinfo_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetOtherFormationRsp::release_curmountinfo() {
  clear_has_curmountinfo();
  ::pb::TOtherMountSingleInfo* temp = curmountinfo_;
  curmountinfo_ = NULL;
  return temp;
}
inline void TFormationGetOtherFormationRsp::set_allocated_curmountinfo(::pb::TOtherMountSingleInfo* curmountinfo) {
  delete curmountinfo_;
  curmountinfo_ = curmountinfo;
  if (curmountinfo) {
    set_has_curmountinfo();
  } else {
    clear_has_curmountinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherFormationRsp.CurMountInfo)
}

// optional .pb.TOtherMountSingleInfo CurAspectMount = 5;
inline bool TFormationGetOtherFormationRsp::has_curaspectmount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TFormationGetOtherFormationRsp::set_has_curaspectmount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TFormationGetOtherFormationRsp::clear_has_curaspectmount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TFormationGetOtherFormationRsp::clear_curaspectmount() {
  if (curaspectmount_ != NULL) curaspectmount_->::pb::TOtherMountSingleInfo::Clear();
  clear_has_curaspectmount();
}
inline const ::pb::TOtherMountSingleInfo& TFormationGetOtherFormationRsp::curaspectmount() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.CurAspectMount)
  return curaspectmount_ != NULL ? *curaspectmount_ : *default_instance_->curaspectmount_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetOtherFormationRsp::mutable_curaspectmount() {
  set_has_curaspectmount();
  if (curaspectmount_ == NULL) curaspectmount_ = new ::pb::TOtherMountSingleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.CurAspectMount)
  return curaspectmount_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetOtherFormationRsp::release_curaspectmount() {
  clear_has_curaspectmount();
  ::pb::TOtherMountSingleInfo* temp = curaspectmount_;
  curaspectmount_ = NULL;
  return temp;
}
inline void TFormationGetOtherFormationRsp::set_allocated_curaspectmount(::pb::TOtherMountSingleInfo* curaspectmount) {
  delete curaspectmount_;
  curaspectmount_ = curaspectmount;
  if (curaspectmount) {
    set_has_curaspectmount();
  } else {
    clear_has_curaspectmount();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherFormationRsp.CurAspectMount)
}

// optional .pb.TOtherWarRidingInfo WarRidingInfo = 6;
inline bool TFormationGetOtherFormationRsp::has_warridinginfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TFormationGetOtherFormationRsp::set_has_warridinginfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TFormationGetOtherFormationRsp::clear_has_warridinginfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TFormationGetOtherFormationRsp::clear_warridinginfo() {
  if (warridinginfo_ != NULL) warridinginfo_->::pb::TOtherWarRidingInfo::Clear();
  clear_has_warridinginfo();
}
inline const ::pb::TOtherWarRidingInfo& TFormationGetOtherFormationRsp::warridinginfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.WarRidingInfo)
  return warridinginfo_ != NULL ? *warridinginfo_ : *default_instance_->warridinginfo_;
}
inline ::pb::TOtherWarRidingInfo* TFormationGetOtherFormationRsp::mutable_warridinginfo() {
  set_has_warridinginfo();
  if (warridinginfo_ == NULL) warridinginfo_ = new ::pb::TOtherWarRidingInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.WarRidingInfo)
  return warridinginfo_;
}
inline ::pb::TOtherWarRidingInfo* TFormationGetOtherFormationRsp::release_warridinginfo() {
  clear_has_warridinginfo();
  ::pb::TOtherWarRidingInfo* temp = warridinginfo_;
  warridinginfo_ = NULL;
  return temp;
}
inline void TFormationGetOtherFormationRsp::set_allocated_warridinginfo(::pb::TOtherWarRidingInfo* warridinginfo) {
  delete warridinginfo_;
  warridinginfo_ = warridinginfo;
  if (warridinginfo) {
    set_has_warridinginfo();
  } else {
    clear_has_warridinginfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherFormationRsp.WarRidingInfo)
}

// repeated .pb.TDivineEquipItem DivineEquipItemArr = 7;
inline int TFormationGetOtherFormationRsp::divineequipitemarr_size() const {
  return divineequipitemarr_.size();
}
inline void TFormationGetOtherFormationRsp::clear_divineequipitemarr() {
  divineequipitemarr_.Clear();
}
inline const ::pb::TDivineEquipItem& TFormationGetOtherFormationRsp::divineequipitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherFormationRsp.DivineEquipItemArr)
  return divineequipitemarr_.Get(index);
}
inline ::pb::TDivineEquipItem* TFormationGetOtherFormationRsp::mutable_divineequipitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherFormationRsp.DivineEquipItemArr)
  return divineequipitemarr_.Mutable(index);
}
inline ::pb::TDivineEquipItem* TFormationGetOtherFormationRsp::add_divineequipitemarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherFormationRsp.DivineEquipItemArr)
  return divineequipitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >&
TFormationGetOtherFormationRsp::divineequipitemarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherFormationRsp.DivineEquipItemArr)
  return divineequipitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >*
TFormationGetOtherFormationRsp::mutable_divineequipitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherFormationRsp.DivineEquipItemArr)
  return &divineequipitemarr_;
}

// -------------------------------------------------------------------

// TFormationGetOtherSimpleFormationReq

// optional uint64 Uid = 1;
inline bool TFormationGetOtherSimpleFormationReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetOtherSimpleFormationReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetOtherSimpleFormationReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetOtherSimpleFormationReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetOtherSimpleFormationReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherSimpleFormationReq.Uid)
  return uid_;
}
inline void TFormationGetOtherSimpleFormationReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherSimpleFormationReq.Uid)
}

// optional string ServerId = 2;
inline bool TFormationGetOtherSimpleFormationReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetOtherSimpleFormationReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetOtherSimpleFormationReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetOtherSimpleFormationReq::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TFormationGetOtherSimpleFormationReq::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherSimpleFormationReq.ServerId)
  return *serverid_;
}
inline void TFormationGetOtherSimpleFormationReq::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherSimpleFormationReq.ServerId)
}
inline void TFormationGetOtherSimpleFormationReq::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TFormationGetOtherSimpleFormationReq.ServerId)
}
inline void TFormationGetOtherSimpleFormationReq::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TFormationGetOtherSimpleFormationReq.ServerId)
}
inline ::std::string* TFormationGetOtherSimpleFormationReq::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherSimpleFormationReq.ServerId)
  return serverid_;
}
inline ::std::string* TFormationGetOtherSimpleFormationReq::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TFormationGetOtherSimpleFormationReq::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherSimpleFormationReq.ServerId)
}

// -------------------------------------------------------------------

// TFormationOtherHeroSimpleInfo

// optional uint32 Pos = 1;
inline bool TFormationOtherHeroSimpleInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationOtherHeroSimpleInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationOtherHeroSimpleInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationOtherHeroSimpleInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationOtherHeroSimpleInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroSimpleInfo.Pos)
  return pos_;
}
inline void TFormationOtherHeroSimpleInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationOtherHeroSimpleInfo.Pos)
}

// optional .pb.THeroSimpleInfo HeroInfo = 2;
inline bool TFormationOtherHeroSimpleInfo::has_heroinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationOtherHeroSimpleInfo::set_has_heroinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationOtherHeroSimpleInfo::clear_has_heroinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationOtherHeroSimpleInfo::clear_heroinfo() {
  if (heroinfo_ != NULL) heroinfo_->::pb::THeroSimpleInfo::Clear();
  clear_has_heroinfo();
}
inline const ::pb::THeroSimpleInfo& TFormationOtherHeroSimpleInfo::heroinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOtherHeroSimpleInfo.HeroInfo)
  return heroinfo_ != NULL ? *heroinfo_ : *default_instance_->heroinfo_;
}
inline ::pb::THeroSimpleInfo* TFormationOtherHeroSimpleInfo::mutable_heroinfo() {
  set_has_heroinfo();
  if (heroinfo_ == NULL) heroinfo_ = new ::pb::THeroSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationOtherHeroSimpleInfo.HeroInfo)
  return heroinfo_;
}
inline ::pb::THeroSimpleInfo* TFormationOtherHeroSimpleInfo::release_heroinfo() {
  clear_has_heroinfo();
  ::pb::THeroSimpleInfo* temp = heroinfo_;
  heroinfo_ = NULL;
  return temp;
}
inline void TFormationOtherHeroSimpleInfo::set_allocated_heroinfo(::pb::THeroSimpleInfo* heroinfo) {
  delete heroinfo_;
  heroinfo_ = heroinfo;
  if (heroinfo) {
    set_has_heroinfo();
  } else {
    clear_has_heroinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationOtherHeroSimpleInfo.HeroInfo)
}

// -------------------------------------------------------------------

// TFormationGetOtherSimpleFormationRsp

// repeated .pb.TFormationOtherHeroSimpleInfo HeroInfoArr = 1;
inline int TFormationGetOtherSimpleFormationRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetOtherSimpleFormationRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TFormationOtherHeroSimpleInfo& TFormationGetOtherSimpleFormationRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherSimpleFormationRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TFormationOtherHeroSimpleInfo* TFormationGetOtherSimpleFormationRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherSimpleFormationRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TFormationOtherHeroSimpleInfo* TFormationGetOtherSimpleFormationRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherSimpleFormationRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >&
TFormationGetOtherSimpleFormationRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherSimpleFormationRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >*
TFormationGetOtherSimpleFormationRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherSimpleFormationRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// optional .pb.TUserSimpleInfo UserInfo = 2;
inline bool TFormationGetOtherSimpleFormationRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetOtherSimpleFormationRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetOtherSimpleFormationRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetOtherSimpleFormationRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TFormationGetOtherSimpleFormationRsp::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherSimpleFormationRsp.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetOtherSimpleFormationRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherSimpleFormationRsp.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetOtherSimpleFormationRsp::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TFormationGetOtherSimpleFormationRsp::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherSimpleFormationRsp.UserInfo)
}

// repeated .pb.TRankSingle RankArr = 3;
inline int TFormationGetOtherSimpleFormationRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TFormationGetOtherSimpleFormationRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TRankSingle& TFormationGetOtherSimpleFormationRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherSimpleFormationRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TRankSingle* TFormationGetOtherSimpleFormationRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherSimpleFormationRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TRankSingle* TFormationGetOtherSimpleFormationRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherSimpleFormationRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
TFormationGetOtherSimpleFormationRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherSimpleFormationRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
TFormationGetOtherSimpleFormationRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherSimpleFormationRsp.RankArr)
  return &rankarr_;
}

// -------------------------------------------------------------------

// TFormationGetOtherPlayerBattleArgsReq

// optional uint64 Uid = 1;
inline bool TFormationGetOtherPlayerBattleArgsReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetOtherPlayerBattleArgsReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetOtherPlayerBattleArgsReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetOtherPlayerBattleArgsReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherPlayerBattleArgsReq.Uid)
  return uid_;
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherPlayerBattleArgsReq.Uid)
}

// optional string ServerId = 2;
inline bool TFormationGetOtherPlayerBattleArgsReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetOtherPlayerBattleArgsReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetOtherPlayerBattleArgsReq::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TFormationGetOtherPlayerBattleArgsReq::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherPlayerBattleArgsReq.ServerId)
  return *serverid_;
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherPlayerBattleArgsReq.ServerId)
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TFormationGetOtherPlayerBattleArgsReq.ServerId)
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TFormationGetOtherPlayerBattleArgsReq.ServerId)
}
inline ::std::string* TFormationGetOtherPlayerBattleArgsReq::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherPlayerBattleArgsReq.ServerId)
  return serverid_;
}
inline ::std::string* TFormationGetOtherPlayerBattleArgsReq::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TFormationGetOtherPlayerBattleArgsReq::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherPlayerBattleArgsReq.ServerId)
}

// -------------------------------------------------------------------

// TFormationGetOtherPlayerBattleArgsRsp

// repeated .pb.TUnitInfo HeroInfoArr = 1;
inline int TFormationGetOtherPlayerBattleArgsRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetOtherPlayerBattleArgsRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TUnitInfo& TFormationGetOtherPlayerBattleArgsRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherPlayerBattleArgsRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TUnitInfo* TFormationGetOtherPlayerBattleArgsRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherPlayerBattleArgsRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TUnitInfo* TFormationGetOtherPlayerBattleArgsRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherPlayerBattleArgsRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >&
TFormationGetOtherPlayerBattleArgsRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherPlayerBattleArgsRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >*
TFormationGetOtherPlayerBattleArgsRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherPlayerBattleArgsRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// -------------------------------------------------------------------

// TFormationHallHero

// optional uint32 Pos = 1;
inline bool TFormationHallHero::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationHallHero::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationHallHero::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationHallHero::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationHallHero::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationHallHero.Pos)
  return pos_;
}
inline void TFormationHallHero::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationHallHero.Pos)
}

// optional uint32 Hid = 2;
inline bool TFormationHallHero::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationHallHero::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationHallHero::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationHallHero::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationHallHero::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationHallHero.Hid)
  return hid_;
}
inline void TFormationHallHero::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationHallHero.Hid)
}

// optional .pb.EHallType Type = 3;
inline bool TFormationHallHero::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationHallHero::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationHallHero::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationHallHero::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::pb::EHallType TFormationHallHero::type() const {
  // @@protoc_insertion_point(field_get:pb.TFormationHallHero.Type)
  return static_cast< ::pb::EHallType >(type_);
}
inline void TFormationHallHero::set_type(::pb::EHallType value) {
  assert(::pb::EHallType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationHallHero.Type)
}

// -------------------------------------------------------------------

// TFormationGetHallInfoRsp

// repeated .pb.TFormationHallHero HallArr = 1;
inline int TFormationGetHallInfoRsp::hallarr_size() const {
  return hallarr_.size();
}
inline void TFormationGetHallInfoRsp::clear_hallarr() {
  hallarr_.Clear();
}
inline const ::pb::TFormationHallHero& TFormationGetHallInfoRsp::hallarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetHallInfoRsp.HallArr)
  return hallarr_.Get(index);
}
inline ::pb::TFormationHallHero* TFormationGetHallInfoRsp::mutable_hallarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetHallInfoRsp.HallArr)
  return hallarr_.Mutable(index);
}
inline ::pb::TFormationHallHero* TFormationGetHallInfoRsp::add_hallarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetHallInfoRsp.HallArr)
  return hallarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationHallHero >&
TFormationGetHallInfoRsp::hallarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetHallInfoRsp.HallArr)
  return hallarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationHallHero >*
TFormationGetHallInfoRsp::mutable_hallarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetHallInfoRsp.HallArr)
  return &hallarr_;
}

// optional uint32 EnhanceLevel = 2;
inline bool TFormationGetHallInfoRsp::has_enhancelevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetHallInfoRsp::set_has_enhancelevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetHallInfoRsp::clear_has_enhancelevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetHallInfoRsp::clear_enhancelevel() {
  enhancelevel_ = 0u;
  clear_has_enhancelevel();
}
inline ::google::protobuf::uint32 TFormationGetHallInfoRsp::enhancelevel() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetHallInfoRsp.EnhanceLevel)
  return enhancelevel_;
}
inline void TFormationGetHallInfoRsp::set_enhancelevel(::google::protobuf::uint32 value) {
  set_has_enhancelevel();
  enhancelevel_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetHallInfoRsp.EnhanceLevel)
}

// optional uint32 EnhanceMaxPos = 3;
inline bool TFormationGetHallInfoRsp::has_enhancemaxpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationGetHallInfoRsp::set_has_enhancemaxpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationGetHallInfoRsp::clear_has_enhancemaxpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationGetHallInfoRsp::clear_enhancemaxpos() {
  enhancemaxpos_ = 0u;
  clear_has_enhancemaxpos();
}
inline ::google::protobuf::uint32 TFormationGetHallInfoRsp::enhancemaxpos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetHallInfoRsp.EnhanceMaxPos)
  return enhancemaxpos_;
}
inline void TFormationGetHallInfoRsp::set_enhancemaxpos(::google::protobuf::uint32 value) {
  set_has_enhancemaxpos();
  enhancemaxpos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetHallInfoRsp.EnhanceMaxPos)
}

// -------------------------------------------------------------------

// TFormationResetHallRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TFormationResetHallRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TFormationResetHallRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TFormationResetHallRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationResetHallRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TFormationResetHallRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationResetHallRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TFormationResetHallRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TFormationResetHallRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TFormationResetHallRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TFormationResetHallRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TFormationResetHallRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationResetHallRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TFormationSetHallPosReq

// optional uint32 Pos = 1;
inline bool TFormationSetHallPosReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationSetHallPosReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationSetHallPosReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationSetHallPosReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationSetHallPosReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationSetHallPosReq.Pos)
  return pos_;
}
inline void TFormationSetHallPosReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationSetHallPosReq.Pos)
}

// optional uint32 Hid = 2;
inline bool TFormationSetHallPosReq::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationSetHallPosReq::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationSetHallPosReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationSetHallPosReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationSetHallPosReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationSetHallPosReq.Hid)
  return hid_;
}
inline void TFormationSetHallPosReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationSetHallPosReq.Hid)
}

// optional .pb.EHallType Type = 3;
inline bool TFormationSetHallPosReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationSetHallPosReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationSetHallPosReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationSetHallPosReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::pb::EHallType TFormationSetHallPosReq::type() const {
  // @@protoc_insertion_point(field_get:pb.TFormationSetHallPosReq.Type)
  return static_cast< ::pb::EHallType >(type_);
}
inline void TFormationSetHallPosReq::set_type(::pb::EHallType value) {
  assert(::pb::EHallType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationSetHallPosReq.Type)
}

// -------------------------------------------------------------------

// TFormationSetHallPosRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TFormationSetHallPosRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TFormationSetHallPosRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TFormationSetHallPosRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationSetHallPosRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TFormationSetHallPosRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationSetHallPosRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TFormationSetHallPosRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TFormationSetHallPosRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TFormationSetHallPosRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TFormationSetHallPosRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TFormationSetHallPosRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationSetHallPosRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TFormationUseDefaultBattleFormationReq

// optional .pb.EFunctionId FuncId = 1;
inline bool TFormationUseDefaultBattleFormationReq::has_funcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationUseDefaultBattleFormationReq::set_has_funcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationUseDefaultBattleFormationReq::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationUseDefaultBattleFormationReq::clear_funcid() {
  funcid_ = 1;
  clear_has_funcid();
}
inline ::pb::EFunctionId TFormationUseDefaultBattleFormationReq::funcid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationUseDefaultBattleFormationReq.FuncId)
  return static_cast< ::pb::EFunctionId >(funcid_);
}
inline void TFormationUseDefaultBattleFormationReq::set_funcid(::pb::EFunctionId value) {
  assert(::pb::EFunctionId_IsValid(value));
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationUseDefaultBattleFormationReq.FuncId)
}

// optional bool UseDefault = 2;
inline bool TFormationUseDefaultBattleFormationReq::has_usedefault() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationUseDefaultBattleFormationReq::set_has_usedefault() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationUseDefaultBattleFormationReq::clear_has_usedefault() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationUseDefaultBattleFormationReq::clear_usedefault() {
  usedefault_ = false;
  clear_has_usedefault();
}
inline bool TFormationUseDefaultBattleFormationReq::usedefault() const {
  // @@protoc_insertion_point(field_get:pb.TFormationUseDefaultBattleFormationReq.UseDefault)
  return usedefault_;
}
inline void TFormationUseDefaultBattleFormationReq::set_usedefault(bool value) {
  set_has_usedefault();
  usedefault_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationUseDefaultBattleFormationReq.UseDefault)
}

// -------------------------------------------------------------------

// TFormationGetOtherBattleFormationReq

// optional uint64 Uid = 1;
inline bool TFormationGetOtherBattleFormationReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetOtherBattleFormationReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetOtherBattleFormationReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetOtherBattleFormationReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetOtherBattleFormationReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationReq.Uid)
  return uid_;
}
inline void TFormationGetOtherBattleFormationReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherBattleFormationReq.Uid)
}

// optional .pb.EFunctionId FuncId = 2;
inline bool TFormationGetOtherBattleFormationReq::has_funcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetOtherBattleFormationReq::set_has_funcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetOtherBattleFormationReq::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetOtherBattleFormationReq::clear_funcid() {
  funcid_ = 1;
  clear_has_funcid();
}
inline ::pb::EFunctionId TFormationGetOtherBattleFormationReq::funcid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationReq.FuncId)
  return static_cast< ::pb::EFunctionId >(funcid_);
}
inline void TFormationGetOtherBattleFormationReq::set_funcid(::pb::EFunctionId value) {
  assert(::pb::EFunctionId_IsValid(value));
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherBattleFormationReq.FuncId)
}

// optional string ServerId = 3;
inline bool TFormationGetOtherBattleFormationReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationGetOtherBattleFormationReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationGetOtherBattleFormationReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationGetOtherBattleFormationReq::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TFormationGetOtherBattleFormationReq::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationReq.ServerId)
  return *serverid_;
}
inline void TFormationGetOtherBattleFormationReq::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherBattleFormationReq.ServerId)
}
inline void TFormationGetOtherBattleFormationReq::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TFormationGetOtherBattleFormationReq.ServerId)
}
inline void TFormationGetOtherBattleFormationReq::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TFormationGetOtherBattleFormationReq.ServerId)
}
inline ::std::string* TFormationGetOtherBattleFormationReq::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherBattleFormationReq.ServerId)
  return serverid_;
}
inline ::std::string* TFormationGetOtherBattleFormationReq::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TFormationGetOtherBattleFormationReq::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherBattleFormationReq.ServerId)
}

// -------------------------------------------------------------------

// TFormationGetOtherBattleFormationRsp

// repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
inline int TFormationGetOtherBattleFormationRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetOtherBattleFormationRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TFormationOtherHeroInfo& TFormationGetOtherBattleFormationRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetOtherBattleFormationRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherBattleFormationRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetOtherBattleFormationRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherBattleFormationRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
TFormationGetOtherBattleFormationRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherBattleFormationRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
TFormationGetOtherBattleFormationRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherBattleFormationRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// optional .pb.TUserSimpleInfo UserInfo = 2;
inline bool TFormationGetOtherBattleFormationRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetOtherBattleFormationRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetOtherBattleFormationRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetOtherBattleFormationRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TFormationGetOtherBattleFormationRsp::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationRsp.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetOtherBattleFormationRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherBattleFormationRsp.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetOtherBattleFormationRsp::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TFormationGetOtherBattleFormationRsp::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetOtherBattleFormationRsp.UserInfo)
}

// repeated .pb.TRankSingle RankArr = 3;
inline int TFormationGetOtherBattleFormationRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TFormationGetOtherBattleFormationRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TRankSingle& TFormationGetOtherBattleFormationRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TRankSingle* TFormationGetOtherBattleFormationRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetOtherBattleFormationRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TRankSingle* TFormationGetOtherBattleFormationRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherBattleFormationRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
TFormationGetOtherBattleFormationRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherBattleFormationRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
TFormationGetOtherBattleFormationRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherBattleFormationRsp.RankArr)
  return &rankarr_;
}

// repeated uint32 BeastSkillArr = 4;
inline int TFormationGetOtherBattleFormationRsp::beastskillarr_size() const {
  return beastskillarr_.size();
}
inline void TFormationGetOtherBattleFormationRsp::clear_beastskillarr() {
  beastskillarr_.Clear();
}
inline ::google::protobuf::uint32 TFormationGetOtherBattleFormationRsp::beastskillarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetOtherBattleFormationRsp.BeastSkillArr)
  return beastskillarr_.Get(index);
}
inline void TFormationGetOtherBattleFormationRsp::set_beastskillarr(int index, ::google::protobuf::uint32 value) {
  beastskillarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TFormationGetOtherBattleFormationRsp.BeastSkillArr)
}
inline void TFormationGetOtherBattleFormationRsp::add_beastskillarr(::google::protobuf::uint32 value) {
  beastskillarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TFormationGetOtherBattleFormationRsp.BeastSkillArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TFormationGetOtherBattleFormationRsp::beastskillarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetOtherBattleFormationRsp.BeastSkillArr)
  return beastskillarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TFormationGetOtherBattleFormationRsp::mutable_beastskillarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetOtherBattleFormationRsp.BeastSkillArr)
  return &beastskillarr_;
}

// -------------------------------------------------------------------

// TFormationFormationChangePush

// repeated .pb.TFormationSquadHero SquadArr = 1;
inline int TFormationFormationChangePush::squadarr_size() const {
  return squadarr_.size();
}
inline void TFormationFormationChangePush::clear_squadarr() {
  squadarr_.Clear();
}
inline const ::pb::TFormationSquadHero& TFormationFormationChangePush::squadarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationFormationChangePush.SquadArr)
  return squadarr_.Get(index);
}
inline ::pb::TFormationSquadHero* TFormationFormationChangePush::mutable_squadarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationFormationChangePush.SquadArr)
  return squadarr_.Mutable(index);
}
inline ::pb::TFormationSquadHero* TFormationFormationChangePush::add_squadarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationFormationChangePush.SquadArr)
  return squadarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >&
TFormationFormationChangePush::squadarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationFormationChangePush.SquadArr)
  return squadarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationSquadHero >*
TFormationFormationChangePush::mutable_squadarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationFormationChangePush.SquadArr)
  return &squadarr_;
}

// repeated .pb.TFormationPresetFunctionData PresetArr = 2;
inline int TFormationFormationChangePush::presetarr_size() const {
  return presetarr_.size();
}
inline void TFormationFormationChangePush::clear_presetarr() {
  presetarr_.Clear();
}
inline const ::pb::TFormationPresetFunctionData& TFormationFormationChangePush::presetarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationFormationChangePush.PresetArr)
  return presetarr_.Get(index);
}
inline ::pb::TFormationPresetFunctionData* TFormationFormationChangePush::mutable_presetarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationFormationChangePush.PresetArr)
  return presetarr_.Mutable(index);
}
inline ::pb::TFormationPresetFunctionData* TFormationFormationChangePush::add_presetarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationFormationChangePush.PresetArr)
  return presetarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >&
TFormationFormationChangePush::presetarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationFormationChangePush.PresetArr)
  return presetarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationPresetFunctionData >*
TFormationFormationChangePush::mutable_presetarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationFormationChangePush.PresetArr)
  return &presetarr_;
}

// -------------------------------------------------------------------

// TFormationGetFormationByOtherServerReq

// optional uint64 Uid = 1;
inline bool TFormationGetFormationByOtherServerReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetFormationByOtherServerReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetFormationByOtherServerReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetFormationByOtherServerReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetFormationByOtherServerReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerReq.Uid)
  return uid_;
}
inline void TFormationGetFormationByOtherServerReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetFormationByOtherServerReq.Uid)
}

// -------------------------------------------------------------------

// TFormationGetFormationByOtherServerRsp

// repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
inline int TFormationGetFormationByOtherServerRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetFormationByOtherServerRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TFormationOtherHeroInfo& TFormationGetFormationByOtherServerRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetFormationByOtherServerRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetFormationByOtherServerRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
TFormationGetFormationByOtherServerRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
TFormationGetFormationByOtherServerRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetFormationByOtherServerRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// repeated .pb.TRankSingle RankArr = 2;
inline int TFormationGetFormationByOtherServerRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TFormationGetFormationByOtherServerRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TRankSingle& TFormationGetFormationByOtherServerRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TRankSingle* TFormationGetFormationByOtherServerRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetFormationByOtherServerRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TRankSingle* TFormationGetFormationByOtherServerRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetFormationByOtherServerRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
TFormationGetFormationByOtherServerRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetFormationByOtherServerRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
TFormationGetFormationByOtherServerRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetFormationByOtherServerRsp.RankArr)
  return &rankarr_;
}

// optional .pb.TOthersBeastInfo BeastInfo = 3;
inline bool TFormationGetFormationByOtherServerRsp::has_beastinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFormationGetFormationByOtherServerRsp::set_has_beastinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_has_beastinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_beastinfo() {
  if (beastinfo_ != NULL) beastinfo_->::pb::TOthersBeastInfo::Clear();
  clear_has_beastinfo();
}
inline const ::pb::TOthersBeastInfo& TFormationGetFormationByOtherServerRsp::beastinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerRsp.BeastInfo)
  return beastinfo_ != NULL ? *beastinfo_ : *default_instance_->beastinfo_;
}
inline ::pb::TOthersBeastInfo* TFormationGetFormationByOtherServerRsp::mutable_beastinfo() {
  set_has_beastinfo();
  if (beastinfo_ == NULL) beastinfo_ = new ::pb::TOthersBeastInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetFormationByOtherServerRsp.BeastInfo)
  return beastinfo_;
}
inline ::pb::TOthersBeastInfo* TFormationGetFormationByOtherServerRsp::release_beastinfo() {
  clear_has_beastinfo();
  ::pb::TOthersBeastInfo* temp = beastinfo_;
  beastinfo_ = NULL;
  return temp;
}
inline void TFormationGetFormationByOtherServerRsp::set_allocated_beastinfo(::pb::TOthersBeastInfo* beastinfo) {
  delete beastinfo_;
  beastinfo_ = beastinfo;
  if (beastinfo) {
    set_has_beastinfo();
  } else {
    clear_has_beastinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetFormationByOtherServerRsp.BeastInfo)
}

// optional .pb.TOtherMountSingleInfo CurMountInfo = 4;
inline bool TFormationGetFormationByOtherServerRsp::has_curmountinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TFormationGetFormationByOtherServerRsp::set_has_curmountinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_has_curmountinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_curmountinfo() {
  if (curmountinfo_ != NULL) curmountinfo_->::pb::TOtherMountSingleInfo::Clear();
  clear_has_curmountinfo();
}
inline const ::pb::TOtherMountSingleInfo& TFormationGetFormationByOtherServerRsp::curmountinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerRsp.CurMountInfo)
  return curmountinfo_ != NULL ? *curmountinfo_ : *default_instance_->curmountinfo_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetFormationByOtherServerRsp::mutable_curmountinfo() {
  set_has_curmountinfo();
  if (curmountinfo_ == NULL) curmountinfo_ = new ::pb::TOtherMountSingleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetFormationByOtherServerRsp.CurMountInfo)
  return curmountinfo_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetFormationByOtherServerRsp::release_curmountinfo() {
  clear_has_curmountinfo();
  ::pb::TOtherMountSingleInfo* temp = curmountinfo_;
  curmountinfo_ = NULL;
  return temp;
}
inline void TFormationGetFormationByOtherServerRsp::set_allocated_curmountinfo(::pb::TOtherMountSingleInfo* curmountinfo) {
  delete curmountinfo_;
  curmountinfo_ = curmountinfo;
  if (curmountinfo) {
    set_has_curmountinfo();
  } else {
    clear_has_curmountinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetFormationByOtherServerRsp.CurMountInfo)
}

// optional .pb.TOtherMountSingleInfo CurAspectMount = 5;
inline bool TFormationGetFormationByOtherServerRsp::has_curaspectmount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TFormationGetFormationByOtherServerRsp::set_has_curaspectmount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_has_curaspectmount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_curaspectmount() {
  if (curaspectmount_ != NULL) curaspectmount_->::pb::TOtherMountSingleInfo::Clear();
  clear_has_curaspectmount();
}
inline const ::pb::TOtherMountSingleInfo& TFormationGetFormationByOtherServerRsp::curaspectmount() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerRsp.CurAspectMount)
  return curaspectmount_ != NULL ? *curaspectmount_ : *default_instance_->curaspectmount_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetFormationByOtherServerRsp::mutable_curaspectmount() {
  set_has_curaspectmount();
  if (curaspectmount_ == NULL) curaspectmount_ = new ::pb::TOtherMountSingleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetFormationByOtherServerRsp.CurAspectMount)
  return curaspectmount_;
}
inline ::pb::TOtherMountSingleInfo* TFormationGetFormationByOtherServerRsp::release_curaspectmount() {
  clear_has_curaspectmount();
  ::pb::TOtherMountSingleInfo* temp = curaspectmount_;
  curaspectmount_ = NULL;
  return temp;
}
inline void TFormationGetFormationByOtherServerRsp::set_allocated_curaspectmount(::pb::TOtherMountSingleInfo* curaspectmount) {
  delete curaspectmount_;
  curaspectmount_ = curaspectmount;
  if (curaspectmount) {
    set_has_curaspectmount();
  } else {
    clear_has_curaspectmount();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetFormationByOtherServerRsp.CurAspectMount)
}

// optional .pb.TOtherWarRidingInfo WarRidingInfo = 6;
inline bool TFormationGetFormationByOtherServerRsp::has_warridinginfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TFormationGetFormationByOtherServerRsp::set_has_warridinginfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_has_warridinginfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TFormationGetFormationByOtherServerRsp::clear_warridinginfo() {
  if (warridinginfo_ != NULL) warridinginfo_->::pb::TOtherWarRidingInfo::Clear();
  clear_has_warridinginfo();
}
inline const ::pb::TOtherWarRidingInfo& TFormationGetFormationByOtherServerRsp::warridinginfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetFormationByOtherServerRsp.WarRidingInfo)
  return warridinginfo_ != NULL ? *warridinginfo_ : *default_instance_->warridinginfo_;
}
inline ::pb::TOtherWarRidingInfo* TFormationGetFormationByOtherServerRsp::mutable_warridinginfo() {
  set_has_warridinginfo();
  if (warridinginfo_ == NULL) warridinginfo_ = new ::pb::TOtherWarRidingInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetFormationByOtherServerRsp.WarRidingInfo)
  return warridinginfo_;
}
inline ::pb::TOtherWarRidingInfo* TFormationGetFormationByOtherServerRsp::release_warridinginfo() {
  clear_has_warridinginfo();
  ::pb::TOtherWarRidingInfo* temp = warridinginfo_;
  warridinginfo_ = NULL;
  return temp;
}
inline void TFormationGetFormationByOtherServerRsp::set_allocated_warridinginfo(::pb::TOtherWarRidingInfo* warridinginfo) {
  delete warridinginfo_;
  warridinginfo_ = warridinginfo;
  if (warridinginfo) {
    set_has_warridinginfo();
  } else {
    clear_has_warridinginfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetFormationByOtherServerRsp.WarRidingInfo)
}

// -------------------------------------------------------------------

// TFormationGetSimpleFormationByOtherServerReq

// optional uint64 Uid = 1;
inline bool TFormationGetSimpleFormationByOtherServerReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetSimpleFormationByOtherServerReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetSimpleFormationByOtherServerReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetSimpleFormationByOtherServerReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetSimpleFormationByOtherServerReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetSimpleFormationByOtherServerReq.Uid)
  return uid_;
}
inline void TFormationGetSimpleFormationByOtherServerReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetSimpleFormationByOtherServerReq.Uid)
}

// -------------------------------------------------------------------

// TFormationGetSimpleFormationByOtherServerRsp

// repeated .pb.TFormationOtherHeroSimpleInfo HeroInfoArr = 1;
inline int TFormationGetSimpleFormationByOtherServerRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetSimpleFormationByOtherServerRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TFormationOtherHeroSimpleInfo& TFormationGetSimpleFormationByOtherServerRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetSimpleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TFormationOtherHeroSimpleInfo* TFormationGetSimpleFormationByOtherServerRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetSimpleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TFormationOtherHeroSimpleInfo* TFormationGetSimpleFormationByOtherServerRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetSimpleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >&
TFormationGetSimpleFormationByOtherServerRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetSimpleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroSimpleInfo >*
TFormationGetSimpleFormationByOtherServerRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetSimpleFormationByOtherServerRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// optional .pb.TUserSimpleInfo UserInfo = 2;
inline bool TFormationGetSimpleFormationByOtherServerRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetSimpleFormationByOtherServerRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetSimpleFormationByOtherServerRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetSimpleFormationByOtherServerRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TFormationGetSimpleFormationByOtherServerRsp::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetSimpleFormationByOtherServerRsp.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetSimpleFormationByOtherServerRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetSimpleFormationByOtherServerRsp.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetSimpleFormationByOtherServerRsp::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TFormationGetSimpleFormationByOtherServerRsp::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetSimpleFormationByOtherServerRsp.UserInfo)
}

// repeated .pb.TRankSingle RankArr = 3;
inline int TFormationGetSimpleFormationByOtherServerRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TFormationGetSimpleFormationByOtherServerRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TRankSingle& TFormationGetSimpleFormationByOtherServerRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetSimpleFormationByOtherServerRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TRankSingle* TFormationGetSimpleFormationByOtherServerRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetSimpleFormationByOtherServerRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TRankSingle* TFormationGetSimpleFormationByOtherServerRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetSimpleFormationByOtherServerRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
TFormationGetSimpleFormationByOtherServerRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetSimpleFormationByOtherServerRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
TFormationGetSimpleFormationByOtherServerRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetSimpleFormationByOtherServerRsp.RankArr)
  return &rankarr_;
}

// -------------------------------------------------------------------

// TFormationGetBattleFormationByOtherServerReq

// optional uint64 Uid = 1;
inline bool TFormationGetBattleFormationByOtherServerReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetBattleFormationByOtherServerReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetBattleFormationByOtherServerReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetBattleFormationByOtherServerReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetBattleFormationByOtherServerReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetBattleFormationByOtherServerReq.Uid)
  return uid_;
}
inline void TFormationGetBattleFormationByOtherServerReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetBattleFormationByOtherServerReq.Uid)
}

// optional .pb.EFunctionId FuncId = 2;
inline bool TFormationGetBattleFormationByOtherServerReq::has_funcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetBattleFormationByOtherServerReq::set_has_funcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetBattleFormationByOtherServerReq::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetBattleFormationByOtherServerReq::clear_funcid() {
  funcid_ = 1;
  clear_has_funcid();
}
inline ::pb::EFunctionId TFormationGetBattleFormationByOtherServerReq::funcid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetBattleFormationByOtherServerReq.FuncId)
  return static_cast< ::pb::EFunctionId >(funcid_);
}
inline void TFormationGetBattleFormationByOtherServerReq::set_funcid(::pb::EFunctionId value) {
  assert(::pb::EFunctionId_IsValid(value));
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetBattleFormationByOtherServerReq.FuncId)
}

// -------------------------------------------------------------------

// TFormationGetBattleFormationByOtherServerRsp

// repeated .pb.TFormationOtherHeroInfo HeroInfoArr = 1;
inline int TFormationGetBattleFormationByOtherServerRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetBattleFormationByOtherServerRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TFormationOtherHeroInfo& TFormationGetBattleFormationByOtherServerRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetBattleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetBattleFormationByOtherServerRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetBattleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TFormationOtherHeroInfo* TFormationGetBattleFormationByOtherServerRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetBattleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >&
TFormationGetBattleFormationByOtherServerRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetBattleFormationByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOtherHeroInfo >*
TFormationGetBattleFormationByOtherServerRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetBattleFormationByOtherServerRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// optional .pb.TUserSimpleInfo UserInfo = 2;
inline bool TFormationGetBattleFormationByOtherServerRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetBattleFormationByOtherServerRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetBattleFormationByOtherServerRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetBattleFormationByOtherServerRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TFormationGetBattleFormationByOtherServerRsp::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetBattleFormationByOtherServerRsp.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetBattleFormationByOtherServerRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetBattleFormationByOtherServerRsp.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TFormationGetBattleFormationByOtherServerRsp::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TFormationGetBattleFormationByOtherServerRsp::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFormationGetBattleFormationByOtherServerRsp.UserInfo)
}

// repeated .pb.TRankSingle RankArr = 3;
inline int TFormationGetBattleFormationByOtherServerRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TFormationGetBattleFormationByOtherServerRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TRankSingle& TFormationGetBattleFormationByOtherServerRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetBattleFormationByOtherServerRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TRankSingle* TFormationGetBattleFormationByOtherServerRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetBattleFormationByOtherServerRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TRankSingle* TFormationGetBattleFormationByOtherServerRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetBattleFormationByOtherServerRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >&
TFormationGetBattleFormationByOtherServerRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetBattleFormationByOtherServerRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRankSingle >*
TFormationGetBattleFormationByOtherServerRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetBattleFormationByOtherServerRsp.RankArr)
  return &rankarr_;
}

// repeated uint32 BeastSkillArr = 4;
inline int TFormationGetBattleFormationByOtherServerRsp::beastskillarr_size() const {
  return beastskillarr_.size();
}
inline void TFormationGetBattleFormationByOtherServerRsp::clear_beastskillarr() {
  beastskillarr_.Clear();
}
inline ::google::protobuf::uint32 TFormationGetBattleFormationByOtherServerRsp::beastskillarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetBattleFormationByOtherServerRsp.BeastSkillArr)
  return beastskillarr_.Get(index);
}
inline void TFormationGetBattleFormationByOtherServerRsp::set_beastskillarr(int index, ::google::protobuf::uint32 value) {
  beastskillarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TFormationGetBattleFormationByOtherServerRsp.BeastSkillArr)
}
inline void TFormationGetBattleFormationByOtherServerRsp::add_beastskillarr(::google::protobuf::uint32 value) {
  beastskillarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TFormationGetBattleFormationByOtherServerRsp.BeastSkillArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TFormationGetBattleFormationByOtherServerRsp::beastskillarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetBattleFormationByOtherServerRsp.BeastSkillArr)
  return beastskillarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TFormationGetBattleFormationByOtherServerRsp::mutable_beastskillarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetBattleFormationByOtherServerRsp.BeastSkillArr)
  return &beastskillarr_;
}

// -------------------------------------------------------------------

// TFormationGetPlayerBattleArgsByOtherServerReq

// optional uint64 Uid = 1;
inline bool TFormationGetPlayerBattleArgsByOtherServerReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetPlayerBattleArgsByOtherServerReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetPlayerBattleArgsByOtherServerReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetPlayerBattleArgsByOtherServerReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetPlayerBattleArgsByOtherServerReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetPlayerBattleArgsByOtherServerReq.Uid)
  return uid_;
}
inline void TFormationGetPlayerBattleArgsByOtherServerReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetPlayerBattleArgsByOtherServerReq.Uid)
}

// -------------------------------------------------------------------

// TFormationGetPlayerBattleArgsByOtherServerRsp

// repeated .pb.TUnitInfo HeroInfoArr = 1;
inline int TFormationGetPlayerBattleArgsByOtherServerRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TFormationGetPlayerBattleArgsByOtherServerRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TUnitInfo& TFormationGetPlayerBattleArgsByOtherServerRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetPlayerBattleArgsByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TUnitInfo* TFormationGetPlayerBattleArgsByOtherServerRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationGetPlayerBattleArgsByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TUnitInfo* TFormationGetPlayerBattleArgsByOtherServerRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationGetPlayerBattleArgsByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >&
TFormationGetPlayerBattleArgsByOtherServerRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationGetPlayerBattleArgsByOtherServerRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >*
TFormationGetPlayerBattleArgsByOtherServerRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationGetPlayerBattleArgsByOtherServerRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// -------------------------------------------------------------------

// TFormationGetMasterHeroDefaultPosReq

// optional uint64 Uid = 1;
inline bool TFormationGetMasterHeroDefaultPosReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetMasterHeroDefaultPosReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetMasterHeroDefaultPosReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetMasterHeroDefaultPosReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFormationGetMasterHeroDefaultPosReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetMasterHeroDefaultPosReq.Uid)
  return uid_;
}
inline void TFormationGetMasterHeroDefaultPosReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetMasterHeroDefaultPosReq.Uid)
}

// -------------------------------------------------------------------

// TFormationGetMasterHeroDefaultPosRsp

// optional uint32 Hid = 1;
inline bool TFormationGetMasterHeroDefaultPosRsp::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationGetMasterHeroDefaultPosRsp::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationGetMasterHeroDefaultPosRsp::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationGetMasterHeroDefaultPosRsp::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationGetMasterHeroDefaultPosRsp::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetMasterHeroDefaultPosRsp.Hid)
  return hid_;
}
inline void TFormationGetMasterHeroDefaultPosRsp::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetMasterHeroDefaultPosRsp.Hid)
}

// optional uint32 Pos = 2;
inline bool TFormationGetMasterHeroDefaultPosRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationGetMasterHeroDefaultPosRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationGetMasterHeroDefaultPosRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationGetMasterHeroDefaultPosRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TFormationGetMasterHeroDefaultPosRsp::pos() const {
  // @@protoc_insertion_point(field_get:pb.TFormationGetMasterHeroDefaultPosRsp.Pos)
  return pos_;
}
inline void TFormationGetMasterHeroDefaultPosRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationGetMasterHeroDefaultPosRsp.Pos)
}

// -------------------------------------------------------------------

// TFormationOfHeroInfo

// optional uint32 Hid = 1;
inline bool TFormationOfHeroInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFormationOfHeroInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFormationOfHeroInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFormationOfHeroInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TFormationOfHeroInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOfHeroInfo.Hid)
  return hid_;
}
inline void TFormationOfHeroInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationOfHeroInfo.Hid)
}

// optional .pb.EFormationType Formation = 2;
inline bool TFormationOfHeroInfo::has_formation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFormationOfHeroInfo::set_has_formation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFormationOfHeroInfo::clear_has_formation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFormationOfHeroInfo::clear_formation() {
  formation_ = 1;
  clear_has_formation();
}
inline ::pb::EFormationType TFormationOfHeroInfo::formation() const {
  // @@protoc_insertion_point(field_get:pb.TFormationOfHeroInfo.Formation)
  return static_cast< ::pb::EFormationType >(formation_);
}
inline void TFormationOfHeroInfo::set_formation(::pb::EFormationType value) {
  assert(::pb::EFormationType_IsValid(value));
  set_has_formation();
  formation_ = value;
  // @@protoc_insertion_point(field_set:pb.TFormationOfHeroInfo.Formation)
}

// -------------------------------------------------------------------

// TFormationOfHeroRsp

// repeated .pb.TFormationOfHeroInfo FormationOfHeroArr = 1;
inline int TFormationOfHeroRsp::formationofheroarr_size() const {
  return formationofheroarr_.size();
}
inline void TFormationOfHeroRsp::clear_formationofheroarr() {
  formationofheroarr_.Clear();
}
inline const ::pb::TFormationOfHeroInfo& TFormationOfHeroRsp::formationofheroarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFormationOfHeroRsp.FormationOfHeroArr)
  return formationofheroarr_.Get(index);
}
inline ::pb::TFormationOfHeroInfo* TFormationOfHeroRsp::mutable_formationofheroarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFormationOfHeroRsp.FormationOfHeroArr)
  return formationofheroarr_.Mutable(index);
}
inline ::pb::TFormationOfHeroInfo* TFormationOfHeroRsp::add_formationofheroarr() {
  // @@protoc_insertion_point(field_add:pb.TFormationOfHeroRsp.FormationOfHeroArr)
  return formationofheroarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFormationOfHeroInfo >&
TFormationOfHeroRsp::formationofheroarr() const {
  // @@protoc_insertion_point(field_list:pb.TFormationOfHeroRsp.FormationOfHeroArr)
  return formationofheroarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFormationOfHeroInfo >*
TFormationOfHeroRsp::mutable_formationofheroarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFormationOfHeroRsp.FormationOfHeroArr)
  return &formationofheroarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EFunctionId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EFunctionId>() {
  return ::pb::EFunctionId_descriptor();
}
template <> struct is_proto_enum< ::pb::EFormationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EFormationType>() {
  return ::pb::EFormationType_descriptor();
}
template <> struct is_proto_enum< ::pb::EHallType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EHallType>() {
  return ::pb::EHallType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fFormation_2eproto__INCLUDED
