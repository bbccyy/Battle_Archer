// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActQuoraRecharge.proto

#ifndef PROTOBUF_net_2fActQuoraRecharge_2eproto__INCLUDED
#define PROTOBUF_net_2fActQuoraRecharge_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

class TActQuoraRechargeReward;
class TActQuoraRechargeKey;
class TActQuoraRechargeGetInfoRsp;
class TActQuoraReceiveRewardReq;
class TActQuoraReceiveRewardRsp;
class TActQuoraRechargeNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActQuoraRechargeReward</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActQuoraRecharge.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActQuoraRechargeReward : public ::google::protobuf::Message {
 public:
  TActQuoraRechargeReward();
  virtual ~TActQuoraRechargeReward();

  TActQuoraRechargeReward(const TActQuoraRechargeReward& from);

  inline TActQuoraRechargeReward& operator=(const TActQuoraRechargeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActQuoraRechargeReward& default_instance();

  void Swap(TActQuoraRechargeReward* other);

  // implements Message ----------------------------------------------

  TActQuoraRechargeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActQuoraRechargeReward& from);
  void MergeFrom(const TActQuoraRechargeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeReward</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeReward</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActQuoraRechargeReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

  void InitAsDefaultInstance();
  static TActQuoraRechargeReward* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActQuoraRechargeKey</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActQuoraRecharge.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActQuoraRechargeKey : public ::google::protobuf::Message {
 public:
  TActQuoraRechargeKey();
  virtual ~TActQuoraRechargeKey();

  TActQuoraRechargeKey(const TActQuoraRechargeKey& from);

  inline TActQuoraRechargeKey& operator=(const TActQuoraRechargeKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActQuoraRechargeKey& default_instance();

  void Swap(TActQuoraRechargeKey* other);

  // implements Message ----------------------------------------------

  TActQuoraRechargeKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActQuoraRechargeKey& from);
  void MergeFrom(const TActQuoraRechargeKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RechargeId = 1;
  inline bool has_rechargeid() const;
  inline void clear_rechargeid();
  static const int kRechargeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeKey</name>
  	<Function>
  		<name>rechargeid</name>
  		<replaceName>RechargeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rechargeid</name>
  		<replaceName>RechargeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargeid</name>
  		<replaceName>RechargeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rechargeid() const;
  inline void set_rechargeid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeKey</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActQuoraRechargeKey)
 private:
  inline void set_has_rechargeid();
  inline void clear_has_rechargeid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rechargeid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

  void InitAsDefaultInstance();
  static TActQuoraRechargeKey* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActQuoraRechargeGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActQuoraRecharge.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActQuoraRechargeGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActQuoraRechargeGetInfoRsp();
  virtual ~TActQuoraRechargeGetInfoRsp();

  TActQuoraRechargeGetInfoRsp(const TActQuoraRechargeGetInfoRsp& from);

  inline TActQuoraRechargeGetInfoRsp& operator=(const TActQuoraRechargeGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActQuoraRechargeGetInfoRsp& default_instance();

  void Swap(TActQuoraRechargeGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActQuoraRechargeGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActQuoraRechargeGetInfoRsp& from);
  void MergeFrom(const TActQuoraRechargeGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActQuoraRechargeReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeGetInfoRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActQuoraRechargeReward& rewardarr(int index) const;
  inline ::pb::TActQuoraRechargeReward* mutable_rewardarr(int index);
  inline ::pb::TActQuoraRechargeReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeReward >*
      mutable_rewardarr();

  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 2;
  inline int rechargekeyarr_size() const;
  inline void clear_rechargekeyarr();
  static const int kRechargeKeyArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeGetInfoRsp</name>
  	<Function>
  		<name>rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rechargekeyarr_size</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActQuoraRechargeKey& rechargekeyarr(int index) const;
  inline ::pb::TActQuoraRechargeKey* mutable_rechargekeyarr(int index);
  inline ::pb::TActQuoraRechargeKey* add_rechargekeyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >&
      rechargekeyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >*
      mutable_rechargekeyarr();

  // @@protoc_insertion_point(class_scope:pb.TActQuoraRechargeGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeReward > rewardarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey > rechargekeyarr_;
  friend void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

  void InitAsDefaultInstance();
  static TActQuoraRechargeGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActQuoraReceiveRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActQuoraRecharge.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActQuoraReceiveRewardReq : public ::google::protobuf::Message {
 public:
  TActQuoraReceiveRewardReq();
  virtual ~TActQuoraReceiveRewardReq();

  TActQuoraReceiveRewardReq(const TActQuoraReceiveRewardReq& from);

  inline TActQuoraReceiveRewardReq& operator=(const TActQuoraReceiveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActQuoraReceiveRewardReq& default_instance();

  void Swap(TActQuoraReceiveRewardReq* other);

  // implements Message ----------------------------------------------

  TActQuoraReceiveRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActQuoraReceiveRewardReq& from);
  void MergeFrom(const TActQuoraReceiveRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraReceiveRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActQuoraReceiveRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

  void InitAsDefaultInstance();
  static TActQuoraReceiveRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActQuoraReceiveRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActQuoraRecharge.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActQuoraReceiveRewardRsp : public ::google::protobuf::Message {
 public:
  TActQuoraReceiveRewardRsp();
  virtual ~TActQuoraReceiveRewardRsp();

  TActQuoraReceiveRewardRsp(const TActQuoraReceiveRewardRsp& from);

  inline TActQuoraReceiveRewardRsp& operator=(const TActQuoraReceiveRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActQuoraReceiveRewardRsp& default_instance();

  void Swap(TActQuoraReceiveRewardRsp* other);

  // implements Message ----------------------------------------------

  TActQuoraReceiveRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActQuoraReceiveRewardRsp& from);
  void MergeFrom(const TActQuoraReceiveRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraReceiveRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TActQuoraReceiveRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

  void InitAsDefaultInstance();
  static TActQuoraReceiveRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActQuoraRechargeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActQuoraRecharge.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActQuoraRechargeNotify : public ::google::protobuf::Message {
 public:
  TActQuoraRechargeNotify();
  virtual ~TActQuoraRechargeNotify();

  TActQuoraRechargeNotify(const TActQuoraRechargeNotify& from);

  inline TActQuoraRechargeNotify& operator=(const TActQuoraRechargeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActQuoraRechargeNotify& default_instance();

  void Swap(TActQuoraRechargeNotify* other);

  // implements Message ----------------------------------------------

  TActQuoraRechargeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActQuoraRechargeNotify& from);
  void MergeFrom(const TActQuoraRechargeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 1;
  inline int rechargekeyarr_size() const;
  inline void clear_rechargekeyarr();
  static const int kRechargeKeyArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActQuoraRechargeNotify</name>
  	<Function>
  		<name>rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargekeyarr</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rechargekeyarr_size</name>
  		<replaceName>RechargeKeyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActQuoraRechargeKey& rechargekeyarr(int index) const;
  inline ::pb::TActQuoraRechargeKey* mutable_rechargekeyarr(int index);
  inline ::pb::TActQuoraRechargeKey* add_rechargekeyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >&
      rechargekeyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >*
      mutable_rechargekeyarr();

  // @@protoc_insertion_point(class_scope:pb.TActQuoraRechargeNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey > rechargekeyarr_;
  friend void  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto();
  friend void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto();

  void InitAsDefaultInstance();
  static TActQuoraRechargeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActQuoraRechargeReward

// optional uint32 Id = 1;
inline bool TActQuoraRechargeReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActQuoraRechargeReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActQuoraRechargeReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActQuoraRechargeReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActQuoraRechargeReward::id() const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeReward.Id)
  return id_;
}
inline void TActQuoraRechargeReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActQuoraRechargeReward.Id)
}

// optional uint32 Num = 2;
inline bool TActQuoraRechargeReward::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActQuoraRechargeReward::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActQuoraRechargeReward::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActQuoraRechargeReward::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActQuoraRechargeReward::num() const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeReward.Num)
  return num_;
}
inline void TActQuoraRechargeReward::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActQuoraRechargeReward.Num)
}

// -------------------------------------------------------------------

// TActQuoraRechargeKey

// optional uint32 RechargeId = 1;
inline bool TActQuoraRechargeKey::has_rechargeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActQuoraRechargeKey::set_has_rechargeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActQuoraRechargeKey::clear_has_rechargeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActQuoraRechargeKey::clear_rechargeid() {
  rechargeid_ = 0u;
  clear_has_rechargeid();
}
inline ::google::protobuf::uint32 TActQuoraRechargeKey::rechargeid() const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeKey.RechargeId)
  return rechargeid_;
}
inline void TActQuoraRechargeKey::set_rechargeid(::google::protobuf::uint32 value) {
  set_has_rechargeid();
  rechargeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActQuoraRechargeKey.RechargeId)
}

// optional uint32 Num = 2;
inline bool TActQuoraRechargeKey::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActQuoraRechargeKey::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActQuoraRechargeKey::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActQuoraRechargeKey::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActQuoraRechargeKey::num() const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeKey.Num)
  return num_;
}
inline void TActQuoraRechargeKey::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActQuoraRechargeKey.Num)
}

// -------------------------------------------------------------------

// TActQuoraRechargeGetInfoRsp

// repeated .pb.TActQuoraRechargeReward RewardArr = 1;
inline int TActQuoraRechargeGetInfoRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TActQuoraRechargeGetInfoRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TActQuoraRechargeReward& TActQuoraRechargeGetInfoRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeGetInfoRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TActQuoraRechargeReward* TActQuoraRechargeGetInfoRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActQuoraRechargeGetInfoRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TActQuoraRechargeReward* TActQuoraRechargeGetInfoRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TActQuoraRechargeGetInfoRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeReward >&
TActQuoraRechargeGetInfoRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TActQuoraRechargeGetInfoRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeReward >*
TActQuoraRechargeGetInfoRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActQuoraRechargeGetInfoRsp.RewardArr)
  return &rewardarr_;
}

// repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 2;
inline int TActQuoraRechargeGetInfoRsp::rechargekeyarr_size() const {
  return rechargekeyarr_.size();
}
inline void TActQuoraRechargeGetInfoRsp::clear_rechargekeyarr() {
  rechargekeyarr_.Clear();
}
inline const ::pb::TActQuoraRechargeKey& TActQuoraRechargeGetInfoRsp::rechargekeyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeGetInfoRsp.RechargeKeyArr)
  return rechargekeyarr_.Get(index);
}
inline ::pb::TActQuoraRechargeKey* TActQuoraRechargeGetInfoRsp::mutable_rechargekeyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActQuoraRechargeGetInfoRsp.RechargeKeyArr)
  return rechargekeyarr_.Mutable(index);
}
inline ::pb::TActQuoraRechargeKey* TActQuoraRechargeGetInfoRsp::add_rechargekeyarr() {
  // @@protoc_insertion_point(field_add:pb.TActQuoraRechargeGetInfoRsp.RechargeKeyArr)
  return rechargekeyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >&
TActQuoraRechargeGetInfoRsp::rechargekeyarr() const {
  // @@protoc_insertion_point(field_list:pb.TActQuoraRechargeGetInfoRsp.RechargeKeyArr)
  return rechargekeyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >*
TActQuoraRechargeGetInfoRsp::mutable_rechargekeyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActQuoraRechargeGetInfoRsp.RechargeKeyArr)
  return &rechargekeyarr_;
}

// -------------------------------------------------------------------

// TActQuoraReceiveRewardReq

// optional uint32 Id = 1;
inline bool TActQuoraReceiveRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActQuoraReceiveRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActQuoraReceiveRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActQuoraReceiveRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActQuoraReceiveRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraReceiveRewardReq.Id)
  return id_;
}
inline void TActQuoraReceiveRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActQuoraReceiveRewardReq.Id)
}

// -------------------------------------------------------------------

// TActQuoraReceiveRewardRsp

// repeated .pb.TCommonReward RewardArr = 1;
inline int TActQuoraReceiveRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TActQuoraReceiveRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TActQuoraReceiveRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraReceiveRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TActQuoraReceiveRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActQuoraReceiveRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TActQuoraReceiveRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TActQuoraReceiveRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActQuoraReceiveRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TActQuoraReceiveRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActQuoraReceiveRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActQuoraReceiveRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TActQuoraRechargeNotify

// repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 1;
inline int TActQuoraRechargeNotify::rechargekeyarr_size() const {
  return rechargekeyarr_.size();
}
inline void TActQuoraRechargeNotify::clear_rechargekeyarr() {
  rechargekeyarr_.Clear();
}
inline const ::pb::TActQuoraRechargeKey& TActQuoraRechargeNotify::rechargekeyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActQuoraRechargeNotify.RechargeKeyArr)
  return rechargekeyarr_.Get(index);
}
inline ::pb::TActQuoraRechargeKey* TActQuoraRechargeNotify::mutable_rechargekeyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActQuoraRechargeNotify.RechargeKeyArr)
  return rechargekeyarr_.Mutable(index);
}
inline ::pb::TActQuoraRechargeKey* TActQuoraRechargeNotify::add_rechargekeyarr() {
  // @@protoc_insertion_point(field_add:pb.TActQuoraRechargeNotify.RechargeKeyArr)
  return rechargekeyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >&
TActQuoraRechargeNotify::rechargekeyarr() const {
  // @@protoc_insertion_point(field_list:pb.TActQuoraRechargeNotify.RechargeKeyArr)
  return rechargekeyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActQuoraRechargeKey >*
TActQuoraRechargeNotify::mutable_rechargekeyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActQuoraRechargeNotify.RechargeKeyArr)
  return &rechargekeyarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActQuoraRecharge_2eproto__INCLUDED
