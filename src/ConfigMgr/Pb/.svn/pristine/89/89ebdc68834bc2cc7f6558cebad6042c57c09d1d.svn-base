// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActPresentLove.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActPresentLove.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActPresentLoveGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPresentLoveGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPresentLovePresentLoveRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPresentLovePresentLoveRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPresentLoveGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPresentLoveGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPresentLoveGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPresentLoveGetRewardRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActPresentLove_2eproto() {
  protobuf_AddDesc_net_2fActPresentLove_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActPresentLove.proto");
  GOOGLE_CHECK(file != NULL);
  TActPresentLoveGetInfoRsp_descriptor_ = file->message_type(0);
  static const int TActPresentLoveGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetInfoRsp, lovecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetInfoRsp, dailylovenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetInfoRsp, rewardidarr_),
  };
  TActPresentLoveGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPresentLoveGetInfoRsp_descriptor_,
      TActPresentLoveGetInfoRsp::default_instance_,
      TActPresentLoveGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPresentLoveGetInfoRsp));
  TActPresentLovePresentLoveRsp_descriptor_ = file->message_type(1);
  static const int TActPresentLovePresentLoveRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLovePresentLoveRsp, dailylovenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLovePresentLoveRsp, lovecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLovePresentLoveRsp, rewardarr_),
  };
  TActPresentLovePresentLoveRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPresentLovePresentLoveRsp_descriptor_,
      TActPresentLovePresentLoveRsp::default_instance_,
      TActPresentLovePresentLoveRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLovePresentLoveRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLovePresentLoveRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPresentLovePresentLoveRsp));
  TActPresentLoveGetRewardReq_descriptor_ = file->message_type(2);
  static const int TActPresentLoveGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetRewardReq, rewardid_),
  };
  TActPresentLoveGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPresentLoveGetRewardReq_descriptor_,
      TActPresentLoveGetRewardReq::default_instance_,
      TActPresentLoveGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPresentLoveGetRewardReq));
  TActPresentLoveGetRewardRsp_descriptor_ = file->message_type(3);
  static const int TActPresentLoveGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetRewardRsp, rewardarr_),
  };
  TActPresentLoveGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPresentLoveGetRewardRsp_descriptor_,
      TActPresentLoveGetRewardRsp::default_instance_,
      TActPresentLoveGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPresentLoveGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPresentLoveGetRewardRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActPresentLove_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPresentLoveGetInfoRsp_descriptor_, &TActPresentLoveGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPresentLovePresentLoveRsp_descriptor_, &TActPresentLovePresentLoveRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPresentLoveGetRewardReq_descriptor_, &TActPresentLoveGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPresentLoveGetRewardRsp_descriptor_, &TActPresentLoveGetRewardRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActPresentLove_2eproto() {
  delete TActPresentLoveGetInfoRsp::default_instance_;
  delete TActPresentLoveGetInfoRsp_reflection_;
  delete TActPresentLovePresentLoveRsp::default_instance_;
  delete TActPresentLovePresentLoveRsp_reflection_;
  delete TActPresentLoveGetRewardReq::default_instance_;
  delete TActPresentLoveGetRewardReq_reflection_;
  delete TActPresentLoveGetRewardRsp::default_instance_;
  delete TActPresentLoveGetRewardRsp_reflection_;
}

void protobuf_AddDesc_net_2fActPresentLove_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030net/ActPresentLove.proto\022\002pb\032\026net/Comm"
    "onReward.proto\"Y\n\031TActPresentLoveGetInfo"
    "Rsp\022\021\n\tLoveCount\030\001 \001(\004\022\024\n\014DailyLoveNum\030\002"
    " \001(\r\022\023\n\013RewardIdArr\030\003 \003(\r\"n\n\035TActPresent"
    "LovePresentLoveRsp\022\024\n\014DailyLoveNum\030\001 \001(\r"
    "\022\021\n\tLoveCount\030\002 \001(\004\022$\n\tRewardArr\030\003 \003(\0132\021"
    ".pb.TCommonReward\"/\n\033TActPresentLoveGetR"
    "ewardReq\022\020\n\010RewardId\030\001 \001(\r\"C\n\033TActPresen"
    "tLoveGetRewardRsp\022$\n\tRewardArr\030\003 \003(\0132\021.p"
    "b.TCommonReward", 375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActPresentLove.proto", &protobuf_RegisterTypes);
  TActPresentLoveGetInfoRsp::default_instance_ = new TActPresentLoveGetInfoRsp();
  TActPresentLovePresentLoveRsp::default_instance_ = new TActPresentLovePresentLoveRsp();
  TActPresentLoveGetRewardReq::default_instance_ = new TActPresentLoveGetRewardReq();
  TActPresentLoveGetRewardRsp::default_instance_ = new TActPresentLoveGetRewardRsp();
  TActPresentLoveGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActPresentLovePresentLoveRsp::default_instance_->InitAsDefaultInstance();
  TActPresentLoveGetRewardReq::default_instance_->InitAsDefaultInstance();
  TActPresentLoveGetRewardRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActPresentLove_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActPresentLove_2eproto {
  StaticDescriptorInitializer_net_2fActPresentLove_2eproto() {
    protobuf_AddDesc_net_2fActPresentLove_2eproto();
  }
} static_descriptor_initializer_net_2fActPresentLove_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActPresentLoveGetInfoRsp::kLoveCountFieldNumber;
const int TActPresentLoveGetInfoRsp::kDailyLoveNumFieldNumber;
const int TActPresentLoveGetInfoRsp::kRewardIdArrFieldNumber;
#endif  // !_MSC_VER

TActPresentLoveGetInfoRsp::TActPresentLoveGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPresentLoveGetInfoRsp)
}

void TActPresentLoveGetInfoRsp::InitAsDefaultInstance() {
}

TActPresentLoveGetInfoRsp::TActPresentLoveGetInfoRsp(const TActPresentLoveGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPresentLoveGetInfoRsp)
}

void TActPresentLoveGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  lovecount_ = GOOGLE_ULONGLONG(0);
  dailylovenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPresentLoveGetInfoRsp::~TActPresentLoveGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPresentLoveGetInfoRsp)
  SharedDtor();
}

void TActPresentLoveGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPresentLoveGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPresentLoveGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPresentLoveGetInfoRsp_descriptor_;
}

const TActPresentLoveGetInfoRsp& TActPresentLoveGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPresentLove_2eproto();
  return *default_instance_;
}

TActPresentLoveGetInfoRsp* TActPresentLoveGetInfoRsp::default_instance_ = NULL;

TActPresentLoveGetInfoRsp* TActPresentLoveGetInfoRsp::New() const {
  return new TActPresentLoveGetInfoRsp;
}

void TActPresentLoveGetInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    lovecount_ = GOOGLE_ULONGLONG(0);
    dailylovenum_ = 0u;
  }
  rewardidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPresentLoveGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPresentLoveGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 LoveCount = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lovecount_)));
          set_has_lovecount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DailyLoveNum;
        break;
      }

      // optional uint32 DailyLoveNum = 2;
      case 2: {
        if (tag == 16) {
         parse_DailyLoveNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dailylovenum_)));
          set_has_dailylovenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        break;
      }

      // repeated uint32 RewardIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_RewardIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_rewardidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPresentLoveGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPresentLoveGetInfoRsp)
  return false;
#undef DO_
}

void TActPresentLoveGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPresentLoveGetInfoRsp)
  // optional uint64 LoveCount = 1;
  if (has_lovecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lovecount(), output);
  }

  // optional uint32 DailyLoveNum = 2;
  if (has_dailylovenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dailylovenum(), output);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->rewardidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPresentLoveGetInfoRsp)
}

::google::protobuf::uint8* TActPresentLoveGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPresentLoveGetInfoRsp)
  // optional uint64 LoveCount = 1;
  if (has_lovecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lovecount(), target);
  }

  // optional uint32 DailyLoveNum = 2;
  if (has_dailylovenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dailylovenum(), target);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->rewardidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPresentLoveGetInfoRsp)
  return target;
}

int TActPresentLoveGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 LoveCount = 1;
    if (has_lovecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lovecount());
    }

    // optional uint32 DailyLoveNum = 2;
    if (has_dailylovenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dailylovenum());
    }

  }
  // repeated uint32 RewardIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardidarr(i));
    }
    total_size += 1 * this->rewardidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPresentLoveGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPresentLoveGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPresentLoveGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPresentLoveGetInfoRsp::MergeFrom(const TActPresentLoveGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardidarr_.MergeFrom(from.rewardidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lovecount()) {
      set_lovecount(from.lovecount());
    }
    if (from.has_dailylovenum()) {
      set_dailylovenum(from.dailylovenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPresentLoveGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPresentLoveGetInfoRsp::CopyFrom(const TActPresentLoveGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPresentLoveGetInfoRsp::IsInitialized() const {

  return true;
}

void TActPresentLoveGetInfoRsp::Swap(TActPresentLoveGetInfoRsp* other) {
  if (other != this) {
    std::swap(lovecount_, other->lovecount_);
    std::swap(dailylovenum_, other->dailylovenum_);
    rewardidarr_.Swap(&other->rewardidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPresentLoveGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPresentLoveGetInfoRsp_descriptor_;
  metadata.reflection = TActPresentLoveGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPresentLovePresentLoveRsp::kDailyLoveNumFieldNumber;
const int TActPresentLovePresentLoveRsp::kLoveCountFieldNumber;
const int TActPresentLovePresentLoveRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TActPresentLovePresentLoveRsp::TActPresentLovePresentLoveRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPresentLovePresentLoveRsp)
}

void TActPresentLovePresentLoveRsp::InitAsDefaultInstance() {
}

TActPresentLovePresentLoveRsp::TActPresentLovePresentLoveRsp(const TActPresentLovePresentLoveRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPresentLovePresentLoveRsp)
}

void TActPresentLovePresentLoveRsp::SharedCtor() {
  _cached_size_ = 0;
  dailylovenum_ = 0u;
  lovecount_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPresentLovePresentLoveRsp::~TActPresentLovePresentLoveRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPresentLovePresentLoveRsp)
  SharedDtor();
}

void TActPresentLovePresentLoveRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPresentLovePresentLoveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPresentLovePresentLoveRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPresentLovePresentLoveRsp_descriptor_;
}

const TActPresentLovePresentLoveRsp& TActPresentLovePresentLoveRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPresentLove_2eproto();
  return *default_instance_;
}

TActPresentLovePresentLoveRsp* TActPresentLovePresentLoveRsp::default_instance_ = NULL;

TActPresentLovePresentLoveRsp* TActPresentLovePresentLoveRsp::New() const {
  return new TActPresentLovePresentLoveRsp;
}

void TActPresentLovePresentLoveRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    dailylovenum_ = 0u;
    lovecount_ = GOOGLE_ULONGLONG(0);
  }
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPresentLovePresentLoveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPresentLovePresentLoveRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DailyLoveNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dailylovenum_)));
          set_has_dailylovenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LoveCount;
        break;
      }

      // optional uint64 LoveCount = 2;
      case 2: {
        if (tag == 16) {
         parse_LoveCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lovecount_)));
          set_has_lovecount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TCommonReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPresentLovePresentLoveRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPresentLovePresentLoveRsp)
  return false;
#undef DO_
}

void TActPresentLovePresentLoveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPresentLovePresentLoveRsp)
  // optional uint32 DailyLoveNum = 1;
  if (has_dailylovenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dailylovenum(), output);
  }

  // optional uint64 LoveCount = 2;
  if (has_lovecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lovecount(), output);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPresentLovePresentLoveRsp)
}

::google::protobuf::uint8* TActPresentLovePresentLoveRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPresentLovePresentLoveRsp)
  // optional uint32 DailyLoveNum = 1;
  if (has_dailylovenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dailylovenum(), target);
  }

  // optional uint64 LoveCount = 2;
  if (has_lovecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lovecount(), target);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPresentLovePresentLoveRsp)
  return target;
}

int TActPresentLovePresentLoveRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 DailyLoveNum = 1;
    if (has_dailylovenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dailylovenum());
    }

    // optional uint64 LoveCount = 2;
    if (has_lovecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lovecount());
    }

  }
  // repeated .pb.TCommonReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPresentLovePresentLoveRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPresentLovePresentLoveRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPresentLovePresentLoveRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPresentLovePresentLoveRsp::MergeFrom(const TActPresentLovePresentLoveRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dailylovenum()) {
      set_dailylovenum(from.dailylovenum());
    }
    if (from.has_lovecount()) {
      set_lovecount(from.lovecount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPresentLovePresentLoveRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPresentLovePresentLoveRsp::CopyFrom(const TActPresentLovePresentLoveRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPresentLovePresentLoveRsp::IsInitialized() const {

  return true;
}

void TActPresentLovePresentLoveRsp::Swap(TActPresentLovePresentLoveRsp* other) {
  if (other != this) {
    std::swap(dailylovenum_, other->dailylovenum_);
    std::swap(lovecount_, other->lovecount_);
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPresentLovePresentLoveRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPresentLovePresentLoveRsp_descriptor_;
  metadata.reflection = TActPresentLovePresentLoveRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPresentLoveGetRewardReq::kRewardIdFieldNumber;
#endif  // !_MSC_VER

TActPresentLoveGetRewardReq::TActPresentLoveGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPresentLoveGetRewardReq)
}

void TActPresentLoveGetRewardReq::InitAsDefaultInstance() {
}

TActPresentLoveGetRewardReq::TActPresentLoveGetRewardReq(const TActPresentLoveGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPresentLoveGetRewardReq)
}

void TActPresentLoveGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  rewardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPresentLoveGetRewardReq::~TActPresentLoveGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActPresentLoveGetRewardReq)
  SharedDtor();
}

void TActPresentLoveGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPresentLoveGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPresentLoveGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPresentLoveGetRewardReq_descriptor_;
}

const TActPresentLoveGetRewardReq& TActPresentLoveGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPresentLove_2eproto();
  return *default_instance_;
}

TActPresentLoveGetRewardReq* TActPresentLoveGetRewardReq::default_instance_ = NULL;

TActPresentLoveGetRewardReq* TActPresentLoveGetRewardReq::New() const {
  return new TActPresentLoveGetRewardReq;
}

void TActPresentLoveGetRewardReq::Clear() {
  rewardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPresentLoveGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPresentLoveGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RewardId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPresentLoveGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPresentLoveGetRewardReq)
  return false;
#undef DO_
}

void TActPresentLoveGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPresentLoveGetRewardReq)
  // optional uint32 RewardId = 1;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rewardid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPresentLoveGetRewardReq)
}

::google::protobuf::uint8* TActPresentLoveGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPresentLoveGetRewardReq)
  // optional uint32 RewardId = 1;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rewardid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPresentLoveGetRewardReq)
  return target;
}

int TActPresentLoveGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RewardId = 1;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPresentLoveGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPresentLoveGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPresentLoveGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPresentLoveGetRewardReq::MergeFrom(const TActPresentLoveGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPresentLoveGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPresentLoveGetRewardReq::CopyFrom(const TActPresentLoveGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPresentLoveGetRewardReq::IsInitialized() const {

  return true;
}

void TActPresentLoveGetRewardReq::Swap(TActPresentLoveGetRewardReq* other) {
  if (other != this) {
    std::swap(rewardid_, other->rewardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPresentLoveGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPresentLoveGetRewardReq_descriptor_;
  metadata.reflection = TActPresentLoveGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPresentLoveGetRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TActPresentLoveGetRewardRsp::TActPresentLoveGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPresentLoveGetRewardRsp)
}

void TActPresentLoveGetRewardRsp::InitAsDefaultInstance() {
}

TActPresentLoveGetRewardRsp::TActPresentLoveGetRewardRsp(const TActPresentLoveGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPresentLoveGetRewardRsp)
}

void TActPresentLoveGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPresentLoveGetRewardRsp::~TActPresentLoveGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPresentLoveGetRewardRsp)
  SharedDtor();
}

void TActPresentLoveGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPresentLoveGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPresentLoveGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPresentLoveGetRewardRsp_descriptor_;
}

const TActPresentLoveGetRewardRsp& TActPresentLoveGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPresentLove_2eproto();
  return *default_instance_;
}

TActPresentLoveGetRewardRsp* TActPresentLoveGetRewardRsp::default_instance_ = NULL;

TActPresentLoveGetRewardRsp* TActPresentLoveGetRewardRsp::New() const {
  return new TActPresentLoveGetRewardRsp;
}

void TActPresentLoveGetRewardRsp::Clear() {
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPresentLoveGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPresentLoveGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPresentLoveGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPresentLoveGetRewardRsp)
  return false;
#undef DO_
}

void TActPresentLoveGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPresentLoveGetRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPresentLoveGetRewardRsp)
}

::google::protobuf::uint8* TActPresentLoveGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPresentLoveGetRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPresentLoveGetRewardRsp)
  return target;
}

int TActPresentLoveGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPresentLoveGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPresentLoveGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPresentLoveGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPresentLoveGetRewardRsp::MergeFrom(const TActPresentLoveGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPresentLoveGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPresentLoveGetRewardRsp::CopyFrom(const TActPresentLoveGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPresentLoveGetRewardRsp::IsInitialized() const {

  return true;
}

void TActPresentLoveGetRewardRsp::Swap(TActPresentLoveGetRewardRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPresentLoveGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPresentLoveGetRewardRsp_descriptor_;
  metadata.reflection = TActPresentLoveGetRewardRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
