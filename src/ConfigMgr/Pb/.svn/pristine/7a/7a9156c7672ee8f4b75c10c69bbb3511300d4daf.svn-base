// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActPictureScroll.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActPictureScroll.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActPictureScrollGetPropsInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetPropsInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollSingleLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollSingleLayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollLightUpPropsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollLightUpPropsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetLightUpPropsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetLightUpPropsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetLightUpPropsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetLightUpPropsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskWeightsInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetTaskWeightsInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollTaskWeights_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollTaskWeights_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetTaskInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetTaskRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollGetTaskRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollLotteryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollLotteryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollLotteryRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollLotteryRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollTransformPropsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollTransformPropsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollTransformPropsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollTransformPropsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActPictureScrollNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActPictureScrollNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActPictureScroll_2eproto() {
  protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActPictureScroll.proto");
  GOOGLE_CHECK(file != NULL);
  TActPictureScrollGetPropsInfoRsp_descriptor_ = file->message_type(0);
  static const int TActPictureScrollGetPropsInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetPropsInfoRsp, propsinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetPropsInfoRsp, scorerewardinfo_),
  };
  TActPictureScrollGetPropsInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetPropsInfoRsp_descriptor_,
      TActPictureScrollGetPropsInfoRsp::default_instance_,
      TActPictureScrollGetPropsInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetPropsInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetPropsInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetPropsInfoRsp));
  TActPictureScrollSingleLayer_descriptor_ = file->message_type(1);
  static const int TActPictureScrollSingleLayer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollSingleLayer, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollSingleLayer, lightuptime_),
  };
  TActPictureScrollSingleLayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollSingleLayer_descriptor_,
      TActPictureScrollSingleLayer::default_instance_,
      TActPictureScrollSingleLayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollSingleLayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollSingleLayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollSingleLayer));
  TActPictureScrollLightUpPropsReq_descriptor_ = file->message_type(2);
  static const int TActPictureScrollLightUpPropsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLightUpPropsReq, id_),
  };
  TActPictureScrollLightUpPropsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollLightUpPropsReq_descriptor_,
      TActPictureScrollLightUpPropsReq::default_instance_,
      TActPictureScrollLightUpPropsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLightUpPropsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLightUpPropsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollLightUpPropsReq));
  TActPictureScrollGetLightUpPropsReq_descriptor_ = file->message_type(3);
  static const int TActPictureScrollGetLightUpPropsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetLightUpPropsReq, id_),
  };
  TActPictureScrollGetLightUpPropsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetLightUpPropsReq_descriptor_,
      TActPictureScrollGetLightUpPropsReq::default_instance_,
      TActPictureScrollGetLightUpPropsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetLightUpPropsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetLightUpPropsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetLightUpPropsReq));
  TActPictureScrollGetLightUpPropsRsp_descriptor_ = file->message_type(4);
  static const int TActPictureScrollGetLightUpPropsRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetLightUpPropsRsp, arrreward_),
  };
  TActPictureScrollGetLightUpPropsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetLightUpPropsRsp_descriptor_,
      TActPictureScrollGetLightUpPropsRsp::default_instance_,
      TActPictureScrollGetLightUpPropsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetLightUpPropsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetLightUpPropsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetLightUpPropsRsp));
  TActPictureScrollGetTaskWeightsInfoRsp_descriptor_ = file->message_type(5);
  static const int TActPictureScrollGetTaskWeightsInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskWeightsInfoRsp, taskweightsinfo_),
  };
  TActPictureScrollGetTaskWeightsInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetTaskWeightsInfoRsp_descriptor_,
      TActPictureScrollGetTaskWeightsInfoRsp::default_instance_,
      TActPictureScrollGetTaskWeightsInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskWeightsInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskWeightsInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetTaskWeightsInfoRsp));
  TActPictureScrollTaskWeights_descriptor_ = file->message_type(6);
  static const int TActPictureScrollTaskWeights_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTaskWeights, id_),
  };
  TActPictureScrollTaskWeights_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollTaskWeights_descriptor_,
      TActPictureScrollTaskWeights::default_instance_,
      TActPictureScrollTaskWeights_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTaskWeights, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTaskWeights, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollTaskWeights));
  TActPictureScrollGetTaskInfoRsp_descriptor_ = file->message_type(7);
  static const int TActPictureScrollGetTaskInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfoRsp, taskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfoRsp, arrtaskrewardinfo_),
  };
  TActPictureScrollGetTaskInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetTaskInfoRsp_descriptor_,
      TActPictureScrollGetTaskInfoRsp::default_instance_,
      TActPictureScrollGetTaskInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetTaskInfoRsp));
  TActPictureScrollGetTaskInfo_descriptor_ = file->message_type(8);
  static const int TActPictureScrollGetTaskInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfo, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfo, num_),
  };
  TActPictureScrollGetTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetTaskInfo_descriptor_,
      TActPictureScrollGetTaskInfo::default_instance_,
      TActPictureScrollGetTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetTaskInfo));
  TActPictureScrollGetTaskRewardReq_descriptor_ = file->message_type(9);
  static const int TActPictureScrollGetTaskRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskRewardReq, taskid_),
  };
  TActPictureScrollGetTaskRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetTaskRewardReq_descriptor_,
      TActPictureScrollGetTaskRewardReq::default_instance_,
      TActPictureScrollGetTaskRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetTaskRewardReq));
  TActPictureScrollGetTaskRewardRsp_descriptor_ = file->message_type(10);
  static const int TActPictureScrollGetTaskRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskRewardRsp, arrreward_),
  };
  TActPictureScrollGetTaskRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollGetTaskRewardRsp_descriptor_,
      TActPictureScrollGetTaskRewardRsp::default_instance_,
      TActPictureScrollGetTaskRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollGetTaskRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollGetTaskRewardRsp));
  TActPictureScrollLotteryReq_descriptor_ = file->message_type(11);
  static const int TActPictureScrollLotteryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryReq, drawnum_),
  };
  TActPictureScrollLotteryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollLotteryReq_descriptor_,
      TActPictureScrollLotteryReq::default_instance_,
      TActPictureScrollLotteryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollLotteryReq));
  TActPictureScrollLotteryRsp_descriptor_ = file->message_type(12);
  static const int TActPictureScrollLotteryRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryRsp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryRsp, arrreward_),
  };
  TActPictureScrollLotteryRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollLotteryRsp_descriptor_,
      TActPictureScrollLotteryRsp::default_instance_,
      TActPictureScrollLotteryRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollLotteryRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollLotteryRsp));
  TActPictureScrollTransformPropsReq_descriptor_ = file->message_type(13);
  static const int TActPictureScrollTransformPropsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTransformPropsReq, num_),
  };
  TActPictureScrollTransformPropsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollTransformPropsReq_descriptor_,
      TActPictureScrollTransformPropsReq::default_instance_,
      TActPictureScrollTransformPropsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTransformPropsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTransformPropsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollTransformPropsReq));
  TActPictureScrollTransformPropsRsp_descriptor_ = file->message_type(14);
  static const int TActPictureScrollTransformPropsRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTransformPropsRsp, arrreward_),
  };
  TActPictureScrollTransformPropsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollTransformPropsRsp_descriptor_,
      TActPictureScrollTransformPropsRsp::default_instance_,
      TActPictureScrollTransformPropsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTransformPropsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollTransformPropsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollTransformPropsRsp));
  TActPictureScrollNotify_descriptor_ = file->message_type(15);
  static const int TActPictureScrollNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollNotify, arrtaskinfo_),
  };
  TActPictureScrollNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActPictureScrollNotify_descriptor_,
      TActPictureScrollNotify::default_instance_,
      TActPictureScrollNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActPictureScrollNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActPictureScrollNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActPictureScroll_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetPropsInfoRsp_descriptor_, &TActPictureScrollGetPropsInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollSingleLayer_descriptor_, &TActPictureScrollSingleLayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollLightUpPropsReq_descriptor_, &TActPictureScrollLightUpPropsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetLightUpPropsReq_descriptor_, &TActPictureScrollGetLightUpPropsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetLightUpPropsRsp_descriptor_, &TActPictureScrollGetLightUpPropsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetTaskWeightsInfoRsp_descriptor_, &TActPictureScrollGetTaskWeightsInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollTaskWeights_descriptor_, &TActPictureScrollTaskWeights::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetTaskInfoRsp_descriptor_, &TActPictureScrollGetTaskInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetTaskInfo_descriptor_, &TActPictureScrollGetTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetTaskRewardReq_descriptor_, &TActPictureScrollGetTaskRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollGetTaskRewardRsp_descriptor_, &TActPictureScrollGetTaskRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollLotteryReq_descriptor_, &TActPictureScrollLotteryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollLotteryRsp_descriptor_, &TActPictureScrollLotteryRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollTransformPropsReq_descriptor_, &TActPictureScrollTransformPropsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollTransformPropsRsp_descriptor_, &TActPictureScrollTransformPropsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActPictureScrollNotify_descriptor_, &TActPictureScrollNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActPictureScroll_2eproto() {
  delete TActPictureScrollGetPropsInfoRsp::default_instance_;
  delete TActPictureScrollGetPropsInfoRsp_reflection_;
  delete TActPictureScrollSingleLayer::default_instance_;
  delete TActPictureScrollSingleLayer_reflection_;
  delete TActPictureScrollLightUpPropsReq::default_instance_;
  delete TActPictureScrollLightUpPropsReq_reflection_;
  delete TActPictureScrollGetLightUpPropsReq::default_instance_;
  delete TActPictureScrollGetLightUpPropsReq_reflection_;
  delete TActPictureScrollGetLightUpPropsRsp::default_instance_;
  delete TActPictureScrollGetLightUpPropsRsp_reflection_;
  delete TActPictureScrollGetTaskWeightsInfoRsp::default_instance_;
  delete TActPictureScrollGetTaskWeightsInfoRsp_reflection_;
  delete TActPictureScrollTaskWeights::default_instance_;
  delete TActPictureScrollTaskWeights_reflection_;
  delete TActPictureScrollGetTaskInfoRsp::default_instance_;
  delete TActPictureScrollGetTaskInfoRsp_reflection_;
  delete TActPictureScrollGetTaskInfo::default_instance_;
  delete TActPictureScrollGetTaskInfo_reflection_;
  delete TActPictureScrollGetTaskRewardReq::default_instance_;
  delete TActPictureScrollGetTaskRewardReq_reflection_;
  delete TActPictureScrollGetTaskRewardRsp::default_instance_;
  delete TActPictureScrollGetTaskRewardRsp_reflection_;
  delete TActPictureScrollLotteryReq::default_instance_;
  delete TActPictureScrollLotteryReq_reflection_;
  delete TActPictureScrollLotteryRsp::default_instance_;
  delete TActPictureScrollLotteryRsp_reflection_;
  delete TActPictureScrollTransformPropsReq::default_instance_;
  delete TActPictureScrollTransformPropsReq_reflection_;
  delete TActPictureScrollTransformPropsRsp::default_instance_;
  delete TActPictureScrollTransformPropsRsp_reflection_;
  delete TActPictureScrollNotify::default_instance_;
  delete TActPictureScrollNotify_reflection_;
}

void protobuf_AddDesc_net_2fActPictureScroll_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fOpenActivity_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032net/ActPictureScroll.proto\022\002pb\032\026net/Op"
    "enActivity.proto\032\026net/CommonReward.proto"
    "\"\211\001\n TActPictureScrollGetPropsInfoRsp\0223\n"
    "\tPropsInfo\030\001 \003(\0132 .pb.TActPictureScrollS"
    "ingleLayer\0220\n\017ScoreRewardInfo\030\002 \003(\0132\027.pb"
    ".TActivityRewardInfo\"\?\n\034TActPictureScrol"
    "lSingleLayer\022\n\n\002Id\030\001 \001(\r\022\023\n\013LightUpTime\030"
    "\002 \001(\004\".\n TActPictureScrollLightUpPropsRe"
    "q\022\n\n\002Id\030\001 \001(\r\"1\n#TActPictureScrollGetLig"
    "htUpPropsReq\022\n\n\002Id\030\001 \001(\r\"K\n#TActPictureS"
    "crollGetLightUpPropsRsp\022$\n\tArrReward\030\001 \003"
    "(\0132\021.pb.TCommonReward\"c\n&TActPictureScro"
    "llGetTaskWeightsInfoRsp\0229\n\017TaskWeightsIn"
    "fo\030\001 \003(\0132 .pb.TActPictureScrollTaskWeigh"
    "ts\"*\n\034TActPictureScrollTaskWeights\022\n\n\002Id"
    "\030\001 \001(\r\"\211\001\n\037TActPictureScrollGetTaskInfoR"
    "sp\0222\n\010TaskInfo\030\001 \003(\0132 .pb.TActPictureScr"
    "ollGetTaskInfo\0222\n\021ArrTaskRewardInfo\030\002 \003("
    "\0132\027.pb.TActivityRewardInfo\"I\n\034TActPictur"
    "eScrollGetTaskInfo\022\n\n\002ID\030\001 \001(\r\022\020\n\010TaskTy"
    "pe\030\002 \001(\r\022\013\n\003Num\030\003 \001(\r\"3\n!TActPictureScro"
    "llGetTaskRewardReq\022\016\n\006TaskId\030\001 \001(\r\"I\n!TA"
    "ctPictureScrollGetTaskRewardRsp\022$\n\tArrRe"
    "ward\030\001 \003(\0132\021.pb.TCommonReward\".\n\033TActPic"
    "tureScrollLotteryReq\022\017\n\007DrawNum\030\001 \001(\r\"O\n"
    "\033TActPictureScrollLotteryRsp\022\n\n\002Id\030\001 \001(\r"
    "\022$\n\tArrReward\030\002 \003(\0132\021.pb.TCommonReward\"1"
    "\n\"TActPictureScrollTransformPropsReq\022\013\n\003"
    "Num\030\001 \001(\r\"J\n\"TActPictureScrollTransformP"
    "ropsRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonR"
    "eward\"P\n\027TActPictureScrollNotify\0225\n\013ArrT"
    "askInfo\030\001 \003(\0132 .pb.TActPictureScrollGetT"
    "askInfo", 1287);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActPictureScroll.proto", &protobuf_RegisterTypes);
  TActPictureScrollGetPropsInfoRsp::default_instance_ = new TActPictureScrollGetPropsInfoRsp();
  TActPictureScrollSingleLayer::default_instance_ = new TActPictureScrollSingleLayer();
  TActPictureScrollLightUpPropsReq::default_instance_ = new TActPictureScrollLightUpPropsReq();
  TActPictureScrollGetLightUpPropsReq::default_instance_ = new TActPictureScrollGetLightUpPropsReq();
  TActPictureScrollGetLightUpPropsRsp::default_instance_ = new TActPictureScrollGetLightUpPropsRsp();
  TActPictureScrollGetTaskWeightsInfoRsp::default_instance_ = new TActPictureScrollGetTaskWeightsInfoRsp();
  TActPictureScrollTaskWeights::default_instance_ = new TActPictureScrollTaskWeights();
  TActPictureScrollGetTaskInfoRsp::default_instance_ = new TActPictureScrollGetTaskInfoRsp();
  TActPictureScrollGetTaskInfo::default_instance_ = new TActPictureScrollGetTaskInfo();
  TActPictureScrollGetTaskRewardReq::default_instance_ = new TActPictureScrollGetTaskRewardReq();
  TActPictureScrollGetTaskRewardRsp::default_instance_ = new TActPictureScrollGetTaskRewardRsp();
  TActPictureScrollLotteryReq::default_instance_ = new TActPictureScrollLotteryReq();
  TActPictureScrollLotteryRsp::default_instance_ = new TActPictureScrollLotteryRsp();
  TActPictureScrollTransformPropsReq::default_instance_ = new TActPictureScrollTransformPropsReq();
  TActPictureScrollTransformPropsRsp::default_instance_ = new TActPictureScrollTransformPropsRsp();
  TActPictureScrollNotify::default_instance_ = new TActPictureScrollNotify();
  TActPictureScrollGetPropsInfoRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollSingleLayer::default_instance_->InitAsDefaultInstance();
  TActPictureScrollLightUpPropsReq::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetLightUpPropsReq::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetLightUpPropsRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetTaskWeightsInfoRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollTaskWeights::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetTaskInfoRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetTaskInfo::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetTaskRewardReq::default_instance_->InitAsDefaultInstance();
  TActPictureScrollGetTaskRewardRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollLotteryReq::default_instance_->InitAsDefaultInstance();
  TActPictureScrollLotteryRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollTransformPropsReq::default_instance_->InitAsDefaultInstance();
  TActPictureScrollTransformPropsRsp::default_instance_->InitAsDefaultInstance();
  TActPictureScrollNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActPictureScroll_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActPictureScroll_2eproto {
  StaticDescriptorInitializer_net_2fActPictureScroll_2eproto() {
    protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  }
} static_descriptor_initializer_net_2fActPictureScroll_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetPropsInfoRsp::kPropsInfoFieldNumber;
const int TActPictureScrollGetPropsInfoRsp::kScoreRewardInfoFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetPropsInfoRsp::TActPictureScrollGetPropsInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetPropsInfoRsp)
}

void TActPictureScrollGetPropsInfoRsp::InitAsDefaultInstance() {
}

TActPictureScrollGetPropsInfoRsp::TActPictureScrollGetPropsInfoRsp(const TActPictureScrollGetPropsInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetPropsInfoRsp)
}

void TActPictureScrollGetPropsInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetPropsInfoRsp::~TActPictureScrollGetPropsInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetPropsInfoRsp)
  SharedDtor();
}

void TActPictureScrollGetPropsInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetPropsInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetPropsInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetPropsInfoRsp_descriptor_;
}

const TActPictureScrollGetPropsInfoRsp& TActPictureScrollGetPropsInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetPropsInfoRsp* TActPictureScrollGetPropsInfoRsp::default_instance_ = NULL;

TActPictureScrollGetPropsInfoRsp* TActPictureScrollGetPropsInfoRsp::New() const {
  return new TActPictureScrollGetPropsInfoRsp;
}

void TActPictureScrollGetPropsInfoRsp::Clear() {
  propsinfo_.Clear();
  scorerewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetPropsInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetPropsInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActPictureScrollSingleLayer PropsInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_PropsInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_propsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_PropsInfo;
        if (input->ExpectTag(18)) goto parse_ScoreRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ScoreRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ScoreRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scorerewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ScoreRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetPropsInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetPropsInfoRsp)
  return false;
#undef DO_
}

void TActPictureScrollGetPropsInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetPropsInfoRsp)
  // repeated .pb.TActPictureScrollSingleLayer PropsInfo = 1;
  for (int i = 0; i < this->propsinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->propsinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ScoreRewardInfo = 2;
  for (int i = 0; i < this->scorerewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->scorerewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetPropsInfoRsp)
}

::google::protobuf::uint8* TActPictureScrollGetPropsInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetPropsInfoRsp)
  // repeated .pb.TActPictureScrollSingleLayer PropsInfo = 1;
  for (int i = 0; i < this->propsinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->propsinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ScoreRewardInfo = 2;
  for (int i = 0; i < this->scorerewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->scorerewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetPropsInfoRsp)
  return target;
}

int TActPictureScrollGetPropsInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActPictureScrollSingleLayer PropsInfo = 1;
  total_size += 1 * this->propsinfo_size();
  for (int i = 0; i < this->propsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->propsinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ScoreRewardInfo = 2;
  total_size += 1 * this->scorerewardinfo_size();
  for (int i = 0; i < this->scorerewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->scorerewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetPropsInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetPropsInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetPropsInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetPropsInfoRsp::MergeFrom(const TActPictureScrollGetPropsInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  propsinfo_.MergeFrom(from.propsinfo_);
  scorerewardinfo_.MergeFrom(from.scorerewardinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetPropsInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetPropsInfoRsp::CopyFrom(const TActPictureScrollGetPropsInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetPropsInfoRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollGetPropsInfoRsp::Swap(TActPictureScrollGetPropsInfoRsp* other) {
  if (other != this) {
    propsinfo_.Swap(&other->propsinfo_);
    scorerewardinfo_.Swap(&other->scorerewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetPropsInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetPropsInfoRsp_descriptor_;
  metadata.reflection = TActPictureScrollGetPropsInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollSingleLayer::kIdFieldNumber;
const int TActPictureScrollSingleLayer::kLightUpTimeFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollSingleLayer::TActPictureScrollSingleLayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollSingleLayer)
}

void TActPictureScrollSingleLayer::InitAsDefaultInstance() {
}

TActPictureScrollSingleLayer::TActPictureScrollSingleLayer(const TActPictureScrollSingleLayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollSingleLayer)
}

void TActPictureScrollSingleLayer::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  lightuptime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollSingleLayer::~TActPictureScrollSingleLayer() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollSingleLayer)
  SharedDtor();
}

void TActPictureScrollSingleLayer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollSingleLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollSingleLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollSingleLayer_descriptor_;
}

const TActPictureScrollSingleLayer& TActPictureScrollSingleLayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollSingleLayer* TActPictureScrollSingleLayer::default_instance_ = NULL;

TActPictureScrollSingleLayer* TActPictureScrollSingleLayer::New() const {
  return new TActPictureScrollSingleLayer;
}

void TActPictureScrollSingleLayer::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActPictureScrollSingleLayer*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(lightuptime_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollSingleLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollSingleLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LightUpTime;
        break;
      }

      // optional uint64 LightUpTime = 2;
      case 2: {
        if (tag == 16) {
         parse_LightUpTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lightuptime_)));
          set_has_lightuptime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollSingleLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollSingleLayer)
  return false;
#undef DO_
}

void TActPictureScrollSingleLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollSingleLayer)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 LightUpTime = 2;
  if (has_lightuptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lightuptime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollSingleLayer)
}

::google::protobuf::uint8* TActPictureScrollSingleLayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollSingleLayer)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 LightUpTime = 2;
  if (has_lightuptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lightuptime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollSingleLayer)
  return target;
}

int TActPictureScrollSingleLayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 LightUpTime = 2;
    if (has_lightuptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lightuptime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollSingleLayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollSingleLayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollSingleLayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollSingleLayer::MergeFrom(const TActPictureScrollSingleLayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_lightuptime()) {
      set_lightuptime(from.lightuptime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollSingleLayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollSingleLayer::CopyFrom(const TActPictureScrollSingleLayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollSingleLayer::IsInitialized() const {

  return true;
}

void TActPictureScrollSingleLayer::Swap(TActPictureScrollSingleLayer* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(lightuptime_, other->lightuptime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollSingleLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollSingleLayer_descriptor_;
  metadata.reflection = TActPictureScrollSingleLayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollLightUpPropsReq::kIdFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollLightUpPropsReq::TActPictureScrollLightUpPropsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollLightUpPropsReq)
}

void TActPictureScrollLightUpPropsReq::InitAsDefaultInstance() {
}

TActPictureScrollLightUpPropsReq::TActPictureScrollLightUpPropsReq(const TActPictureScrollLightUpPropsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollLightUpPropsReq)
}

void TActPictureScrollLightUpPropsReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollLightUpPropsReq::~TActPictureScrollLightUpPropsReq() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollLightUpPropsReq)
  SharedDtor();
}

void TActPictureScrollLightUpPropsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollLightUpPropsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollLightUpPropsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollLightUpPropsReq_descriptor_;
}

const TActPictureScrollLightUpPropsReq& TActPictureScrollLightUpPropsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollLightUpPropsReq* TActPictureScrollLightUpPropsReq::default_instance_ = NULL;

TActPictureScrollLightUpPropsReq* TActPictureScrollLightUpPropsReq::New() const {
  return new TActPictureScrollLightUpPropsReq;
}

void TActPictureScrollLightUpPropsReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollLightUpPropsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollLightUpPropsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollLightUpPropsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollLightUpPropsReq)
  return false;
#undef DO_
}

void TActPictureScrollLightUpPropsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollLightUpPropsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollLightUpPropsReq)
}

::google::protobuf::uint8* TActPictureScrollLightUpPropsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollLightUpPropsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollLightUpPropsReq)
  return target;
}

int TActPictureScrollLightUpPropsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollLightUpPropsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollLightUpPropsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollLightUpPropsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollLightUpPropsReq::MergeFrom(const TActPictureScrollLightUpPropsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollLightUpPropsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollLightUpPropsReq::CopyFrom(const TActPictureScrollLightUpPropsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollLightUpPropsReq::IsInitialized() const {

  return true;
}

void TActPictureScrollLightUpPropsReq::Swap(TActPictureScrollLightUpPropsReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollLightUpPropsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollLightUpPropsReq_descriptor_;
  metadata.reflection = TActPictureScrollLightUpPropsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetLightUpPropsReq::kIdFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetLightUpPropsReq::TActPictureScrollGetLightUpPropsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetLightUpPropsReq)
}

void TActPictureScrollGetLightUpPropsReq::InitAsDefaultInstance() {
}

TActPictureScrollGetLightUpPropsReq::TActPictureScrollGetLightUpPropsReq(const TActPictureScrollGetLightUpPropsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetLightUpPropsReq)
}

void TActPictureScrollGetLightUpPropsReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetLightUpPropsReq::~TActPictureScrollGetLightUpPropsReq() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetLightUpPropsReq)
  SharedDtor();
}

void TActPictureScrollGetLightUpPropsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetLightUpPropsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetLightUpPropsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetLightUpPropsReq_descriptor_;
}

const TActPictureScrollGetLightUpPropsReq& TActPictureScrollGetLightUpPropsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetLightUpPropsReq* TActPictureScrollGetLightUpPropsReq::default_instance_ = NULL;

TActPictureScrollGetLightUpPropsReq* TActPictureScrollGetLightUpPropsReq::New() const {
  return new TActPictureScrollGetLightUpPropsReq;
}

void TActPictureScrollGetLightUpPropsReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetLightUpPropsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetLightUpPropsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetLightUpPropsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetLightUpPropsReq)
  return false;
#undef DO_
}

void TActPictureScrollGetLightUpPropsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetLightUpPropsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetLightUpPropsReq)
}

::google::protobuf::uint8* TActPictureScrollGetLightUpPropsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetLightUpPropsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetLightUpPropsReq)
  return target;
}

int TActPictureScrollGetLightUpPropsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetLightUpPropsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetLightUpPropsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetLightUpPropsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetLightUpPropsReq::MergeFrom(const TActPictureScrollGetLightUpPropsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetLightUpPropsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetLightUpPropsReq::CopyFrom(const TActPictureScrollGetLightUpPropsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetLightUpPropsReq::IsInitialized() const {

  return true;
}

void TActPictureScrollGetLightUpPropsReq::Swap(TActPictureScrollGetLightUpPropsReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetLightUpPropsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetLightUpPropsReq_descriptor_;
  metadata.reflection = TActPictureScrollGetLightUpPropsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetLightUpPropsRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetLightUpPropsRsp::TActPictureScrollGetLightUpPropsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetLightUpPropsRsp)
}

void TActPictureScrollGetLightUpPropsRsp::InitAsDefaultInstance() {
}

TActPictureScrollGetLightUpPropsRsp::TActPictureScrollGetLightUpPropsRsp(const TActPictureScrollGetLightUpPropsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetLightUpPropsRsp)
}

void TActPictureScrollGetLightUpPropsRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetLightUpPropsRsp::~TActPictureScrollGetLightUpPropsRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetLightUpPropsRsp)
  SharedDtor();
}

void TActPictureScrollGetLightUpPropsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetLightUpPropsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetLightUpPropsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetLightUpPropsRsp_descriptor_;
}

const TActPictureScrollGetLightUpPropsRsp& TActPictureScrollGetLightUpPropsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetLightUpPropsRsp* TActPictureScrollGetLightUpPropsRsp::default_instance_ = NULL;

TActPictureScrollGetLightUpPropsRsp* TActPictureScrollGetLightUpPropsRsp::New() const {
  return new TActPictureScrollGetLightUpPropsRsp;
}

void TActPictureScrollGetLightUpPropsRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetLightUpPropsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetLightUpPropsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetLightUpPropsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetLightUpPropsRsp)
  return false;
#undef DO_
}

void TActPictureScrollGetLightUpPropsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetLightUpPropsRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetLightUpPropsRsp)
}

::google::protobuf::uint8* TActPictureScrollGetLightUpPropsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetLightUpPropsRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetLightUpPropsRsp)
  return target;
}

int TActPictureScrollGetLightUpPropsRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetLightUpPropsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetLightUpPropsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetLightUpPropsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetLightUpPropsRsp::MergeFrom(const TActPictureScrollGetLightUpPropsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetLightUpPropsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetLightUpPropsRsp::CopyFrom(const TActPictureScrollGetLightUpPropsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetLightUpPropsRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollGetLightUpPropsRsp::Swap(TActPictureScrollGetLightUpPropsRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetLightUpPropsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetLightUpPropsRsp_descriptor_;
  metadata.reflection = TActPictureScrollGetLightUpPropsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetTaskWeightsInfoRsp::kTaskWeightsInfoFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetTaskWeightsInfoRsp::TActPictureScrollGetTaskWeightsInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetTaskWeightsInfoRsp)
}

void TActPictureScrollGetTaskWeightsInfoRsp::InitAsDefaultInstance() {
}

TActPictureScrollGetTaskWeightsInfoRsp::TActPictureScrollGetTaskWeightsInfoRsp(const TActPictureScrollGetTaskWeightsInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetTaskWeightsInfoRsp)
}

void TActPictureScrollGetTaskWeightsInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetTaskWeightsInfoRsp::~TActPictureScrollGetTaskWeightsInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  SharedDtor();
}

void TActPictureScrollGetTaskWeightsInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetTaskWeightsInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskWeightsInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetTaskWeightsInfoRsp_descriptor_;
}

const TActPictureScrollGetTaskWeightsInfoRsp& TActPictureScrollGetTaskWeightsInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetTaskWeightsInfoRsp* TActPictureScrollGetTaskWeightsInfoRsp::default_instance_ = NULL;

TActPictureScrollGetTaskWeightsInfoRsp* TActPictureScrollGetTaskWeightsInfoRsp::New() const {
  return new TActPictureScrollGetTaskWeightsInfoRsp;
}

void TActPictureScrollGetTaskWeightsInfoRsp::Clear() {
  taskweightsinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetTaskWeightsInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActPictureScrollTaskWeights TaskWeightsInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_TaskWeightsInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskweightsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TaskWeightsInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  return false;
#undef DO_
}

void TActPictureScrollGetTaskWeightsInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  // repeated .pb.TActPictureScrollTaskWeights TaskWeightsInfo = 1;
  for (int i = 0; i < this->taskweightsinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->taskweightsinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetTaskWeightsInfoRsp)
}

::google::protobuf::uint8* TActPictureScrollGetTaskWeightsInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  // repeated .pb.TActPictureScrollTaskWeights TaskWeightsInfo = 1;
  for (int i = 0; i < this->taskweightsinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->taskweightsinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetTaskWeightsInfoRsp)
  return target;
}

int TActPictureScrollGetTaskWeightsInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActPictureScrollTaskWeights TaskWeightsInfo = 1;
  total_size += 1 * this->taskweightsinfo_size();
  for (int i = 0; i < this->taskweightsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskweightsinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetTaskWeightsInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetTaskWeightsInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetTaskWeightsInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetTaskWeightsInfoRsp::MergeFrom(const TActPictureScrollGetTaskWeightsInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskweightsinfo_.MergeFrom(from.taskweightsinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetTaskWeightsInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetTaskWeightsInfoRsp::CopyFrom(const TActPictureScrollGetTaskWeightsInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetTaskWeightsInfoRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollGetTaskWeightsInfoRsp::Swap(TActPictureScrollGetTaskWeightsInfoRsp* other) {
  if (other != this) {
    taskweightsinfo_.Swap(&other->taskweightsinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetTaskWeightsInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetTaskWeightsInfoRsp_descriptor_;
  metadata.reflection = TActPictureScrollGetTaskWeightsInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollTaskWeights::kIdFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollTaskWeights::TActPictureScrollTaskWeights()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollTaskWeights)
}

void TActPictureScrollTaskWeights::InitAsDefaultInstance() {
}

TActPictureScrollTaskWeights::TActPictureScrollTaskWeights(const TActPictureScrollTaskWeights& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollTaskWeights)
}

void TActPictureScrollTaskWeights::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollTaskWeights::~TActPictureScrollTaskWeights() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollTaskWeights)
  SharedDtor();
}

void TActPictureScrollTaskWeights::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollTaskWeights::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollTaskWeights::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollTaskWeights_descriptor_;
}

const TActPictureScrollTaskWeights& TActPictureScrollTaskWeights::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollTaskWeights* TActPictureScrollTaskWeights::default_instance_ = NULL;

TActPictureScrollTaskWeights* TActPictureScrollTaskWeights::New() const {
  return new TActPictureScrollTaskWeights;
}

void TActPictureScrollTaskWeights::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollTaskWeights::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollTaskWeights)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollTaskWeights)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollTaskWeights)
  return false;
#undef DO_
}

void TActPictureScrollTaskWeights::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollTaskWeights)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollTaskWeights)
}

::google::protobuf::uint8* TActPictureScrollTaskWeights::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollTaskWeights)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollTaskWeights)
  return target;
}

int TActPictureScrollTaskWeights::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollTaskWeights::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollTaskWeights* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollTaskWeights*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollTaskWeights::MergeFrom(const TActPictureScrollTaskWeights& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollTaskWeights::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollTaskWeights::CopyFrom(const TActPictureScrollTaskWeights& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollTaskWeights::IsInitialized() const {

  return true;
}

void TActPictureScrollTaskWeights::Swap(TActPictureScrollTaskWeights* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollTaskWeights::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollTaskWeights_descriptor_;
  metadata.reflection = TActPictureScrollTaskWeights_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetTaskInfoRsp::kTaskInfoFieldNumber;
const int TActPictureScrollGetTaskInfoRsp::kArrTaskRewardInfoFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetTaskInfoRsp::TActPictureScrollGetTaskInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetTaskInfoRsp)
}

void TActPictureScrollGetTaskInfoRsp::InitAsDefaultInstance() {
}

TActPictureScrollGetTaskInfoRsp::TActPictureScrollGetTaskInfoRsp(const TActPictureScrollGetTaskInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetTaskInfoRsp)
}

void TActPictureScrollGetTaskInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetTaskInfoRsp::~TActPictureScrollGetTaskInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetTaskInfoRsp)
  SharedDtor();
}

void TActPictureScrollGetTaskInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetTaskInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetTaskInfoRsp_descriptor_;
}

const TActPictureScrollGetTaskInfoRsp& TActPictureScrollGetTaskInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetTaskInfoRsp* TActPictureScrollGetTaskInfoRsp::default_instance_ = NULL;

TActPictureScrollGetTaskInfoRsp* TActPictureScrollGetTaskInfoRsp::New() const {
  return new TActPictureScrollGetTaskInfoRsp;
}

void TActPictureScrollGetTaskInfoRsp::Clear() {
  taskinfo_.Clear();
  arrtaskrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetTaskInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetTaskInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActPictureScrollGetTaskInfo TaskInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_TaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TaskInfo;
        if (input->ExpectTag(18)) goto parse_ArrTaskRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrTaskRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrTaskRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetTaskInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetTaskInfoRsp)
  return false;
#undef DO_
}

void TActPictureScrollGetTaskInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetTaskInfoRsp)
  // repeated .pb.TActPictureScrollGetTaskInfo TaskInfo = 1;
  for (int i = 0; i < this->taskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->taskinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrtaskrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetTaskInfoRsp)
}

::google::protobuf::uint8* TActPictureScrollGetTaskInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetTaskInfoRsp)
  // repeated .pb.TActPictureScrollGetTaskInfo TaskInfo = 1;
  for (int i = 0; i < this->taskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->taskinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrtaskrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetTaskInfoRsp)
  return target;
}

int TActPictureScrollGetTaskInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActPictureScrollGetTaskInfo TaskInfo = 1;
  total_size += 1 * this->taskinfo_size();
  for (int i = 0; i < this->taskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  total_size += 1 * this->arrtaskrewardinfo_size();
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetTaskInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetTaskInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetTaskInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetTaskInfoRsp::MergeFrom(const TActPictureScrollGetTaskInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskinfo_.MergeFrom(from.taskinfo_);
  arrtaskrewardinfo_.MergeFrom(from.arrtaskrewardinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetTaskInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetTaskInfoRsp::CopyFrom(const TActPictureScrollGetTaskInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetTaskInfoRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollGetTaskInfoRsp::Swap(TActPictureScrollGetTaskInfoRsp* other) {
  if (other != this) {
    taskinfo_.Swap(&other->taskinfo_);
    arrtaskrewardinfo_.Swap(&other->arrtaskrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetTaskInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetTaskInfoRsp_descriptor_;
  metadata.reflection = TActPictureScrollGetTaskInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetTaskInfo::kIDFieldNumber;
const int TActPictureScrollGetTaskInfo::kTaskTypeFieldNumber;
const int TActPictureScrollGetTaskInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetTaskInfo::TActPictureScrollGetTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetTaskInfo)
}

void TActPictureScrollGetTaskInfo::InitAsDefaultInstance() {
}

TActPictureScrollGetTaskInfo::TActPictureScrollGetTaskInfo(const TActPictureScrollGetTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetTaskInfo)
}

void TActPictureScrollGetTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  tasktype_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetTaskInfo::~TActPictureScrollGetTaskInfo() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetTaskInfo)
  SharedDtor();
}

void TActPictureScrollGetTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetTaskInfo_descriptor_;
}

const TActPictureScrollGetTaskInfo& TActPictureScrollGetTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetTaskInfo* TActPictureScrollGetTaskInfo::default_instance_ = NULL;

TActPictureScrollGetTaskInfo* TActPictureScrollGetTaskInfo::New() const {
  return new TActPictureScrollGetTaskInfo;
}

void TActPictureScrollGetTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActPictureScrollGetTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TaskType;
        break;
      }

      // optional uint32 TaskType = 2;
      case 2: {
        if (tag == 16) {
         parse_TaskType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tasktype_)));
          set_has_tasktype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetTaskInfo)
  return false;
#undef DO_
}

void TActPictureScrollGetTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetTaskInfo)
  // optional uint32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 TaskType = 2;
  if (has_tasktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tasktype(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetTaskInfo)
}

::google::protobuf::uint8* TActPictureScrollGetTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetTaskInfo)
  // optional uint32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 TaskType = 2;
  if (has_tasktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tasktype(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetTaskInfo)
  return target;
}

int TActPictureScrollGetTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 TaskType = 2;
    if (has_tasktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tasktype());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetTaskInfo::MergeFrom(const TActPictureScrollGetTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_tasktype()) {
      set_tasktype(from.tasktype());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetTaskInfo::CopyFrom(const TActPictureScrollGetTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetTaskInfo::IsInitialized() const {

  return true;
}

void TActPictureScrollGetTaskInfo::Swap(TActPictureScrollGetTaskInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tasktype_, other->tasktype_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetTaskInfo_descriptor_;
  metadata.reflection = TActPictureScrollGetTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetTaskRewardReq::kTaskIdFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetTaskRewardReq::TActPictureScrollGetTaskRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetTaskRewardReq)
}

void TActPictureScrollGetTaskRewardReq::InitAsDefaultInstance() {
}

TActPictureScrollGetTaskRewardReq::TActPictureScrollGetTaskRewardReq(const TActPictureScrollGetTaskRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetTaskRewardReq)
}

void TActPictureScrollGetTaskRewardReq::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetTaskRewardReq::~TActPictureScrollGetTaskRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetTaskRewardReq)
  SharedDtor();
}

void TActPictureScrollGetTaskRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetTaskRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetTaskRewardReq_descriptor_;
}

const TActPictureScrollGetTaskRewardReq& TActPictureScrollGetTaskRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetTaskRewardReq* TActPictureScrollGetTaskRewardReq::default_instance_ = NULL;

TActPictureScrollGetTaskRewardReq* TActPictureScrollGetTaskRewardReq::New() const {
  return new TActPictureScrollGetTaskRewardReq;
}

void TActPictureScrollGetTaskRewardReq::Clear() {
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetTaskRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetTaskRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetTaskRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetTaskRewardReq)
  return false;
#undef DO_
}

void TActPictureScrollGetTaskRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetTaskRewardReq)
  // optional uint32 TaskId = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetTaskRewardReq)
}

::google::protobuf::uint8* TActPictureScrollGetTaskRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetTaskRewardReq)
  // optional uint32 TaskId = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetTaskRewardReq)
  return target;
}

int TActPictureScrollGetTaskRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskId = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetTaskRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetTaskRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetTaskRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetTaskRewardReq::MergeFrom(const TActPictureScrollGetTaskRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetTaskRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetTaskRewardReq::CopyFrom(const TActPictureScrollGetTaskRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetTaskRewardReq::IsInitialized() const {

  return true;
}

void TActPictureScrollGetTaskRewardReq::Swap(TActPictureScrollGetTaskRewardReq* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetTaskRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetTaskRewardReq_descriptor_;
  metadata.reflection = TActPictureScrollGetTaskRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollGetTaskRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollGetTaskRewardRsp::TActPictureScrollGetTaskRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollGetTaskRewardRsp)
}

void TActPictureScrollGetTaskRewardRsp::InitAsDefaultInstance() {
}

TActPictureScrollGetTaskRewardRsp::TActPictureScrollGetTaskRewardRsp(const TActPictureScrollGetTaskRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollGetTaskRewardRsp)
}

void TActPictureScrollGetTaskRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollGetTaskRewardRsp::~TActPictureScrollGetTaskRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollGetTaskRewardRsp)
  SharedDtor();
}

void TActPictureScrollGetTaskRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollGetTaskRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollGetTaskRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollGetTaskRewardRsp_descriptor_;
}

const TActPictureScrollGetTaskRewardRsp& TActPictureScrollGetTaskRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollGetTaskRewardRsp* TActPictureScrollGetTaskRewardRsp::default_instance_ = NULL;

TActPictureScrollGetTaskRewardRsp* TActPictureScrollGetTaskRewardRsp::New() const {
  return new TActPictureScrollGetTaskRewardRsp;
}

void TActPictureScrollGetTaskRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollGetTaskRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollGetTaskRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollGetTaskRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollGetTaskRewardRsp)
  return false;
#undef DO_
}

void TActPictureScrollGetTaskRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollGetTaskRewardRsp)
}

::google::protobuf::uint8* TActPictureScrollGetTaskRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollGetTaskRewardRsp)
  return target;
}

int TActPictureScrollGetTaskRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollGetTaskRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollGetTaskRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollGetTaskRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollGetTaskRewardRsp::MergeFrom(const TActPictureScrollGetTaskRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollGetTaskRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollGetTaskRewardRsp::CopyFrom(const TActPictureScrollGetTaskRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollGetTaskRewardRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollGetTaskRewardRsp::Swap(TActPictureScrollGetTaskRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollGetTaskRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollGetTaskRewardRsp_descriptor_;
  metadata.reflection = TActPictureScrollGetTaskRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollLotteryReq::kDrawNumFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollLotteryReq::TActPictureScrollLotteryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollLotteryReq)
}

void TActPictureScrollLotteryReq::InitAsDefaultInstance() {
}

TActPictureScrollLotteryReq::TActPictureScrollLotteryReq(const TActPictureScrollLotteryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollLotteryReq)
}

void TActPictureScrollLotteryReq::SharedCtor() {
  _cached_size_ = 0;
  drawnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollLotteryReq::~TActPictureScrollLotteryReq() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollLotteryReq)
  SharedDtor();
}

void TActPictureScrollLotteryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollLotteryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollLotteryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollLotteryReq_descriptor_;
}

const TActPictureScrollLotteryReq& TActPictureScrollLotteryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollLotteryReq* TActPictureScrollLotteryReq::default_instance_ = NULL;

TActPictureScrollLotteryReq* TActPictureScrollLotteryReq::New() const {
  return new TActPictureScrollLotteryReq;
}

void TActPictureScrollLotteryReq::Clear() {
  drawnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollLotteryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollLotteryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DrawNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drawnum_)));
          set_has_drawnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollLotteryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollLotteryReq)
  return false;
#undef DO_
}

void TActPictureScrollLotteryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollLotteryReq)
  // optional uint32 DrawNum = 1;
  if (has_drawnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->drawnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollLotteryReq)
}

::google::protobuf::uint8* TActPictureScrollLotteryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollLotteryReq)
  // optional uint32 DrawNum = 1;
  if (has_drawnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->drawnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollLotteryReq)
  return target;
}

int TActPictureScrollLotteryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 DrawNum = 1;
    if (has_drawnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drawnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollLotteryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollLotteryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollLotteryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollLotteryReq::MergeFrom(const TActPictureScrollLotteryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drawnum()) {
      set_drawnum(from.drawnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollLotteryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollLotteryReq::CopyFrom(const TActPictureScrollLotteryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollLotteryReq::IsInitialized() const {

  return true;
}

void TActPictureScrollLotteryReq::Swap(TActPictureScrollLotteryReq* other) {
  if (other != this) {
    std::swap(drawnum_, other->drawnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollLotteryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollLotteryReq_descriptor_;
  metadata.reflection = TActPictureScrollLotteryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollLotteryRsp::kIdFieldNumber;
const int TActPictureScrollLotteryRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollLotteryRsp::TActPictureScrollLotteryRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollLotteryRsp)
}

void TActPictureScrollLotteryRsp::InitAsDefaultInstance() {
}

TActPictureScrollLotteryRsp::TActPictureScrollLotteryRsp(const TActPictureScrollLotteryRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollLotteryRsp)
}

void TActPictureScrollLotteryRsp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollLotteryRsp::~TActPictureScrollLotteryRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollLotteryRsp)
  SharedDtor();
}

void TActPictureScrollLotteryRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollLotteryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollLotteryRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollLotteryRsp_descriptor_;
}

const TActPictureScrollLotteryRsp& TActPictureScrollLotteryRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollLotteryRsp* TActPictureScrollLotteryRsp::default_instance_ = NULL;

TActPictureScrollLotteryRsp* TActPictureScrollLotteryRsp::New() const {
  return new TActPictureScrollLotteryRsp;
}

void TActPictureScrollLotteryRsp::Clear() {
  id_ = 0u;
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollLotteryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollLotteryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        break;
      }

      // repeated .pb.TCommonReward ArrReward = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollLotteryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollLotteryRsp)
  return false;
#undef DO_
}

void TActPictureScrollLotteryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollLotteryRsp)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollLotteryRsp)
}

::google::protobuf::uint8* TActPictureScrollLotteryRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollLotteryRsp)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollLotteryRsp)
  return target;
}

int TActPictureScrollLotteryRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated .pb.TCommonReward ArrReward = 2;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollLotteryRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollLotteryRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollLotteryRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollLotteryRsp::MergeFrom(const TActPictureScrollLotteryRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollLotteryRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollLotteryRsp::CopyFrom(const TActPictureScrollLotteryRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollLotteryRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollLotteryRsp::Swap(TActPictureScrollLotteryRsp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollLotteryRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollLotteryRsp_descriptor_;
  metadata.reflection = TActPictureScrollLotteryRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollTransformPropsReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollTransformPropsReq::TActPictureScrollTransformPropsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollTransformPropsReq)
}

void TActPictureScrollTransformPropsReq::InitAsDefaultInstance() {
}

TActPictureScrollTransformPropsReq::TActPictureScrollTransformPropsReq(const TActPictureScrollTransformPropsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollTransformPropsReq)
}

void TActPictureScrollTransformPropsReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollTransformPropsReq::~TActPictureScrollTransformPropsReq() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollTransformPropsReq)
  SharedDtor();
}

void TActPictureScrollTransformPropsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollTransformPropsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollTransformPropsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollTransformPropsReq_descriptor_;
}

const TActPictureScrollTransformPropsReq& TActPictureScrollTransformPropsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollTransformPropsReq* TActPictureScrollTransformPropsReq::default_instance_ = NULL;

TActPictureScrollTransformPropsReq* TActPictureScrollTransformPropsReq::New() const {
  return new TActPictureScrollTransformPropsReq;
}

void TActPictureScrollTransformPropsReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollTransformPropsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollTransformPropsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollTransformPropsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollTransformPropsReq)
  return false;
#undef DO_
}

void TActPictureScrollTransformPropsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollTransformPropsReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollTransformPropsReq)
}

::google::protobuf::uint8* TActPictureScrollTransformPropsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollTransformPropsReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollTransformPropsReq)
  return target;
}

int TActPictureScrollTransformPropsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollTransformPropsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollTransformPropsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollTransformPropsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollTransformPropsReq::MergeFrom(const TActPictureScrollTransformPropsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollTransformPropsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollTransformPropsReq::CopyFrom(const TActPictureScrollTransformPropsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollTransformPropsReq::IsInitialized() const {

  return true;
}

void TActPictureScrollTransformPropsReq::Swap(TActPictureScrollTransformPropsReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollTransformPropsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollTransformPropsReq_descriptor_;
  metadata.reflection = TActPictureScrollTransformPropsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollTransformPropsRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollTransformPropsRsp::TActPictureScrollTransformPropsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollTransformPropsRsp)
}

void TActPictureScrollTransformPropsRsp::InitAsDefaultInstance() {
}

TActPictureScrollTransformPropsRsp::TActPictureScrollTransformPropsRsp(const TActPictureScrollTransformPropsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollTransformPropsRsp)
}

void TActPictureScrollTransformPropsRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollTransformPropsRsp::~TActPictureScrollTransformPropsRsp() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollTransformPropsRsp)
  SharedDtor();
}

void TActPictureScrollTransformPropsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollTransformPropsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollTransformPropsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollTransformPropsRsp_descriptor_;
}

const TActPictureScrollTransformPropsRsp& TActPictureScrollTransformPropsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollTransformPropsRsp* TActPictureScrollTransformPropsRsp::default_instance_ = NULL;

TActPictureScrollTransformPropsRsp* TActPictureScrollTransformPropsRsp::New() const {
  return new TActPictureScrollTransformPropsRsp;
}

void TActPictureScrollTransformPropsRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollTransformPropsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollTransformPropsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollTransformPropsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollTransformPropsRsp)
  return false;
#undef DO_
}

void TActPictureScrollTransformPropsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollTransformPropsRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollTransformPropsRsp)
}

::google::protobuf::uint8* TActPictureScrollTransformPropsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollTransformPropsRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollTransformPropsRsp)
  return target;
}

int TActPictureScrollTransformPropsRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollTransformPropsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollTransformPropsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollTransformPropsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollTransformPropsRsp::MergeFrom(const TActPictureScrollTransformPropsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollTransformPropsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollTransformPropsRsp::CopyFrom(const TActPictureScrollTransformPropsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollTransformPropsRsp::IsInitialized() const {

  return true;
}

void TActPictureScrollTransformPropsRsp::Swap(TActPictureScrollTransformPropsRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollTransformPropsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollTransformPropsRsp_descriptor_;
  metadata.reflection = TActPictureScrollTransformPropsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActPictureScrollNotify::kArrTaskInfoFieldNumber;
#endif  // !_MSC_VER

TActPictureScrollNotify::TActPictureScrollNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActPictureScrollNotify)
}

void TActPictureScrollNotify::InitAsDefaultInstance() {
}

TActPictureScrollNotify::TActPictureScrollNotify(const TActPictureScrollNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActPictureScrollNotify)
}

void TActPictureScrollNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActPictureScrollNotify::~TActPictureScrollNotify() {
  // @@protoc_insertion_point(destructor:pb.TActPictureScrollNotify)
  SharedDtor();
}

void TActPictureScrollNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActPictureScrollNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActPictureScrollNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActPictureScrollNotify_descriptor_;
}

const TActPictureScrollNotify& TActPictureScrollNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActPictureScroll_2eproto();
  return *default_instance_;
}

TActPictureScrollNotify* TActPictureScrollNotify::default_instance_ = NULL;

TActPictureScrollNotify* TActPictureScrollNotify::New() const {
  return new TActPictureScrollNotify;
}

void TActPictureScrollNotify::Clear() {
  arrtaskinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActPictureScrollNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActPictureScrollNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActPictureScrollGetTaskInfo ArrTaskInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrTaskInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActPictureScrollNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActPictureScrollNotify)
  return false;
#undef DO_
}

void TActPictureScrollNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActPictureScrollNotify)
  // repeated .pb.TActPictureScrollGetTaskInfo ArrTaskInfo = 1;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrtaskinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActPictureScrollNotify)
}

::google::protobuf::uint8* TActPictureScrollNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActPictureScrollNotify)
  // repeated .pb.TActPictureScrollGetTaskInfo ArrTaskInfo = 1;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrtaskinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActPictureScrollNotify)
  return target;
}

int TActPictureScrollNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActPictureScrollGetTaskInfo ArrTaskInfo = 1;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActPictureScrollNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActPictureScrollNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActPictureScrollNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActPictureScrollNotify::MergeFrom(const TActPictureScrollNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActPictureScrollNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActPictureScrollNotify::CopyFrom(const TActPictureScrollNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActPictureScrollNotify::IsInitialized() const {

  return true;
}

void TActPictureScrollNotify::Swap(TActPictureScrollNotify* other) {
  if (other != this) {
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActPictureScrollNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActPictureScrollNotify_descriptor_;
  metadata.reflection = TActPictureScrollNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
