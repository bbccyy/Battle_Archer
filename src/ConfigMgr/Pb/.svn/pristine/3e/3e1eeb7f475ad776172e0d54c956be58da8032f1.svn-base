// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/SkillBaseData2.proto

#ifndef PROTOBUF_module_2fSkillBaseData2_2eproto__INCLUDED
#define PROTOBUF_module_2fSkillBaseData2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
void protobuf_AssignDesc_module_2fSkillBaseData2_2eproto();
void protobuf_ShutdownFile_module_2fSkillBaseData2_2eproto();

class SkillLevelSubSkill;
class SkillLevelSubBuff;
class SkillLevelProbSkill;

// ===================================================================

/*FOR2LUA
<Record>
	<name>SkillLevelSubSkill</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>module/SkillBaseData2.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class SkillLevelSubSkill : public ::google::protobuf::Message {
 public:
  SkillLevelSubSkill();
  virtual ~SkillLevelSubSkill();

  SkillLevelSubSkill(const SkillLevelSubSkill& from);

  inline SkillLevelSubSkill& operator=(const SkillLevelSubSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillLevelSubSkill& default_instance();

  void Swap(SkillLevelSubSkill* other);

  // implements Message ----------------------------------------------

  SkillLevelSubSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillLevelSubSkill& from);
  void MergeFrom(const SkillLevelSubSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelSubSkill</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated int32 ID = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelSubSkill</name>
  	<Function>
  		<name>id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>id_size</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:pb.SkillLevelSubSkill)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  friend void protobuf_AssignDesc_module_2fSkillBaseData2_2eproto();
  friend void protobuf_ShutdownFile_module_2fSkillBaseData2_2eproto();

  void InitAsDefaultInstance();
  static SkillLevelSubSkill* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>SkillLevelSubBuff</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>module/SkillBaseData2.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class SkillLevelSubBuff : public ::google::protobuf::Message {
 public:
  SkillLevelSubBuff();
  virtual ~SkillLevelSubBuff();

  SkillLevelSubBuff(const SkillLevelSubBuff& from);

  inline SkillLevelSubBuff& operator=(const SkillLevelSubBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillLevelSubBuff& default_instance();

  void Swap(SkillLevelSubBuff* other);

  // implements Message ----------------------------------------------

  SkillLevelSubBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillLevelSubBuff& from);
  void MergeFrom(const SkillLevelSubBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelSubBuff</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated int32 ID = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelSubBuff</name>
  	<Function>
  		<name>id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>id_size</name>
  		<replaceName>ID</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:pb.SkillLevelSubBuff)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  friend void protobuf_AssignDesc_module_2fSkillBaseData2_2eproto();
  friend void protobuf_ShutdownFile_module_2fSkillBaseData2_2eproto();

  void InitAsDefaultInstance();
  static SkillLevelSubBuff* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>SkillLevelProbSkill</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>module/SkillBaseData2.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class SkillLevelProbSkill : public ::google::protobuf::Message {
 public:
  SkillLevelProbSkill();
  virtual ~SkillLevelProbSkill();

  SkillLevelProbSkill(const SkillLevelProbSkill& from);

  inline SkillLevelProbSkill& operator=(const SkillLevelProbSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillLevelProbSkill& default_instance();

  void Swap(SkillLevelProbSkill* other);

  // implements Message ----------------------------------------------

  SkillLevelProbSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillLevelProbSkill& from);
  void MergeFrom(const SkillLevelProbSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelProbSkill</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated int32 ProbabilisticParams = 2;
  inline int probabilisticparams_size() const;
  inline void clear_probabilisticparams();
  static const int kProbabilisticParamsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelProbSkill</name>
  	<Function>
  		<name>probabilisticparams</name>
  		<replaceName>ProbabilisticParams</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_probabilisticparams</name>
  		<replaceName>ProbabilisticParams</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_probabilisticparams</name>
  		<replaceName>ProbabilisticParams</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_probabilisticparams</name>
  		<replaceName>ProbabilisticParams</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>probabilisticparams_size</name>
  		<replaceName>ProbabilisticParams</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 probabilisticparams(int index) const;
  inline void set_probabilisticparams(int index, ::google::protobuf::int32 value);
  inline void add_probabilisticparams(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      probabilisticparams() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_probabilisticparams();

  // repeated int32 ProbabilisticSkills = 3;
  inline int probabilisticskills_size() const;
  inline void clear_probabilisticskills();
  static const int kProbabilisticSkillsFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>SkillLevelProbSkill</name>
  	<Function>
  		<name>probabilisticskills</name>
  		<replaceName>ProbabilisticSkills</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_probabilisticskills</name>
  		<replaceName>ProbabilisticSkills</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_probabilisticskills</name>
  		<replaceName>ProbabilisticSkills</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_probabilisticskills</name>
  		<replaceName>ProbabilisticSkills</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>probabilisticskills_size</name>
  		<replaceName>ProbabilisticSkills</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 probabilisticskills(int index) const;
  inline void set_probabilisticskills(int index, ::google::protobuf::int32 value);
  inline void add_probabilisticskills(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      probabilisticskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_probabilisticskills();

  // @@protoc_insertion_point(class_scope:pb.SkillLevelProbSkill)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > probabilisticparams_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > probabilisticskills_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  friend void protobuf_AssignDesc_module_2fSkillBaseData2_2eproto();
  friend void protobuf_ShutdownFile_module_2fSkillBaseData2_2eproto();

  void InitAsDefaultInstance();
  static SkillLevelProbSkill* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillLevelSubSkill

// optional int32 Level = 1;
inline bool SkillLevelSubSkill::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillLevelSubSkill::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillLevelSubSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillLevelSubSkill::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SkillLevelSubSkill::level() const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelSubSkill.Level)
  return level_;
}
inline void SkillLevelSubSkill::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.SkillLevelSubSkill.Level)
}

// repeated int32 ID = 2;
inline int SkillLevelSubSkill::id_size() const {
  return id_.size();
}
inline void SkillLevelSubSkill::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 SkillLevelSubSkill::id(int index) const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelSubSkill.ID)
  return id_.Get(index);
}
inline void SkillLevelSubSkill::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.SkillLevelSubSkill.ID)
}
inline void SkillLevelSubSkill::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:pb.SkillLevelSubSkill.ID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillLevelSubSkill::id() const {
  // @@protoc_insertion_point(field_list:pb.SkillLevelSubSkill.ID)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillLevelSubSkill::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:pb.SkillLevelSubSkill.ID)
  return &id_;
}

// -------------------------------------------------------------------

// SkillLevelSubBuff

// optional int32 Level = 1;
inline bool SkillLevelSubBuff::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillLevelSubBuff::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillLevelSubBuff::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillLevelSubBuff::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SkillLevelSubBuff::level() const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelSubBuff.Level)
  return level_;
}
inline void SkillLevelSubBuff::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.SkillLevelSubBuff.Level)
}

// repeated int32 ID = 2;
inline int SkillLevelSubBuff::id_size() const {
  return id_.size();
}
inline void SkillLevelSubBuff::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 SkillLevelSubBuff::id(int index) const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelSubBuff.ID)
  return id_.Get(index);
}
inline void SkillLevelSubBuff::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.SkillLevelSubBuff.ID)
}
inline void SkillLevelSubBuff::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:pb.SkillLevelSubBuff.ID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillLevelSubBuff::id() const {
  // @@protoc_insertion_point(field_list:pb.SkillLevelSubBuff.ID)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillLevelSubBuff::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:pb.SkillLevelSubBuff.ID)
  return &id_;
}

// -------------------------------------------------------------------

// SkillLevelProbSkill

// optional int32 Level = 1;
inline bool SkillLevelProbSkill::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillLevelProbSkill::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillLevelProbSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillLevelProbSkill::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SkillLevelProbSkill::level() const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelProbSkill.Level)
  return level_;
}
inline void SkillLevelProbSkill::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.SkillLevelProbSkill.Level)
}

// repeated int32 ProbabilisticParams = 2;
inline int SkillLevelProbSkill::probabilisticparams_size() const {
  return probabilisticparams_.size();
}
inline void SkillLevelProbSkill::clear_probabilisticparams() {
  probabilisticparams_.Clear();
}
inline ::google::protobuf::int32 SkillLevelProbSkill::probabilisticparams(int index) const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelProbSkill.ProbabilisticParams)
  return probabilisticparams_.Get(index);
}
inline void SkillLevelProbSkill::set_probabilisticparams(int index, ::google::protobuf::int32 value) {
  probabilisticparams_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.SkillLevelProbSkill.ProbabilisticParams)
}
inline void SkillLevelProbSkill::add_probabilisticparams(::google::protobuf::int32 value) {
  probabilisticparams_.Add(value);
  // @@protoc_insertion_point(field_add:pb.SkillLevelProbSkill.ProbabilisticParams)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillLevelProbSkill::probabilisticparams() const {
  // @@protoc_insertion_point(field_list:pb.SkillLevelProbSkill.ProbabilisticParams)
  return probabilisticparams_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillLevelProbSkill::mutable_probabilisticparams() {
  // @@protoc_insertion_point(field_mutable_list:pb.SkillLevelProbSkill.ProbabilisticParams)
  return &probabilisticparams_;
}

// repeated int32 ProbabilisticSkills = 3;
inline int SkillLevelProbSkill::probabilisticskills_size() const {
  return probabilisticskills_.size();
}
inline void SkillLevelProbSkill::clear_probabilisticskills() {
  probabilisticskills_.Clear();
}
inline ::google::protobuf::int32 SkillLevelProbSkill::probabilisticskills(int index) const {
  // @@protoc_insertion_point(field_get:pb.SkillLevelProbSkill.ProbabilisticSkills)
  return probabilisticskills_.Get(index);
}
inline void SkillLevelProbSkill::set_probabilisticskills(int index, ::google::protobuf::int32 value) {
  probabilisticskills_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.SkillLevelProbSkill.ProbabilisticSkills)
}
inline void SkillLevelProbSkill::add_probabilisticskills(::google::protobuf::int32 value) {
  probabilisticskills_.Add(value);
  // @@protoc_insertion_point(field_add:pb.SkillLevelProbSkill.ProbabilisticSkills)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillLevelProbSkill::probabilisticskills() const {
  // @@protoc_insertion_point(field_list:pb.SkillLevelProbSkill.ProbabilisticSkills)
  return probabilisticskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillLevelProbSkill::mutable_probabilisticskills() {
  // @@protoc_insertion_point(field_mutable_list:pb.SkillLevelProbSkill.ProbabilisticSkills)
  return &probabilisticskills_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_module_2fSkillBaseData2_2eproto__INCLUDED
