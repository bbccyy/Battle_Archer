// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Barrack.proto

#ifndef PROTOBUF_net_2fBarrack_2eproto__INCLUDED
#define PROTOBUF_net_2fBarrack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Common.pb.h"
#include "net/CommonReward.pb.h"
#include "net/User.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fBarrack_2eproto();
void protobuf_AssignDesc_net_2fBarrack_2eproto();
void protobuf_ShutdownFile_net_2fBarrack_2eproto();

class TSingleDecorationItem;
class TSingleBarrackInfo;
class TSingleBarrackPos;
class TBarrackGetInfoRsp;
class TBarrackEquipDecorationReq;
class TPriorityQueue;
class TBarrackAutoEquipDecorationReq;
class TBarrackAutoEquipDecorationRsp;
class TBarrackLotteryReq;
class TBarrackLotteryRsp;
class TBarrackSwapBarrackPosReq;
class TBarrackChangeNotify;
class TBarrackServerRankInfo;
class TBarrackGetRankListReq;
class TBarrackGetRankListRsp;
class TBarrackGetTreasuerBoxAwardReq;
class TBarrackGetTreasuerBoxAwardRsp;
class TBarrackGetFriendBarrackInfoRsp;
class TBarrackGetBarrackInfoAndUserInfoByServerReq;
class TBarrackOtherUserInfo;
class TBarrackGetBarrackInfoAndUserInfoByServerRsp;

enum Priority {
  HIGH = 1,
  MID = 2,
  LOW = 3
};
bool Priority_IsValid(int value);
const Priority Priority_MIN = HIGH;
const Priority Priority_MAX = LOW;
const int Priority_ARRAYSIZE = Priority_MAX + 1;

const ::google::protobuf::EnumDescriptor* Priority_descriptor();
inline const ::std::string& Priority_Name(Priority value) {
  return ::google::protobuf::internal::NameOfEnum(
    Priority_descriptor(), value);
}
inline bool Priority_Parse(
    const ::std::string& name, Priority* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Priority>(
    Priority_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TSingleDecorationItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSingleDecorationItem : public ::google::protobuf::Message {
 public:
  TSingleDecorationItem();
  virtual ~TSingleDecorationItem();

  TSingleDecorationItem(const TSingleDecorationItem& from);

  inline TSingleDecorationItem& operator=(const TSingleDecorationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSingleDecorationItem& default_instance();

  void Swap(TSingleDecorationItem* other);

  // implements Message ----------------------------------------------

  TSingleDecorationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSingleDecorationItem& from);
  void MergeFrom(const TSingleDecorationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSingleDecorationItem</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Tid = 2;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSingleDecorationItem</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 ItemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSingleDecorationItem</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 StarLv = 4;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSingleDecorationItem</name>
  	<Function>
  		<name>starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starlv() const;
  inline void set_starlv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSingleDecorationItem)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_starlv();
  inline void clear_has_starlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 starlv_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TSingleDecorationItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSingleBarrackInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSingleBarrackInfo : public ::google::protobuf::Message {
 public:
  TSingleBarrackInfo();
  virtual ~TSingleBarrackInfo();

  TSingleBarrackInfo(const TSingleBarrackInfo& from);

  inline TSingleBarrackInfo& operator=(const TSingleBarrackInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSingleBarrackInfo& default_instance();

  void Swap(TSingleBarrackInfo* other);

  // implements Message ----------------------------------------------

  TSingleBarrackInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSingleBarrackInfo& from);
  void MergeFrom(const TSingleBarrackInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSingleBarrackInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TSingleDecorationItem DecorationArr = 2;
  inline int decorationarr_size() const;
  inline void clear_decorationarr();
  static const int kDecorationArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSingleBarrackInfo</name>
  	<Function>
  		<name>decorationarr</name>
  		<replaceName>DecorationArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_decorationarr</name>
  		<replaceName>DecorationArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_decorationarr</name>
  		<replaceName>DecorationArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_decorationarr</name>
  		<replaceName>DecorationArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>decorationarr_size</name>
  		<replaceName>DecorationArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleDecorationItem& decorationarr(int index) const;
  inline ::pb::TSingleDecorationItem* mutable_decorationarr(int index);
  inline ::pb::TSingleDecorationItem* add_decorationarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >&
      decorationarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >*
      mutable_decorationarr();

  // optional uint32 Htid = 3;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSingleBarrackInfo</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSingleBarrackInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_htid();
  inline void clear_has_htid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem > decorationarr_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 htid_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TSingleBarrackInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSingleBarrackPos</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSingleBarrackPos : public ::google::protobuf::Message {
 public:
  TSingleBarrackPos();
  virtual ~TSingleBarrackPos();

  TSingleBarrackPos(const TSingleBarrackPos& from);

  inline TSingleBarrackPos& operator=(const TSingleBarrackPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSingleBarrackPos& default_instance();

  void Swap(TSingleBarrackPos* other);

  // implements Message ----------------------------------------------

  TSingleBarrackPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSingleBarrackPos& from);
  void MergeFrom(const TSingleBarrackPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSingleBarrackPos</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSingleBarrackPos</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Htid = 3;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSingleBarrackPos</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSingleBarrackPos)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_htid();
  inline void clear_has_htid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 htid_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TSingleBarrackPos* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetInfoRsp : public ::google::protobuf::Message {
 public:
  TBarrackGetInfoRsp();
  virtual ~TBarrackGetInfoRsp();

  TBarrackGetInfoRsp(const TBarrackGetInfoRsp& from);

  inline TBarrackGetInfoRsp& operator=(const TBarrackGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetInfoRsp& default_instance();

  void Swap(TBarrackGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TBarrackGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetInfoRsp& from);
  void MergeFrom(const TBarrackGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSingleBarrackInfo ArrBarrack = 1;
  inline int arrbarrack_size() const;
  inline void clear_arrbarrack();
  static const int kArrBarrackFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrbarrack_size</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackInfo& arrbarrack(int index) const;
  inline ::pb::TSingleBarrackInfo* mutable_arrbarrack(int index);
  inline ::pb::TSingleBarrackInfo* add_arrbarrack();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
      arrbarrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
      mutable_arrbarrack();

  // optional uint32 FreeTimeToday = 2;
  inline bool has_freetimetoday() const;
  inline void clear_freetimetoday();
  static const int kFreeTimeTodayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>freetimetoday</name>
  		<replaceName>FreeTimeToday</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freetimetoday</name>
  		<replaceName>FreeTimeToday</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freetimetoday</name>
  		<replaceName>FreeTimeToday</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 freetimetoday() const;
  inline void set_freetimetoday(::google::protobuf::uint32 value);

  // repeated .pb.TPriorityQueue PriorityQueue = 3;
  inline int priorityqueue_size() const;
  inline void clear_priorityqueue();
  static const int kPriorityQueueFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>priorityqueue_size</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPriorityQueue& priorityqueue(int index) const;
  inline ::pb::TPriorityQueue* mutable_priorityqueue(int index);
  inline ::pb::TPriorityQueue* add_priorityqueue();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >&
      priorityqueue() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >*
      mutable_priorityqueue();

  // optional uint32 MaxBarrack = 4;
  inline bool has_maxbarrack() const;
  inline void clear_maxbarrack();
  static const int kMaxBarrackFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>maxbarrack</name>
  		<replaceName>MaxBarrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxbarrack</name>
  		<replaceName>MaxBarrack</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxbarrack</name>
  		<replaceName>MaxBarrack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxbarrack() const;
  inline void set_maxbarrack(::google::protobuf::uint32 value);

  // optional uint64 RefreshTime = 5;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint64 value);

  // repeated .pb.TSingleBarrackPos BarrackPosArr = 6;
  inline int barrackposarr_size() const;
  inline void clear_barrackposarr();
  static const int kBarrackPosArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>barrackposarr_size</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackPos& barrackposarr(int index) const;
  inline ::pb::TSingleBarrackPos* mutable_barrackposarr(int index);
  inline ::pb::TSingleBarrackPos* add_barrackposarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >&
      barrackposarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >*
      mutable_barrackposarr();

  // repeated uint64 ReceivedFriend = 7;
  inline int receivedfriend_size() const;
  inline void clear_receivedfriend();
  static const int kReceivedFriendFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetInfoRsp</name>
  	<Function>
  		<name>receivedfriend</name>
  		<replaceName>ReceivedFriend</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receivedfriend</name>
  		<replaceName>ReceivedFriend</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receivedfriend</name>
  		<replaceName>ReceivedFriend</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivedfriend</name>
  		<replaceName>ReceivedFriend</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receivedfriend_size</name>
  		<replaceName>ReceivedFriend</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receivedfriend(int index) const;
  inline void set_receivedfriend(int index, ::google::protobuf::uint64 value);
  inline void add_receivedfriend(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      receivedfriend() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_receivedfriend();

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetInfoRsp)
 private:
  inline void set_has_freetimetoday();
  inline void clear_has_freetimetoday();
  inline void set_has_maxbarrack();
  inline void clear_has_maxbarrack();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo > arrbarrack_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue > priorityqueue_;
  ::google::protobuf::uint32 freetimetoday_;
  ::google::protobuf::uint32 maxbarrack_;
  ::google::protobuf::uint64 refreshtime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos > barrackposarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > receivedfriend_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackEquipDecorationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackEquipDecorationReq : public ::google::protobuf::Message {
 public:
  TBarrackEquipDecorationReq();
  virtual ~TBarrackEquipDecorationReq();

  TBarrackEquipDecorationReq(const TBarrackEquipDecorationReq& from);

  inline TBarrackEquipDecorationReq& operator=(const TBarrackEquipDecorationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackEquipDecorationReq& default_instance();

  void Swap(TBarrackEquipDecorationReq* other);

  // implements Message ----------------------------------------------

  TBarrackEquipDecorationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackEquipDecorationReq& from);
  void MergeFrom(const TBarrackEquipDecorationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackEquipDecorationReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TSingleDecorationItem DecorationItemArr = 2;
  inline int decorationitemarr_size() const;
  inline void clear_decorationitemarr();
  static const int kDecorationItemArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackEquipDecorationReq</name>
  	<Function>
  		<name>decorationitemarr</name>
  		<replaceName>DecorationItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_decorationitemarr</name>
  		<replaceName>DecorationItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_decorationitemarr</name>
  		<replaceName>DecorationItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_decorationitemarr</name>
  		<replaceName>DecorationItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>decorationitemarr_size</name>
  		<replaceName>DecorationItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleDecorationItem& decorationitemarr(int index) const;
  inline ::pb::TSingleDecorationItem* mutable_decorationitemarr(int index);
  inline ::pb::TSingleDecorationItem* add_decorationitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >&
      decorationitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >*
      mutable_decorationitemarr();

  // @@protoc_insertion_point(class_scope:pb.TBarrackEquipDecorationReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem > decorationitemarr_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackEquipDecorationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPriorityQueue</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPriorityQueue : public ::google::protobuf::Message {
 public:
  TPriorityQueue();
  virtual ~TPriorityQueue();

  TPriorityQueue(const TPriorityQueue& from);

  inline TPriorityQueue& operator=(const TPriorityQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPriorityQueue& default_instance();

  void Swap(TPriorityQueue* other);

  // implements Message ----------------------------------------------

  TPriorityQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPriorityQueue& from);
  void MergeFrom(const TPriorityQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Priority PriorityLev = 1;
  inline bool has_prioritylev() const;
  inline void clear_prioritylev();
  static const int kPriorityLevFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPriorityQueue</name>
  	<Function>
  		<name>prioritylev</name>
  		<replaceName>PriorityLev</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_prioritylev</name>
  		<replaceName>PriorityLev</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_prioritylev</name>
  		<replaceName>PriorityLev</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::Priority prioritylev() const;
  inline void set_prioritylev(::pb::Priority value);

  // repeated uint32 Hid = 2;
  inline int hid_size() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPriorityQueue</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>hid_size</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid(int index) const;
  inline void set_hid(int index, ::google::protobuf::uint32 value);
  inline void add_hid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hid();

  // @@protoc_insertion_point(class_scope:pb.TPriorityQueue)
 private:
  inline void set_has_prioritylev();
  inline void clear_has_prioritylev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hid_;
  int prioritylev_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TPriorityQueue* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackAutoEquipDecorationReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackAutoEquipDecorationReq : public ::google::protobuf::Message {
 public:
  TBarrackAutoEquipDecorationReq();
  virtual ~TBarrackAutoEquipDecorationReq();

  TBarrackAutoEquipDecorationReq(const TBarrackAutoEquipDecorationReq& from);

  inline TBarrackAutoEquipDecorationReq& operator=(const TBarrackAutoEquipDecorationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackAutoEquipDecorationReq& default_instance();

  void Swap(TBarrackAutoEquipDecorationReq* other);

  // implements Message ----------------------------------------------

  TBarrackAutoEquipDecorationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackAutoEquipDecorationReq& from);
  void MergeFrom(const TBarrackAutoEquipDecorationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TPriorityQueue PriorityQueue = 1;
  inline int priorityqueue_size() const;
  inline void clear_priorityqueue();
  static const int kPriorityQueueFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackAutoEquipDecorationReq</name>
  	<Function>
  		<name>priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>priorityqueue_size</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPriorityQueue& priorityqueue(int index) const;
  inline ::pb::TPriorityQueue* mutable_priorityqueue(int index);
  inline ::pb::TPriorityQueue* add_priorityqueue();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >&
      priorityqueue() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >*
      mutable_priorityqueue();

  // @@protoc_insertion_point(class_scope:pb.TBarrackAutoEquipDecorationReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue > priorityqueue_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackAutoEquipDecorationReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackAutoEquipDecorationRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackAutoEquipDecorationRsp : public ::google::protobuf::Message {
 public:
  TBarrackAutoEquipDecorationRsp();
  virtual ~TBarrackAutoEquipDecorationRsp();

  TBarrackAutoEquipDecorationRsp(const TBarrackAutoEquipDecorationRsp& from);

  inline TBarrackAutoEquipDecorationRsp& operator=(const TBarrackAutoEquipDecorationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackAutoEquipDecorationRsp& default_instance();

  void Swap(TBarrackAutoEquipDecorationRsp* other);

  // implements Message ----------------------------------------------

  TBarrackAutoEquipDecorationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackAutoEquipDecorationRsp& from);
  void MergeFrom(const TBarrackAutoEquipDecorationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSingleBarrackInfo Barrack = 1;
  inline int barrack_size() const;
  inline void clear_barrack();
  static const int kBarrackFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackAutoEquipDecorationRsp</name>
  	<Function>
  		<name>barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>barrack_size</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackInfo& barrack(int index) const;
  inline ::pb::TSingleBarrackInfo* mutable_barrack(int index);
  inline ::pb::TSingleBarrackInfo* add_barrack();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
      barrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
      mutable_barrack();

  // @@protoc_insertion_point(class_scope:pb.TBarrackAutoEquipDecorationRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo > barrack_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackAutoEquipDecorationRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackLotteryReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackLotteryReq : public ::google::protobuf::Message {
 public:
  TBarrackLotteryReq();
  virtual ~TBarrackLotteryReq();

  TBarrackLotteryReq(const TBarrackLotteryReq& from);

  inline TBarrackLotteryReq& operator=(const TBarrackLotteryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackLotteryReq& default_instance();

  void Swap(TBarrackLotteryReq* other);

  // implements Message ----------------------------------------------

  TBarrackLotteryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackLotteryReq& from);
  void MergeFrom(const TBarrackLotteryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 LotteryType = 1;
  inline bool has_lotterytype() const;
  inline void clear_lotterytype();
  static const int kLotteryTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackLotteryReq</name>
  	<Function>
  		<name>lotterytype</name>
  		<replaceName>LotteryType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lotterytype</name>
  		<replaceName>LotteryType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lotterytype</name>
  		<replaceName>LotteryType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 lotterytype() const;
  inline void set_lotterytype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBarrackLotteryReq)
 private:
  inline void set_has_lotterytype();
  inline void clear_has_lotterytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 lotterytype_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackLotteryReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackLotteryRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackLotteryRsp : public ::google::protobuf::Message {
 public:
  TBarrackLotteryRsp();
  virtual ~TBarrackLotteryRsp();

  TBarrackLotteryRsp(const TBarrackLotteryRsp& from);

  inline TBarrackLotteryRsp& operator=(const TBarrackLotteryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackLotteryRsp& default_instance();

  void Swap(TBarrackLotteryRsp* other);

  // implements Message ----------------------------------------------

  TBarrackLotteryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackLotteryRsp& from);
  void MergeFrom(const TBarrackLotteryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackLotteryRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TBarrackLotteryRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackLotteryRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackSwapBarrackPosReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackSwapBarrackPosReq : public ::google::protobuf::Message {
 public:
  TBarrackSwapBarrackPosReq();
  virtual ~TBarrackSwapBarrackPosReq();

  TBarrackSwapBarrackPosReq(const TBarrackSwapBarrackPosReq& from);

  inline TBarrackSwapBarrackPosReq& operator=(const TBarrackSwapBarrackPosReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackSwapBarrackPosReq& default_instance();

  void Swap(TBarrackSwapBarrackPosReq* other);

  // implements Message ----------------------------------------------

  TBarrackSwapBarrackPosReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackSwapBarrackPosReq& from);
  void MergeFrom(const TBarrackSwapBarrackPosReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 HidArr = 1;
  inline int hidarr_size() const;
  inline void clear_hidarr();
  static const int kHidArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackSwapBarrackPosReq</name>
  	<Function>
  		<name>hidarr</name>
  		<replaceName>HidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_hidarr</name>
  		<replaceName>HidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_hidarr</name>
  		<replaceName>HidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hidarr</name>
  		<replaceName>HidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>hidarr_size</name>
  		<replaceName>HidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hidarr(int index) const;
  inline void set_hidarr(int index, ::google::protobuf::uint32 value);
  inline void add_hidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hidarr();

  // @@protoc_insertion_point(class_scope:pb.TBarrackSwapBarrackPosReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hidarr_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackSwapBarrackPosReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackChangeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackChangeNotify : public ::google::protobuf::Message {
 public:
  TBarrackChangeNotify();
  virtual ~TBarrackChangeNotify();

  TBarrackChangeNotify(const TBarrackChangeNotify& from);

  inline TBarrackChangeNotify& operator=(const TBarrackChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackChangeNotify& default_instance();

  void Swap(TBarrackChangeNotify* other);

  // implements Message ----------------------------------------------

  TBarrackChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackChangeNotify& from);
  void MergeFrom(const TBarrackChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSingleBarrackInfo Barrack = 1;
  inline int barrack_size() const;
  inline void clear_barrack();
  static const int kBarrackFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackChangeNotify</name>
  	<Function>
  		<name>barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrack</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>barrack_size</name>
  		<replaceName>Barrack</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackInfo& barrack(int index) const;
  inline ::pb::TSingleBarrackInfo* mutable_barrack(int index);
  inline ::pb::TSingleBarrackInfo* add_barrack();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
      barrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
      mutable_barrack();

  // repeated .pb.TPriorityQueue PriorityQueue = 2;
  inline int priorityqueue_size() const;
  inline void clear_priorityqueue();
  static const int kPriorityQueueFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackChangeNotify</name>
  	<Function>
  		<name>priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_priorityqueue</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>priorityqueue_size</name>
  		<replaceName>PriorityQueue</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPriorityQueue& priorityqueue(int index) const;
  inline ::pb::TPriorityQueue* mutable_priorityqueue(int index);
  inline ::pb::TPriorityQueue* add_priorityqueue();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >&
      priorityqueue() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >*
      mutable_priorityqueue();

  // repeated uint32 DelHid = 3;
  inline int delhid_size() const;
  inline void clear_delhid();
  static const int kDelHidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBarrackChangeNotify</name>
  	<Function>
  		<name>delhid</name>
  		<replaceName>DelHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_delhid</name>
  		<replaceName>DelHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_delhid</name>
  		<replaceName>DelHid</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_delhid</name>
  		<replaceName>DelHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>delhid_size</name>
  		<replaceName>DelHid</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 delhid(int index) const;
  inline void set_delhid(int index, ::google::protobuf::uint32 value);
  inline void add_delhid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      delhid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_delhid();

  // optional uint32 MaxBarrack = 4;
  inline bool has_maxbarrack() const;
  inline void clear_maxbarrack();
  static const int kMaxBarrackFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TBarrackChangeNotify</name>
  	<Function>
  		<name>maxbarrack</name>
  		<replaceName>MaxBarrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxbarrack</name>
  		<replaceName>MaxBarrack</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxbarrack</name>
  		<replaceName>MaxBarrack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxbarrack() const;
  inline void set_maxbarrack(::google::protobuf::uint32 value);

  // repeated .pb.TSingleBarrackPos BarrackPosArr = 5;
  inline int barrackposarr_size() const;
  inline void clear_barrackposarr();
  static const int kBarrackPosArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TBarrackChangeNotify</name>
  	<Function>
  		<name>barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>barrackposarr_size</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackPos& barrackposarr(int index) const;
  inline ::pb::TSingleBarrackPos* mutable_barrackposarr(int index);
  inline ::pb::TSingleBarrackPos* add_barrackposarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >&
      barrackposarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >*
      mutable_barrackposarr();

  // @@protoc_insertion_point(class_scope:pb.TBarrackChangeNotify)
 private:
  inline void set_has_maxbarrack();
  inline void clear_has_maxbarrack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo > barrack_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue > priorityqueue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > delhid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos > barrackposarr_;
  ::google::protobuf::uint32 maxbarrack_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackServerRankInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackServerRankInfo : public ::google::protobuf::Message {
 public:
  TBarrackServerRankInfo();
  virtual ~TBarrackServerRankInfo();

  TBarrackServerRankInfo(const TBarrackServerRankInfo& from);

  inline TBarrackServerRankInfo& operator=(const TBarrackServerRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackServerRankInfo& default_instance();

  void Swap(TBarrackServerRankInfo* other);

  // implements Message ----------------------------------------------

  TBarrackServerRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackServerRankInfo& from);
  void MergeFrom(const TBarrackServerRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackServerRankInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 BarrackScore = 2;
  inline bool has_barrackscore() const;
  inline void clear_barrackscore();
  static const int kBarrackScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackServerRankInfo</name>
  	<Function>
  		<name>barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 barrackscore() const;
  inline void set_barrackscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBarrackServerRankInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_barrackscore();
  inline void clear_has_barrackscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint32 barrackscore_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackServerRankInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetRankListReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetRankListReq : public ::google::protobuf::Message {
 public:
  TBarrackGetRankListReq();
  virtual ~TBarrackGetRankListReq();

  TBarrackGetRankListReq(const TBarrackGetRankListReq& from);

  inline TBarrackGetRankListReq& operator=(const TBarrackGetRankListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetRankListReq& default_instance();

  void Swap(TBarrackGetRankListReq* other);

  // implements Message ----------------------------------------------

  TBarrackGetRankListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetRankListReq& from);
  void MergeFrom(const TBarrackGetRankListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetRankListReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetRankListReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetRankListReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetRankListReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetRankListRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetRankListRsp : public ::google::protobuf::Message {
 public:
  TBarrackGetRankListRsp();
  virtual ~TBarrackGetRankListRsp();

  TBarrackGetRankListRsp(const TBarrackGetRankListRsp& from);

  inline TBarrackGetRankListRsp& operator=(const TBarrackGetRankListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetRankListRsp& default_instance();

  void Swap(TBarrackGetRankListRsp* other);

  // implements Message ----------------------------------------------

  TBarrackGetRankListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetRankListRsp& from);
  void MergeFrom(const TBarrackGetRankListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TBarrackServerRankInfo RankArr = 1;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetRankListRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBarrackServerRankInfo& rankarr(int index) const;
  inline ::pb::TBarrackServerRankInfo* mutable_rankarr(int index);
  inline ::pb::TBarrackServerRankInfo* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBarrackServerRankInfo >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBarrackServerRankInfo >*
      mutable_rankarr();

  // optional int32 MyRank = 2;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetRankListRsp</name>
  	<Function>
  		<name>myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 myrank() const;
  inline void set_myrank(::google::protobuf::int32 value);

  // optional uint32 BarrackScore = 3;
  inline bool has_barrackscore() const;
  inline void clear_barrackscore();
  static const int kBarrackScoreFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetRankListRsp</name>
  	<Function>
  		<name>barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 barrackscore() const;
  inline void set_barrackscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetRankListRsp)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();
  inline void set_has_barrackscore();
  inline void clear_has_barrackscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBarrackServerRankInfo > rankarr_;
  ::google::protobuf::int32 myrank_;
  ::google::protobuf::uint32 barrackscore_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetRankListRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetTreasuerBoxAwardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetTreasuerBoxAwardReq : public ::google::protobuf::Message {
 public:
  TBarrackGetTreasuerBoxAwardReq();
  virtual ~TBarrackGetTreasuerBoxAwardReq();

  TBarrackGetTreasuerBoxAwardReq(const TBarrackGetTreasuerBoxAwardReq& from);

  inline TBarrackGetTreasuerBoxAwardReq& operator=(const TBarrackGetTreasuerBoxAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetTreasuerBoxAwardReq& default_instance();

  void Swap(TBarrackGetTreasuerBoxAwardReq* other);

  // implements Message ----------------------------------------------

  TBarrackGetTreasuerBoxAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetTreasuerBoxAwardReq& from);
  void MergeFrom(const TBarrackGetTreasuerBoxAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 FriendUid = 1;
  inline bool has_frienduid() const;
  inline void clear_frienduid();
  static const int kFriendUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetTreasuerBoxAwardReq</name>
  	<Function>
  		<name>frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 frienduid() const;
  inline void set_frienduid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetTreasuerBoxAwardReq)
 private:
  inline void set_has_frienduid();
  inline void clear_has_frienduid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 frienduid_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetTreasuerBoxAwardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetTreasuerBoxAwardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetTreasuerBoxAwardRsp : public ::google::protobuf::Message {
 public:
  TBarrackGetTreasuerBoxAwardRsp();
  virtual ~TBarrackGetTreasuerBoxAwardRsp();

  TBarrackGetTreasuerBoxAwardRsp(const TBarrackGetTreasuerBoxAwardRsp& from);

  inline TBarrackGetTreasuerBoxAwardRsp& operator=(const TBarrackGetTreasuerBoxAwardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetTreasuerBoxAwardRsp& default_instance();

  void Swap(TBarrackGetTreasuerBoxAwardRsp* other);

  // implements Message ----------------------------------------------

  TBarrackGetTreasuerBoxAwardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetTreasuerBoxAwardRsp& from);
  void MergeFrom(const TBarrackGetTreasuerBoxAwardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetTreasuerBoxAwardRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetTreasuerBoxAwardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetTreasuerBoxAwardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetFriendBarrackInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetFriendBarrackInfoRsp : public ::google::protobuf::Message {
 public:
  TBarrackGetFriendBarrackInfoRsp();
  virtual ~TBarrackGetFriendBarrackInfoRsp();

  TBarrackGetFriendBarrackInfoRsp(const TBarrackGetFriendBarrackInfoRsp& from);

  inline TBarrackGetFriendBarrackInfoRsp& operator=(const TBarrackGetFriendBarrackInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetFriendBarrackInfoRsp& default_instance();

  void Swap(TBarrackGetFriendBarrackInfoRsp* other);

  // implements Message ----------------------------------------------

  TBarrackGetFriendBarrackInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetFriendBarrackInfoRsp& from);
  void MergeFrom(const TBarrackGetFriendBarrackInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ReceivedNum = 1;
  inline bool has_receivednum() const;
  inline void clear_receivednum();
  static const int kReceivedNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetFriendBarrackInfoRsp</name>
  	<Function>
  		<name>receivednum</name>
  		<replaceName>ReceivedNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivednum</name>
  		<replaceName>ReceivedNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivednum</name>
  		<replaceName>ReceivedNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivednum() const;
  inline void set_receivednum(::google::protobuf::uint32 value);

  // optional uint32 HavaBarrackFriendNum = 2;
  inline bool has_havabarrackfriendnum() const;
  inline void clear_havabarrackfriendnum();
  static const int kHavaBarrackFriendNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetFriendBarrackInfoRsp</name>
  	<Function>
  		<name>havabarrackfriendnum</name>
  		<replaceName>HavaBarrackFriendNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_havabarrackfriendnum</name>
  		<replaceName>HavaBarrackFriendNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_havabarrackfriendnum</name>
  		<replaceName>HavaBarrackFriendNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 havabarrackfriendnum() const;
  inline void set_havabarrackfriendnum(::google::protobuf::uint32 value);

  // repeated uint64 ReceviedFriendUid = 3;
  inline int receviedfrienduid_size() const;
  inline void clear_receviedfrienduid();
  static const int kReceviedFriendUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetFriendBarrackInfoRsp</name>
  	<Function>
  		<name>receviedfrienduid</name>
  		<replaceName>ReceviedFriendUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receviedfrienduid</name>
  		<replaceName>ReceviedFriendUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receviedfrienduid</name>
  		<replaceName>ReceviedFriendUid</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receviedfrienduid</name>
  		<replaceName>ReceviedFriendUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receviedfrienduid_size</name>
  		<replaceName>ReceviedFriendUid</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receviedfrienduid(int index) const;
  inline void set_receviedfrienduid(int index, ::google::protobuf::uint64 value);
  inline void add_receviedfrienduid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      receviedfrienduid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_receviedfrienduid();

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetFriendBarrackInfoRsp)
 private:
  inline void set_has_receivednum();
  inline void clear_has_receivednum();
  inline void set_has_havabarrackfriendnum();
  inline void clear_has_havabarrackfriendnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 receivednum_;
  ::google::protobuf::uint32 havabarrackfriendnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > receviedfrienduid_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetFriendBarrackInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetBarrackInfoAndUserInfoByServerReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetBarrackInfoAndUserInfoByServerReq : public ::google::protobuf::Message {
 public:
  TBarrackGetBarrackInfoAndUserInfoByServerReq();
  virtual ~TBarrackGetBarrackInfoAndUserInfoByServerReq();

  TBarrackGetBarrackInfoAndUserInfoByServerReq(const TBarrackGetBarrackInfoAndUserInfoByServerReq& from);

  inline TBarrackGetBarrackInfoAndUserInfoByServerReq& operator=(const TBarrackGetBarrackInfoAndUserInfoByServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetBarrackInfoAndUserInfoByServerReq& default_instance();

  void Swap(TBarrackGetBarrackInfoAndUserInfoByServerReq* other);

  // implements Message ----------------------------------------------

  TBarrackGetBarrackInfoAndUserInfoByServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetBarrackInfoAndUserInfoByServerReq& from);
  void MergeFrom(const TBarrackGetBarrackInfoAndUserInfoByServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 FriendUid = 1;
  inline int frienduid_size() const;
  inline void clear_frienduid();
  static const int kFriendUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetBarrackInfoAndUserInfoByServerReq</name>
  	<Function>
  		<name>frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_frienduid</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>frienduid_size</name>
  		<replaceName>FriendUid</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 frienduid(int index) const;
  inline void set_frienduid(int index, ::google::protobuf::uint64 value);
  inline void add_frienduid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      frienduid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_frienduid();

  // repeated string ServerId = 2;
  inline int serverid_size() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetBarrackInfoAndUserInfoByServerReq</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>serverid_size</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid(int index) const;
  inline ::std::string* mutable_serverid(int index);
  inline void set_serverid(int index, const ::std::string& value);
  inline void set_serverid(int index, const char* value);
  inline void set_serverid(int index, const char* value, size_t size);
  inline ::std::string* add_serverid();
  inline void add_serverid(const ::std::string& value);
  inline void add_serverid(const char* value);
  inline void add_serverid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& serverid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_serverid();

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > frienduid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> serverid_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetBarrackInfoAndUserInfoByServerReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackOtherUserInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackOtherUserInfo : public ::google::protobuf::Message {
 public:
  TBarrackOtherUserInfo();
  virtual ~TBarrackOtherUserInfo();

  TBarrackOtherUserInfo(const TBarrackOtherUserInfo& from);

  inline TBarrackOtherUserInfo& operator=(const TBarrackOtherUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackOtherUserInfo& default_instance();

  void Swap(TBarrackOtherUserInfo* other);

  // implements Message ----------------------------------------------

  TBarrackOtherUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackOtherUserInfo& from);
  void MergeFrom(const TBarrackOtherUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSingleBarrackInfo ArrBarrack = 1;
  inline int arrbarrack_size() const;
  inline void clear_arrbarrack();
  static const int kArrBarrackFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackOtherUserInfo</name>
  	<Function>
  		<name>arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrbarrack</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrbarrack_size</name>
  		<replaceName>ArrBarrack</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackInfo& arrbarrack(int index) const;
  inline ::pb::TSingleBarrackInfo* mutable_arrbarrack(int index);
  inline ::pb::TSingleBarrackInfo* add_arrbarrack();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
      arrbarrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
      mutable_arrbarrack();

  // repeated .pb.TSingleBarrackPos BarrackPosArr = 2;
  inline int barrackposarr_size() const;
  inline void clear_barrackposarr();
  static const int kBarrackPosArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBarrackOtherUserInfo</name>
  	<Function>
  		<name>barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrackposarr</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>barrackposarr_size</name>
  		<replaceName>BarrackPosArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSingleBarrackPos& barrackposarr(int index) const;
  inline ::pb::TSingleBarrackPos* mutable_barrackposarr(int index);
  inline ::pb::TSingleBarrackPos* add_barrackposarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >&
      barrackposarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >*
      mutable_barrackposarr();

  // optional .pb.TUserSimpleInfo FriendUserSimpleInfo = 3;
  inline bool has_friendusersimpleinfo() const;
  inline void clear_friendusersimpleinfo();
  static const int kFriendUserSimpleInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBarrackOtherUserInfo</name>
  	<Function>
  		<name>friendusersimpleinfo</name>
  		<replaceName>FriendUserSimpleInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_friendusersimpleinfo</name>
  		<replaceName>FriendUserSimpleInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_friendusersimpleinfo</name>
  		<replaceName>FriendUserSimpleInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_friendusersimpleinfo</name>
  		<replaceName>FriendUserSimpleInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& friendusersimpleinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_friendusersimpleinfo();
  inline ::pb::TUserSimpleInfo* release_friendusersimpleinfo();
  inline void set_allocated_friendusersimpleinfo(::pb::TUserSimpleInfo* friendusersimpleinfo);

  // optional uint32 BarrackScore = 4;
  inline bool has_barrackscore() const;
  inline void clear_barrackscore();
  static const int kBarrackScoreFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TBarrackOtherUserInfo</name>
  	<Function>
  		<name>barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_barrackscore</name>
  		<replaceName>BarrackScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 barrackscore() const;
  inline void set_barrackscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBarrackOtherUserInfo)
 private:
  inline void set_has_friendusersimpleinfo();
  inline void clear_has_friendusersimpleinfo();
  inline void set_has_barrackscore();
  inline void clear_has_barrackscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo > arrbarrack_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos > barrackposarr_;
  ::pb::TUserSimpleInfo* friendusersimpleinfo_;
  ::google::protobuf::uint32 barrackscore_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackOtherUserInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBarrackGetBarrackInfoAndUserInfoByServerRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Barrack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBarrackGetBarrackInfoAndUserInfoByServerRsp : public ::google::protobuf::Message {
 public:
  TBarrackGetBarrackInfoAndUserInfoByServerRsp();
  virtual ~TBarrackGetBarrackInfoAndUserInfoByServerRsp();

  TBarrackGetBarrackInfoAndUserInfoByServerRsp(const TBarrackGetBarrackInfoAndUserInfoByServerRsp& from);

  inline TBarrackGetBarrackInfoAndUserInfoByServerRsp& operator=(const TBarrackGetBarrackInfoAndUserInfoByServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBarrackGetBarrackInfoAndUserInfoByServerRsp& default_instance();

  void Swap(TBarrackGetBarrackInfoAndUserInfoByServerRsp* other);

  // implements Message ----------------------------------------------

  TBarrackGetBarrackInfoAndUserInfoByServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBarrackGetBarrackInfoAndUserInfoByServerRsp& from);
  void MergeFrom(const TBarrackGetBarrackInfoAndUserInfoByServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TBarrackOtherUserInfo FriendInfoArr = 1;
  inline int friendinfoarr_size() const;
  inline void clear_friendinfoarr();
  static const int kFriendInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBarrackGetBarrackInfoAndUserInfoByServerRsp</name>
  	<Function>
  		<name>friendinfoarr</name>
  		<replaceName>FriendInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_friendinfoarr</name>
  		<replaceName>FriendInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_friendinfoarr</name>
  		<replaceName>FriendInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_friendinfoarr</name>
  		<replaceName>FriendInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>friendinfoarr_size</name>
  		<replaceName>FriendInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBarrackOtherUserInfo& friendinfoarr(int index) const;
  inline ::pb::TBarrackOtherUserInfo* mutable_friendinfoarr(int index);
  inline ::pb::TBarrackOtherUserInfo* add_friendinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBarrackOtherUserInfo >&
      friendinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBarrackOtherUserInfo >*
      mutable_friendinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TBarrackGetBarrackInfoAndUserInfoByServerRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBarrackOtherUserInfo > friendinfoarr_;
  friend void  protobuf_AddDesc_net_2fBarrack_2eproto();
  friend void protobuf_AssignDesc_net_2fBarrack_2eproto();
  friend void protobuf_ShutdownFile_net_2fBarrack_2eproto();

  void InitAsDefaultInstance();
  static TBarrackGetBarrackInfoAndUserInfoByServerRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TSingleDecorationItem

// optional uint32 Pos = 1;
inline bool TSingleDecorationItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSingleDecorationItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSingleDecorationItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSingleDecorationItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TSingleDecorationItem::pos() const {
  // @@protoc_insertion_point(field_get:pb.TSingleDecorationItem.Pos)
  return pos_;
}
inline void TSingleDecorationItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleDecorationItem.Pos)
}

// optional uint32 Tid = 2;
inline bool TSingleDecorationItem::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSingleDecorationItem::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSingleDecorationItem::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSingleDecorationItem::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TSingleDecorationItem::tid() const {
  // @@protoc_insertion_point(field_get:pb.TSingleDecorationItem.Tid)
  return tid_;
}
inline void TSingleDecorationItem::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleDecorationItem.Tid)
}

// optional uint32 ItemId = 3;
inline bool TSingleDecorationItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSingleDecorationItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSingleDecorationItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSingleDecorationItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 TSingleDecorationItem::itemid() const {
  // @@protoc_insertion_point(field_get:pb.TSingleDecorationItem.ItemId)
  return itemid_;
}
inline void TSingleDecorationItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleDecorationItem.ItemId)
}

// optional uint32 StarLv = 4;
inline bool TSingleDecorationItem::has_starlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSingleDecorationItem::set_has_starlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSingleDecorationItem::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSingleDecorationItem::clear_starlv() {
  starlv_ = 0u;
  clear_has_starlv();
}
inline ::google::protobuf::uint32 TSingleDecorationItem::starlv() const {
  // @@protoc_insertion_point(field_get:pb.TSingleDecorationItem.StarLv)
  return starlv_;
}
inline void TSingleDecorationItem::set_starlv(::google::protobuf::uint32 value) {
  set_has_starlv();
  starlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleDecorationItem.StarLv)
}

// -------------------------------------------------------------------

// TSingleBarrackInfo

// optional uint32 Hid = 1;
inline bool TSingleBarrackInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSingleBarrackInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSingleBarrackInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSingleBarrackInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TSingleBarrackInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TSingleBarrackInfo.Hid)
  return hid_;
}
inline void TSingleBarrackInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleBarrackInfo.Hid)
}

// repeated .pb.TSingleDecorationItem DecorationArr = 2;
inline int TSingleBarrackInfo::decorationarr_size() const {
  return decorationarr_.size();
}
inline void TSingleBarrackInfo::clear_decorationarr() {
  decorationarr_.Clear();
}
inline const ::pb::TSingleDecorationItem& TSingleBarrackInfo::decorationarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSingleBarrackInfo.DecorationArr)
  return decorationarr_.Get(index);
}
inline ::pb::TSingleDecorationItem* TSingleBarrackInfo::mutable_decorationarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSingleBarrackInfo.DecorationArr)
  return decorationarr_.Mutable(index);
}
inline ::pb::TSingleDecorationItem* TSingleBarrackInfo::add_decorationarr() {
  // @@protoc_insertion_point(field_add:pb.TSingleBarrackInfo.DecorationArr)
  return decorationarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >&
TSingleBarrackInfo::decorationarr() const {
  // @@protoc_insertion_point(field_list:pb.TSingleBarrackInfo.DecorationArr)
  return decorationarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >*
TSingleBarrackInfo::mutable_decorationarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSingleBarrackInfo.DecorationArr)
  return &decorationarr_;
}

// optional uint32 Htid = 3;
inline bool TSingleBarrackInfo::has_htid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSingleBarrackInfo::set_has_htid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSingleBarrackInfo::clear_has_htid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSingleBarrackInfo::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 TSingleBarrackInfo::htid() const {
  // @@protoc_insertion_point(field_get:pb.TSingleBarrackInfo.Htid)
  return htid_;
}
inline void TSingleBarrackInfo::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleBarrackInfo.Htid)
}

// -------------------------------------------------------------------

// TSingleBarrackPos

// optional uint32 Hid = 1;
inline bool TSingleBarrackPos::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSingleBarrackPos::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSingleBarrackPos::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSingleBarrackPos::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TSingleBarrackPos::hid() const {
  // @@protoc_insertion_point(field_get:pb.TSingleBarrackPos.Hid)
  return hid_;
}
inline void TSingleBarrackPos::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleBarrackPos.Hid)
}

// optional uint32 Pos = 2;
inline bool TSingleBarrackPos::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSingleBarrackPos::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSingleBarrackPos::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSingleBarrackPos::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TSingleBarrackPos::pos() const {
  // @@protoc_insertion_point(field_get:pb.TSingleBarrackPos.Pos)
  return pos_;
}
inline void TSingleBarrackPos::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleBarrackPos.Pos)
}

// optional uint32 Htid = 3;
inline bool TSingleBarrackPos::has_htid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSingleBarrackPos::set_has_htid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSingleBarrackPos::clear_has_htid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSingleBarrackPos::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 TSingleBarrackPos::htid() const {
  // @@protoc_insertion_point(field_get:pb.TSingleBarrackPos.Htid)
  return htid_;
}
inline void TSingleBarrackPos::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSingleBarrackPos.Htid)
}

// -------------------------------------------------------------------

// TBarrackGetInfoRsp

// repeated .pb.TSingleBarrackInfo ArrBarrack = 1;
inline int TBarrackGetInfoRsp::arrbarrack_size() const {
  return arrbarrack_.size();
}
inline void TBarrackGetInfoRsp::clear_arrbarrack() {
  arrbarrack_.Clear();
}
inline const ::pb::TSingleBarrackInfo& TBarrackGetInfoRsp::arrbarrack(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.ArrBarrack)
  return arrbarrack_.Get(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackGetInfoRsp::mutable_arrbarrack(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetInfoRsp.ArrBarrack)
  return arrbarrack_.Mutable(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackGetInfoRsp::add_arrbarrack() {
  // @@protoc_insertion_point(field_add:pb.TBarrackGetInfoRsp.ArrBarrack)
  return arrbarrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
TBarrackGetInfoRsp::arrbarrack() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetInfoRsp.ArrBarrack)
  return arrbarrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
TBarrackGetInfoRsp::mutable_arrbarrack() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetInfoRsp.ArrBarrack)
  return &arrbarrack_;
}

// optional uint32 FreeTimeToday = 2;
inline bool TBarrackGetInfoRsp::has_freetimetoday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBarrackGetInfoRsp::set_has_freetimetoday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBarrackGetInfoRsp::clear_has_freetimetoday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBarrackGetInfoRsp::clear_freetimetoday() {
  freetimetoday_ = 0u;
  clear_has_freetimetoday();
}
inline ::google::protobuf::uint32 TBarrackGetInfoRsp::freetimetoday() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.FreeTimeToday)
  return freetimetoday_;
}
inline void TBarrackGetInfoRsp::set_freetimetoday(::google::protobuf::uint32 value) {
  set_has_freetimetoday();
  freetimetoday_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetInfoRsp.FreeTimeToday)
}

// repeated .pb.TPriorityQueue PriorityQueue = 3;
inline int TBarrackGetInfoRsp::priorityqueue_size() const {
  return priorityqueue_.size();
}
inline void TBarrackGetInfoRsp::clear_priorityqueue() {
  priorityqueue_.Clear();
}
inline const ::pb::TPriorityQueue& TBarrackGetInfoRsp::priorityqueue(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.PriorityQueue)
  return priorityqueue_.Get(index);
}
inline ::pb::TPriorityQueue* TBarrackGetInfoRsp::mutable_priorityqueue(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetInfoRsp.PriorityQueue)
  return priorityqueue_.Mutable(index);
}
inline ::pb::TPriorityQueue* TBarrackGetInfoRsp::add_priorityqueue() {
  // @@protoc_insertion_point(field_add:pb.TBarrackGetInfoRsp.PriorityQueue)
  return priorityqueue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >&
TBarrackGetInfoRsp::priorityqueue() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetInfoRsp.PriorityQueue)
  return priorityqueue_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >*
TBarrackGetInfoRsp::mutable_priorityqueue() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetInfoRsp.PriorityQueue)
  return &priorityqueue_;
}

// optional uint32 MaxBarrack = 4;
inline bool TBarrackGetInfoRsp::has_maxbarrack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TBarrackGetInfoRsp::set_has_maxbarrack() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TBarrackGetInfoRsp::clear_has_maxbarrack() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TBarrackGetInfoRsp::clear_maxbarrack() {
  maxbarrack_ = 0u;
  clear_has_maxbarrack();
}
inline ::google::protobuf::uint32 TBarrackGetInfoRsp::maxbarrack() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.MaxBarrack)
  return maxbarrack_;
}
inline void TBarrackGetInfoRsp::set_maxbarrack(::google::protobuf::uint32 value) {
  set_has_maxbarrack();
  maxbarrack_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetInfoRsp.MaxBarrack)
}

// optional uint64 RefreshTime = 5;
inline bool TBarrackGetInfoRsp::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TBarrackGetInfoRsp::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TBarrackGetInfoRsp::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TBarrackGetInfoRsp::clear_refreshtime() {
  refreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_refreshtime();
}
inline ::google::protobuf::uint64 TBarrackGetInfoRsp::refreshtime() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.RefreshTime)
  return refreshtime_;
}
inline void TBarrackGetInfoRsp::set_refreshtime(::google::protobuf::uint64 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetInfoRsp.RefreshTime)
}

// repeated .pb.TSingleBarrackPos BarrackPosArr = 6;
inline int TBarrackGetInfoRsp::barrackposarr_size() const {
  return barrackposarr_.size();
}
inline void TBarrackGetInfoRsp::clear_barrackposarr() {
  barrackposarr_.Clear();
}
inline const ::pb::TSingleBarrackPos& TBarrackGetInfoRsp::barrackposarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.BarrackPosArr)
  return barrackposarr_.Get(index);
}
inline ::pb::TSingleBarrackPos* TBarrackGetInfoRsp::mutable_barrackposarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetInfoRsp.BarrackPosArr)
  return barrackposarr_.Mutable(index);
}
inline ::pb::TSingleBarrackPos* TBarrackGetInfoRsp::add_barrackposarr() {
  // @@protoc_insertion_point(field_add:pb.TBarrackGetInfoRsp.BarrackPosArr)
  return barrackposarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >&
TBarrackGetInfoRsp::barrackposarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetInfoRsp.BarrackPosArr)
  return barrackposarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >*
TBarrackGetInfoRsp::mutable_barrackposarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetInfoRsp.BarrackPosArr)
  return &barrackposarr_;
}

// repeated uint64 ReceivedFriend = 7;
inline int TBarrackGetInfoRsp::receivedfriend_size() const {
  return receivedfriend_.size();
}
inline void TBarrackGetInfoRsp::clear_receivedfriend() {
  receivedfriend_.Clear();
}
inline ::google::protobuf::uint64 TBarrackGetInfoRsp::receivedfriend(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetInfoRsp.ReceivedFriend)
  return receivedfriend_.Get(index);
}
inline void TBarrackGetInfoRsp::set_receivedfriend(int index, ::google::protobuf::uint64 value) {
  receivedfriend_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TBarrackGetInfoRsp.ReceivedFriend)
}
inline void TBarrackGetInfoRsp::add_receivedfriend(::google::protobuf::uint64 value) {
  receivedfriend_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TBarrackGetInfoRsp.ReceivedFriend)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TBarrackGetInfoRsp::receivedfriend() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetInfoRsp.ReceivedFriend)
  return receivedfriend_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TBarrackGetInfoRsp::mutable_receivedfriend() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetInfoRsp.ReceivedFriend)
  return &receivedfriend_;
}

// -------------------------------------------------------------------

// TBarrackEquipDecorationReq

// optional uint32 Hid = 1;
inline bool TBarrackEquipDecorationReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBarrackEquipDecorationReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBarrackEquipDecorationReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBarrackEquipDecorationReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TBarrackEquipDecorationReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackEquipDecorationReq.Hid)
  return hid_;
}
inline void TBarrackEquipDecorationReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackEquipDecorationReq.Hid)
}

// repeated .pb.TSingleDecorationItem DecorationItemArr = 2;
inline int TBarrackEquipDecorationReq::decorationitemarr_size() const {
  return decorationitemarr_.size();
}
inline void TBarrackEquipDecorationReq::clear_decorationitemarr() {
  decorationitemarr_.Clear();
}
inline const ::pb::TSingleDecorationItem& TBarrackEquipDecorationReq::decorationitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackEquipDecorationReq.DecorationItemArr)
  return decorationitemarr_.Get(index);
}
inline ::pb::TSingleDecorationItem* TBarrackEquipDecorationReq::mutable_decorationitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackEquipDecorationReq.DecorationItemArr)
  return decorationitemarr_.Mutable(index);
}
inline ::pb::TSingleDecorationItem* TBarrackEquipDecorationReq::add_decorationitemarr() {
  // @@protoc_insertion_point(field_add:pb.TBarrackEquipDecorationReq.DecorationItemArr)
  return decorationitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >&
TBarrackEquipDecorationReq::decorationitemarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackEquipDecorationReq.DecorationItemArr)
  return decorationitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleDecorationItem >*
TBarrackEquipDecorationReq::mutable_decorationitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackEquipDecorationReq.DecorationItemArr)
  return &decorationitemarr_;
}

// -------------------------------------------------------------------

// TPriorityQueue

// optional .pb.Priority PriorityLev = 1;
inline bool TPriorityQueue::has_prioritylev() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPriorityQueue::set_has_prioritylev() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPriorityQueue::clear_has_prioritylev() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPriorityQueue::clear_prioritylev() {
  prioritylev_ = 1;
  clear_has_prioritylev();
}
inline ::pb::Priority TPriorityQueue::prioritylev() const {
  // @@protoc_insertion_point(field_get:pb.TPriorityQueue.PriorityLev)
  return static_cast< ::pb::Priority >(prioritylev_);
}
inline void TPriorityQueue::set_prioritylev(::pb::Priority value) {
  assert(::pb::Priority_IsValid(value));
  set_has_prioritylev();
  prioritylev_ = value;
  // @@protoc_insertion_point(field_set:pb.TPriorityQueue.PriorityLev)
}

// repeated uint32 Hid = 2;
inline int TPriorityQueue::hid_size() const {
  return hid_.size();
}
inline void TPriorityQueue::clear_hid() {
  hid_.Clear();
}
inline ::google::protobuf::uint32 TPriorityQueue::hid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPriorityQueue.Hid)
  return hid_.Get(index);
}
inline void TPriorityQueue::set_hid(int index, ::google::protobuf::uint32 value) {
  hid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TPriorityQueue.Hid)
}
inline void TPriorityQueue::add_hid(::google::protobuf::uint32 value) {
  hid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TPriorityQueue.Hid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TPriorityQueue::hid() const {
  // @@protoc_insertion_point(field_list:pb.TPriorityQueue.Hid)
  return hid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TPriorityQueue::mutable_hid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPriorityQueue.Hid)
  return &hid_;
}

// -------------------------------------------------------------------

// TBarrackAutoEquipDecorationReq

// repeated .pb.TPriorityQueue PriorityQueue = 1;
inline int TBarrackAutoEquipDecorationReq::priorityqueue_size() const {
  return priorityqueue_.size();
}
inline void TBarrackAutoEquipDecorationReq::clear_priorityqueue() {
  priorityqueue_.Clear();
}
inline const ::pb::TPriorityQueue& TBarrackAutoEquipDecorationReq::priorityqueue(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackAutoEquipDecorationReq.PriorityQueue)
  return priorityqueue_.Get(index);
}
inline ::pb::TPriorityQueue* TBarrackAutoEquipDecorationReq::mutable_priorityqueue(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackAutoEquipDecorationReq.PriorityQueue)
  return priorityqueue_.Mutable(index);
}
inline ::pb::TPriorityQueue* TBarrackAutoEquipDecorationReq::add_priorityqueue() {
  // @@protoc_insertion_point(field_add:pb.TBarrackAutoEquipDecorationReq.PriorityQueue)
  return priorityqueue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >&
TBarrackAutoEquipDecorationReq::priorityqueue() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackAutoEquipDecorationReq.PriorityQueue)
  return priorityqueue_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >*
TBarrackAutoEquipDecorationReq::mutable_priorityqueue() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackAutoEquipDecorationReq.PriorityQueue)
  return &priorityqueue_;
}

// -------------------------------------------------------------------

// TBarrackAutoEquipDecorationRsp

// repeated .pb.TSingleBarrackInfo Barrack = 1;
inline int TBarrackAutoEquipDecorationRsp::barrack_size() const {
  return barrack_.size();
}
inline void TBarrackAutoEquipDecorationRsp::clear_barrack() {
  barrack_.Clear();
}
inline const ::pb::TSingleBarrackInfo& TBarrackAutoEquipDecorationRsp::barrack(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackAutoEquipDecorationRsp.Barrack)
  return barrack_.Get(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackAutoEquipDecorationRsp::mutable_barrack(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackAutoEquipDecorationRsp.Barrack)
  return barrack_.Mutable(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackAutoEquipDecorationRsp::add_barrack() {
  // @@protoc_insertion_point(field_add:pb.TBarrackAutoEquipDecorationRsp.Barrack)
  return barrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
TBarrackAutoEquipDecorationRsp::barrack() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackAutoEquipDecorationRsp.Barrack)
  return barrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
TBarrackAutoEquipDecorationRsp::mutable_barrack() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackAutoEquipDecorationRsp.Barrack)
  return &barrack_;
}

// -------------------------------------------------------------------

// TBarrackLotteryReq

// optional uint32 LotteryType = 1;
inline bool TBarrackLotteryReq::has_lotterytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBarrackLotteryReq::set_has_lotterytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBarrackLotteryReq::clear_has_lotterytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBarrackLotteryReq::clear_lotterytype() {
  lotterytype_ = 0u;
  clear_has_lotterytype();
}
inline ::google::protobuf::uint32 TBarrackLotteryReq::lotterytype() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackLotteryReq.LotteryType)
  return lotterytype_;
}
inline void TBarrackLotteryReq::set_lotterytype(::google::protobuf::uint32 value) {
  set_has_lotterytype();
  lotterytype_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackLotteryReq.LotteryType)
}

// -------------------------------------------------------------------

// TBarrackLotteryRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TBarrackLotteryRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TBarrackLotteryRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TBarrackLotteryRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackLotteryRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TBarrackLotteryRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackLotteryRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TBarrackLotteryRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TBarrackLotteryRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TBarrackLotteryRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackLotteryRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TBarrackLotteryRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackLotteryRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TBarrackSwapBarrackPosReq

// repeated uint32 HidArr = 1;
inline int TBarrackSwapBarrackPosReq::hidarr_size() const {
  return hidarr_.size();
}
inline void TBarrackSwapBarrackPosReq::clear_hidarr() {
  hidarr_.Clear();
}
inline ::google::protobuf::uint32 TBarrackSwapBarrackPosReq::hidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackSwapBarrackPosReq.HidArr)
  return hidarr_.Get(index);
}
inline void TBarrackSwapBarrackPosReq::set_hidarr(int index, ::google::protobuf::uint32 value) {
  hidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TBarrackSwapBarrackPosReq.HidArr)
}
inline void TBarrackSwapBarrackPosReq::add_hidarr(::google::protobuf::uint32 value) {
  hidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TBarrackSwapBarrackPosReq.HidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TBarrackSwapBarrackPosReq::hidarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackSwapBarrackPosReq.HidArr)
  return hidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TBarrackSwapBarrackPosReq::mutable_hidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackSwapBarrackPosReq.HidArr)
  return &hidarr_;
}

// -------------------------------------------------------------------

// TBarrackChangeNotify

// repeated .pb.TSingleBarrackInfo Barrack = 1;
inline int TBarrackChangeNotify::barrack_size() const {
  return barrack_.size();
}
inline void TBarrackChangeNotify::clear_barrack() {
  barrack_.Clear();
}
inline const ::pb::TSingleBarrackInfo& TBarrackChangeNotify::barrack(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackChangeNotify.Barrack)
  return barrack_.Get(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackChangeNotify::mutable_barrack(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackChangeNotify.Barrack)
  return barrack_.Mutable(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackChangeNotify::add_barrack() {
  // @@protoc_insertion_point(field_add:pb.TBarrackChangeNotify.Barrack)
  return barrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
TBarrackChangeNotify::barrack() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackChangeNotify.Barrack)
  return barrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
TBarrackChangeNotify::mutable_barrack() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackChangeNotify.Barrack)
  return &barrack_;
}

// repeated .pb.TPriorityQueue PriorityQueue = 2;
inline int TBarrackChangeNotify::priorityqueue_size() const {
  return priorityqueue_.size();
}
inline void TBarrackChangeNotify::clear_priorityqueue() {
  priorityqueue_.Clear();
}
inline const ::pb::TPriorityQueue& TBarrackChangeNotify::priorityqueue(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackChangeNotify.PriorityQueue)
  return priorityqueue_.Get(index);
}
inline ::pb::TPriorityQueue* TBarrackChangeNotify::mutable_priorityqueue(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackChangeNotify.PriorityQueue)
  return priorityqueue_.Mutable(index);
}
inline ::pb::TPriorityQueue* TBarrackChangeNotify::add_priorityqueue() {
  // @@protoc_insertion_point(field_add:pb.TBarrackChangeNotify.PriorityQueue)
  return priorityqueue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >&
TBarrackChangeNotify::priorityqueue() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackChangeNotify.PriorityQueue)
  return priorityqueue_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPriorityQueue >*
TBarrackChangeNotify::mutable_priorityqueue() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackChangeNotify.PriorityQueue)
  return &priorityqueue_;
}

// repeated uint32 DelHid = 3;
inline int TBarrackChangeNotify::delhid_size() const {
  return delhid_.size();
}
inline void TBarrackChangeNotify::clear_delhid() {
  delhid_.Clear();
}
inline ::google::protobuf::uint32 TBarrackChangeNotify::delhid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackChangeNotify.DelHid)
  return delhid_.Get(index);
}
inline void TBarrackChangeNotify::set_delhid(int index, ::google::protobuf::uint32 value) {
  delhid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TBarrackChangeNotify.DelHid)
}
inline void TBarrackChangeNotify::add_delhid(::google::protobuf::uint32 value) {
  delhid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TBarrackChangeNotify.DelHid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TBarrackChangeNotify::delhid() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackChangeNotify.DelHid)
  return delhid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TBarrackChangeNotify::mutable_delhid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackChangeNotify.DelHid)
  return &delhid_;
}

// optional uint32 MaxBarrack = 4;
inline bool TBarrackChangeNotify::has_maxbarrack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TBarrackChangeNotify::set_has_maxbarrack() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TBarrackChangeNotify::clear_has_maxbarrack() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TBarrackChangeNotify::clear_maxbarrack() {
  maxbarrack_ = 0u;
  clear_has_maxbarrack();
}
inline ::google::protobuf::uint32 TBarrackChangeNotify::maxbarrack() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackChangeNotify.MaxBarrack)
  return maxbarrack_;
}
inline void TBarrackChangeNotify::set_maxbarrack(::google::protobuf::uint32 value) {
  set_has_maxbarrack();
  maxbarrack_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackChangeNotify.MaxBarrack)
}

// repeated .pb.TSingleBarrackPos BarrackPosArr = 5;
inline int TBarrackChangeNotify::barrackposarr_size() const {
  return barrackposarr_.size();
}
inline void TBarrackChangeNotify::clear_barrackposarr() {
  barrackposarr_.Clear();
}
inline const ::pb::TSingleBarrackPos& TBarrackChangeNotify::barrackposarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackChangeNotify.BarrackPosArr)
  return barrackposarr_.Get(index);
}
inline ::pb::TSingleBarrackPos* TBarrackChangeNotify::mutable_barrackposarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackChangeNotify.BarrackPosArr)
  return barrackposarr_.Mutable(index);
}
inline ::pb::TSingleBarrackPos* TBarrackChangeNotify::add_barrackposarr() {
  // @@protoc_insertion_point(field_add:pb.TBarrackChangeNotify.BarrackPosArr)
  return barrackposarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >&
TBarrackChangeNotify::barrackposarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackChangeNotify.BarrackPosArr)
  return barrackposarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >*
TBarrackChangeNotify::mutable_barrackposarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackChangeNotify.BarrackPosArr)
  return &barrackposarr_;
}

// -------------------------------------------------------------------

// TBarrackServerRankInfo

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TBarrackServerRankInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBarrackServerRankInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBarrackServerRankInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBarrackServerRankInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TBarrackServerRankInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackServerRankInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TBarrackServerRankInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TBarrackServerRankInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TBarrackServerRankInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TBarrackServerRankInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TBarrackServerRankInfo.UserInfo)
}

// optional uint32 BarrackScore = 2;
inline bool TBarrackServerRankInfo::has_barrackscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBarrackServerRankInfo::set_has_barrackscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBarrackServerRankInfo::clear_has_barrackscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBarrackServerRankInfo::clear_barrackscore() {
  barrackscore_ = 0u;
  clear_has_barrackscore();
}
inline ::google::protobuf::uint32 TBarrackServerRankInfo::barrackscore() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackServerRankInfo.BarrackScore)
  return barrackscore_;
}
inline void TBarrackServerRankInfo::set_barrackscore(::google::protobuf::uint32 value) {
  set_has_barrackscore();
  barrackscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackServerRankInfo.BarrackScore)
}

// -------------------------------------------------------------------

// TBarrackGetRankListReq

// optional uint32 Offset = 1;
inline bool TBarrackGetRankListReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBarrackGetRankListReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBarrackGetRankListReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBarrackGetRankListReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TBarrackGetRankListReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetRankListReq.Offset)
  return offset_;
}
inline void TBarrackGetRankListReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetRankListReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TBarrackGetRankListReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBarrackGetRankListReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBarrackGetRankListReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBarrackGetRankListReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TBarrackGetRankListReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetRankListReq.Limit)
  return limit_;
}
inline void TBarrackGetRankListReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetRankListReq.Limit)
}

// -------------------------------------------------------------------

// TBarrackGetRankListRsp

// repeated .pb.TBarrackServerRankInfo RankArr = 1;
inline int TBarrackGetRankListRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TBarrackGetRankListRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TBarrackServerRankInfo& TBarrackGetRankListRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetRankListRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TBarrackServerRankInfo* TBarrackGetRankListRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetRankListRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TBarrackServerRankInfo* TBarrackGetRankListRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TBarrackGetRankListRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBarrackServerRankInfo >&
TBarrackGetRankListRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetRankListRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBarrackServerRankInfo >*
TBarrackGetRankListRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetRankListRsp.RankArr)
  return &rankarr_;
}

// optional int32 MyRank = 2;
inline bool TBarrackGetRankListRsp::has_myrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBarrackGetRankListRsp::set_has_myrank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBarrackGetRankListRsp::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBarrackGetRankListRsp::clear_myrank() {
  myrank_ = 0;
  clear_has_myrank();
}
inline ::google::protobuf::int32 TBarrackGetRankListRsp::myrank() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetRankListRsp.MyRank)
  return myrank_;
}
inline void TBarrackGetRankListRsp::set_myrank(::google::protobuf::int32 value) {
  set_has_myrank();
  myrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetRankListRsp.MyRank)
}

// optional uint32 BarrackScore = 3;
inline bool TBarrackGetRankListRsp::has_barrackscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBarrackGetRankListRsp::set_has_barrackscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBarrackGetRankListRsp::clear_has_barrackscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBarrackGetRankListRsp::clear_barrackscore() {
  barrackscore_ = 0u;
  clear_has_barrackscore();
}
inline ::google::protobuf::uint32 TBarrackGetRankListRsp::barrackscore() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetRankListRsp.BarrackScore)
  return barrackscore_;
}
inline void TBarrackGetRankListRsp::set_barrackscore(::google::protobuf::uint32 value) {
  set_has_barrackscore();
  barrackscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetRankListRsp.BarrackScore)
}

// -------------------------------------------------------------------

// TBarrackGetTreasuerBoxAwardReq

// optional uint64 FriendUid = 1;
inline bool TBarrackGetTreasuerBoxAwardReq::has_frienduid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBarrackGetTreasuerBoxAwardReq::set_has_frienduid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBarrackGetTreasuerBoxAwardReq::clear_has_frienduid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBarrackGetTreasuerBoxAwardReq::clear_frienduid() {
  frienduid_ = GOOGLE_ULONGLONG(0);
  clear_has_frienduid();
}
inline ::google::protobuf::uint64 TBarrackGetTreasuerBoxAwardReq::frienduid() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetTreasuerBoxAwardReq.FriendUid)
  return frienduid_;
}
inline void TBarrackGetTreasuerBoxAwardReq::set_frienduid(::google::protobuf::uint64 value) {
  set_has_frienduid();
  frienduid_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetTreasuerBoxAwardReq.FriendUid)
}

// -------------------------------------------------------------------

// TBarrackGetTreasuerBoxAwardRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TBarrackGetTreasuerBoxAwardRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TBarrackGetTreasuerBoxAwardRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TBarrackGetTreasuerBoxAwardRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetTreasuerBoxAwardRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TBarrackGetTreasuerBoxAwardRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetTreasuerBoxAwardRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TBarrackGetTreasuerBoxAwardRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TBarrackGetTreasuerBoxAwardRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TBarrackGetTreasuerBoxAwardRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetTreasuerBoxAwardRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TBarrackGetTreasuerBoxAwardRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetTreasuerBoxAwardRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TBarrackGetFriendBarrackInfoRsp

// optional uint32 ReceivedNum = 1;
inline bool TBarrackGetFriendBarrackInfoRsp::has_receivednum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBarrackGetFriendBarrackInfoRsp::set_has_receivednum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBarrackGetFriendBarrackInfoRsp::clear_has_receivednum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBarrackGetFriendBarrackInfoRsp::clear_receivednum() {
  receivednum_ = 0u;
  clear_has_receivednum();
}
inline ::google::protobuf::uint32 TBarrackGetFriendBarrackInfoRsp::receivednum() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetFriendBarrackInfoRsp.ReceivedNum)
  return receivednum_;
}
inline void TBarrackGetFriendBarrackInfoRsp::set_receivednum(::google::protobuf::uint32 value) {
  set_has_receivednum();
  receivednum_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetFriendBarrackInfoRsp.ReceivedNum)
}

// optional uint32 HavaBarrackFriendNum = 2;
inline bool TBarrackGetFriendBarrackInfoRsp::has_havabarrackfriendnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBarrackGetFriendBarrackInfoRsp::set_has_havabarrackfriendnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBarrackGetFriendBarrackInfoRsp::clear_has_havabarrackfriendnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBarrackGetFriendBarrackInfoRsp::clear_havabarrackfriendnum() {
  havabarrackfriendnum_ = 0u;
  clear_has_havabarrackfriendnum();
}
inline ::google::protobuf::uint32 TBarrackGetFriendBarrackInfoRsp::havabarrackfriendnum() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetFriendBarrackInfoRsp.HavaBarrackFriendNum)
  return havabarrackfriendnum_;
}
inline void TBarrackGetFriendBarrackInfoRsp::set_havabarrackfriendnum(::google::protobuf::uint32 value) {
  set_has_havabarrackfriendnum();
  havabarrackfriendnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackGetFriendBarrackInfoRsp.HavaBarrackFriendNum)
}

// repeated uint64 ReceviedFriendUid = 3;
inline int TBarrackGetFriendBarrackInfoRsp::receviedfrienduid_size() const {
  return receviedfrienduid_.size();
}
inline void TBarrackGetFriendBarrackInfoRsp::clear_receviedfrienduid() {
  receviedfrienduid_.Clear();
}
inline ::google::protobuf::uint64 TBarrackGetFriendBarrackInfoRsp::receviedfrienduid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetFriendBarrackInfoRsp.ReceviedFriendUid)
  return receviedfrienduid_.Get(index);
}
inline void TBarrackGetFriendBarrackInfoRsp::set_receviedfrienduid(int index, ::google::protobuf::uint64 value) {
  receviedfrienduid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TBarrackGetFriendBarrackInfoRsp.ReceviedFriendUid)
}
inline void TBarrackGetFriendBarrackInfoRsp::add_receviedfrienduid(::google::protobuf::uint64 value) {
  receviedfrienduid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TBarrackGetFriendBarrackInfoRsp.ReceviedFriendUid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TBarrackGetFriendBarrackInfoRsp::receviedfrienduid() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetFriendBarrackInfoRsp.ReceviedFriendUid)
  return receviedfrienduid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TBarrackGetFriendBarrackInfoRsp::mutable_receviedfrienduid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetFriendBarrackInfoRsp.ReceviedFriendUid)
  return &receviedfrienduid_;
}

// -------------------------------------------------------------------

// TBarrackGetBarrackInfoAndUserInfoByServerReq

// repeated uint64 FriendUid = 1;
inline int TBarrackGetBarrackInfoAndUserInfoByServerReq::frienduid_size() const {
  return frienduid_.size();
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::clear_frienduid() {
  frienduid_.Clear();
}
inline ::google::protobuf::uint64 TBarrackGetBarrackInfoAndUserInfoByServerReq::frienduid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.FriendUid)
  return frienduid_.Get(index);
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::set_frienduid(int index, ::google::protobuf::uint64 value) {
  frienduid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.FriendUid)
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::add_frienduid(::google::protobuf::uint64 value) {
  frienduid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.FriendUid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TBarrackGetBarrackInfoAndUserInfoByServerReq::frienduid() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.FriendUid)
  return frienduid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TBarrackGetBarrackInfoAndUserInfoByServerReq::mutable_frienduid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.FriendUid)
  return &frienduid_;
}

// repeated string ServerId = 2;
inline int TBarrackGetBarrackInfoAndUserInfoByServerReq::serverid_size() const {
  return serverid_.size();
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::clear_serverid() {
  serverid_.Clear();
}
inline const ::std::string& TBarrackGetBarrackInfoAndUserInfoByServerReq::serverid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
  return serverid_.Get(index);
}
inline ::std::string* TBarrackGetBarrackInfoAndUserInfoByServerReq::mutable_serverid(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
  return serverid_.Mutable(index);
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::set_serverid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
  serverid_.Mutable(index)->assign(value);
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::set_serverid(int index, const char* value) {
  serverid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::set_serverid(int index, const char* value, size_t size) {
  serverid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
}
inline ::std::string* TBarrackGetBarrackInfoAndUserInfoByServerReq::add_serverid() {
  return serverid_.Add();
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::add_serverid(const ::std::string& value) {
  serverid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::add_serverid(const char* value) {
  serverid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerReq::add_serverid(const char* value, size_t size) {
  serverid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TBarrackGetBarrackInfoAndUserInfoByServerReq::serverid() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
  return serverid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TBarrackGetBarrackInfoAndUserInfoByServerReq::mutable_serverid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetBarrackInfoAndUserInfoByServerReq.ServerId)
  return &serverid_;
}

// -------------------------------------------------------------------

// TBarrackOtherUserInfo

// repeated .pb.TSingleBarrackInfo ArrBarrack = 1;
inline int TBarrackOtherUserInfo::arrbarrack_size() const {
  return arrbarrack_.size();
}
inline void TBarrackOtherUserInfo::clear_arrbarrack() {
  arrbarrack_.Clear();
}
inline const ::pb::TSingleBarrackInfo& TBarrackOtherUserInfo::arrbarrack(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackOtherUserInfo.ArrBarrack)
  return arrbarrack_.Get(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackOtherUserInfo::mutable_arrbarrack(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackOtherUserInfo.ArrBarrack)
  return arrbarrack_.Mutable(index);
}
inline ::pb::TSingleBarrackInfo* TBarrackOtherUserInfo::add_arrbarrack() {
  // @@protoc_insertion_point(field_add:pb.TBarrackOtherUserInfo.ArrBarrack)
  return arrbarrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >&
TBarrackOtherUserInfo::arrbarrack() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackOtherUserInfo.ArrBarrack)
  return arrbarrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackInfo >*
TBarrackOtherUserInfo::mutable_arrbarrack() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackOtherUserInfo.ArrBarrack)
  return &arrbarrack_;
}

// repeated .pb.TSingleBarrackPos BarrackPosArr = 2;
inline int TBarrackOtherUserInfo::barrackposarr_size() const {
  return barrackposarr_.size();
}
inline void TBarrackOtherUserInfo::clear_barrackposarr() {
  barrackposarr_.Clear();
}
inline const ::pb::TSingleBarrackPos& TBarrackOtherUserInfo::barrackposarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackOtherUserInfo.BarrackPosArr)
  return barrackposarr_.Get(index);
}
inline ::pb::TSingleBarrackPos* TBarrackOtherUserInfo::mutable_barrackposarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackOtherUserInfo.BarrackPosArr)
  return barrackposarr_.Mutable(index);
}
inline ::pb::TSingleBarrackPos* TBarrackOtherUserInfo::add_barrackposarr() {
  // @@protoc_insertion_point(field_add:pb.TBarrackOtherUserInfo.BarrackPosArr)
  return barrackposarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >&
TBarrackOtherUserInfo::barrackposarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackOtherUserInfo.BarrackPosArr)
  return barrackposarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSingleBarrackPos >*
TBarrackOtherUserInfo::mutable_barrackposarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackOtherUserInfo.BarrackPosArr)
  return &barrackposarr_;
}

// optional .pb.TUserSimpleInfo FriendUserSimpleInfo = 3;
inline bool TBarrackOtherUserInfo::has_friendusersimpleinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBarrackOtherUserInfo::set_has_friendusersimpleinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBarrackOtherUserInfo::clear_has_friendusersimpleinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBarrackOtherUserInfo::clear_friendusersimpleinfo() {
  if (friendusersimpleinfo_ != NULL) friendusersimpleinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_friendusersimpleinfo();
}
inline const ::pb::TUserSimpleInfo& TBarrackOtherUserInfo::friendusersimpleinfo() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackOtherUserInfo.FriendUserSimpleInfo)
  return friendusersimpleinfo_ != NULL ? *friendusersimpleinfo_ : *default_instance_->friendusersimpleinfo_;
}
inline ::pb::TUserSimpleInfo* TBarrackOtherUserInfo::mutable_friendusersimpleinfo() {
  set_has_friendusersimpleinfo();
  if (friendusersimpleinfo_ == NULL) friendusersimpleinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TBarrackOtherUserInfo.FriendUserSimpleInfo)
  return friendusersimpleinfo_;
}
inline ::pb::TUserSimpleInfo* TBarrackOtherUserInfo::release_friendusersimpleinfo() {
  clear_has_friendusersimpleinfo();
  ::pb::TUserSimpleInfo* temp = friendusersimpleinfo_;
  friendusersimpleinfo_ = NULL;
  return temp;
}
inline void TBarrackOtherUserInfo::set_allocated_friendusersimpleinfo(::pb::TUserSimpleInfo* friendusersimpleinfo) {
  delete friendusersimpleinfo_;
  friendusersimpleinfo_ = friendusersimpleinfo;
  if (friendusersimpleinfo) {
    set_has_friendusersimpleinfo();
  } else {
    clear_has_friendusersimpleinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TBarrackOtherUserInfo.FriendUserSimpleInfo)
}

// optional uint32 BarrackScore = 4;
inline bool TBarrackOtherUserInfo::has_barrackscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TBarrackOtherUserInfo::set_has_barrackscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TBarrackOtherUserInfo::clear_has_barrackscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TBarrackOtherUserInfo::clear_barrackscore() {
  barrackscore_ = 0u;
  clear_has_barrackscore();
}
inline ::google::protobuf::uint32 TBarrackOtherUserInfo::barrackscore() const {
  // @@protoc_insertion_point(field_get:pb.TBarrackOtherUserInfo.BarrackScore)
  return barrackscore_;
}
inline void TBarrackOtherUserInfo::set_barrackscore(::google::protobuf::uint32 value) {
  set_has_barrackscore();
  barrackscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TBarrackOtherUserInfo.BarrackScore)
}

// -------------------------------------------------------------------

// TBarrackGetBarrackInfoAndUserInfoByServerRsp

// repeated .pb.TBarrackOtherUserInfo FriendInfoArr = 1;
inline int TBarrackGetBarrackInfoAndUserInfoByServerRsp::friendinfoarr_size() const {
  return friendinfoarr_.size();
}
inline void TBarrackGetBarrackInfoAndUserInfoByServerRsp::clear_friendinfoarr() {
  friendinfoarr_.Clear();
}
inline const ::pb::TBarrackOtherUserInfo& TBarrackGetBarrackInfoAndUserInfoByServerRsp::friendinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBarrackGetBarrackInfoAndUserInfoByServerRsp.FriendInfoArr)
  return friendinfoarr_.Get(index);
}
inline ::pb::TBarrackOtherUserInfo* TBarrackGetBarrackInfoAndUserInfoByServerRsp::mutable_friendinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBarrackGetBarrackInfoAndUserInfoByServerRsp.FriendInfoArr)
  return friendinfoarr_.Mutable(index);
}
inline ::pb::TBarrackOtherUserInfo* TBarrackGetBarrackInfoAndUserInfoByServerRsp::add_friendinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TBarrackGetBarrackInfoAndUserInfoByServerRsp.FriendInfoArr)
  return friendinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBarrackOtherUserInfo >&
TBarrackGetBarrackInfoAndUserInfoByServerRsp::friendinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TBarrackGetBarrackInfoAndUserInfoByServerRsp.FriendInfoArr)
  return friendinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBarrackOtherUserInfo >*
TBarrackGetBarrackInfoAndUserInfoByServerRsp::mutable_friendinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBarrackGetBarrackInfoAndUserInfoByServerRsp.FriendInfoArr)
  return &friendinfoarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::Priority> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::Priority>() {
  return ::pb::Priority_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fBarrack_2eproto__INCLUDED
