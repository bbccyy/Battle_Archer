// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/GuildUser.proto

#ifndef PROTOBUF_net_2fGuildUser_2eproto__INCLUDED
#define PROTOBUF_net_2fGuildUser_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fGuildUser_2eproto();
void protobuf_AssignDesc_net_2fGuildUser_2eproto();
void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

class TDonateBox;
class TGuildApply;
class TGuildMyInfo;
class TGuildUpdateMyGuildNotify;
class TGuildReceiveDonateBoxReq;
class TGuildReceiveDonateBoxRsp;
class TGuildReceiveSalaryRsp;

enum EGuildPost {
  POST_NONE = 0,
  POST_MEMBER = 1,
  POST_LEADER = 2,
  POST_DEPUTY = 3
};
bool EGuildPost_IsValid(int value);
const EGuildPost EGuildPost_MIN = POST_NONE;
const EGuildPost EGuildPost_MAX = POST_DEPUTY;
const int EGuildPost_ARRAYSIZE = EGuildPost_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildPost_descriptor();
inline const ::std::string& EGuildPost_Name(EGuildPost value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildPost_descriptor(), value);
}
inline bool EGuildPost_Parse(
    const ::std::string& name, EGuildPost* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildPost>(
    EGuildPost_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TDonateBox</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDonateBox : public ::google::protobuf::Message {
 public:
  TDonateBox();
  virtual ~TDonateBox();

  TDonateBox(const TDonateBox& from);

  inline TDonateBox& operator=(const TDonateBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDonateBox& default_instance();

  void Swap(TDonateBox* other);

  // implements Message ----------------------------------------------

  TDonateBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDonateBox& from);
  void MergeFrom(const TDonateBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BoxIndex = 1;
  inline bool has_boxindex() const;
  inline void clear_boxindex();
  static const int kBoxIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDonateBox</name>
  	<Function>
  		<name>boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxindex() const;
  inline void set_boxindex(::google::protobuf::uint32 value);

  // optional uint64 ReceiveTime = 2;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDonateBox</name>
  	<Function>
  		<name>receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receivetime() const;
  inline void set_receivetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TDonateBox)
 private:
  inline void set_has_boxindex();
  inline void clear_has_boxindex();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 receivetime_;
  ::google::protobuf::uint32 boxindex_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TDonateBox* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuildApply</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuildApply : public ::google::protobuf::Message {
 public:
  TGuildApply();
  virtual ~TGuildApply();

  TGuildApply(const TGuildApply& from);

  inline TGuildApply& operator=(const TGuildApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuildApply& default_instance();

  void Swap(TGuildApply* other);

  // implements Message ----------------------------------------------

  TGuildApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuildApply& from);
  void MergeFrom(const TGuildApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 GuildId = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuildApply</name>
  	<Function>
  		<name>guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 ApplyTime = 2;
  inline bool has_applytime() const;
  inline void clear_applytime();
  static const int kApplyTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGuildApply</name>
  	<Function>
  		<name>applytime</name>
  		<replaceName>ApplyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_applytime</name>
  		<replaceName>ApplyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_applytime</name>
  		<replaceName>ApplyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 applytime() const;
  inline void set_applytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TGuildApply)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_applytime();
  inline void clear_has_applytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 applytime_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TGuildApply* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuildMyInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuildMyInfo : public ::google::protobuf::Message {
 public:
  TGuildMyInfo();
  virtual ~TGuildMyInfo();

  TGuildMyInfo(const TGuildMyInfo& from);

  inline TGuildMyInfo& operator=(const TGuildMyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuildMyInfo& default_instance();

  void Swap(TGuildMyInfo* other);

  // implements Message ----------------------------------------------

  TGuildMyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuildMyInfo& from);
  void MergeFrom(const TGuildMyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 GuildId = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 QuitTime = 2;
  inline bool has_quittime() const;
  inline void clear_quittime();
  static const int kQuitTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>quittime</name>
  		<replaceName>QuitTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_quittime</name>
  		<replaceName>QuitTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_quittime</name>
  		<replaceName>QuitTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 quittime() const;
  inline void set_quittime(::google::protobuf::uint64 value);

  // optional uint32 DonateNum = 3;
  inline bool has_donatenum() const;
  inline void clear_donatenum();
  static const int kDonateNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>donatenum</name>
  		<replaceName>DonateNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donatenum</name>
  		<replaceName>DonateNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donatenum</name>
  		<replaceName>DonateNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 donatenum() const;
  inline void set_donatenum(::google::protobuf::uint32 value);

  // repeated .pb.TDonateBox BoxArr = 4;
  inline int boxarr_size() const;
  inline void clear_boxarr();
  static const int kBoxArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>boxarr</name>
  		<replaceName>BoxArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_boxarr</name>
  		<replaceName>BoxArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_boxarr</name>
  		<replaceName>BoxArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxarr</name>
  		<replaceName>BoxArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>boxarr_size</name>
  		<replaceName>BoxArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDonateBox& boxarr(int index) const;
  inline ::pb::TDonateBox* mutable_boxarr(int index);
  inline ::pb::TDonateBox* add_boxarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDonateBox >&
      boxarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDonateBox >*
      mutable_boxarr();

  // repeated .pb.TGuildApply ApplyArr = 5;
  inline int applyarr_size() const;
  inline void clear_applyarr();
  static const int kApplyArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>applyarr_size</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TGuildApply& applyarr(int index) const;
  inline ::pb::TGuildApply* mutable_applyarr(int index);
  inline ::pb::TGuildApply* add_applyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >&
      applyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >*
      mutable_applyarr();

  // optional .pb.EGuildPost RpgPost = 6;
  inline bool has_rpgpost() const;
  inline void clear_rpgpost();
  static const int kRpgPostFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>rpgpost</name>
  		<replaceName>RpgPost</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rpgpost</name>
  		<replaceName>RpgPost</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rpgpost</name>
  		<replaceName>RpgPost</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EGuildPost rpgpost() const;
  inline void set_rpgpost(::pb::EGuildPost value);

  // optional uint32 WeekDonate = 7;
  inline bool has_weekdonate() const;
  inline void clear_weekdonate();
  static const int kWeekDonateFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>weekdonate</name>
  		<replaceName>WeekDonate</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_weekdonate</name>
  		<replaceName>WeekDonate</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_weekdonate</name>
  		<replaceName>WeekDonate</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 weekdonate() const;
  inline void set_weekdonate(::google::protobuf::uint32 value);

  // optional uint64 SalaryTime = 8;
  inline bool has_salarytime() const;
  inline void clear_salarytime();
  static const int kSalaryTimeFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>salarytime</name>
  		<replaceName>SalaryTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_salarytime</name>
  		<replaceName>SalaryTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_salarytime</name>
  		<replaceName>SalaryTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 salarytime() const;
  inline void set_salarytime(::google::protobuf::uint64 value);

  // optional uint32 DayDonate = 9;
  inline bool has_daydonate() const;
  inline void clear_daydonate();
  static const int kDayDonateFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>daydonate</name>
  		<replaceName>DayDonate</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_daydonate</name>
  		<replaceName>DayDonate</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_daydonate</name>
  		<replaceName>DayDonate</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 daydonate() const;
  inline void set_daydonate(::google::protobuf::uint32 value);

  // optional uint32 GainNum = 10;
  inline bool has_gainnum() const;
  inline void clear_gainnum();
  static const int kGainNumFieldNumber = 10;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>gainnum</name>
  		<replaceName>GainNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_gainnum</name>
  		<replaceName>GainNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_gainnum</name>
  		<replaceName>GainNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 gainnum() const;
  inline void set_gainnum(::google::protobuf::uint32 value);

  // optional uint32 SendNum = 11;
  inline bool has_sendnum() const;
  inline void clear_sendnum();
  static const int kSendNumFieldNumber = 11;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>sendnum</name>
  		<replaceName>SendNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_sendnum</name>
  		<replaceName>SendNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_sendnum</name>
  		<replaceName>SendNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 sendnum() const;
  inline void set_sendnum(::google::protobuf::uint32 value);

  // optional uint64 TMFRewardTime = 12;
  inline bool has_tmfrewardtime() const;
  inline void clear_tmfrewardtime();
  static const int kTMFRewardTimeFieldNumber = 12;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>tmfrewardtime</name>
  		<replaceName>TMFRewardTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tmfrewardtime</name>
  		<replaceName>TMFRewardTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tmfrewardtime</name>
  		<replaceName>TMFRewardTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 tmfrewardtime() const;
  inline void set_tmfrewardtime(::google::protobuf::uint64 value);

  // optional uint32 LastWeekDonate = 13;
  inline bool has_lastweekdonate() const;
  inline void clear_lastweekdonate();
  static const int kLastWeekDonateFieldNumber = 13;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>lastweekdonate</name>
  		<replaceName>LastWeekDonate</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lastweekdonate</name>
  		<replaceName>LastWeekDonate</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lastweekdonate</name>
  		<replaceName>LastWeekDonate</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 lastweekdonate() const;
  inline void set_lastweekdonate(::google::protobuf::uint32 value);

  // optional uint32 FreeSendNum = 14;
  inline bool has_freesendnum() const;
  inline void clear_freesendnum();
  static const int kFreeSendNumFieldNumber = 14;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>freesendnum</name>
  		<replaceName>FreeSendNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freesendnum</name>
  		<replaceName>FreeSendNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freesendnum</name>
  		<replaceName>FreeSendNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 freesendnum() const;
  inline void set_freesendnum(::google::protobuf::uint32 value);

  // optional uint64 EnterTime = 15;
  inline bool has_entertime() const;
  inline void clear_entertime();
  static const int kEnterTimeFieldNumber = 15;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>entertime</name>
  		<replaceName>EnterTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_entertime</name>
  		<replaceName>EnterTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_entertime</name>
  		<replaceName>EnterTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 entertime() const;
  inline void set_entertime(::google::protobuf::uint64 value);

  // optional uint32 AtkNum = 16;
  inline bool has_atknum() const;
  inline void clear_atknum();
  static const int kAtkNumFieldNumber = 16;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>atknum</name>
  		<replaceName>AtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atknum</name>
  		<replaceName>AtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atknum</name>
  		<replaceName>AtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 atknum() const;
  inline void set_atknum(::google::protobuf::uint32 value);

  // optional uint32 BuyAtkNum = 17;
  inline bool has_buyatknum() const;
  inline void clear_buyatknum();
  static const int kBuyAtkNumFieldNumber = 17;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buyatknum() const;
  inline void set_buyatknum(::google::protobuf::uint32 value);

  // optional uint32 WishFragNum = 18;
  inline bool has_wishfragnum() const;
  inline void clear_wishfragnum();
  static const int kWishFragNumFieldNumber = 18;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>wishfragnum</name>
  		<replaceName>WishFragNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_wishfragnum</name>
  		<replaceName>WishFragNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_wishfragnum</name>
  		<replaceName>WishFragNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 wishfragnum() const;
  inline void set_wishfragnum(::google::protobuf::uint32 value);

  // optional uint32 GiftFragNum = 19;
  inline bool has_giftfragnum() const;
  inline void clear_giftfragnum();
  static const int kGiftFragNumFieldNumber = 19;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>giftfragnum</name>
  		<replaceName>GiftFragNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftfragnum</name>
  		<replaceName>GiftFragNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftfragnum</name>
  		<replaceName>GiftFragNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftfragnum() const;
  inline void set_giftfragnum(::google::protobuf::uint32 value);

  // optional uint32 TMFRewardNum = 20;
  inline bool has_tmfrewardnum() const;
  inline void clear_tmfrewardnum();
  static const int kTMFRewardNumFieldNumber = 20;
  /*FOR2LUA
  <Record>
  	<name>TGuildMyInfo</name>
  	<Function>
  		<name>tmfrewardnum</name>
  		<replaceName>TMFRewardNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tmfrewardnum</name>
  		<replaceName>TMFRewardNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tmfrewardnum</name>
  		<replaceName>TMFRewardNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tmfrewardnum() const;
  inline void set_tmfrewardnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuildMyInfo)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_quittime();
  inline void clear_has_quittime();
  inline void set_has_donatenum();
  inline void clear_has_donatenum();
  inline void set_has_rpgpost();
  inline void clear_has_rpgpost();
  inline void set_has_weekdonate();
  inline void clear_has_weekdonate();
  inline void set_has_salarytime();
  inline void clear_has_salarytime();
  inline void set_has_daydonate();
  inline void clear_has_daydonate();
  inline void set_has_gainnum();
  inline void clear_has_gainnum();
  inline void set_has_sendnum();
  inline void clear_has_sendnum();
  inline void set_has_tmfrewardtime();
  inline void clear_has_tmfrewardtime();
  inline void set_has_lastweekdonate();
  inline void clear_has_lastweekdonate();
  inline void set_has_freesendnum();
  inline void clear_has_freesendnum();
  inline void set_has_entertime();
  inline void clear_has_entertime();
  inline void set_has_atknum();
  inline void clear_has_atknum();
  inline void set_has_buyatknum();
  inline void clear_has_buyatknum();
  inline void set_has_wishfragnum();
  inline void clear_has_wishfragnum();
  inline void set_has_giftfragnum();
  inline void clear_has_giftfragnum();
  inline void set_has_tmfrewardnum();
  inline void clear_has_tmfrewardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 quittime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDonateBox > boxarr_;
  ::google::protobuf::uint32 donatenum_;
  int rpgpost_;
  ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply > applyarr_;
  ::google::protobuf::uint64 salarytime_;
  ::google::protobuf::uint32 weekdonate_;
  ::google::protobuf::uint32 daydonate_;
  ::google::protobuf::uint32 gainnum_;
  ::google::protobuf::uint32 sendnum_;
  ::google::protobuf::uint64 tmfrewardtime_;
  ::google::protobuf::uint32 lastweekdonate_;
  ::google::protobuf::uint32 freesendnum_;
  ::google::protobuf::uint64 entertime_;
  ::google::protobuf::uint32 atknum_;
  ::google::protobuf::uint32 buyatknum_;
  ::google::protobuf::uint32 wishfragnum_;
  ::google::protobuf::uint32 giftfragnum_;
  ::google::protobuf::uint32 tmfrewardnum_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TGuildMyInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuildUpdateMyGuildNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuildUpdateMyGuildNotify : public ::google::protobuf::Message {
 public:
  TGuildUpdateMyGuildNotify();
  virtual ~TGuildUpdateMyGuildNotify();

  TGuildUpdateMyGuildNotify(const TGuildUpdateMyGuildNotify& from);

  inline TGuildUpdateMyGuildNotify& operator=(const TGuildUpdateMyGuildNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuildUpdateMyGuildNotify& default_instance();

  void Swap(TGuildUpdateMyGuildNotify* other);

  // implements Message ----------------------------------------------

  TGuildUpdateMyGuildNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuildUpdateMyGuildNotify& from);
  void MergeFrom(const TGuildUpdateMyGuildNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 GuildId = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuildUpdateMyGuildNotify</name>
  	<Function>
  		<name>guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_guildid</name>
  		<replaceName>GuildId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 QuitTime = 2;
  inline bool has_quittime() const;
  inline void clear_quittime();
  static const int kQuitTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGuildUpdateMyGuildNotify</name>
  	<Function>
  		<name>quittime</name>
  		<replaceName>QuitTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_quittime</name>
  		<replaceName>QuitTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_quittime</name>
  		<replaceName>QuitTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 quittime() const;
  inline void set_quittime(::google::protobuf::uint64 value);

  // repeated .pb.TGuildApply ApplyArr = 3;
  inline int applyarr_size() const;
  inline void clear_applyarr();
  static const int kApplyArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TGuildUpdateMyGuildNotify</name>
  	<Function>
  		<name>applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_applyarr</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>applyarr_size</name>
  		<replaceName>ApplyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TGuildApply& applyarr(int index) const;
  inline ::pb::TGuildApply* mutable_applyarr(int index);
  inline ::pb::TGuildApply* add_applyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >&
      applyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >*
      mutable_applyarr();

  // optional .pb.EGuildPost RpgPost = 4;
  inline bool has_rpgpost() const;
  inline void clear_rpgpost();
  static const int kRpgPostFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TGuildUpdateMyGuildNotify</name>
  	<Function>
  		<name>rpgpost</name>
  		<replaceName>RpgPost</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rpgpost</name>
  		<replaceName>RpgPost</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rpgpost</name>
  		<replaceName>RpgPost</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EGuildPost rpgpost() const;
  inline void set_rpgpost(::pb::EGuildPost value);

  // optional uint32 DonateNum = 5;
  inline bool has_donatenum() const;
  inline void clear_donatenum();
  static const int kDonateNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TGuildUpdateMyGuildNotify</name>
  	<Function>
  		<name>donatenum</name>
  		<replaceName>DonateNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donatenum</name>
  		<replaceName>DonateNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donatenum</name>
  		<replaceName>DonateNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 donatenum() const;
  inline void set_donatenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuildUpdateMyGuildNotify)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_quittime();
  inline void clear_has_quittime();
  inline void set_has_rpgpost();
  inline void clear_has_rpgpost();
  inline void set_has_donatenum();
  inline void clear_has_donatenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 quittime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply > applyarr_;
  int rpgpost_;
  ::google::protobuf::uint32 donatenum_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TGuildUpdateMyGuildNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuildReceiveDonateBoxReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuildReceiveDonateBoxReq : public ::google::protobuf::Message {
 public:
  TGuildReceiveDonateBoxReq();
  virtual ~TGuildReceiveDonateBoxReq();

  TGuildReceiveDonateBoxReq(const TGuildReceiveDonateBoxReq& from);

  inline TGuildReceiveDonateBoxReq& operator=(const TGuildReceiveDonateBoxReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuildReceiveDonateBoxReq& default_instance();

  void Swap(TGuildReceiveDonateBoxReq* other);

  // implements Message ----------------------------------------------

  TGuildReceiveDonateBoxReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuildReceiveDonateBoxReq& from);
  void MergeFrom(const TGuildReceiveDonateBoxReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BoxIndex = 1;
  inline bool has_boxindex() const;
  inline void clear_boxindex();
  static const int kBoxIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuildReceiveDonateBoxReq</name>
  	<Function>
  		<name>boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxindex() const;
  inline void set_boxindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuildReceiveDonateBoxReq)
 private:
  inline void set_has_boxindex();
  inline void clear_has_boxindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 boxindex_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TGuildReceiveDonateBoxReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuildReceiveDonateBoxRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuildReceiveDonateBoxRsp : public ::google::protobuf::Message {
 public:
  TGuildReceiveDonateBoxRsp();
  virtual ~TGuildReceiveDonateBoxRsp();

  TGuildReceiveDonateBoxRsp(const TGuildReceiveDonateBoxRsp& from);

  inline TGuildReceiveDonateBoxRsp& operator=(const TGuildReceiveDonateBoxRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuildReceiveDonateBoxRsp& default_instance();

  void Swap(TGuildReceiveDonateBoxRsp* other);

  // implements Message ----------------------------------------------

  TGuildReceiveDonateBoxRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuildReceiveDonateBoxRsp& from);
  void MergeFrom(const TGuildReceiveDonateBoxRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuildReceiveDonateBoxRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TGuildReceiveDonateBoxRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TGuildReceiveDonateBoxRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuildReceiveSalaryRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/GuildUser.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuildReceiveSalaryRsp : public ::google::protobuf::Message {
 public:
  TGuildReceiveSalaryRsp();
  virtual ~TGuildReceiveSalaryRsp();

  TGuildReceiveSalaryRsp(const TGuildReceiveSalaryRsp& from);

  inline TGuildReceiveSalaryRsp& operator=(const TGuildReceiveSalaryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuildReceiveSalaryRsp& default_instance();

  void Swap(TGuildReceiveSalaryRsp* other);

  // implements Message ----------------------------------------------

  TGuildReceiveSalaryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuildReceiveSalaryRsp& from);
  void MergeFrom(const TGuildReceiveSalaryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuildReceiveSalaryRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // optional uint64 SalaryTime = 2;
  inline bool has_salarytime() const;
  inline void clear_salarytime();
  static const int kSalaryTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGuildReceiveSalaryRsp</name>
  	<Function>
  		<name>salarytime</name>
  		<replaceName>SalaryTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_salarytime</name>
  		<replaceName>SalaryTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_salarytime</name>
  		<replaceName>SalaryTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 salarytime() const;
  inline void set_salarytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TGuildReceiveSalaryRsp)
 private:
  inline void set_has_salarytime();
  inline void clear_has_salarytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  ::google::protobuf::uint64 salarytime_;
  friend void  protobuf_AddDesc_net_2fGuildUser_2eproto();
  friend void protobuf_AssignDesc_net_2fGuildUser_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuildUser_2eproto();

  void InitAsDefaultInstance();
  static TGuildReceiveSalaryRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TDonateBox

// optional uint32 BoxIndex = 1;
inline bool TDonateBox::has_boxindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDonateBox::set_has_boxindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDonateBox::clear_has_boxindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDonateBox::clear_boxindex() {
  boxindex_ = 0u;
  clear_has_boxindex();
}
inline ::google::protobuf::uint32 TDonateBox::boxindex() const {
  // @@protoc_insertion_point(field_get:pb.TDonateBox.BoxIndex)
  return boxindex_;
}
inline void TDonateBox::set_boxindex(::google::protobuf::uint32 value) {
  set_has_boxindex();
  boxindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TDonateBox.BoxIndex)
}

// optional uint64 ReceiveTime = 2;
inline bool TDonateBox::has_receivetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDonateBox::set_has_receivetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDonateBox::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDonateBox::clear_receivetime() {
  receivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::uint64 TDonateBox::receivetime() const {
  // @@protoc_insertion_point(field_get:pb.TDonateBox.ReceiveTime)
  return receivetime_;
}
inline void TDonateBox::set_receivetime(::google::protobuf::uint64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TDonateBox.ReceiveTime)
}

// -------------------------------------------------------------------

// TGuildApply

// optional uint64 GuildId = 1;
inline bool TGuildApply::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuildApply::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuildApply::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuildApply::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 TGuildApply::guildid() const {
  // @@protoc_insertion_point(field_get:pb.TGuildApply.GuildId)
  return guildid_;
}
inline void TGuildApply::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildApply.GuildId)
}

// optional uint64 ApplyTime = 2;
inline bool TGuildApply::has_applytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TGuildApply::set_has_applytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TGuildApply::clear_has_applytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TGuildApply::clear_applytime() {
  applytime_ = GOOGLE_ULONGLONG(0);
  clear_has_applytime();
}
inline ::google::protobuf::uint64 TGuildApply::applytime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildApply.ApplyTime)
  return applytime_;
}
inline void TGuildApply::set_applytime(::google::protobuf::uint64 value) {
  set_has_applytime();
  applytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildApply.ApplyTime)
}

// -------------------------------------------------------------------

// TGuildMyInfo

// optional uint64 GuildId = 1;
inline bool TGuildMyInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuildMyInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuildMyInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuildMyInfo::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 TGuildMyInfo::guildid() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.GuildId)
  return guildid_;
}
inline void TGuildMyInfo::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.GuildId)
}

// optional uint64 QuitTime = 2;
inline bool TGuildMyInfo::has_quittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TGuildMyInfo::set_has_quittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TGuildMyInfo::clear_has_quittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TGuildMyInfo::clear_quittime() {
  quittime_ = GOOGLE_ULONGLONG(0);
  clear_has_quittime();
}
inline ::google::protobuf::uint64 TGuildMyInfo::quittime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.QuitTime)
  return quittime_;
}
inline void TGuildMyInfo::set_quittime(::google::protobuf::uint64 value) {
  set_has_quittime();
  quittime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.QuitTime)
}

// optional uint32 DonateNum = 3;
inline bool TGuildMyInfo::has_donatenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TGuildMyInfo::set_has_donatenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TGuildMyInfo::clear_has_donatenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TGuildMyInfo::clear_donatenum() {
  donatenum_ = 0u;
  clear_has_donatenum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::donatenum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.DonateNum)
  return donatenum_;
}
inline void TGuildMyInfo::set_donatenum(::google::protobuf::uint32 value) {
  set_has_donatenum();
  donatenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.DonateNum)
}

// repeated .pb.TDonateBox BoxArr = 4;
inline int TGuildMyInfo::boxarr_size() const {
  return boxarr_.size();
}
inline void TGuildMyInfo::clear_boxarr() {
  boxarr_.Clear();
}
inline const ::pb::TDonateBox& TGuildMyInfo::boxarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.BoxArr)
  return boxarr_.Get(index);
}
inline ::pb::TDonateBox* TGuildMyInfo::mutable_boxarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TGuildMyInfo.BoxArr)
  return boxarr_.Mutable(index);
}
inline ::pb::TDonateBox* TGuildMyInfo::add_boxarr() {
  // @@protoc_insertion_point(field_add:pb.TGuildMyInfo.BoxArr)
  return boxarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDonateBox >&
TGuildMyInfo::boxarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuildMyInfo.BoxArr)
  return boxarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDonateBox >*
TGuildMyInfo::mutable_boxarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuildMyInfo.BoxArr)
  return &boxarr_;
}

// repeated .pb.TGuildApply ApplyArr = 5;
inline int TGuildMyInfo::applyarr_size() const {
  return applyarr_.size();
}
inline void TGuildMyInfo::clear_applyarr() {
  applyarr_.Clear();
}
inline const ::pb::TGuildApply& TGuildMyInfo::applyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.ApplyArr)
  return applyarr_.Get(index);
}
inline ::pb::TGuildApply* TGuildMyInfo::mutable_applyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TGuildMyInfo.ApplyArr)
  return applyarr_.Mutable(index);
}
inline ::pb::TGuildApply* TGuildMyInfo::add_applyarr() {
  // @@protoc_insertion_point(field_add:pb.TGuildMyInfo.ApplyArr)
  return applyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >&
TGuildMyInfo::applyarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuildMyInfo.ApplyArr)
  return applyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >*
TGuildMyInfo::mutable_applyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuildMyInfo.ApplyArr)
  return &applyarr_;
}

// optional .pb.EGuildPost RpgPost = 6;
inline bool TGuildMyInfo::has_rpgpost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TGuildMyInfo::set_has_rpgpost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TGuildMyInfo::clear_has_rpgpost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TGuildMyInfo::clear_rpgpost() {
  rpgpost_ = 0;
  clear_has_rpgpost();
}
inline ::pb::EGuildPost TGuildMyInfo::rpgpost() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.RpgPost)
  return static_cast< ::pb::EGuildPost >(rpgpost_);
}
inline void TGuildMyInfo::set_rpgpost(::pb::EGuildPost value) {
  assert(::pb::EGuildPost_IsValid(value));
  set_has_rpgpost();
  rpgpost_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.RpgPost)
}

// optional uint32 WeekDonate = 7;
inline bool TGuildMyInfo::has_weekdonate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TGuildMyInfo::set_has_weekdonate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TGuildMyInfo::clear_has_weekdonate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TGuildMyInfo::clear_weekdonate() {
  weekdonate_ = 0u;
  clear_has_weekdonate();
}
inline ::google::protobuf::uint32 TGuildMyInfo::weekdonate() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.WeekDonate)
  return weekdonate_;
}
inline void TGuildMyInfo::set_weekdonate(::google::protobuf::uint32 value) {
  set_has_weekdonate();
  weekdonate_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.WeekDonate)
}

// optional uint64 SalaryTime = 8;
inline bool TGuildMyInfo::has_salarytime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TGuildMyInfo::set_has_salarytime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TGuildMyInfo::clear_has_salarytime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TGuildMyInfo::clear_salarytime() {
  salarytime_ = GOOGLE_ULONGLONG(0);
  clear_has_salarytime();
}
inline ::google::protobuf::uint64 TGuildMyInfo::salarytime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.SalaryTime)
  return salarytime_;
}
inline void TGuildMyInfo::set_salarytime(::google::protobuf::uint64 value) {
  set_has_salarytime();
  salarytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.SalaryTime)
}

// optional uint32 DayDonate = 9;
inline bool TGuildMyInfo::has_daydonate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TGuildMyInfo::set_has_daydonate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TGuildMyInfo::clear_has_daydonate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TGuildMyInfo::clear_daydonate() {
  daydonate_ = 0u;
  clear_has_daydonate();
}
inline ::google::protobuf::uint32 TGuildMyInfo::daydonate() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.DayDonate)
  return daydonate_;
}
inline void TGuildMyInfo::set_daydonate(::google::protobuf::uint32 value) {
  set_has_daydonate();
  daydonate_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.DayDonate)
}

// optional uint32 GainNum = 10;
inline bool TGuildMyInfo::has_gainnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TGuildMyInfo::set_has_gainnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TGuildMyInfo::clear_has_gainnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TGuildMyInfo::clear_gainnum() {
  gainnum_ = 0u;
  clear_has_gainnum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::gainnum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.GainNum)
  return gainnum_;
}
inline void TGuildMyInfo::set_gainnum(::google::protobuf::uint32 value) {
  set_has_gainnum();
  gainnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.GainNum)
}

// optional uint32 SendNum = 11;
inline bool TGuildMyInfo::has_sendnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TGuildMyInfo::set_has_sendnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TGuildMyInfo::clear_has_sendnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TGuildMyInfo::clear_sendnum() {
  sendnum_ = 0u;
  clear_has_sendnum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::sendnum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.SendNum)
  return sendnum_;
}
inline void TGuildMyInfo::set_sendnum(::google::protobuf::uint32 value) {
  set_has_sendnum();
  sendnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.SendNum)
}

// optional uint64 TMFRewardTime = 12;
inline bool TGuildMyInfo::has_tmfrewardtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TGuildMyInfo::set_has_tmfrewardtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TGuildMyInfo::clear_has_tmfrewardtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TGuildMyInfo::clear_tmfrewardtime() {
  tmfrewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_tmfrewardtime();
}
inline ::google::protobuf::uint64 TGuildMyInfo::tmfrewardtime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.TMFRewardTime)
  return tmfrewardtime_;
}
inline void TGuildMyInfo::set_tmfrewardtime(::google::protobuf::uint64 value) {
  set_has_tmfrewardtime();
  tmfrewardtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.TMFRewardTime)
}

// optional uint32 LastWeekDonate = 13;
inline bool TGuildMyInfo::has_lastweekdonate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TGuildMyInfo::set_has_lastweekdonate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TGuildMyInfo::clear_has_lastweekdonate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TGuildMyInfo::clear_lastweekdonate() {
  lastweekdonate_ = 0u;
  clear_has_lastweekdonate();
}
inline ::google::protobuf::uint32 TGuildMyInfo::lastweekdonate() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.LastWeekDonate)
  return lastweekdonate_;
}
inline void TGuildMyInfo::set_lastweekdonate(::google::protobuf::uint32 value) {
  set_has_lastweekdonate();
  lastweekdonate_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.LastWeekDonate)
}

// optional uint32 FreeSendNum = 14;
inline bool TGuildMyInfo::has_freesendnum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TGuildMyInfo::set_has_freesendnum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TGuildMyInfo::clear_has_freesendnum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TGuildMyInfo::clear_freesendnum() {
  freesendnum_ = 0u;
  clear_has_freesendnum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::freesendnum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.FreeSendNum)
  return freesendnum_;
}
inline void TGuildMyInfo::set_freesendnum(::google::protobuf::uint32 value) {
  set_has_freesendnum();
  freesendnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.FreeSendNum)
}

// optional uint64 EnterTime = 15;
inline bool TGuildMyInfo::has_entertime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TGuildMyInfo::set_has_entertime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TGuildMyInfo::clear_has_entertime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TGuildMyInfo::clear_entertime() {
  entertime_ = GOOGLE_ULONGLONG(0);
  clear_has_entertime();
}
inline ::google::protobuf::uint64 TGuildMyInfo::entertime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.EnterTime)
  return entertime_;
}
inline void TGuildMyInfo::set_entertime(::google::protobuf::uint64 value) {
  set_has_entertime();
  entertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.EnterTime)
}

// optional uint32 AtkNum = 16;
inline bool TGuildMyInfo::has_atknum() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TGuildMyInfo::set_has_atknum() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TGuildMyInfo::clear_has_atknum() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TGuildMyInfo::clear_atknum() {
  atknum_ = 0u;
  clear_has_atknum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::atknum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.AtkNum)
  return atknum_;
}
inline void TGuildMyInfo::set_atknum(::google::protobuf::uint32 value) {
  set_has_atknum();
  atknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.AtkNum)
}

// optional uint32 BuyAtkNum = 17;
inline bool TGuildMyInfo::has_buyatknum() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void TGuildMyInfo::set_has_buyatknum() {
  _has_bits_[0] |= 0x00010000u;
}
inline void TGuildMyInfo::clear_has_buyatknum() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void TGuildMyInfo::clear_buyatknum() {
  buyatknum_ = 0u;
  clear_has_buyatknum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::buyatknum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.BuyAtkNum)
  return buyatknum_;
}
inline void TGuildMyInfo::set_buyatknum(::google::protobuf::uint32 value) {
  set_has_buyatknum();
  buyatknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.BuyAtkNum)
}

// optional uint32 WishFragNum = 18;
inline bool TGuildMyInfo::has_wishfragnum() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void TGuildMyInfo::set_has_wishfragnum() {
  _has_bits_[0] |= 0x00020000u;
}
inline void TGuildMyInfo::clear_has_wishfragnum() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void TGuildMyInfo::clear_wishfragnum() {
  wishfragnum_ = 0u;
  clear_has_wishfragnum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::wishfragnum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.WishFragNum)
  return wishfragnum_;
}
inline void TGuildMyInfo::set_wishfragnum(::google::protobuf::uint32 value) {
  set_has_wishfragnum();
  wishfragnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.WishFragNum)
}

// optional uint32 GiftFragNum = 19;
inline bool TGuildMyInfo::has_giftfragnum() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void TGuildMyInfo::set_has_giftfragnum() {
  _has_bits_[0] |= 0x00040000u;
}
inline void TGuildMyInfo::clear_has_giftfragnum() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void TGuildMyInfo::clear_giftfragnum() {
  giftfragnum_ = 0u;
  clear_has_giftfragnum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::giftfragnum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.GiftFragNum)
  return giftfragnum_;
}
inline void TGuildMyInfo::set_giftfragnum(::google::protobuf::uint32 value) {
  set_has_giftfragnum();
  giftfragnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.GiftFragNum)
}

// optional uint32 TMFRewardNum = 20;
inline bool TGuildMyInfo::has_tmfrewardnum() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void TGuildMyInfo::set_has_tmfrewardnum() {
  _has_bits_[0] |= 0x00080000u;
}
inline void TGuildMyInfo::clear_has_tmfrewardnum() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void TGuildMyInfo::clear_tmfrewardnum() {
  tmfrewardnum_ = 0u;
  clear_has_tmfrewardnum();
}
inline ::google::protobuf::uint32 TGuildMyInfo::tmfrewardnum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildMyInfo.TMFRewardNum)
  return tmfrewardnum_;
}
inline void TGuildMyInfo::set_tmfrewardnum(::google::protobuf::uint32 value) {
  set_has_tmfrewardnum();
  tmfrewardnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildMyInfo.TMFRewardNum)
}

// -------------------------------------------------------------------

// TGuildUpdateMyGuildNotify

// optional uint64 GuildId = 1;
inline bool TGuildUpdateMyGuildNotify::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuildUpdateMyGuildNotify::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuildUpdateMyGuildNotify::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuildUpdateMyGuildNotify::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 TGuildUpdateMyGuildNotify::guildid() const {
  // @@protoc_insertion_point(field_get:pb.TGuildUpdateMyGuildNotify.GuildId)
  return guildid_;
}
inline void TGuildUpdateMyGuildNotify::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildUpdateMyGuildNotify.GuildId)
}

// optional uint64 QuitTime = 2;
inline bool TGuildUpdateMyGuildNotify::has_quittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TGuildUpdateMyGuildNotify::set_has_quittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TGuildUpdateMyGuildNotify::clear_has_quittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TGuildUpdateMyGuildNotify::clear_quittime() {
  quittime_ = GOOGLE_ULONGLONG(0);
  clear_has_quittime();
}
inline ::google::protobuf::uint64 TGuildUpdateMyGuildNotify::quittime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildUpdateMyGuildNotify.QuitTime)
  return quittime_;
}
inline void TGuildUpdateMyGuildNotify::set_quittime(::google::protobuf::uint64 value) {
  set_has_quittime();
  quittime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildUpdateMyGuildNotify.QuitTime)
}

// repeated .pb.TGuildApply ApplyArr = 3;
inline int TGuildUpdateMyGuildNotify::applyarr_size() const {
  return applyarr_.size();
}
inline void TGuildUpdateMyGuildNotify::clear_applyarr() {
  applyarr_.Clear();
}
inline const ::pb::TGuildApply& TGuildUpdateMyGuildNotify::applyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuildUpdateMyGuildNotify.ApplyArr)
  return applyarr_.Get(index);
}
inline ::pb::TGuildApply* TGuildUpdateMyGuildNotify::mutable_applyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TGuildUpdateMyGuildNotify.ApplyArr)
  return applyarr_.Mutable(index);
}
inline ::pb::TGuildApply* TGuildUpdateMyGuildNotify::add_applyarr() {
  // @@protoc_insertion_point(field_add:pb.TGuildUpdateMyGuildNotify.ApplyArr)
  return applyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >&
TGuildUpdateMyGuildNotify::applyarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuildUpdateMyGuildNotify.ApplyArr)
  return applyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TGuildApply >*
TGuildUpdateMyGuildNotify::mutable_applyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuildUpdateMyGuildNotify.ApplyArr)
  return &applyarr_;
}

// optional .pb.EGuildPost RpgPost = 4;
inline bool TGuildUpdateMyGuildNotify::has_rpgpost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TGuildUpdateMyGuildNotify::set_has_rpgpost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TGuildUpdateMyGuildNotify::clear_has_rpgpost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TGuildUpdateMyGuildNotify::clear_rpgpost() {
  rpgpost_ = 0;
  clear_has_rpgpost();
}
inline ::pb::EGuildPost TGuildUpdateMyGuildNotify::rpgpost() const {
  // @@protoc_insertion_point(field_get:pb.TGuildUpdateMyGuildNotify.RpgPost)
  return static_cast< ::pb::EGuildPost >(rpgpost_);
}
inline void TGuildUpdateMyGuildNotify::set_rpgpost(::pb::EGuildPost value) {
  assert(::pb::EGuildPost_IsValid(value));
  set_has_rpgpost();
  rpgpost_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildUpdateMyGuildNotify.RpgPost)
}

// optional uint32 DonateNum = 5;
inline bool TGuildUpdateMyGuildNotify::has_donatenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TGuildUpdateMyGuildNotify::set_has_donatenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TGuildUpdateMyGuildNotify::clear_has_donatenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TGuildUpdateMyGuildNotify::clear_donatenum() {
  donatenum_ = 0u;
  clear_has_donatenum();
}
inline ::google::protobuf::uint32 TGuildUpdateMyGuildNotify::donatenum() const {
  // @@protoc_insertion_point(field_get:pb.TGuildUpdateMyGuildNotify.DonateNum)
  return donatenum_;
}
inline void TGuildUpdateMyGuildNotify::set_donatenum(::google::protobuf::uint32 value) {
  set_has_donatenum();
  donatenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildUpdateMyGuildNotify.DonateNum)
}

// -------------------------------------------------------------------

// TGuildReceiveDonateBoxReq

// optional uint32 BoxIndex = 1;
inline bool TGuildReceiveDonateBoxReq::has_boxindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuildReceiveDonateBoxReq::set_has_boxindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuildReceiveDonateBoxReq::clear_has_boxindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuildReceiveDonateBoxReq::clear_boxindex() {
  boxindex_ = 0u;
  clear_has_boxindex();
}
inline ::google::protobuf::uint32 TGuildReceiveDonateBoxReq::boxindex() const {
  // @@protoc_insertion_point(field_get:pb.TGuildReceiveDonateBoxReq.BoxIndex)
  return boxindex_;
}
inline void TGuildReceiveDonateBoxReq::set_boxindex(::google::protobuf::uint32 value) {
  set_has_boxindex();
  boxindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildReceiveDonateBoxReq.BoxIndex)
}

// -------------------------------------------------------------------

// TGuildReceiveDonateBoxRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TGuildReceiveDonateBoxRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TGuildReceiveDonateBoxRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TGuildReceiveDonateBoxRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuildReceiveDonateBoxRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TGuildReceiveDonateBoxRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TGuildReceiveDonateBoxRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TGuildReceiveDonateBoxRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TGuildReceiveDonateBoxRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TGuildReceiveDonateBoxRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TGuildReceiveDonateBoxRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TGuildReceiveDonateBoxRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuildReceiveDonateBoxRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TGuildReceiveSalaryRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TGuildReceiveSalaryRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TGuildReceiveSalaryRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TGuildReceiveSalaryRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuildReceiveSalaryRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TGuildReceiveSalaryRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TGuildReceiveSalaryRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TGuildReceiveSalaryRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TGuildReceiveSalaryRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TGuildReceiveSalaryRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TGuildReceiveSalaryRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TGuildReceiveSalaryRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuildReceiveSalaryRsp.RewardArray)
  return &rewardarray_;
}

// optional uint64 SalaryTime = 2;
inline bool TGuildReceiveSalaryRsp::has_salarytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TGuildReceiveSalaryRsp::set_has_salarytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TGuildReceiveSalaryRsp::clear_has_salarytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TGuildReceiveSalaryRsp::clear_salarytime() {
  salarytime_ = GOOGLE_ULONGLONG(0);
  clear_has_salarytime();
}
inline ::google::protobuf::uint64 TGuildReceiveSalaryRsp::salarytime() const {
  // @@protoc_insertion_point(field_get:pb.TGuildReceiveSalaryRsp.SalaryTime)
  return salarytime_;
}
inline void TGuildReceiveSalaryRsp::set_salarytime(::google::protobuf::uint64 value) {
  set_has_salarytime();
  salarytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuildReceiveSalaryRsp.SalaryTime)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EGuildPost> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EGuildPost>() {
  return ::pb::EGuildPost_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fGuildUser_2eproto__INCLUDED
