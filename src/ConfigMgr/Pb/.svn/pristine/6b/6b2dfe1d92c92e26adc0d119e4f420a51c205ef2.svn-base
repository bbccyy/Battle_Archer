// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BattleStarter.proto

#ifndef PROTOBUF_net_2fBattleStarter_2eproto__INCLUDED
#define PROTOBUF_net_2fBattleStarter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fBattleStarter_2eproto();
void protobuf_AssignDesc_net_2fBattleStarter_2eproto();
void protobuf_ShutdownFile_net_2fBattleStarter_2eproto();

class TBattleDummyMsg;

enum EBattleType {
  EBattleTypeRPGPVE = 1,
  EBattleTypeRPGPVP = 2,
  EBattleTypeSLGPVE = 3,
  EBattleTypeSLGPVP = 4
};
bool EBattleType_IsValid(int value);
const EBattleType EBattleType_MIN = EBattleTypeRPGPVE;
const EBattleType EBattleType_MAX = EBattleTypeSLGPVP;
const int EBattleType_ARRAYSIZE = EBattleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBattleType_descriptor();
inline const ::std::string& EBattleType_Name(EBattleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBattleType_descriptor(), value);
}
inline bool EBattleType_Parse(
    const ::std::string& name, EBattleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBattleType>(
    EBattleType_descriptor(), name, value);
}
enum EBattleStarter {
  EBattleNone = 0,
  EBattleMajorInstanceNormal = 1,
  EBattleMajorInstanceElite = 2,
  EBattleMajorInstanceDaily = 3,
  EBattleMajorExpedition = 4,
  EBattleMajorTower = 5,
  EBattleMajorArena = 6,
  EBattleMajorAdventure = 7,
  EBattleMajorHuntSoul = 8,
  EBattleSLGCountryWar = 9,
  EBattleMajorGuildBoss = 10,
  EBattleMajorCompare = 11,
  EBattleMajorRPGMine = 12,
  EBattleMajorGuildWar = 13,
  EBattleMajorWorldBoss = 14,
  EBattleMajor3v3 = 15,
  EBattleMajorAdvancedArena = 16,
  EBattleMajorGuildInvadeMonster = 17,
  EBattleMajorAR = 18,
  EBattleMajorInstanceBeast = 19,
  EBattleMajorCampTower = 20,
  EBattleMajorAdventureTower = 21,
  EBattleMajorGroupingKnockoutMatch = 22,
  EBattleMajorAdventureEnemyRaid = 23,
  EBattleMajorTD = 24,
  EBattleMajorCrossChallenge = 25,
  EBattleMajorCrossWorldBoss = 26,
  EBattleCrossGuildWarCallForBattle = 27,
  EBattleCrossGuildWarTower = 28,
  EBattleMajorActivityLimitChallenge = 29,
  EBattleCrossLevy = 30,
  EBattleMajorActivityTD = 31,
  EBattleMajorLevy = 32,
  EBattleCrossLevyTower = 33,
  EBattleCrossLevySuperBoss = 34,
  EBattleMajorOutsmart = 35,
  EBattleLevyTeamInstance = 36,
  EBattleCrossCollaborate = 37,
  EBattlePubg = 38,
  EBattleAllyWar = 39,
  EBattleBigHunt = 40,
  EBattleBigHuntBoss = 41,
  EBattlePlunderGuard = 42,
  EBattlePlunderAttack = 43,
  EBattlePlunderRevenge = 44,
  EBattleLayerFight = 45,
  EBattlePlunder = 46,
  EBattleSoulChainActivity = 47,
  EBattleBoss = 48,
  EBattlePlatformArena = 49,
  EBattleLegendaryArmChallenge = 50,
  EBattleTowerHell = 51,
  EBattleDefineChallenge = 52
};
bool EBattleStarter_IsValid(int value);
const EBattleStarter EBattleStarter_MIN = EBattleNone;
const EBattleStarter EBattleStarter_MAX = EBattleDefineChallenge;
const int EBattleStarter_ARRAYSIZE = EBattleStarter_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBattleStarter_descriptor();
inline const ::std::string& EBattleStarter_Name(EBattleStarter value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBattleStarter_descriptor(), value);
}
inline bool EBattleStarter_Parse(
    const ::std::string& name, EBattleStarter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBattleStarter>(
    EBattleStarter_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TBattleDummyMsg</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BattleStarter.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBattleDummyMsg : public ::google::protobuf::Message {
 public:
  TBattleDummyMsg();
  virtual ~TBattleDummyMsg();

  TBattleDummyMsg(const TBattleDummyMsg& from);

  inline TBattleDummyMsg& operator=(const TBattleDummyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBattleDummyMsg& default_instance();

  void Swap(TBattleDummyMsg* other);

  // implements Message ----------------------------------------------

  TBattleDummyMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBattleDummyMsg& from);
  void MergeFrom(const TBattleDummyMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TBattleDummyMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fBattleStarter_2eproto();
  friend void protobuf_AssignDesc_net_2fBattleStarter_2eproto();
  friend void protobuf_ShutdownFile_net_2fBattleStarter_2eproto();

  void InitAsDefaultInstance();
  static TBattleDummyMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// TBattleDummyMsg


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EBattleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EBattleType>() {
  return ::pb::EBattleType_descriptor();
}
template <> struct is_proto_enum< ::pb::EBattleStarter> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EBattleStarter>() {
  return ::pb::EBattleStarter_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fBattleStarter_2eproto__INCLUDED
