// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActLinkSoulPub.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActLinkSoulPub.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActLinkSoulPubHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubDoRecuritReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubDoRecuritReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubDoRecuritRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubDoRecuritRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubDoRecruitReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubDoRecruitReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubReceiveRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubReceiveRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubBuyRMBGoodInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubBuyRMBGoodInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubGetRMBGoodInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubGetRMBGoodInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubChangeRecruitPoolReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubChangeRecruitPoolReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLinkSoulPubBuyRMBGoodNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLinkSoulPubBuyRMBGoodNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto() {
  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActLinkSoulPub.proto");
  GOOGLE_CHECK(file != NULL);
  TActLinkSoulPubHeroInfo_descriptor_ = file->message_type(0);
  static const int TActLinkSoulPubHeroInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubHeroInfo, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubHeroInfo, recnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubHeroInfo, rewardidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubHeroInfo, neednum_),
  };
  TActLinkSoulPubHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubHeroInfo_descriptor_,
      TActLinkSoulPubHeroInfo::default_instance_,
      TActLinkSoulPubHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubHeroInfo));
  TActLinkSoulPubGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TActLinkSoulPubGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetInfoRsp, herorecinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetInfoRsp, freerecrewardtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetInfoRsp, poolpos_),
  };
  TActLinkSoulPubGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubGetInfoRsp_descriptor_,
      TActLinkSoulPubGetInfoRsp::default_instance_,
      TActLinkSoulPubGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubGetInfoRsp));
  TActLinkSoulPubDoRecuritReq_descriptor_ = file->message_type(2);
  static const int TActLinkSoulPubDoRecuritReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritReq, recnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritReq, isfreerecurit_),
  };
  TActLinkSoulPubDoRecuritReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubDoRecuritReq_descriptor_,
      TActLinkSoulPubDoRecuritReq::default_instance_,
      TActLinkSoulPubDoRecuritReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubDoRecuritReq));
  TActLinkSoulPubDoRecuritRsp_descriptor_ = file->message_type(3);
  static const int TActLinkSoulPubDoRecuritRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritRsp, rewardarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritRsp, artifactleftnum_),
  };
  TActLinkSoulPubDoRecuritRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubDoRecuritRsp_descriptor_,
      TActLinkSoulPubDoRecuritRsp::default_instance_,
      TActLinkSoulPubDoRecuritRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecuritRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubDoRecuritRsp));
  TActLinkSoulPubDoRecruitReward_descriptor_ = file->message_type(4);
  static const int TActLinkSoulPubDoRecruitReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecruitReward, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecruitReward, critratio_),
  };
  TActLinkSoulPubDoRecruitReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubDoRecruitReward_descriptor_,
      TActLinkSoulPubDoRecruitReward::default_instance_,
      TActLinkSoulPubDoRecruitReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecruitReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubDoRecruitReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubDoRecruitReward));
  TActLinkSoulPubReceiveRewardReq_descriptor_ = file->message_type(5);
  static const int TActLinkSoulPubReceiveRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubReceiveRewardReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubReceiveRewardReq, posid_),
  };
  TActLinkSoulPubReceiveRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubReceiveRewardReq_descriptor_,
      TActLinkSoulPubReceiveRewardReq::default_instance_,
      TActLinkSoulPubReceiveRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubReceiveRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubReceiveRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubReceiveRewardReq));
  TActLinkSoulPubBuyRMBGoodInfo_descriptor_ = file->message_type(6);
  static const int TActLinkSoulPubBuyRMBGoodInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodInfo, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodInfo, boughtnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodInfo, boughttime_),
  };
  TActLinkSoulPubBuyRMBGoodInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubBuyRMBGoodInfo_descriptor_,
      TActLinkSoulPubBuyRMBGoodInfo::default_instance_,
      TActLinkSoulPubBuyRMBGoodInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubBuyRMBGoodInfo));
  TActLinkSoulPubGetRMBGoodInfoRsp_descriptor_ = file->message_type(7);
  static const int TActLinkSoulPubGetRMBGoodInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetRMBGoodInfoRsp, goodsbuyarr_),
  };
  TActLinkSoulPubGetRMBGoodInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubGetRMBGoodInfoRsp_descriptor_,
      TActLinkSoulPubGetRMBGoodInfoRsp::default_instance_,
      TActLinkSoulPubGetRMBGoodInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetRMBGoodInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubGetRMBGoodInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubGetRMBGoodInfoRsp));
  TActLinkSoulPubChangeRecruitPoolReq_descriptor_ = file->message_type(8);
  static const int TActLinkSoulPubChangeRecruitPoolReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubChangeRecruitPoolReq, poolpos_),
  };
  TActLinkSoulPubChangeRecruitPoolReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubChangeRecruitPoolReq_descriptor_,
      TActLinkSoulPubChangeRecruitPoolReq::default_instance_,
      TActLinkSoulPubChangeRecruitPoolReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubChangeRecruitPoolReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubChangeRecruitPoolReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubChangeRecruitPoolReq));
  TActLinkSoulPubBuyRMBGoodNotify_descriptor_ = file->message_type(9);
  static const int TActLinkSoulPubBuyRMBGoodNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodNotify, goodsbuyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodNotify, herorecinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodNotify, poolpos_),
  };
  TActLinkSoulPubBuyRMBGoodNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLinkSoulPubBuyRMBGoodNotify_descriptor_,
      TActLinkSoulPubBuyRMBGoodNotify::default_instance_,
      TActLinkSoulPubBuyRMBGoodNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLinkSoulPubBuyRMBGoodNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLinkSoulPubBuyRMBGoodNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubHeroInfo_descriptor_, &TActLinkSoulPubHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubGetInfoRsp_descriptor_, &TActLinkSoulPubGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubDoRecuritReq_descriptor_, &TActLinkSoulPubDoRecuritReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubDoRecuritRsp_descriptor_, &TActLinkSoulPubDoRecuritRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubDoRecruitReward_descriptor_, &TActLinkSoulPubDoRecruitReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubReceiveRewardReq_descriptor_, &TActLinkSoulPubReceiveRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubBuyRMBGoodInfo_descriptor_, &TActLinkSoulPubBuyRMBGoodInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubGetRMBGoodInfoRsp_descriptor_, &TActLinkSoulPubGetRMBGoodInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubChangeRecruitPoolReq_descriptor_, &TActLinkSoulPubChangeRecruitPoolReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLinkSoulPubBuyRMBGoodNotify_descriptor_, &TActLinkSoulPubBuyRMBGoodNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto() {
  delete TActLinkSoulPubHeroInfo::default_instance_;
  delete TActLinkSoulPubHeroInfo_reflection_;
  delete TActLinkSoulPubGetInfoRsp::default_instance_;
  delete TActLinkSoulPubGetInfoRsp_reflection_;
  delete TActLinkSoulPubDoRecuritReq::default_instance_;
  delete TActLinkSoulPubDoRecuritReq_reflection_;
  delete TActLinkSoulPubDoRecuritRsp::default_instance_;
  delete TActLinkSoulPubDoRecuritRsp_reflection_;
  delete TActLinkSoulPubDoRecruitReward::default_instance_;
  delete TActLinkSoulPubDoRecruitReward_reflection_;
  delete TActLinkSoulPubReceiveRewardReq::default_instance_;
  delete TActLinkSoulPubReceiveRewardReq_reflection_;
  delete TActLinkSoulPubBuyRMBGoodInfo::default_instance_;
  delete TActLinkSoulPubBuyRMBGoodInfo_reflection_;
  delete TActLinkSoulPubGetRMBGoodInfoRsp::default_instance_;
  delete TActLinkSoulPubGetRMBGoodInfoRsp_reflection_;
  delete TActLinkSoulPubChangeRecruitPoolReq::default_instance_;
  delete TActLinkSoulPubChangeRecruitPoolReq_reflection_;
  delete TActLinkSoulPubBuyRMBGoodNotify::default_instance_;
  delete TActLinkSoulPubBuyRMBGoodNotify_reflection_;
}

void protobuf_AddDesc_net_2fActLinkSoulPub_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030net/ActLinkSoulPub.proto\022\002pb\032\026net/Comm"
    "onReward.proto\"^\n\027TActLinkSoulPubHeroInf"
    "o\022\r\n\005RecId\030\001 \001(\r\022\016\n\006RecNum\030\002 \001(\r\022\023\n\013Rewa"
    "rdIdArr\030\003 \003(\r\022\017\n\007NeedNum\030\004 \001(\r\"|\n\031TActLi"
    "nkSoulPubGetInfoRsp\0223\n\016HeroRecInfoArr\030\001 "
    "\003(\0132\033.pb.TActLinkSoulPubHeroInfo\022\031\n\021Free"
    "RecRewardTime\030\002 \001(\004\022\017\n\007Poolpos\030\003 \001(\r\"T\n\033"
    "TActLinkSoulPubDoRecuritReq\022\016\n\006HeroId\030\001 "
    "\001(\r\022\016\n\006RecNum\030\002 \001(\r\022\025\n\rIsFreeRecurit\030\003 \001"
    "(\010\"o\n\033TActLinkSoulPubDoRecuritRsp\0227\n\013Rew"
    "ardArray\030\001 \003(\0132\".pb.TActLinkSoulPubDoRec"
    "ruitReward\022\027\n\017ArtifactLeftNum\030\002 \001(\r\"V\n\036T"
    "ActLinkSoulPubDoRecruitReward\022!\n\006Reward\030"
    "\001 \001(\0132\021.pb.TCommonReward\022\021\n\tCritRatio\030\002 "
    "\001(\r\"@\n\037TActLinkSoulPubReceiveRewardReq\022\016"
    "\n\006HeroId\030\001 \001(\r\022\r\n\005PosId\030\002 \001(\r\"W\n\035TActLin"
    "kSoulPubBuyRMBGoodInfo\022\017\n\007GoodsId\030\001 \001(\r\022"
    "\021\n\tBoughtNum\030\002 \001(\r\022\022\n\nBoughtTime\030\003 \001(\004\"Z"
    "\n TActLinkSoulPubGetRMBGoodInfoRsp\0226\n\013Go"
    "odsBuyArr\030\001 \003(\0132!.pb.TActLinkSoulPubBuyR"
    "MBGoodInfo\"6\n#TActLinkSoulPubChangeRecru"
    "itPoolReq\022\017\n\007PoolPos\030\001 \001(\r\"\237\001\n\037TActLinkS"
    "oulPubBuyRMBGoodNotify\0226\n\013GoodsBuyArr\030\001 "
    "\003(\0132!.pb.TActLinkSoulPubBuyRMBGoodInfo\0223"
    "\n\016HeroRecInfoArr\030\002 \003(\0132\033.pb.TActLinkSoul"
    "PubHeroInfo\022\017\n\007PoolPos\030\003 \001(\r", 1028);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActLinkSoulPub.proto", &protobuf_RegisterTypes);
  TActLinkSoulPubHeroInfo::default_instance_ = new TActLinkSoulPubHeroInfo();
  TActLinkSoulPubGetInfoRsp::default_instance_ = new TActLinkSoulPubGetInfoRsp();
  TActLinkSoulPubDoRecuritReq::default_instance_ = new TActLinkSoulPubDoRecuritReq();
  TActLinkSoulPubDoRecuritRsp::default_instance_ = new TActLinkSoulPubDoRecuritRsp();
  TActLinkSoulPubDoRecruitReward::default_instance_ = new TActLinkSoulPubDoRecruitReward();
  TActLinkSoulPubReceiveRewardReq::default_instance_ = new TActLinkSoulPubReceiveRewardReq();
  TActLinkSoulPubBuyRMBGoodInfo::default_instance_ = new TActLinkSoulPubBuyRMBGoodInfo();
  TActLinkSoulPubGetRMBGoodInfoRsp::default_instance_ = new TActLinkSoulPubGetRMBGoodInfoRsp();
  TActLinkSoulPubChangeRecruitPoolReq::default_instance_ = new TActLinkSoulPubChangeRecruitPoolReq();
  TActLinkSoulPubBuyRMBGoodNotify::default_instance_ = new TActLinkSoulPubBuyRMBGoodNotify();
  TActLinkSoulPubHeroInfo::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubDoRecuritReq::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubDoRecuritRsp::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubDoRecruitReward::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubReceiveRewardReq::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubBuyRMBGoodInfo::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubGetRMBGoodInfoRsp::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubChangeRecruitPoolReq::default_instance_->InitAsDefaultInstance();
  TActLinkSoulPubBuyRMBGoodNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActLinkSoulPub_2eproto {
  StaticDescriptorInitializer_net_2fActLinkSoulPub_2eproto() {
    protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  }
} static_descriptor_initializer_net_2fActLinkSoulPub_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubHeroInfo::kRecIdFieldNumber;
const int TActLinkSoulPubHeroInfo::kRecNumFieldNumber;
const int TActLinkSoulPubHeroInfo::kRewardIdArrFieldNumber;
const int TActLinkSoulPubHeroInfo::kNeedNumFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubHeroInfo::TActLinkSoulPubHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubHeroInfo)
}

void TActLinkSoulPubHeroInfo::InitAsDefaultInstance() {
}

TActLinkSoulPubHeroInfo::TActLinkSoulPubHeroInfo(const TActLinkSoulPubHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubHeroInfo)
}

void TActLinkSoulPubHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  recnum_ = 0u;
  neednum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubHeroInfo::~TActLinkSoulPubHeroInfo() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubHeroInfo)
  SharedDtor();
}

void TActLinkSoulPubHeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubHeroInfo_descriptor_;
}

const TActLinkSoulPubHeroInfo& TActLinkSoulPubHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubHeroInfo* TActLinkSoulPubHeroInfo::default_instance_ = NULL;

TActLinkSoulPubHeroInfo* TActLinkSoulPubHeroInfo::New() const {
  return new TActLinkSoulPubHeroInfo;
}

void TActLinkSoulPubHeroInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLinkSoulPubHeroInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(recid_, recnum_);
    neednum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  rewardidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubHeroInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecNum;
        break;
      }

      // optional uint32 RecNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RecNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recnum_)));
          set_has_recnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        break;
      }

      // repeated uint32 RewardIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_RewardIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_rewardidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        if (input->ExpectTag(32)) goto parse_NeedNum;
        break;
      }

      // optional uint32 NeedNum = 4;
      case 4: {
        if (tag == 32) {
         parse_NeedNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &neednum_)));
          set_has_neednum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubHeroInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubHeroInfo)
  return false;
#undef DO_
}

void TActLinkSoulPubHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubHeroInfo)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recnum(), output);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->rewardidarr(i), output);
  }

  // optional uint32 NeedNum = 4;
  if (has_neednum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->neednum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubHeroInfo)
}

::google::protobuf::uint8* TActLinkSoulPubHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubHeroInfo)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recnum(), target);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->rewardidarr(i), target);
  }

  // optional uint32 NeedNum = 4;
  if (has_neednum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->neednum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubHeroInfo)
  return target;
}

int TActLinkSoulPubHeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 RecNum = 2;
    if (has_recnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recnum());
    }

    // optional uint32 NeedNum = 4;
    if (has_neednum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->neednum());
    }

  }
  // repeated uint32 RewardIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardidarr(i));
    }
    total_size += 1 * this->rewardidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubHeroInfo::MergeFrom(const TActLinkSoulPubHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardidarr_.MergeFrom(from.rewardidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_recnum()) {
      set_recnum(from.recnum());
    }
    if (from.has_neednum()) {
      set_neednum(from.neednum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubHeroInfo::CopyFrom(const TActLinkSoulPubHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubHeroInfo::IsInitialized() const {

  return true;
}

void TActLinkSoulPubHeroInfo::Swap(TActLinkSoulPubHeroInfo* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(recnum_, other->recnum_);
    rewardidarr_.Swap(&other->rewardidarr_);
    std::swap(neednum_, other->neednum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubHeroInfo_descriptor_;
  metadata.reflection = TActLinkSoulPubHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubGetInfoRsp::kHeroRecInfoArrFieldNumber;
const int TActLinkSoulPubGetInfoRsp::kFreeRecRewardTimeFieldNumber;
const int TActLinkSoulPubGetInfoRsp::kPoolposFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubGetInfoRsp::TActLinkSoulPubGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubGetInfoRsp)
}

void TActLinkSoulPubGetInfoRsp::InitAsDefaultInstance() {
}

TActLinkSoulPubGetInfoRsp::TActLinkSoulPubGetInfoRsp(const TActLinkSoulPubGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubGetInfoRsp)
}

void TActLinkSoulPubGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  freerecrewardtime_ = GOOGLE_ULONGLONG(0);
  poolpos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubGetInfoRsp::~TActLinkSoulPubGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubGetInfoRsp)
  SharedDtor();
}

void TActLinkSoulPubGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubGetInfoRsp_descriptor_;
}

const TActLinkSoulPubGetInfoRsp& TActLinkSoulPubGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubGetInfoRsp* TActLinkSoulPubGetInfoRsp::default_instance_ = NULL;

TActLinkSoulPubGetInfoRsp* TActLinkSoulPubGetInfoRsp::New() const {
  return new TActLinkSoulPubGetInfoRsp;
}

void TActLinkSoulPubGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLinkSoulPubGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(freerecrewardtime_, poolpos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  herorecinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroRecInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herorecinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroRecInfoArr;
        if (input->ExpectTag(16)) goto parse_FreeRecRewardTime;
        break;
      }

      // optional uint64 FreeRecRewardTime = 2;
      case 2: {
        if (tag == 16) {
         parse_FreeRecRewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &freerecrewardtime_)));
          set_has_freerecrewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Poolpos;
        break;
      }

      // optional uint32 Poolpos = 3;
      case 3: {
        if (tag == 24) {
         parse_Poolpos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poolpos_)));
          set_has_poolpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubGetInfoRsp)
  return false;
#undef DO_
}

void TActLinkSoulPubGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubGetInfoRsp)
  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 1;
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herorecinfoarr(i), output);
  }

  // optional uint64 FreeRecRewardTime = 2;
  if (has_freerecrewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->freerecrewardtime(), output);
  }

  // optional uint32 Poolpos = 3;
  if (has_poolpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->poolpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubGetInfoRsp)
}

::google::protobuf::uint8* TActLinkSoulPubGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubGetInfoRsp)
  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 1;
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herorecinfoarr(i), target);
  }

  // optional uint64 FreeRecRewardTime = 2;
  if (has_freerecrewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->freerecrewardtime(), target);
  }

  // optional uint32 Poolpos = 3;
  if (has_poolpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->poolpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubGetInfoRsp)
  return target;
}

int TActLinkSoulPubGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint64 FreeRecRewardTime = 2;
    if (has_freerecrewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->freerecrewardtime());
    }

    // optional uint32 Poolpos = 3;
    if (has_poolpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->poolpos());
    }

  }
  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 1;
  total_size += 1 * this->herorecinfoarr_size();
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herorecinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubGetInfoRsp::MergeFrom(const TActLinkSoulPubGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  herorecinfoarr_.MergeFrom(from.herorecinfoarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_freerecrewardtime()) {
      set_freerecrewardtime(from.freerecrewardtime());
    }
    if (from.has_poolpos()) {
      set_poolpos(from.poolpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubGetInfoRsp::CopyFrom(const TActLinkSoulPubGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubGetInfoRsp::IsInitialized() const {

  return true;
}

void TActLinkSoulPubGetInfoRsp::Swap(TActLinkSoulPubGetInfoRsp* other) {
  if (other != this) {
    herorecinfoarr_.Swap(&other->herorecinfoarr_);
    std::swap(freerecrewardtime_, other->freerecrewardtime_);
    std::swap(poolpos_, other->poolpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubGetInfoRsp_descriptor_;
  metadata.reflection = TActLinkSoulPubGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubDoRecuritReq::kHeroIdFieldNumber;
const int TActLinkSoulPubDoRecuritReq::kRecNumFieldNumber;
const int TActLinkSoulPubDoRecuritReq::kIsFreeRecuritFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubDoRecuritReq::TActLinkSoulPubDoRecuritReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubDoRecuritReq)
}

void TActLinkSoulPubDoRecuritReq::InitAsDefaultInstance() {
}

TActLinkSoulPubDoRecuritReq::TActLinkSoulPubDoRecuritReq(const TActLinkSoulPubDoRecuritReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubDoRecuritReq)
}

void TActLinkSoulPubDoRecuritReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  recnum_ = 0u;
  isfreerecurit_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubDoRecuritReq::~TActLinkSoulPubDoRecuritReq() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubDoRecuritReq)
  SharedDtor();
}

void TActLinkSoulPubDoRecuritReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubDoRecuritReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubDoRecuritReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubDoRecuritReq_descriptor_;
}

const TActLinkSoulPubDoRecuritReq& TActLinkSoulPubDoRecuritReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubDoRecuritReq* TActLinkSoulPubDoRecuritReq::default_instance_ = NULL;

TActLinkSoulPubDoRecuritReq* TActLinkSoulPubDoRecuritReq::New() const {
  return new TActLinkSoulPubDoRecuritReq;
}

void TActLinkSoulPubDoRecuritReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLinkSoulPubDoRecuritReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroid_, isfreerecurit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubDoRecuritReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubDoRecuritReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HeroId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecNum;
        break;
      }

      // optional uint32 RecNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RecNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recnum_)));
          set_has_recnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IsFreeRecurit;
        break;
      }

      // optional bool IsFreeRecurit = 3;
      case 3: {
        if (tag == 24) {
         parse_IsFreeRecurit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfreerecurit_)));
          set_has_isfreerecurit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubDoRecuritReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubDoRecuritReq)
  return false;
#undef DO_
}

void TActLinkSoulPubDoRecuritReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubDoRecuritReq)
  // optional uint32 HeroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recnum(), output);
  }

  // optional bool IsFreeRecurit = 3;
  if (has_isfreerecurit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isfreerecurit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubDoRecuritReq)
}

::google::protobuf::uint8* TActLinkSoulPubDoRecuritReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubDoRecuritReq)
  // optional uint32 HeroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recnum(), target);
  }

  // optional bool IsFreeRecurit = 3;
  if (has_isfreerecurit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isfreerecurit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubDoRecuritReq)
  return target;
}

int TActLinkSoulPubDoRecuritReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HeroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional uint32 RecNum = 2;
    if (has_recnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recnum());
    }

    // optional bool IsFreeRecurit = 3;
    if (has_isfreerecurit()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubDoRecuritReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubDoRecuritReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubDoRecuritReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubDoRecuritReq::MergeFrom(const TActLinkSoulPubDoRecuritReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_recnum()) {
      set_recnum(from.recnum());
    }
    if (from.has_isfreerecurit()) {
      set_isfreerecurit(from.isfreerecurit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubDoRecuritReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubDoRecuritReq::CopyFrom(const TActLinkSoulPubDoRecuritReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubDoRecuritReq::IsInitialized() const {

  return true;
}

void TActLinkSoulPubDoRecuritReq::Swap(TActLinkSoulPubDoRecuritReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(recnum_, other->recnum_);
    std::swap(isfreerecurit_, other->isfreerecurit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubDoRecuritReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubDoRecuritReq_descriptor_;
  metadata.reflection = TActLinkSoulPubDoRecuritReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubDoRecuritRsp::kRewardArrayFieldNumber;
const int TActLinkSoulPubDoRecuritRsp::kArtifactLeftNumFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubDoRecuritRsp::TActLinkSoulPubDoRecuritRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubDoRecuritRsp)
}

void TActLinkSoulPubDoRecuritRsp::InitAsDefaultInstance() {
}

TActLinkSoulPubDoRecuritRsp::TActLinkSoulPubDoRecuritRsp(const TActLinkSoulPubDoRecuritRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubDoRecuritRsp)
}

void TActLinkSoulPubDoRecuritRsp::SharedCtor() {
  _cached_size_ = 0;
  artifactleftnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubDoRecuritRsp::~TActLinkSoulPubDoRecuritRsp() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubDoRecuritRsp)
  SharedDtor();
}

void TActLinkSoulPubDoRecuritRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubDoRecuritRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubDoRecuritRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubDoRecuritRsp_descriptor_;
}

const TActLinkSoulPubDoRecuritRsp& TActLinkSoulPubDoRecuritRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubDoRecuritRsp* TActLinkSoulPubDoRecuritRsp::default_instance_ = NULL;

TActLinkSoulPubDoRecuritRsp* TActLinkSoulPubDoRecuritRsp::New() const {
  return new TActLinkSoulPubDoRecuritRsp;
}

void TActLinkSoulPubDoRecuritRsp::Clear() {
  artifactleftnum_ = 0u;
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubDoRecuritRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubDoRecuritRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActLinkSoulPubDoRecruitReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectTag(16)) goto parse_ArtifactLeftNum;
        break;
      }

      // optional uint32 ArtifactLeftNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ArtifactLeftNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactleftnum_)));
          set_has_artifactleftnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubDoRecuritRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubDoRecuritRsp)
  return false;
#undef DO_
}

void TActLinkSoulPubDoRecuritRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubDoRecuritRsp)
  // repeated .pb.TActLinkSoulPubDoRecruitReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  // optional uint32 ArtifactLeftNum = 2;
  if (has_artifactleftnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->artifactleftnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubDoRecuritRsp)
}

::google::protobuf::uint8* TActLinkSoulPubDoRecuritRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubDoRecuritRsp)
  // repeated .pb.TActLinkSoulPubDoRecruitReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  // optional uint32 ArtifactLeftNum = 2;
  if (has_artifactleftnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->artifactleftnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubDoRecuritRsp)
  return target;
}

int TActLinkSoulPubDoRecuritRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ArtifactLeftNum = 2;
    if (has_artifactleftnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactleftnum());
    }

  }
  // repeated .pb.TActLinkSoulPubDoRecruitReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubDoRecuritRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubDoRecuritRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubDoRecuritRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubDoRecuritRsp::MergeFrom(const TActLinkSoulPubDoRecuritRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_artifactleftnum()) {
      set_artifactleftnum(from.artifactleftnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubDoRecuritRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubDoRecuritRsp::CopyFrom(const TActLinkSoulPubDoRecuritRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubDoRecuritRsp::IsInitialized() const {

  return true;
}

void TActLinkSoulPubDoRecuritRsp::Swap(TActLinkSoulPubDoRecuritRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(artifactleftnum_, other->artifactleftnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubDoRecuritRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubDoRecuritRsp_descriptor_;
  metadata.reflection = TActLinkSoulPubDoRecuritRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubDoRecruitReward::kRewardFieldNumber;
const int TActLinkSoulPubDoRecruitReward::kCritRatioFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubDoRecruitReward::TActLinkSoulPubDoRecruitReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubDoRecruitReward)
}

void TActLinkSoulPubDoRecruitReward::InitAsDefaultInstance() {
  reward_ = const_cast< ::pb::TCommonReward*>(&::pb::TCommonReward::default_instance());
}

TActLinkSoulPubDoRecruitReward::TActLinkSoulPubDoRecruitReward(const TActLinkSoulPubDoRecruitReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubDoRecruitReward)
}

void TActLinkSoulPubDoRecruitReward::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubDoRecruitReward::~TActLinkSoulPubDoRecruitReward() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubDoRecruitReward)
  SharedDtor();
}

void TActLinkSoulPubDoRecruitReward::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void TActLinkSoulPubDoRecruitReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubDoRecruitReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubDoRecruitReward_descriptor_;
}

const TActLinkSoulPubDoRecruitReward& TActLinkSoulPubDoRecruitReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubDoRecruitReward* TActLinkSoulPubDoRecruitReward::default_instance_ = NULL;

TActLinkSoulPubDoRecruitReward* TActLinkSoulPubDoRecruitReward::New() const {
  return new TActLinkSoulPubDoRecruitReward;
}

void TActLinkSoulPubDoRecruitReward::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::pb::TCommonReward::Clear();
    }
    critratio_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubDoRecruitReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubDoRecruitReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TCommonReward Reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CritRatio;
        break;
      }

      // optional uint32 CritRatio = 2;
      case 2: {
        if (tag == 16) {
         parse_CritRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critratio_)));
          set_has_critratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubDoRecruitReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubDoRecruitReward)
  return false;
#undef DO_
}

void TActLinkSoulPubDoRecruitReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubDoRecruitReward)
  // optional .pb.TCommonReward Reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // optional uint32 CritRatio = 2;
  if (has_critratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->critratio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubDoRecruitReward)
}

::google::protobuf::uint8* TActLinkSoulPubDoRecruitReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubDoRecruitReward)
  // optional .pb.TCommonReward Reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // optional uint32 CritRatio = 2;
  if (has_critratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->critratio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubDoRecruitReward)
  return target;
}

int TActLinkSoulPubDoRecruitReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TCommonReward Reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // optional uint32 CritRatio = 2;
    if (has_critratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critratio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubDoRecruitReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubDoRecruitReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubDoRecruitReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubDoRecruitReward::MergeFrom(const TActLinkSoulPubDoRecruitReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::pb::TCommonReward::MergeFrom(from.reward());
    }
    if (from.has_critratio()) {
      set_critratio(from.critratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubDoRecruitReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubDoRecruitReward::CopyFrom(const TActLinkSoulPubDoRecruitReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubDoRecruitReward::IsInitialized() const {

  return true;
}

void TActLinkSoulPubDoRecruitReward::Swap(TActLinkSoulPubDoRecruitReward* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(critratio_, other->critratio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubDoRecruitReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubDoRecruitReward_descriptor_;
  metadata.reflection = TActLinkSoulPubDoRecruitReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubReceiveRewardReq::kHeroIdFieldNumber;
const int TActLinkSoulPubReceiveRewardReq::kPosIdFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubReceiveRewardReq::TActLinkSoulPubReceiveRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubReceiveRewardReq)
}

void TActLinkSoulPubReceiveRewardReq::InitAsDefaultInstance() {
}

TActLinkSoulPubReceiveRewardReq::TActLinkSoulPubReceiveRewardReq(const TActLinkSoulPubReceiveRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubReceiveRewardReq)
}

void TActLinkSoulPubReceiveRewardReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  posid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubReceiveRewardReq::~TActLinkSoulPubReceiveRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubReceiveRewardReq)
  SharedDtor();
}

void TActLinkSoulPubReceiveRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubReceiveRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubReceiveRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubReceiveRewardReq_descriptor_;
}

const TActLinkSoulPubReceiveRewardReq& TActLinkSoulPubReceiveRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubReceiveRewardReq* TActLinkSoulPubReceiveRewardReq::default_instance_ = NULL;

TActLinkSoulPubReceiveRewardReq* TActLinkSoulPubReceiveRewardReq::New() const {
  return new TActLinkSoulPubReceiveRewardReq;
}

void TActLinkSoulPubReceiveRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLinkSoulPubReceiveRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroid_, posid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubReceiveRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubReceiveRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HeroId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubReceiveRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubReceiveRewardReq)
  return false;
#undef DO_
}

void TActLinkSoulPubReceiveRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubReceiveRewardReq)
  // optional uint32 HeroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubReceiveRewardReq)
}

::google::protobuf::uint8* TActLinkSoulPubReceiveRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubReceiveRewardReq)
  // optional uint32 HeroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubReceiveRewardReq)
  return target;
}

int TActLinkSoulPubReceiveRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HeroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubReceiveRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubReceiveRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubReceiveRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubReceiveRewardReq::MergeFrom(const TActLinkSoulPubReceiveRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubReceiveRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubReceiveRewardReq::CopyFrom(const TActLinkSoulPubReceiveRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubReceiveRewardReq::IsInitialized() const {

  return true;
}

void TActLinkSoulPubReceiveRewardReq::Swap(TActLinkSoulPubReceiveRewardReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(posid_, other->posid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubReceiveRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubReceiveRewardReq_descriptor_;
  metadata.reflection = TActLinkSoulPubReceiveRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubBuyRMBGoodInfo::kGoodsIdFieldNumber;
const int TActLinkSoulPubBuyRMBGoodInfo::kBoughtNumFieldNumber;
const int TActLinkSoulPubBuyRMBGoodInfo::kBoughtTimeFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubBuyRMBGoodInfo::TActLinkSoulPubBuyRMBGoodInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubBuyRMBGoodInfo)
}

void TActLinkSoulPubBuyRMBGoodInfo::InitAsDefaultInstance() {
}

TActLinkSoulPubBuyRMBGoodInfo::TActLinkSoulPubBuyRMBGoodInfo(const TActLinkSoulPubBuyRMBGoodInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubBuyRMBGoodInfo)
}

void TActLinkSoulPubBuyRMBGoodInfo::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0u;
  boughtnum_ = 0u;
  boughttime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubBuyRMBGoodInfo::~TActLinkSoulPubBuyRMBGoodInfo() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubBuyRMBGoodInfo)
  SharedDtor();
}

void TActLinkSoulPubBuyRMBGoodInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubBuyRMBGoodInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubBuyRMBGoodInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubBuyRMBGoodInfo_descriptor_;
}

const TActLinkSoulPubBuyRMBGoodInfo& TActLinkSoulPubBuyRMBGoodInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubBuyRMBGoodInfo* TActLinkSoulPubBuyRMBGoodInfo::default_instance_ = NULL;

TActLinkSoulPubBuyRMBGoodInfo* TActLinkSoulPubBuyRMBGoodInfo::New() const {
  return new TActLinkSoulPubBuyRMBGoodInfo;
}

void TActLinkSoulPubBuyRMBGoodInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLinkSoulPubBuyRMBGoodInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodsid_, boughttime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubBuyRMBGoodInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubBuyRMBGoodInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GoodsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoughtNum;
        break;
      }

      // optional uint32 BoughtNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BoughtNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boughtnum_)));
          set_has_boughtnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BoughtTime;
        break;
      }

      // optional uint64 BoughtTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BoughtTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &boughttime_)));
          set_has_boughttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubBuyRMBGoodInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubBuyRMBGoodInfo)
  return false;
#undef DO_
}

void TActLinkSoulPubBuyRMBGoodInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubBuyRMBGoodInfo)
  // optional uint32 GoodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodsid(), output);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boughtnum(), output);
  }

  // optional uint64 BoughtTime = 3;
  if (has_boughttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->boughttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubBuyRMBGoodInfo)
}

::google::protobuf::uint8* TActLinkSoulPubBuyRMBGoodInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubBuyRMBGoodInfo)
  // optional uint32 GoodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodsid(), target);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boughtnum(), target);
  }

  // optional uint64 BoughtTime = 3;
  if (has_boughttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->boughttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubBuyRMBGoodInfo)
  return target;
}

int TActLinkSoulPubBuyRMBGoodInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // optional uint32 BoughtNum = 2;
    if (has_boughtnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boughtnum());
    }

    // optional uint64 BoughtTime = 3;
    if (has_boughttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->boughttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubBuyRMBGoodInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubBuyRMBGoodInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubBuyRMBGoodInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubBuyRMBGoodInfo::MergeFrom(const TActLinkSoulPubBuyRMBGoodInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_boughtnum()) {
      set_boughtnum(from.boughtnum());
    }
    if (from.has_boughttime()) {
      set_boughttime(from.boughttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubBuyRMBGoodInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubBuyRMBGoodInfo::CopyFrom(const TActLinkSoulPubBuyRMBGoodInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubBuyRMBGoodInfo::IsInitialized() const {

  return true;
}

void TActLinkSoulPubBuyRMBGoodInfo::Swap(TActLinkSoulPubBuyRMBGoodInfo* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(boughtnum_, other->boughtnum_);
    std::swap(boughttime_, other->boughttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubBuyRMBGoodInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubBuyRMBGoodInfo_descriptor_;
  metadata.reflection = TActLinkSoulPubBuyRMBGoodInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubGetRMBGoodInfoRsp::kGoodsBuyArrFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubGetRMBGoodInfoRsp::TActLinkSoulPubGetRMBGoodInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
}

void TActLinkSoulPubGetRMBGoodInfoRsp::InitAsDefaultInstance() {
}

TActLinkSoulPubGetRMBGoodInfoRsp::TActLinkSoulPubGetRMBGoodInfoRsp(const TActLinkSoulPubGetRMBGoodInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
}

void TActLinkSoulPubGetRMBGoodInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubGetRMBGoodInfoRsp::~TActLinkSoulPubGetRMBGoodInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  SharedDtor();
}

void TActLinkSoulPubGetRMBGoodInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubGetRMBGoodInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubGetRMBGoodInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubGetRMBGoodInfoRsp_descriptor_;
}

const TActLinkSoulPubGetRMBGoodInfoRsp& TActLinkSoulPubGetRMBGoodInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubGetRMBGoodInfoRsp* TActLinkSoulPubGetRMBGoodInfoRsp::default_instance_ = NULL;

TActLinkSoulPubGetRMBGoodInfoRsp* TActLinkSoulPubGetRMBGoodInfoRsp::New() const {
  return new TActLinkSoulPubGetRMBGoodInfoRsp;
}

void TActLinkSoulPubGetRMBGoodInfoRsp::Clear() {
  goodsbuyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubGetRMBGoodInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GoodsBuyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsbuyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GoodsBuyArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  return false;
#undef DO_
}

void TActLinkSoulPubGetRMBGoodInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodsbuyarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
}

::google::protobuf::uint8* TActLinkSoulPubGetRMBGoodInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goodsbuyarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
  return target;
}

int TActLinkSoulPubGetRMBGoodInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  total_size += 1 * this->goodsbuyarr_size();
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goodsbuyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubGetRMBGoodInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubGetRMBGoodInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubGetRMBGoodInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubGetRMBGoodInfoRsp::MergeFrom(const TActLinkSoulPubGetRMBGoodInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsbuyarr_.MergeFrom(from.goodsbuyarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubGetRMBGoodInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubGetRMBGoodInfoRsp::CopyFrom(const TActLinkSoulPubGetRMBGoodInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubGetRMBGoodInfoRsp::IsInitialized() const {

  return true;
}

void TActLinkSoulPubGetRMBGoodInfoRsp::Swap(TActLinkSoulPubGetRMBGoodInfoRsp* other) {
  if (other != this) {
    goodsbuyarr_.Swap(&other->goodsbuyarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubGetRMBGoodInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubGetRMBGoodInfoRsp_descriptor_;
  metadata.reflection = TActLinkSoulPubGetRMBGoodInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubChangeRecruitPoolReq::kPoolPosFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubChangeRecruitPoolReq::TActLinkSoulPubChangeRecruitPoolReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubChangeRecruitPoolReq)
}

void TActLinkSoulPubChangeRecruitPoolReq::InitAsDefaultInstance() {
}

TActLinkSoulPubChangeRecruitPoolReq::TActLinkSoulPubChangeRecruitPoolReq(const TActLinkSoulPubChangeRecruitPoolReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubChangeRecruitPoolReq)
}

void TActLinkSoulPubChangeRecruitPoolReq::SharedCtor() {
  _cached_size_ = 0;
  poolpos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubChangeRecruitPoolReq::~TActLinkSoulPubChangeRecruitPoolReq() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubChangeRecruitPoolReq)
  SharedDtor();
}

void TActLinkSoulPubChangeRecruitPoolReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubChangeRecruitPoolReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubChangeRecruitPoolReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubChangeRecruitPoolReq_descriptor_;
}

const TActLinkSoulPubChangeRecruitPoolReq& TActLinkSoulPubChangeRecruitPoolReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubChangeRecruitPoolReq* TActLinkSoulPubChangeRecruitPoolReq::default_instance_ = NULL;

TActLinkSoulPubChangeRecruitPoolReq* TActLinkSoulPubChangeRecruitPoolReq::New() const {
  return new TActLinkSoulPubChangeRecruitPoolReq;
}

void TActLinkSoulPubChangeRecruitPoolReq::Clear() {
  poolpos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubChangeRecruitPoolReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubChangeRecruitPoolReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PoolPos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poolpos_)));
          set_has_poolpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubChangeRecruitPoolReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubChangeRecruitPoolReq)
  return false;
#undef DO_
}

void TActLinkSoulPubChangeRecruitPoolReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubChangeRecruitPoolReq)
  // optional uint32 PoolPos = 1;
  if (has_poolpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->poolpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubChangeRecruitPoolReq)
}

::google::protobuf::uint8* TActLinkSoulPubChangeRecruitPoolReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubChangeRecruitPoolReq)
  // optional uint32 PoolPos = 1;
  if (has_poolpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->poolpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubChangeRecruitPoolReq)
  return target;
}

int TActLinkSoulPubChangeRecruitPoolReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PoolPos = 1;
    if (has_poolpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->poolpos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubChangeRecruitPoolReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubChangeRecruitPoolReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubChangeRecruitPoolReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubChangeRecruitPoolReq::MergeFrom(const TActLinkSoulPubChangeRecruitPoolReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_poolpos()) {
      set_poolpos(from.poolpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubChangeRecruitPoolReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubChangeRecruitPoolReq::CopyFrom(const TActLinkSoulPubChangeRecruitPoolReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubChangeRecruitPoolReq::IsInitialized() const {

  return true;
}

void TActLinkSoulPubChangeRecruitPoolReq::Swap(TActLinkSoulPubChangeRecruitPoolReq* other) {
  if (other != this) {
    std::swap(poolpos_, other->poolpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubChangeRecruitPoolReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubChangeRecruitPoolReq_descriptor_;
  metadata.reflection = TActLinkSoulPubChangeRecruitPoolReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLinkSoulPubBuyRMBGoodNotify::kGoodsBuyArrFieldNumber;
const int TActLinkSoulPubBuyRMBGoodNotify::kHeroRecInfoArrFieldNumber;
const int TActLinkSoulPubBuyRMBGoodNotify::kPoolPosFieldNumber;
#endif  // !_MSC_VER

TActLinkSoulPubBuyRMBGoodNotify::TActLinkSoulPubBuyRMBGoodNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLinkSoulPubBuyRMBGoodNotify)
}

void TActLinkSoulPubBuyRMBGoodNotify::InitAsDefaultInstance() {
}

TActLinkSoulPubBuyRMBGoodNotify::TActLinkSoulPubBuyRMBGoodNotify(const TActLinkSoulPubBuyRMBGoodNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLinkSoulPubBuyRMBGoodNotify)
}

void TActLinkSoulPubBuyRMBGoodNotify::SharedCtor() {
  _cached_size_ = 0;
  poolpos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLinkSoulPubBuyRMBGoodNotify::~TActLinkSoulPubBuyRMBGoodNotify() {
  // @@protoc_insertion_point(destructor:pb.TActLinkSoulPubBuyRMBGoodNotify)
  SharedDtor();
}

void TActLinkSoulPubBuyRMBGoodNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLinkSoulPubBuyRMBGoodNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLinkSoulPubBuyRMBGoodNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLinkSoulPubBuyRMBGoodNotify_descriptor_;
}

const TActLinkSoulPubBuyRMBGoodNotify& TActLinkSoulPubBuyRMBGoodNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  return *default_instance_;
}

TActLinkSoulPubBuyRMBGoodNotify* TActLinkSoulPubBuyRMBGoodNotify::default_instance_ = NULL;

TActLinkSoulPubBuyRMBGoodNotify* TActLinkSoulPubBuyRMBGoodNotify::New() const {
  return new TActLinkSoulPubBuyRMBGoodNotify;
}

void TActLinkSoulPubBuyRMBGoodNotify::Clear() {
  poolpos_ = 0u;
  goodsbuyarr_.Clear();
  herorecinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLinkSoulPubBuyRMBGoodNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLinkSoulPubBuyRMBGoodNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GoodsBuyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsbuyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GoodsBuyArr;
        if (input->ExpectTag(18)) goto parse_HeroRecInfoArr;
        break;
      }

      // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 2;
      case 2: {
        if (tag == 18) {
         parse_HeroRecInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herorecinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroRecInfoArr;
        if (input->ExpectTag(24)) goto parse_PoolPos;
        break;
      }

      // optional uint32 PoolPos = 3;
      case 3: {
        if (tag == 24) {
         parse_PoolPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poolpos_)));
          set_has_poolpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLinkSoulPubBuyRMBGoodNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLinkSoulPubBuyRMBGoodNotify)
  return false;
#undef DO_
}

void TActLinkSoulPubBuyRMBGoodNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLinkSoulPubBuyRMBGoodNotify)
  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodsbuyarr(i), output);
  }

  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 2;
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->herorecinfoarr(i), output);
  }

  // optional uint32 PoolPos = 3;
  if (has_poolpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->poolpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLinkSoulPubBuyRMBGoodNotify)
}

::google::protobuf::uint8* TActLinkSoulPubBuyRMBGoodNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLinkSoulPubBuyRMBGoodNotify)
  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goodsbuyarr(i), target);
  }

  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 2;
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->herorecinfoarr(i), target);
  }

  // optional uint32 PoolPos = 3;
  if (has_poolpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->poolpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLinkSoulPubBuyRMBGoodNotify)
  return target;
}

int TActLinkSoulPubBuyRMBGoodNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 PoolPos = 3;
    if (has_poolpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->poolpos());
    }

  }
  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  total_size += 1 * this->goodsbuyarr_size();
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goodsbuyarr(i));
  }

  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 2;
  total_size += 1 * this->herorecinfoarr_size();
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herorecinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLinkSoulPubBuyRMBGoodNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLinkSoulPubBuyRMBGoodNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLinkSoulPubBuyRMBGoodNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLinkSoulPubBuyRMBGoodNotify::MergeFrom(const TActLinkSoulPubBuyRMBGoodNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsbuyarr_.MergeFrom(from.goodsbuyarr_);
  herorecinfoarr_.MergeFrom(from.herorecinfoarr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_poolpos()) {
      set_poolpos(from.poolpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLinkSoulPubBuyRMBGoodNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLinkSoulPubBuyRMBGoodNotify::CopyFrom(const TActLinkSoulPubBuyRMBGoodNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLinkSoulPubBuyRMBGoodNotify::IsInitialized() const {

  return true;
}

void TActLinkSoulPubBuyRMBGoodNotify::Swap(TActLinkSoulPubBuyRMBGoodNotify* other) {
  if (other != this) {
    goodsbuyarr_.Swap(&other->goodsbuyarr_);
    herorecinfoarr_.Swap(&other->herorecinfoarr_);
    std::swap(poolpos_, other->poolpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLinkSoulPubBuyRMBGoodNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLinkSoulPubBuyRMBGoodNotify_descriptor_;
  metadata.reflection = TActLinkSoulPubBuyRMBGoodNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
