// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActTreasureBowl.proto

#ifndef PROTOBUF_net_2fActTreasureBowl_2eproto__INCLUDED
#define PROTOBUF_net_2fActTreasureBowl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

class TActTreasureBowlExchangeInfo;
class TActTreasureBowlPackageInfo;
class TActTreasureBowlGetInfoRsp;
class TActTreasureBowlBuyItemInfoReq;
class TActTreasureBowlDrawReq;
class TActTreasureBowlDrawRsp;
class TActTreasureBowlExchangeReq;
class TActTreasureBowlRecvRewardReq;
class TActTreasureBowlPackageNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActTreasureBowlExchangeInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlExchangeInfo : public ::google::protobuf::Message {
 public:
  TActTreasureBowlExchangeInfo();
  virtual ~TActTreasureBowlExchangeInfo();

  TActTreasureBowlExchangeInfo(const TActTreasureBowlExchangeInfo& from);

  inline TActTreasureBowlExchangeInfo& operator=(const TActTreasureBowlExchangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlExchangeInfo& default_instance();

  void Swap(TActTreasureBowlExchangeInfo* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlExchangeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlExchangeInfo& from);
  void MergeFrom(const TActTreasureBowlExchangeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ExchangeId = 1;
  inline bool has_exchangeid() const;
  inline void clear_exchangeid();
  static const int kExchangeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlExchangeInfo</name>
  	<Function>
  		<name>exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exchangeid() const;
  inline void set_exchangeid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlExchangeInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlExchangeInfo)
 private:
  inline void set_has_exchangeid();
  inline void clear_has_exchangeid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 exchangeid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlExchangeInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlPackageInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlPackageInfo : public ::google::protobuf::Message {
 public:
  TActTreasureBowlPackageInfo();
  virtual ~TActTreasureBowlPackageInfo();

  TActTreasureBowlPackageInfo(const TActTreasureBowlPackageInfo& from);

  inline TActTreasureBowlPackageInfo& operator=(const TActTreasureBowlPackageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlPackageInfo& default_instance();

  void Swap(TActTreasureBowlPackageInfo* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlPackageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlPackageInfo& from);
  void MergeFrom(const TActTreasureBowlPackageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlPackageInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlPackageInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlPackageInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlPackageInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActTreasureBowlGetInfoRsp();
  virtual ~TActTreasureBowlGetInfoRsp();

  TActTreasureBowlGetInfoRsp(const TActTreasureBowlGetInfoRsp& from);

  inline TActTreasureBowlGetInfoRsp& operator=(const TActTreasureBowlGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlGetInfoRsp& default_instance();

  void Swap(TActTreasureBowlGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlGetInfoRsp& from);
  void MergeFrom(const TActTreasureBowlGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FreeNumToday = 1;
  inline bool has_freenumtoday() const;
  inline void clear_freenumtoday();
  static const int kFreeNumTodayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>freenumtoday</name>
  		<replaceName>FreeNumToday</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freenumtoday</name>
  		<replaceName>FreeNumToday</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freenumtoday</name>
  		<replaceName>FreeNumToday</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 freenumtoday() const;
  inline void set_freenumtoday(::google::protobuf::uint32 value);

  // optional uint32 BuyNumToday = 2;
  inline bool has_buynumtoday() const;
  inline void clear_buynumtoday();
  static const int kBuyNumTodayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>buynumtoday</name>
  		<replaceName>BuyNumToday</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynumtoday</name>
  		<replaceName>BuyNumToday</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynumtoday</name>
  		<replaceName>BuyNumToday</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynumtoday() const;
  inline void set_buynumtoday(::google::protobuf::uint32 value);

  // optional uint32 DrawNumToday = 3;
  inline bool has_drawnumtoday() const;
  inline void clear_drawnumtoday();
  static const int kDrawNumTodayFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>drawnumtoday</name>
  		<replaceName>DrawNumToday</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_drawnumtoday</name>
  		<replaceName>DrawNumToday</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_drawnumtoday</name>
  		<replaceName>DrawNumToday</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 drawnumtoday() const;
  inline void set_drawnumtoday(::google::protobuf::uint32 value);

  // repeated .pb.TActTreasureBowlExchangeInfo ArrExchangeInfo = 4;
  inline int arrexchangeinfo_size() const;
  inline void clear_arrexchangeinfo();
  static const int kArrExchangeInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>arrexchangeinfo</name>
  		<replaceName>ArrExchangeInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrexchangeinfo</name>
  		<replaceName>ArrExchangeInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrexchangeinfo</name>
  		<replaceName>ArrExchangeInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrexchangeinfo</name>
  		<replaceName>ArrExchangeInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrexchangeinfo_size</name>
  		<replaceName>ArrExchangeInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTreasureBowlExchangeInfo& arrexchangeinfo(int index) const;
  inline ::pb::TActTreasureBowlExchangeInfo* mutable_arrexchangeinfo(int index);
  inline ::pb::TActTreasureBowlExchangeInfo* add_arrexchangeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlExchangeInfo >&
      arrexchangeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlExchangeInfo >*
      mutable_arrexchangeinfo();

  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 5;
  inline int arrpackageinfo_size() const;
  inline void clear_arrpackageinfo();
  static const int kArrPackageInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrpackageinfo_size</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTreasureBowlPackageInfo& arrpackageinfo(int index) const;
  inline ::pb::TActTreasureBowlPackageInfo* mutable_arrpackageinfo(int index);
  inline ::pb::TActTreasureBowlPackageInfo* add_arrpackageinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >&
      arrpackageinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >*
      mutable_arrpackageinfo();

  // optional uint32 DrawNumAll = 6;
  inline bool has_drawnumall() const;
  inline void clear_drawnumall();
  static const int kDrawNumAllFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>drawnumall</name>
  		<replaceName>DrawNumAll</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_drawnumall</name>
  		<replaceName>DrawNumAll</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_drawnumall</name>
  		<replaceName>DrawNumAll</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 drawnumall() const;
  inline void set_drawnumall(::google::protobuf::uint32 value);

  // repeated uint32 RewardId = 7;
  inline int rewardid_size() const;
  inline void clear_rewardid();
  static const int kRewardIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlGetInfoRsp</name>
  	<Function>
  		<name>rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardid_size</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardid(int index) const;
  inline void set_rewardid(int index, ::google::protobuf::uint32 value);
  inline void add_rewardid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardid();

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlGetInfoRsp)
 private:
  inline void set_has_freenumtoday();
  inline void clear_has_freenumtoday();
  inline void set_has_buynumtoday();
  inline void clear_has_buynumtoday();
  inline void set_has_drawnumtoday();
  inline void clear_has_drawnumtoday();
  inline void set_has_drawnumall();
  inline void clear_has_drawnumall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 freenumtoday_;
  ::google::protobuf::uint32 buynumtoday_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlExchangeInfo > arrexchangeinfo_;
  ::google::protobuf::uint32 drawnumtoday_;
  ::google::protobuf::uint32 drawnumall_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo > arrpackageinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardid_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlBuyItemInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlBuyItemInfoReq : public ::google::protobuf::Message {
 public:
  TActTreasureBowlBuyItemInfoReq();
  virtual ~TActTreasureBowlBuyItemInfoReq();

  TActTreasureBowlBuyItemInfoReq(const TActTreasureBowlBuyItemInfoReq& from);

  inline TActTreasureBowlBuyItemInfoReq& operator=(const TActTreasureBowlBuyItemInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlBuyItemInfoReq& default_instance();

  void Swap(TActTreasureBowlBuyItemInfoReq* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlBuyItemInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlBuyItemInfoReq& from);
  void MergeFrom(const TActTreasureBowlBuyItemInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlBuyItemInfoReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlBuyItemInfoReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlBuyItemInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlDrawReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlDrawReq : public ::google::protobuf::Message {
 public:
  TActTreasureBowlDrawReq();
  virtual ~TActTreasureBowlDrawReq();

  TActTreasureBowlDrawReq(const TActTreasureBowlDrawReq& from);

  inline TActTreasureBowlDrawReq& operator=(const TActTreasureBowlDrawReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlDrawReq& default_instance();

  void Swap(TActTreasureBowlDrawReq* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlDrawReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlDrawReq& from);
  void MergeFrom(const TActTreasureBowlDrawReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlDrawReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlDrawReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlDrawReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlDrawRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlDrawRsp : public ::google::protobuf::Message {
 public:
  TActTreasureBowlDrawRsp();
  virtual ~TActTreasureBowlDrawRsp();

  TActTreasureBowlDrawRsp(const TActTreasureBowlDrawRsp& from);

  inline TActTreasureBowlDrawRsp& operator=(const TActTreasureBowlDrawRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlDrawRsp& default_instance();

  void Swap(TActTreasureBowlDrawRsp* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlDrawRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlDrawRsp& from);
  void MergeFrom(const TActTreasureBowlDrawRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlDrawRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlDrawRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlDrawRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlExchangeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlExchangeReq : public ::google::protobuf::Message {
 public:
  TActTreasureBowlExchangeReq();
  virtual ~TActTreasureBowlExchangeReq();

  TActTreasureBowlExchangeReq(const TActTreasureBowlExchangeReq& from);

  inline TActTreasureBowlExchangeReq& operator=(const TActTreasureBowlExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlExchangeReq& default_instance();

  void Swap(TActTreasureBowlExchangeReq* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlExchangeReq& from);
  void MergeFrom(const TActTreasureBowlExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ExchangeId = 1;
  inline bool has_exchangeid() const;
  inline void clear_exchangeid();
  static const int kExchangeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlExchangeReq</name>
  	<Function>
  		<name>exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exchangeid() const;
  inline void set_exchangeid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlExchangeReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlExchangeReq)
 private:
  inline void set_has_exchangeid();
  inline void clear_has_exchangeid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 exchangeid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlRecvRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlRecvRewardReq : public ::google::protobuf::Message {
 public:
  TActTreasureBowlRecvRewardReq();
  virtual ~TActTreasureBowlRecvRewardReq();

  TActTreasureBowlRecvRewardReq(const TActTreasureBowlRecvRewardReq& from);

  inline TActTreasureBowlRecvRewardReq& operator=(const TActTreasureBowlRecvRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlRecvRewardReq& default_instance();

  void Swap(TActTreasureBowlRecvRewardReq* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlRecvRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlRecvRewardReq& from);
  void MergeFrom(const TActTreasureBowlRecvRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RewardId = 1;
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlRecvRewardReq</name>
  	<Function>
  		<name>rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardid() const;
  inline void set_rewardid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlRecvRewardReq)
 private:
  inline void set_has_rewardid();
  inline void clear_has_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rewardid_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlRecvRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTreasureBowlPackageNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTreasureBowl.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTreasureBowlPackageNotify : public ::google::protobuf::Message {
 public:
  TActTreasureBowlPackageNotify();
  virtual ~TActTreasureBowlPackageNotify();

  TActTreasureBowlPackageNotify(const TActTreasureBowlPackageNotify& from);

  inline TActTreasureBowlPackageNotify& operator=(const TActTreasureBowlPackageNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTreasureBowlPackageNotify& default_instance();

  void Swap(TActTreasureBowlPackageNotify* other);

  // implements Message ----------------------------------------------

  TActTreasureBowlPackageNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTreasureBowlPackageNotify& from);
  void MergeFrom(const TActTreasureBowlPackageNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 1;
  inline int arrpackageinfo_size() const;
  inline void clear_arrpackageinfo();
  static const int kArrPackageInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTreasureBowlPackageNotify</name>
  	<Function>
  		<name>arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrpackageinfo</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrpackageinfo_size</name>
  		<replaceName>ArrPackageInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTreasureBowlPackageInfo& arrpackageinfo(int index) const;
  inline ::pb::TActTreasureBowlPackageInfo* mutable_arrpackageinfo(int index);
  inline ::pb::TActTreasureBowlPackageInfo* add_arrpackageinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >&
      arrpackageinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >*
      mutable_arrpackageinfo();

  // @@protoc_insertion_point(class_scope:pb.TActTreasureBowlPackageNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo > arrpackageinfo_;
  friend void  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto();

  void InitAsDefaultInstance();
  static TActTreasureBowlPackageNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActTreasureBowlExchangeInfo

// optional uint32 ExchangeId = 1;
inline bool TActTreasureBowlExchangeInfo::has_exchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlExchangeInfo::set_has_exchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlExchangeInfo::clear_has_exchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlExchangeInfo::clear_exchangeid() {
  exchangeid_ = 0u;
  clear_has_exchangeid();
}
inline ::google::protobuf::uint32 TActTreasureBowlExchangeInfo::exchangeid() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlExchangeInfo.ExchangeId)
  return exchangeid_;
}
inline void TActTreasureBowlExchangeInfo::set_exchangeid(::google::protobuf::uint32 value) {
  set_has_exchangeid();
  exchangeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlExchangeInfo.ExchangeId)
}

// optional uint32 Num = 2;
inline bool TActTreasureBowlExchangeInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTreasureBowlExchangeInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTreasureBowlExchangeInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTreasureBowlExchangeInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActTreasureBowlExchangeInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlExchangeInfo.Num)
  return num_;
}
inline void TActTreasureBowlExchangeInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlExchangeInfo.Num)
}

// -------------------------------------------------------------------

// TActTreasureBowlPackageInfo

// optional uint32 Id = 1;
inline bool TActTreasureBowlPackageInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlPackageInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlPackageInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlPackageInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActTreasureBowlPackageInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlPackageInfo.Id)
  return id_;
}
inline void TActTreasureBowlPackageInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlPackageInfo.Id)
}

// optional uint32 Num = 2;
inline bool TActTreasureBowlPackageInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTreasureBowlPackageInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTreasureBowlPackageInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTreasureBowlPackageInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActTreasureBowlPackageInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlPackageInfo.Num)
  return num_;
}
inline void TActTreasureBowlPackageInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlPackageInfo.Num)
}

// -------------------------------------------------------------------

// TActTreasureBowlGetInfoRsp

// optional uint32 FreeNumToday = 1;
inline bool TActTreasureBowlGetInfoRsp::has_freenumtoday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlGetInfoRsp::set_has_freenumtoday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlGetInfoRsp::clear_has_freenumtoday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlGetInfoRsp::clear_freenumtoday() {
  freenumtoday_ = 0u;
  clear_has_freenumtoday();
}
inline ::google::protobuf::uint32 TActTreasureBowlGetInfoRsp::freenumtoday() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.FreeNumToday)
  return freenumtoday_;
}
inline void TActTreasureBowlGetInfoRsp::set_freenumtoday(::google::protobuf::uint32 value) {
  set_has_freenumtoday();
  freenumtoday_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlGetInfoRsp.FreeNumToday)
}

// optional uint32 BuyNumToday = 2;
inline bool TActTreasureBowlGetInfoRsp::has_buynumtoday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTreasureBowlGetInfoRsp::set_has_buynumtoday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTreasureBowlGetInfoRsp::clear_has_buynumtoday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTreasureBowlGetInfoRsp::clear_buynumtoday() {
  buynumtoday_ = 0u;
  clear_has_buynumtoday();
}
inline ::google::protobuf::uint32 TActTreasureBowlGetInfoRsp::buynumtoday() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.BuyNumToday)
  return buynumtoday_;
}
inline void TActTreasureBowlGetInfoRsp::set_buynumtoday(::google::protobuf::uint32 value) {
  set_has_buynumtoday();
  buynumtoday_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlGetInfoRsp.BuyNumToday)
}

// optional uint32 DrawNumToday = 3;
inline bool TActTreasureBowlGetInfoRsp::has_drawnumtoday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActTreasureBowlGetInfoRsp::set_has_drawnumtoday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActTreasureBowlGetInfoRsp::clear_has_drawnumtoday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActTreasureBowlGetInfoRsp::clear_drawnumtoday() {
  drawnumtoday_ = 0u;
  clear_has_drawnumtoday();
}
inline ::google::protobuf::uint32 TActTreasureBowlGetInfoRsp::drawnumtoday() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.DrawNumToday)
  return drawnumtoday_;
}
inline void TActTreasureBowlGetInfoRsp::set_drawnumtoday(::google::protobuf::uint32 value) {
  set_has_drawnumtoday();
  drawnumtoday_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlGetInfoRsp.DrawNumToday)
}

// repeated .pb.TActTreasureBowlExchangeInfo ArrExchangeInfo = 4;
inline int TActTreasureBowlGetInfoRsp::arrexchangeinfo_size() const {
  return arrexchangeinfo_.size();
}
inline void TActTreasureBowlGetInfoRsp::clear_arrexchangeinfo() {
  arrexchangeinfo_.Clear();
}
inline const ::pb::TActTreasureBowlExchangeInfo& TActTreasureBowlGetInfoRsp::arrexchangeinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.ArrExchangeInfo)
  return arrexchangeinfo_.Get(index);
}
inline ::pb::TActTreasureBowlExchangeInfo* TActTreasureBowlGetInfoRsp::mutable_arrexchangeinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTreasureBowlGetInfoRsp.ArrExchangeInfo)
  return arrexchangeinfo_.Mutable(index);
}
inline ::pb::TActTreasureBowlExchangeInfo* TActTreasureBowlGetInfoRsp::add_arrexchangeinfo() {
  // @@protoc_insertion_point(field_add:pb.TActTreasureBowlGetInfoRsp.ArrExchangeInfo)
  return arrexchangeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlExchangeInfo >&
TActTreasureBowlGetInfoRsp::arrexchangeinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActTreasureBowlGetInfoRsp.ArrExchangeInfo)
  return arrexchangeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlExchangeInfo >*
TActTreasureBowlGetInfoRsp::mutable_arrexchangeinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTreasureBowlGetInfoRsp.ArrExchangeInfo)
  return &arrexchangeinfo_;
}

// repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 5;
inline int TActTreasureBowlGetInfoRsp::arrpackageinfo_size() const {
  return arrpackageinfo_.size();
}
inline void TActTreasureBowlGetInfoRsp::clear_arrpackageinfo() {
  arrpackageinfo_.Clear();
}
inline const ::pb::TActTreasureBowlPackageInfo& TActTreasureBowlGetInfoRsp::arrpackageinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.ArrPackageInfo)
  return arrpackageinfo_.Get(index);
}
inline ::pb::TActTreasureBowlPackageInfo* TActTreasureBowlGetInfoRsp::mutable_arrpackageinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTreasureBowlGetInfoRsp.ArrPackageInfo)
  return arrpackageinfo_.Mutable(index);
}
inline ::pb::TActTreasureBowlPackageInfo* TActTreasureBowlGetInfoRsp::add_arrpackageinfo() {
  // @@protoc_insertion_point(field_add:pb.TActTreasureBowlGetInfoRsp.ArrPackageInfo)
  return arrpackageinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >&
TActTreasureBowlGetInfoRsp::arrpackageinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActTreasureBowlGetInfoRsp.ArrPackageInfo)
  return arrpackageinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >*
TActTreasureBowlGetInfoRsp::mutable_arrpackageinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTreasureBowlGetInfoRsp.ArrPackageInfo)
  return &arrpackageinfo_;
}

// optional uint32 DrawNumAll = 6;
inline bool TActTreasureBowlGetInfoRsp::has_drawnumall() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TActTreasureBowlGetInfoRsp::set_has_drawnumall() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TActTreasureBowlGetInfoRsp::clear_has_drawnumall() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TActTreasureBowlGetInfoRsp::clear_drawnumall() {
  drawnumall_ = 0u;
  clear_has_drawnumall();
}
inline ::google::protobuf::uint32 TActTreasureBowlGetInfoRsp::drawnumall() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.DrawNumAll)
  return drawnumall_;
}
inline void TActTreasureBowlGetInfoRsp::set_drawnumall(::google::protobuf::uint32 value) {
  set_has_drawnumall();
  drawnumall_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlGetInfoRsp.DrawNumAll)
}

// repeated uint32 RewardId = 7;
inline int TActTreasureBowlGetInfoRsp::rewardid_size() const {
  return rewardid_.size();
}
inline void TActTreasureBowlGetInfoRsp::clear_rewardid() {
  rewardid_.Clear();
}
inline ::google::protobuf::uint32 TActTreasureBowlGetInfoRsp::rewardid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlGetInfoRsp.RewardId)
  return rewardid_.Get(index);
}
inline void TActTreasureBowlGetInfoRsp::set_rewardid(int index, ::google::protobuf::uint32 value) {
  rewardid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlGetInfoRsp.RewardId)
}
inline void TActTreasureBowlGetInfoRsp::add_rewardid(::google::protobuf::uint32 value) {
  rewardid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActTreasureBowlGetInfoRsp.RewardId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActTreasureBowlGetInfoRsp::rewardid() const {
  // @@protoc_insertion_point(field_list:pb.TActTreasureBowlGetInfoRsp.RewardId)
  return rewardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActTreasureBowlGetInfoRsp::mutable_rewardid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTreasureBowlGetInfoRsp.RewardId)
  return &rewardid_;
}

// -------------------------------------------------------------------

// TActTreasureBowlBuyItemInfoReq

// optional uint32 Num = 1;
inline bool TActTreasureBowlBuyItemInfoReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlBuyItemInfoReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlBuyItemInfoReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlBuyItemInfoReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActTreasureBowlBuyItemInfoReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlBuyItemInfoReq.Num)
  return num_;
}
inline void TActTreasureBowlBuyItemInfoReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlBuyItemInfoReq.Num)
}

// -------------------------------------------------------------------

// TActTreasureBowlDrawReq

// optional uint32 Num = 1;
inline bool TActTreasureBowlDrawReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlDrawReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlDrawReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlDrawReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActTreasureBowlDrawReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlDrawReq.Num)
  return num_;
}
inline void TActTreasureBowlDrawReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlDrawReq.Num)
}

// -------------------------------------------------------------------

// TActTreasureBowlDrawRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActTreasureBowlDrawRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActTreasureBowlDrawRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActTreasureBowlDrawRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlDrawRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActTreasureBowlDrawRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTreasureBowlDrawRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActTreasureBowlDrawRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActTreasureBowlDrawRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActTreasureBowlDrawRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActTreasureBowlDrawRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActTreasureBowlDrawRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTreasureBowlDrawRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActTreasureBowlExchangeReq

// optional uint32 ExchangeId = 1;
inline bool TActTreasureBowlExchangeReq::has_exchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlExchangeReq::set_has_exchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlExchangeReq::clear_has_exchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlExchangeReq::clear_exchangeid() {
  exchangeid_ = 0u;
  clear_has_exchangeid();
}
inline ::google::protobuf::uint32 TActTreasureBowlExchangeReq::exchangeid() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlExchangeReq.ExchangeId)
  return exchangeid_;
}
inline void TActTreasureBowlExchangeReq::set_exchangeid(::google::protobuf::uint32 value) {
  set_has_exchangeid();
  exchangeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlExchangeReq.ExchangeId)
}

// optional uint32 Num = 2;
inline bool TActTreasureBowlExchangeReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTreasureBowlExchangeReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTreasureBowlExchangeReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTreasureBowlExchangeReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActTreasureBowlExchangeReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlExchangeReq.Num)
  return num_;
}
inline void TActTreasureBowlExchangeReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlExchangeReq.Num)
}

// -------------------------------------------------------------------

// TActTreasureBowlRecvRewardReq

// optional uint32 RewardId = 1;
inline bool TActTreasureBowlRecvRewardReq::has_rewardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTreasureBowlRecvRewardReq::set_has_rewardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTreasureBowlRecvRewardReq::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTreasureBowlRecvRewardReq::clear_rewardid() {
  rewardid_ = 0u;
  clear_has_rewardid();
}
inline ::google::protobuf::uint32 TActTreasureBowlRecvRewardReq::rewardid() const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlRecvRewardReq.RewardId)
  return rewardid_;
}
inline void TActTreasureBowlRecvRewardReq::set_rewardid(::google::protobuf::uint32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTreasureBowlRecvRewardReq.RewardId)
}

// -------------------------------------------------------------------

// TActTreasureBowlPackageNotify

// repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 1;
inline int TActTreasureBowlPackageNotify::arrpackageinfo_size() const {
  return arrpackageinfo_.size();
}
inline void TActTreasureBowlPackageNotify::clear_arrpackageinfo() {
  arrpackageinfo_.Clear();
}
inline const ::pb::TActTreasureBowlPackageInfo& TActTreasureBowlPackageNotify::arrpackageinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTreasureBowlPackageNotify.ArrPackageInfo)
  return arrpackageinfo_.Get(index);
}
inline ::pb::TActTreasureBowlPackageInfo* TActTreasureBowlPackageNotify::mutable_arrpackageinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTreasureBowlPackageNotify.ArrPackageInfo)
  return arrpackageinfo_.Mutable(index);
}
inline ::pb::TActTreasureBowlPackageInfo* TActTreasureBowlPackageNotify::add_arrpackageinfo() {
  // @@protoc_insertion_point(field_add:pb.TActTreasureBowlPackageNotify.ArrPackageInfo)
  return arrpackageinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >&
TActTreasureBowlPackageNotify::arrpackageinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActTreasureBowlPackageNotify.ArrPackageInfo)
  return arrpackageinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTreasureBowlPackageInfo >*
TActTreasureBowlPackageNotify::mutable_arrpackageinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTreasureBowlPackageNotify.ArrPackageInfo)
  return &arrpackageinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActTreasureBowl_2eproto__INCLUDED
