// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Vip.proto

#ifndef PROTOBUF_net_2fVip_2eproto__INCLUDED
#define PROTOBUF_net_2fVip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fVip_2eproto();
void protobuf_AssignDesc_net_2fVip_2eproto();
void protobuf_ShutdownFile_net_2fVip_2eproto();

class TVipGetVipGiftInfoRsp;
class TVipBuyVipGiftReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TVipGetVipGiftInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Vip.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TVipGetVipGiftInfoRsp : public ::google::protobuf::Message {
 public:
  TVipGetVipGiftInfoRsp();
  virtual ~TVipGetVipGiftInfoRsp();

  TVipGetVipGiftInfoRsp(const TVipGetVipGiftInfoRsp& from);

  inline TVipGetVipGiftInfoRsp& operator=(const TVipGetVipGiftInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TVipGetVipGiftInfoRsp& default_instance();

  void Swap(TVipGetVipGiftInfoRsp* other);

  // implements Message ----------------------------------------------

  TVipGetVipGiftInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TVipGetVipGiftInfoRsp& from);
  void MergeFrom(const TVipGetVipGiftInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 HasBuyVipLvArr = 1;
  inline int hasbuyviplvarr_size() const;
  inline void clear_hasbuyviplvarr();
  static const int kHasBuyVipLvArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TVipGetVipGiftInfoRsp</name>
  	<Function>
  		<name>hasbuyviplvarr</name>
  		<replaceName>HasBuyVipLvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_hasbuyviplvarr</name>
  		<replaceName>HasBuyVipLvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_hasbuyviplvarr</name>
  		<replaceName>HasBuyVipLvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hasbuyviplvarr</name>
  		<replaceName>HasBuyVipLvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>hasbuyviplvarr_size</name>
  		<replaceName>HasBuyVipLvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hasbuyviplvarr(int index) const;
  inline void set_hasbuyviplvarr(int index, ::google::protobuf::uint32 value);
  inline void add_hasbuyviplvarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hasbuyviplvarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hasbuyviplvarr();

  // @@protoc_insertion_point(class_scope:pb.TVipGetVipGiftInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hasbuyviplvarr_;
  friend void  protobuf_AddDesc_net_2fVip_2eproto();
  friend void protobuf_AssignDesc_net_2fVip_2eproto();
  friend void protobuf_ShutdownFile_net_2fVip_2eproto();

  void InitAsDefaultInstance();
  static TVipGetVipGiftInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TVipBuyVipGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Vip.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TVipBuyVipGiftReq : public ::google::protobuf::Message {
 public:
  TVipBuyVipGiftReq();
  virtual ~TVipBuyVipGiftReq();

  TVipBuyVipGiftReq(const TVipBuyVipGiftReq& from);

  inline TVipBuyVipGiftReq& operator=(const TVipBuyVipGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TVipBuyVipGiftReq& default_instance();

  void Swap(TVipBuyVipGiftReq* other);

  // implements Message ----------------------------------------------

  TVipBuyVipGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TVipBuyVipGiftReq& from);
  void MergeFrom(const TVipBuyVipGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 VipLv = 1;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kVipLvFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TVipBuyVipGiftReq</name>
  	<Function>
  		<name>viplv</name>
  		<replaceName>VipLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_viplv</name>
  		<replaceName>VipLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_viplv</name>
  		<replaceName>VipLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 viplv() const;
  inline void set_viplv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TVipBuyVipGiftReq)
 private:
  inline void set_has_viplv();
  inline void clear_has_viplv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 viplv_;
  friend void  protobuf_AddDesc_net_2fVip_2eproto();
  friend void protobuf_AssignDesc_net_2fVip_2eproto();
  friend void protobuf_ShutdownFile_net_2fVip_2eproto();

  void InitAsDefaultInstance();
  static TVipBuyVipGiftReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TVipGetVipGiftInfoRsp

// repeated uint32 HasBuyVipLvArr = 1;
inline int TVipGetVipGiftInfoRsp::hasbuyviplvarr_size() const {
  return hasbuyviplvarr_.size();
}
inline void TVipGetVipGiftInfoRsp::clear_hasbuyviplvarr() {
  hasbuyviplvarr_.Clear();
}
inline ::google::protobuf::uint32 TVipGetVipGiftInfoRsp::hasbuyviplvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TVipGetVipGiftInfoRsp.HasBuyVipLvArr)
  return hasbuyviplvarr_.Get(index);
}
inline void TVipGetVipGiftInfoRsp::set_hasbuyviplvarr(int index, ::google::protobuf::uint32 value) {
  hasbuyviplvarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TVipGetVipGiftInfoRsp.HasBuyVipLvArr)
}
inline void TVipGetVipGiftInfoRsp::add_hasbuyviplvarr(::google::protobuf::uint32 value) {
  hasbuyviplvarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TVipGetVipGiftInfoRsp.HasBuyVipLvArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TVipGetVipGiftInfoRsp::hasbuyviplvarr() const {
  // @@protoc_insertion_point(field_list:pb.TVipGetVipGiftInfoRsp.HasBuyVipLvArr)
  return hasbuyviplvarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TVipGetVipGiftInfoRsp::mutable_hasbuyviplvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TVipGetVipGiftInfoRsp.HasBuyVipLvArr)
  return &hasbuyviplvarr_;
}

// -------------------------------------------------------------------

// TVipBuyVipGiftReq

// optional uint32 VipLv = 1;
inline bool TVipBuyVipGiftReq::has_viplv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TVipBuyVipGiftReq::set_has_viplv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TVipBuyVipGiftReq::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TVipBuyVipGiftReq::clear_viplv() {
  viplv_ = 0u;
  clear_has_viplv();
}
inline ::google::protobuf::uint32 TVipBuyVipGiftReq::viplv() const {
  // @@protoc_insertion_point(field_get:pb.TVipBuyVipGiftReq.VipLv)
  return viplv_;
}
inline void TVipBuyVipGiftReq::set_viplv(::google::protobuf::uint32 value) {
  set_has_viplv();
  viplv_ = value;
  // @@protoc_insertion_point(field_set:pb.TVipBuyVipGiftReq.VipLv)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fVip_2eproto__INCLUDED
