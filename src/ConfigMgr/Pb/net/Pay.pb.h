// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Pay.proto

#ifndef PROTOBUF_net_2fPay_2eproto__INCLUDED
#define PROTOBUF_net_2fPay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fPay_2eproto();
void protobuf_AssignDesc_net_2fPay_2eproto();
void protobuf_ShutdownFile_net_2fPay_2eproto();

class TGoldInfo;
class TItemInfo;
class TFirstInfo;
class TPayGetGoldInfoRsp;
class TPayGetItemInfoRsp;
class TPayGetFirstPayRsp;
class TPayRewardFirstPayReq;
class TPayBuyGoldByCouponReq;
class TPayBuyGiftByCouponReq;
class TPayInfoNotify;
class TFirstPayNotify;
class TPayBuyFreeGiftReq;
class TPayRebateReq;
class TPayExchangeGiftReq;
class TPayExchangeGoldReq;
class TPayRebateRsp;
class TPayDoubleNotify;

enum ERebateRetCode {
  REBATERET_CODE_SUCCESS = 0,
  REBATERET_CODE_UNKOWN = 1,
  REBATERET_CODE_NO_REBATE = 2,
  REBATERET_CODE_BEYOND_TIME = 3,
  REBATERET_CODE_BEYOND_PL = 4
};
bool ERebateRetCode_IsValid(int value);
const ERebateRetCode ERebateRetCode_MIN = REBATERET_CODE_SUCCESS;
const ERebateRetCode ERebateRetCode_MAX = REBATERET_CODE_BEYOND_PL;
const int ERebateRetCode_ARRAYSIZE = ERebateRetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERebateRetCode_descriptor();
inline const ::std::string& ERebateRetCode_Name(ERebateRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERebateRetCode_descriptor(), value);
}
inline bool ERebateRetCode_Parse(
    const ::std::string& name, ERebateRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERebateRetCode>(
    ERebateRetCode_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TGoldInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGoldInfo : public ::google::protobuf::Message {
 public:
  TGoldInfo();
  virtual ~TGoldInfo();

  TGoldInfo(const TGoldInfo& from);

  inline TGoldInfo& operator=(const TGoldInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGoldInfo& default_instance();

  void Swap(TGoldInfo* other);

  // implements Message ----------------------------------------------

  TGoldInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGoldInfo& from);
  void MergeFrom(const TGoldInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGoldInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGoldInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGoldInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TGoldInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TItemInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TItemInfo : public ::google::protobuf::Message {
 public:
  TItemInfo();
  virtual ~TItemInfo();

  TItemInfo(const TItemInfo& from);

  inline TItemInfo& operator=(const TItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TItemInfo& default_instance();

  void Swap(TItemInfo* other);

  // implements Message ----------------------------------------------

  TItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TItemInfo& from);
  void MergeFrom(const TItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TItemInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TItemInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 ExpireTime = 3;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TItemInfo</name>
  	<Function>
  		<name>expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint64 expiretime_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TItemInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFirstInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFirstInfo : public ::google::protobuf::Message {
 public:
  TFirstInfo();
  virtual ~TFirstInfo();

  TFirstInfo(const TFirstInfo& from);

  inline TFirstInfo& operator=(const TFirstInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFirstInfo& default_instance();

  void Swap(TFirstInfo* other);

  // implements Message ----------------------------------------------

  TFirstInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFirstInfo& from);
  void MergeFrom(const TFirstInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PayTotal = 1;
  inline bool has_paytotal() const;
  inline void clear_paytotal();
  static const int kPayTotalFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFirstInfo</name>
  	<Function>
  		<name>paytotal</name>
  		<replaceName>PayTotal</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_paytotal</name>
  		<replaceName>PayTotal</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_paytotal</name>
  		<replaceName>PayTotal</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 paytotal() const;
  inline void set_paytotal(::google::protobuf::uint32 value);

  // repeated uint32 ArrRewardId = 2;
  inline int arrrewardid_size() const;
  inline void clear_arrrewardid();
  static const int kArrRewardIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFirstInfo</name>
  	<Function>
  		<name>arrrewardid</name>
  		<replaceName>ArrRewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardid</name>
  		<replaceName>ArrRewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardid</name>
  		<replaceName>ArrRewardId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardid</name>
  		<replaceName>ArrRewardId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardid_size</name>
  		<replaceName>ArrRewardId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrrewardid(int index) const;
  inline void set_arrrewardid(int index, ::google::protobuf::uint32 value);
  inline void add_arrrewardid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrrewardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrrewardid();

  // @@protoc_insertion_point(class_scope:pb.TFirstInfo)
 private:
  inline void set_has_paytotal();
  inline void clear_has_paytotal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrrewardid_;
  ::google::protobuf::uint32 paytotal_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TFirstInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayGetGoldInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayGetGoldInfoRsp : public ::google::protobuf::Message {
 public:
  TPayGetGoldInfoRsp();
  virtual ~TPayGetGoldInfoRsp();

  TPayGetGoldInfoRsp(const TPayGetGoldInfoRsp& from);

  inline TPayGetGoldInfoRsp& operator=(const TPayGetGoldInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayGetGoldInfoRsp& default_instance();

  void Swap(TPayGetGoldInfoRsp* other);

  // implements Message ----------------------------------------------

  TPayGetGoldInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayGetGoldInfoRsp& from);
  void MergeFrom(const TPayGetGoldInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  inline int arrgoldinfo_size() const;
  inline void clear_arrgoldinfo();
  static const int kArrGoldInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayGetGoldInfoRsp</name>
  	<Function>
  		<name>arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgoldinfo_size</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TGoldInfo& arrgoldinfo(int index) const;
  inline ::pb::TGoldInfo* mutable_arrgoldinfo(int index);
  inline ::pb::TGoldInfo* add_arrgoldinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >&
      arrgoldinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >*
      mutable_arrgoldinfo();

  // @@protoc_insertion_point(class_scope:pb.TPayGetGoldInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo > arrgoldinfo_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayGetGoldInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayGetItemInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayGetItemInfoRsp : public ::google::protobuf::Message {
 public:
  TPayGetItemInfoRsp();
  virtual ~TPayGetItemInfoRsp();

  TPayGetItemInfoRsp(const TPayGetItemInfoRsp& from);

  inline TPayGetItemInfoRsp& operator=(const TPayGetItemInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayGetItemInfoRsp& default_instance();

  void Swap(TPayGetItemInfoRsp* other);

  // implements Message ----------------------------------------------

  TPayGetItemInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayGetItemInfoRsp& from);
  void MergeFrom(const TPayGetItemInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TItemInfo ArrItemInfo = 1;
  inline int arriteminfo_size() const;
  inline void clear_arriteminfo();
  static const int kArrItemInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayGetItemInfoRsp</name>
  	<Function>
  		<name>arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arriteminfo_size</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TItemInfo& arriteminfo(int index) const;
  inline ::pb::TItemInfo* mutable_arriteminfo(int index);
  inline ::pb::TItemInfo* add_arriteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >&
      arriteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >*
      mutable_arriteminfo();

  // @@protoc_insertion_point(class_scope:pb.TPayGetItemInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo > arriteminfo_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayGetItemInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayGetFirstPayRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayGetFirstPayRsp : public ::google::protobuf::Message {
 public:
  TPayGetFirstPayRsp();
  virtual ~TPayGetFirstPayRsp();

  TPayGetFirstPayRsp(const TPayGetFirstPayRsp& from);

  inline TPayGetFirstPayRsp& operator=(const TPayGetFirstPayRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayGetFirstPayRsp& default_instance();

  void Swap(TPayGetFirstPayRsp* other);

  // implements Message ----------------------------------------------

  TPayGetFirstPayRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayGetFirstPayRsp& from);
  void MergeFrom(const TPayGetFirstPayRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TFirstInfo FirstPayInfo = 1;
  inline bool has_firstpayinfo() const;
  inline void clear_firstpayinfo();
  static const int kFirstPayInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayGetFirstPayRsp</name>
  	<Function>
  		<name>firstpayinfo</name>
  		<replaceName>FirstPayInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_firstpayinfo</name>
  		<replaceName>FirstPayInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_firstpayinfo</name>
  		<replaceName>FirstPayInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_firstpayinfo</name>
  		<replaceName>FirstPayInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFirstInfo& firstpayinfo() const;
  inline ::pb::TFirstInfo* mutable_firstpayinfo();
  inline ::pb::TFirstInfo* release_firstpayinfo();
  inline void set_allocated_firstpayinfo(::pb::TFirstInfo* firstpayinfo);

  // optional uint64 UserLogoffTime = 2;
  inline bool has_userlogofftime() const;
  inline void clear_userlogofftime();
  static const int kUserLogoffTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayGetFirstPayRsp</name>
  	<Function>
  		<name>userlogofftime</name>
  		<replaceName>UserLogoffTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userlogofftime</name>
  		<replaceName>UserLogoffTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userlogofftime</name>
  		<replaceName>UserLogoffTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 userlogofftime() const;
  inline void set_userlogofftime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TPayGetFirstPayRsp)
 private:
  inline void set_has_firstpayinfo();
  inline void clear_has_firstpayinfo();
  inline void set_has_userlogofftime();
  inline void clear_has_userlogofftime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TFirstInfo* firstpayinfo_;
  ::google::protobuf::uint64 userlogofftime_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayGetFirstPayRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayRewardFirstPayReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayRewardFirstPayReq : public ::google::protobuf::Message {
 public:
  TPayRewardFirstPayReq();
  virtual ~TPayRewardFirstPayReq();

  TPayRewardFirstPayReq(const TPayRewardFirstPayReq& from);

  inline TPayRewardFirstPayReq& operator=(const TPayRewardFirstPayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayRewardFirstPayReq& default_instance();

  void Swap(TPayRewardFirstPayReq* other);

  // implements Message ----------------------------------------------

  TPayRewardFirstPayReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayRewardFirstPayReq& from);
  void MergeFrom(const TPayRewardFirstPayReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayRewardFirstPayReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPayRewardFirstPayReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayRewardFirstPayReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayBuyGoldByCouponReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayBuyGoldByCouponReq : public ::google::protobuf::Message {
 public:
  TPayBuyGoldByCouponReq();
  virtual ~TPayBuyGoldByCouponReq();

  TPayBuyGoldByCouponReq(const TPayBuyGoldByCouponReq& from);

  inline TPayBuyGoldByCouponReq& operator=(const TPayBuyGoldByCouponReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayBuyGoldByCouponReq& default_instance();

  void Swap(TPayBuyGoldByCouponReq* other);

  // implements Message ----------------------------------------------

  TPayBuyGoldByCouponReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayBuyGoldByCouponReq& from);
  void MergeFrom(const TPayBuyGoldByCouponReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayBuyGoldByCouponReq</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPayBuyGoldByCouponReq)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 productid_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayBuyGoldByCouponReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayBuyGiftByCouponReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayBuyGiftByCouponReq : public ::google::protobuf::Message {
 public:
  TPayBuyGiftByCouponReq();
  virtual ~TPayBuyGiftByCouponReq();

  TPayBuyGiftByCouponReq(const TPayBuyGiftByCouponReq& from);

  inline TPayBuyGiftByCouponReq& operator=(const TPayBuyGiftByCouponReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayBuyGiftByCouponReq& default_instance();

  void Swap(TPayBuyGiftByCouponReq* other);

  // implements Message ----------------------------------------------

  TPayBuyGiftByCouponReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayBuyGiftByCouponReq& from);
  void MergeFrom(const TPayBuyGiftByCouponReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayBuyGiftByCouponReq</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // optional string UnifiedWorld = 2;
  inline bool has_unifiedworld() const;
  inline void clear_unifiedworld();
  static const int kUnifiedWorldFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayBuyGiftByCouponReq</name>
  	<Function>
  		<name>unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& unifiedworld() const;
  inline void set_unifiedworld(const ::std::string& value);
  inline void set_unifiedworld(const char* value);
  inline void set_unifiedworld(const char* value, size_t size);
  inline ::std::string* mutable_unifiedworld();
  inline ::std::string* release_unifiedworld();
  inline void set_allocated_unifiedworld(::std::string* unifiedworld);

  // @@protoc_insertion_point(class_scope:pb.TPayBuyGiftByCouponReq)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_unifiedworld();
  inline void clear_has_unifiedworld();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* unifiedworld_;
  ::google::protobuf::uint32 productid_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayBuyGiftByCouponReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayInfoNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayInfoNotify : public ::google::protobuf::Message {
 public:
  TPayInfoNotify();
  virtual ~TPayInfoNotify();

  TPayInfoNotify(const TPayInfoNotify& from);

  inline TPayInfoNotify& operator=(const TPayInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayInfoNotify& default_instance();

  void Swap(TPayInfoNotify* other);

  // implements Message ----------------------------------------------

  TPayInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayInfoNotify& from);
  void MergeFrom(const TPayInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  inline int arrgoldinfo_size() const;
  inline void clear_arrgoldinfo();
  static const int kArrGoldInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayInfoNotify</name>
  	<Function>
  		<name>arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgoldinfo</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgoldinfo_size</name>
  		<replaceName>ArrGoldInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TGoldInfo& arrgoldinfo(int index) const;
  inline ::pb::TGoldInfo* mutable_arrgoldinfo(int index);
  inline ::pb::TGoldInfo* add_arrgoldinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >&
      arrgoldinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >*
      mutable_arrgoldinfo();

  // repeated .pb.TItemInfo ArrItemInfo = 2;
  inline int arriteminfo_size() const;
  inline void clear_arriteminfo();
  static const int kArrItemInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayInfoNotify</name>
  	<Function>
  		<name>arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arriteminfo</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arriteminfo_size</name>
  		<replaceName>ArrItemInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TItemInfo& arriteminfo(int index) const;
  inline ::pb::TItemInfo* mutable_arriteminfo(int index);
  inline ::pb::TItemInfo* add_arriteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >&
      arriteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >*
      mutable_arriteminfo();

  // @@protoc_insertion_point(class_scope:pb.TPayInfoNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo > arrgoldinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo > arriteminfo_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFirstPayNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFirstPayNotify : public ::google::protobuf::Message {
 public:
  TFirstPayNotify();
  virtual ~TFirstPayNotify();

  TFirstPayNotify(const TFirstPayNotify& from);

  inline TFirstPayNotify& operator=(const TFirstPayNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFirstPayNotify& default_instance();

  void Swap(TFirstPayNotify* other);

  // implements Message ----------------------------------------------

  TFirstPayNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFirstPayNotify& from);
  void MergeFrom(const TFirstPayNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PayTotal = 1;
  inline bool has_paytotal() const;
  inline void clear_paytotal();
  static const int kPayTotalFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFirstPayNotify</name>
  	<Function>
  		<name>paytotal</name>
  		<replaceName>PayTotal</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_paytotal</name>
  		<replaceName>PayTotal</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_paytotal</name>
  		<replaceName>PayTotal</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 paytotal() const;
  inline void set_paytotal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFirstPayNotify)
 private:
  inline void set_has_paytotal();
  inline void clear_has_paytotal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 paytotal_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TFirstPayNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayBuyFreeGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayBuyFreeGiftReq : public ::google::protobuf::Message {
 public:
  TPayBuyFreeGiftReq();
  virtual ~TPayBuyFreeGiftReq();

  TPayBuyFreeGiftReq(const TPayBuyFreeGiftReq& from);

  inline TPayBuyFreeGiftReq& operator=(const TPayBuyFreeGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayBuyFreeGiftReq& default_instance();

  void Swap(TPayBuyFreeGiftReq* other);

  // implements Message ----------------------------------------------

  TPayBuyFreeGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayBuyFreeGiftReq& from);
  void MergeFrom(const TPayBuyFreeGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GiftItemId = 1;
  inline bool has_giftitemid() const;
  inline void clear_giftitemid();
  static const int kGiftItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayBuyFreeGiftReq</name>
  	<Function>
  		<name>giftitemid</name>
  		<replaceName>GiftItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftitemid</name>
  		<replaceName>GiftItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftitemid</name>
  		<replaceName>GiftItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftitemid() const;
  inline void set_giftitemid(::google::protobuf::uint32 value);

  // optional uint32 BuyNum = 2;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayBuyFreeGiftReq</name>
  	<Function>
  		<name>buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // repeated uint32 UnifiedWorld = 3;
  inline int unifiedworld_size() const;
  inline void clear_unifiedworld();
  static const int kUnifiedWorldFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPayBuyFreeGiftReq</name>
  	<Function>
  		<name>unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>unifiedworld_size</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 unifiedworld(int index) const;
  inline void set_unifiedworld(int index, ::google::protobuf::uint32 value);
  inline void add_unifiedworld(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unifiedworld() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unifiedworld();

  // @@protoc_insertion_point(class_scope:pb.TPayBuyFreeGiftReq)
 private:
  inline void set_has_giftitemid();
  inline void clear_has_giftitemid();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 giftitemid_;
  ::google::protobuf::uint32 buynum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unifiedworld_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayBuyFreeGiftReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayRebateReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayRebateReq : public ::google::protobuf::Message {
 public:
  TPayRebateReq();
  virtual ~TPayRebateReq();

  TPayRebateReq(const TPayRebateReq& from);

  inline TPayRebateReq& operator=(const TPayRebateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayRebateReq& default_instance();

  void Swap(TPayRebateReq* other);

  // implements Message ----------------------------------------------

  TPayRebateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayRebateReq& from);
  void MergeFrom(const TPayRebateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RebateGold = 1;
  inline bool has_rebategold() const;
  inline void clear_rebategold();
  static const int kRebateGoldFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayRebateReq</name>
  	<Function>
  		<name>rebategold</name>
  		<replaceName>RebateGold</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rebategold</name>
  		<replaceName>RebateGold</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rebategold</name>
  		<replaceName>RebateGold</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rebategold() const;
  inline void set_rebategold(::google::protobuf::uint32 value);

  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayRebateReq</name>
  	<Function>
  		<name>money</name>
  		<replaceName>Money</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_money</name>
  		<replaceName>Money</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_money</name>
  		<replaceName>Money</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPayRebateReq)
 private:
  inline void set_has_rebategold();
  inline void clear_has_rebategold();
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rebategold_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayRebateReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayExchangeGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayExchangeGiftReq : public ::google::protobuf::Message {
 public:
  TPayExchangeGiftReq();
  virtual ~TPayExchangeGiftReq();

  TPayExchangeGiftReq(const TPayExchangeGiftReq& from);

  inline TPayExchangeGiftReq& operator=(const TPayExchangeGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayExchangeGiftReq& default_instance();

  void Swap(TPayExchangeGiftReq* other);

  // implements Message ----------------------------------------------

  TPayExchangeGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayExchangeGiftReq& from);
  void MergeFrom(const TPayExchangeGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayExchangeGiftReq</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // optional uint32 Double = 2;
  inline bool has_double_() const;
  inline void clear_double_();
  static const int kDoubleFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayExchangeGiftReq</name>
  	<Function>
  		<name>double_</name>
  		<replaceName>Double</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_double_</name>
  		<replaceName>Double</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_double_</name>
  		<replaceName>Double</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 double_() const;
  inline void set_double_(::google::protobuf::uint32 value);

  // optional string UnifiedWorld = 3;
  inline bool has_unifiedworld() const;
  inline void clear_unifiedworld();
  static const int kUnifiedWorldFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPayExchangeGiftReq</name>
  	<Function>
  		<name>unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_unifiedworld</name>
  		<replaceName>UnifiedWorld</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& unifiedworld() const;
  inline void set_unifiedworld(const ::std::string& value);
  inline void set_unifiedworld(const char* value);
  inline void set_unifiedworld(const char* value, size_t size);
  inline ::std::string* mutable_unifiedworld();
  inline ::std::string* release_unifiedworld();
  inline void set_allocated_unifiedworld(::std::string* unifiedworld);

  // @@protoc_insertion_point(class_scope:pb.TPayExchangeGiftReq)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_double_();
  inline void clear_has_double_();
  inline void set_has_unifiedworld();
  inline void clear_has_unifiedworld();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 double__;
  ::std::string* unifiedworld_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayExchangeGiftReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayExchangeGoldReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayExchangeGoldReq : public ::google::protobuf::Message {
 public:
  TPayExchangeGoldReq();
  virtual ~TPayExchangeGoldReq();

  TPayExchangeGoldReq(const TPayExchangeGoldReq& from);

  inline TPayExchangeGoldReq& operator=(const TPayExchangeGoldReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayExchangeGoldReq& default_instance();

  void Swap(TPayExchangeGoldReq* other);

  // implements Message ----------------------------------------------

  TPayExchangeGoldReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayExchangeGoldReq& from);
  void MergeFrom(const TPayExchangeGoldReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayExchangeGoldReq</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPayExchangeGoldReq)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 productid_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayExchangeGoldReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayRebateRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayRebateRsp : public ::google::protobuf::Message {
 public:
  TPayRebateRsp();
  virtual ~TPayRebateRsp();

  TPayRebateRsp(const TPayRebateRsp& from);

  inline TPayRebateRsp& operator=(const TPayRebateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayRebateRsp& default_instance();

  void Swap(TPayRebateRsp* other);

  // implements Message ----------------------------------------------

  TPayRebateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayRebateRsp& from);
  void MergeFrom(const TPayRebateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ERebateRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayRebateRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ERebateRetCode retcode() const;
  inline void set_retcode(::pb::ERebateRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TPayRebateRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayRebateRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPayDoubleNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pay.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPayDoubleNotify : public ::google::protobuf::Message {
 public:
  TPayDoubleNotify();
  virtual ~TPayDoubleNotify();

  TPayDoubleNotify(const TPayDoubleNotify& from);

  inline TPayDoubleNotify& operator=(const TPayDoubleNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPayDoubleNotify& default_instance();

  void Swap(TPayDoubleNotify* other);

  // implements Message ----------------------------------------------

  TPayDoubleNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPayDoubleNotify& from);
  void MergeFrom(const TPayDoubleNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPayDoubleNotify</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // optional uint32 Rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPayDoubleNotify</name>
  	<Function>
  		<name>rate</name>
  		<replaceName>Rate</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rate</name>
  		<replaceName>Rate</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rate</name>
  		<replaceName>Rate</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPayDoubleNotify)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_net_2fPay_2eproto();
  friend void protobuf_AssignDesc_net_2fPay_2eproto();
  friend void protobuf_ShutdownFile_net_2fPay_2eproto();

  void InitAsDefaultInstance();
  static TPayDoubleNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TGoldInfo

// optional uint32 Id = 1;
inline bool TGoldInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGoldInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGoldInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGoldInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TGoldInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TGoldInfo.Id)
  return id_;
}
inline void TGoldInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TGoldInfo.Id)
}

// optional uint32 Num = 2;
inline bool TGoldInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TGoldInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TGoldInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TGoldInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TGoldInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TGoldInfo.Num)
  return num_;
}
inline void TGoldInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TGoldInfo.Num)
}

// -------------------------------------------------------------------

// TItemInfo

// optional uint32 Id = 1;
inline bool TItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TItemInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TItemInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TItemInfo.Id)
  return id_;
}
inline void TItemInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TItemInfo.Id)
}

// optional uint32 Num = 2;
inline bool TItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TItemInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TItemInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TItemInfo.Num)
  return num_;
}
inline void TItemInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TItemInfo.Num)
}

// optional uint64 ExpireTime = 3;
inline bool TItemInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TItemInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TItemInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TItemInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 TItemInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:pb.TItemInfo.ExpireTime)
  return expiretime_;
}
inline void TItemInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:pb.TItemInfo.ExpireTime)
}

// -------------------------------------------------------------------

// TFirstInfo

// optional uint32 PayTotal = 1;
inline bool TFirstInfo::has_paytotal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFirstInfo::set_has_paytotal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFirstInfo::clear_has_paytotal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFirstInfo::clear_paytotal() {
  paytotal_ = 0u;
  clear_has_paytotal();
}
inline ::google::protobuf::uint32 TFirstInfo::paytotal() const {
  // @@protoc_insertion_point(field_get:pb.TFirstInfo.PayTotal)
  return paytotal_;
}
inline void TFirstInfo::set_paytotal(::google::protobuf::uint32 value) {
  set_has_paytotal();
  paytotal_ = value;
  // @@protoc_insertion_point(field_set:pb.TFirstInfo.PayTotal)
}

// repeated uint32 ArrRewardId = 2;
inline int TFirstInfo::arrrewardid_size() const {
  return arrrewardid_.size();
}
inline void TFirstInfo::clear_arrrewardid() {
  arrrewardid_.Clear();
}
inline ::google::protobuf::uint32 TFirstInfo::arrrewardid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFirstInfo.ArrRewardId)
  return arrrewardid_.Get(index);
}
inline void TFirstInfo::set_arrrewardid(int index, ::google::protobuf::uint32 value) {
  arrrewardid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TFirstInfo.ArrRewardId)
}
inline void TFirstInfo::add_arrrewardid(::google::protobuf::uint32 value) {
  arrrewardid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TFirstInfo.ArrRewardId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TFirstInfo::arrrewardid() const {
  // @@protoc_insertion_point(field_list:pb.TFirstInfo.ArrRewardId)
  return arrrewardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TFirstInfo::mutable_arrrewardid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFirstInfo.ArrRewardId)
  return &arrrewardid_;
}

// -------------------------------------------------------------------

// TPayGetGoldInfoRsp

// repeated .pb.TGoldInfo ArrGoldInfo = 1;
inline int TPayGetGoldInfoRsp::arrgoldinfo_size() const {
  return arrgoldinfo_.size();
}
inline void TPayGetGoldInfoRsp::clear_arrgoldinfo() {
  arrgoldinfo_.Clear();
}
inline const ::pb::TGoldInfo& TPayGetGoldInfoRsp::arrgoldinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPayGetGoldInfoRsp.ArrGoldInfo)
  return arrgoldinfo_.Get(index);
}
inline ::pb::TGoldInfo* TPayGetGoldInfoRsp::mutable_arrgoldinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPayGetGoldInfoRsp.ArrGoldInfo)
  return arrgoldinfo_.Mutable(index);
}
inline ::pb::TGoldInfo* TPayGetGoldInfoRsp::add_arrgoldinfo() {
  // @@protoc_insertion_point(field_add:pb.TPayGetGoldInfoRsp.ArrGoldInfo)
  return arrgoldinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >&
TPayGetGoldInfoRsp::arrgoldinfo() const {
  // @@protoc_insertion_point(field_list:pb.TPayGetGoldInfoRsp.ArrGoldInfo)
  return arrgoldinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >*
TPayGetGoldInfoRsp::mutable_arrgoldinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPayGetGoldInfoRsp.ArrGoldInfo)
  return &arrgoldinfo_;
}

// -------------------------------------------------------------------

// TPayGetItemInfoRsp

// repeated .pb.TItemInfo ArrItemInfo = 1;
inline int TPayGetItemInfoRsp::arriteminfo_size() const {
  return arriteminfo_.size();
}
inline void TPayGetItemInfoRsp::clear_arriteminfo() {
  arriteminfo_.Clear();
}
inline const ::pb::TItemInfo& TPayGetItemInfoRsp::arriteminfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPayGetItemInfoRsp.ArrItemInfo)
  return arriteminfo_.Get(index);
}
inline ::pb::TItemInfo* TPayGetItemInfoRsp::mutable_arriteminfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPayGetItemInfoRsp.ArrItemInfo)
  return arriteminfo_.Mutable(index);
}
inline ::pb::TItemInfo* TPayGetItemInfoRsp::add_arriteminfo() {
  // @@protoc_insertion_point(field_add:pb.TPayGetItemInfoRsp.ArrItemInfo)
  return arriteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >&
TPayGetItemInfoRsp::arriteminfo() const {
  // @@protoc_insertion_point(field_list:pb.TPayGetItemInfoRsp.ArrItemInfo)
  return arriteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >*
TPayGetItemInfoRsp::mutable_arriteminfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPayGetItemInfoRsp.ArrItemInfo)
  return &arriteminfo_;
}

// -------------------------------------------------------------------

// TPayGetFirstPayRsp

// optional .pb.TFirstInfo FirstPayInfo = 1;
inline bool TPayGetFirstPayRsp::has_firstpayinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayGetFirstPayRsp::set_has_firstpayinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayGetFirstPayRsp::clear_has_firstpayinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayGetFirstPayRsp::clear_firstpayinfo() {
  if (firstpayinfo_ != NULL) firstpayinfo_->::pb::TFirstInfo::Clear();
  clear_has_firstpayinfo();
}
inline const ::pb::TFirstInfo& TPayGetFirstPayRsp::firstpayinfo() const {
  // @@protoc_insertion_point(field_get:pb.TPayGetFirstPayRsp.FirstPayInfo)
  return firstpayinfo_ != NULL ? *firstpayinfo_ : *default_instance_->firstpayinfo_;
}
inline ::pb::TFirstInfo* TPayGetFirstPayRsp::mutable_firstpayinfo() {
  set_has_firstpayinfo();
  if (firstpayinfo_ == NULL) firstpayinfo_ = new ::pb::TFirstInfo;
  // @@protoc_insertion_point(field_mutable:pb.TPayGetFirstPayRsp.FirstPayInfo)
  return firstpayinfo_;
}
inline ::pb::TFirstInfo* TPayGetFirstPayRsp::release_firstpayinfo() {
  clear_has_firstpayinfo();
  ::pb::TFirstInfo* temp = firstpayinfo_;
  firstpayinfo_ = NULL;
  return temp;
}
inline void TPayGetFirstPayRsp::set_allocated_firstpayinfo(::pb::TFirstInfo* firstpayinfo) {
  delete firstpayinfo_;
  firstpayinfo_ = firstpayinfo;
  if (firstpayinfo) {
    set_has_firstpayinfo();
  } else {
    clear_has_firstpayinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TPayGetFirstPayRsp.FirstPayInfo)
}

// optional uint64 UserLogoffTime = 2;
inline bool TPayGetFirstPayRsp::has_userlogofftime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPayGetFirstPayRsp::set_has_userlogofftime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPayGetFirstPayRsp::clear_has_userlogofftime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPayGetFirstPayRsp::clear_userlogofftime() {
  userlogofftime_ = GOOGLE_ULONGLONG(0);
  clear_has_userlogofftime();
}
inline ::google::protobuf::uint64 TPayGetFirstPayRsp::userlogofftime() const {
  // @@protoc_insertion_point(field_get:pb.TPayGetFirstPayRsp.UserLogoffTime)
  return userlogofftime_;
}
inline void TPayGetFirstPayRsp::set_userlogofftime(::google::protobuf::uint64 value) {
  set_has_userlogofftime();
  userlogofftime_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayGetFirstPayRsp.UserLogoffTime)
}

// -------------------------------------------------------------------

// TPayRewardFirstPayReq

// optional uint32 Id = 1;
inline bool TPayRewardFirstPayReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayRewardFirstPayReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayRewardFirstPayReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayRewardFirstPayReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TPayRewardFirstPayReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TPayRewardFirstPayReq.Id)
  return id_;
}
inline void TPayRewardFirstPayReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayRewardFirstPayReq.Id)
}

// -------------------------------------------------------------------

// TPayBuyGoldByCouponReq

// optional uint32 ProductId = 1;
inline bool TPayBuyGoldByCouponReq::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayBuyGoldByCouponReq::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayBuyGoldByCouponReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayBuyGoldByCouponReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TPayBuyGoldByCouponReq::productid() const {
  // @@protoc_insertion_point(field_get:pb.TPayBuyGoldByCouponReq.ProductId)
  return productid_;
}
inline void TPayBuyGoldByCouponReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayBuyGoldByCouponReq.ProductId)
}

// -------------------------------------------------------------------

// TPayBuyGiftByCouponReq

// optional uint32 ProductId = 1;
inline bool TPayBuyGiftByCouponReq::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayBuyGiftByCouponReq::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayBuyGiftByCouponReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayBuyGiftByCouponReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TPayBuyGiftByCouponReq::productid() const {
  // @@protoc_insertion_point(field_get:pb.TPayBuyGiftByCouponReq.ProductId)
  return productid_;
}
inline void TPayBuyGiftByCouponReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayBuyGiftByCouponReq.ProductId)
}

// optional string UnifiedWorld = 2;
inline bool TPayBuyGiftByCouponReq::has_unifiedworld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPayBuyGiftByCouponReq::set_has_unifiedworld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPayBuyGiftByCouponReq::clear_has_unifiedworld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPayBuyGiftByCouponReq::clear_unifiedworld() {
  if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_->clear();
  }
  clear_has_unifiedworld();
}
inline const ::std::string& TPayBuyGiftByCouponReq::unifiedworld() const {
  // @@protoc_insertion_point(field_get:pb.TPayBuyGiftByCouponReq.UnifiedWorld)
  return *unifiedworld_;
}
inline void TPayBuyGiftByCouponReq::set_unifiedworld(const ::std::string& value) {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  unifiedworld_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TPayBuyGiftByCouponReq.UnifiedWorld)
}
inline void TPayBuyGiftByCouponReq::set_unifiedworld(const char* value) {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  unifiedworld_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TPayBuyGiftByCouponReq.UnifiedWorld)
}
inline void TPayBuyGiftByCouponReq::set_unifiedworld(const char* value, size_t size) {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  unifiedworld_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TPayBuyGiftByCouponReq.UnifiedWorld)
}
inline ::std::string* TPayBuyGiftByCouponReq::mutable_unifiedworld() {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TPayBuyGiftByCouponReq.UnifiedWorld)
  return unifiedworld_;
}
inline ::std::string* TPayBuyGiftByCouponReq::release_unifiedworld() {
  clear_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = unifiedworld_;
    unifiedworld_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TPayBuyGiftByCouponReq::set_allocated_unifiedworld(::std::string* unifiedworld) {
  if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unifiedworld_;
  }
  if (unifiedworld) {
    set_has_unifiedworld();
    unifiedworld_ = unifiedworld;
  } else {
    clear_has_unifiedworld();
    unifiedworld_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TPayBuyGiftByCouponReq.UnifiedWorld)
}

// -------------------------------------------------------------------

// TPayInfoNotify

// repeated .pb.TGoldInfo ArrGoldInfo = 1;
inline int TPayInfoNotify::arrgoldinfo_size() const {
  return arrgoldinfo_.size();
}
inline void TPayInfoNotify::clear_arrgoldinfo() {
  arrgoldinfo_.Clear();
}
inline const ::pb::TGoldInfo& TPayInfoNotify::arrgoldinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPayInfoNotify.ArrGoldInfo)
  return arrgoldinfo_.Get(index);
}
inline ::pb::TGoldInfo* TPayInfoNotify::mutable_arrgoldinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPayInfoNotify.ArrGoldInfo)
  return arrgoldinfo_.Mutable(index);
}
inline ::pb::TGoldInfo* TPayInfoNotify::add_arrgoldinfo() {
  // @@protoc_insertion_point(field_add:pb.TPayInfoNotify.ArrGoldInfo)
  return arrgoldinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >&
TPayInfoNotify::arrgoldinfo() const {
  // @@protoc_insertion_point(field_list:pb.TPayInfoNotify.ArrGoldInfo)
  return arrgoldinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TGoldInfo >*
TPayInfoNotify::mutable_arrgoldinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPayInfoNotify.ArrGoldInfo)
  return &arrgoldinfo_;
}

// repeated .pb.TItemInfo ArrItemInfo = 2;
inline int TPayInfoNotify::arriteminfo_size() const {
  return arriteminfo_.size();
}
inline void TPayInfoNotify::clear_arriteminfo() {
  arriteminfo_.Clear();
}
inline const ::pb::TItemInfo& TPayInfoNotify::arriteminfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPayInfoNotify.ArrItemInfo)
  return arriteminfo_.Get(index);
}
inline ::pb::TItemInfo* TPayInfoNotify::mutable_arriteminfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPayInfoNotify.ArrItemInfo)
  return arriteminfo_.Mutable(index);
}
inline ::pb::TItemInfo* TPayInfoNotify::add_arriteminfo() {
  // @@protoc_insertion_point(field_add:pb.TPayInfoNotify.ArrItemInfo)
  return arriteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >&
TPayInfoNotify::arriteminfo() const {
  // @@protoc_insertion_point(field_list:pb.TPayInfoNotify.ArrItemInfo)
  return arriteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TItemInfo >*
TPayInfoNotify::mutable_arriteminfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPayInfoNotify.ArrItemInfo)
  return &arriteminfo_;
}

// -------------------------------------------------------------------

// TFirstPayNotify

// optional uint32 PayTotal = 1;
inline bool TFirstPayNotify::has_paytotal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFirstPayNotify::set_has_paytotal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFirstPayNotify::clear_has_paytotal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFirstPayNotify::clear_paytotal() {
  paytotal_ = 0u;
  clear_has_paytotal();
}
inline ::google::protobuf::uint32 TFirstPayNotify::paytotal() const {
  // @@protoc_insertion_point(field_get:pb.TFirstPayNotify.PayTotal)
  return paytotal_;
}
inline void TFirstPayNotify::set_paytotal(::google::protobuf::uint32 value) {
  set_has_paytotal();
  paytotal_ = value;
  // @@protoc_insertion_point(field_set:pb.TFirstPayNotify.PayTotal)
}

// -------------------------------------------------------------------

// TPayBuyFreeGiftReq

// optional uint32 GiftItemId = 1;
inline bool TPayBuyFreeGiftReq::has_giftitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayBuyFreeGiftReq::set_has_giftitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayBuyFreeGiftReq::clear_has_giftitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayBuyFreeGiftReq::clear_giftitemid() {
  giftitemid_ = 0u;
  clear_has_giftitemid();
}
inline ::google::protobuf::uint32 TPayBuyFreeGiftReq::giftitemid() const {
  // @@protoc_insertion_point(field_get:pb.TPayBuyFreeGiftReq.GiftItemId)
  return giftitemid_;
}
inline void TPayBuyFreeGiftReq::set_giftitemid(::google::protobuf::uint32 value) {
  set_has_giftitemid();
  giftitemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayBuyFreeGiftReq.GiftItemId)
}

// optional uint32 BuyNum = 2;
inline bool TPayBuyFreeGiftReq::has_buynum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPayBuyFreeGiftReq::set_has_buynum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPayBuyFreeGiftReq::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPayBuyFreeGiftReq::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 TPayBuyFreeGiftReq::buynum() const {
  // @@protoc_insertion_point(field_get:pb.TPayBuyFreeGiftReq.BuyNum)
  return buynum_;
}
inline void TPayBuyFreeGiftReq::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayBuyFreeGiftReq.BuyNum)
}

// repeated uint32 UnifiedWorld = 3;
inline int TPayBuyFreeGiftReq::unifiedworld_size() const {
  return unifiedworld_.size();
}
inline void TPayBuyFreeGiftReq::clear_unifiedworld() {
  unifiedworld_.Clear();
}
inline ::google::protobuf::uint32 TPayBuyFreeGiftReq::unifiedworld(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPayBuyFreeGiftReq.UnifiedWorld)
  return unifiedworld_.Get(index);
}
inline void TPayBuyFreeGiftReq::set_unifiedworld(int index, ::google::protobuf::uint32 value) {
  unifiedworld_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TPayBuyFreeGiftReq.UnifiedWorld)
}
inline void TPayBuyFreeGiftReq::add_unifiedworld(::google::protobuf::uint32 value) {
  unifiedworld_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TPayBuyFreeGiftReq.UnifiedWorld)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TPayBuyFreeGiftReq::unifiedworld() const {
  // @@protoc_insertion_point(field_list:pb.TPayBuyFreeGiftReq.UnifiedWorld)
  return unifiedworld_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TPayBuyFreeGiftReq::mutable_unifiedworld() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPayBuyFreeGiftReq.UnifiedWorld)
  return &unifiedworld_;
}

// -------------------------------------------------------------------

// TPayRebateReq

// optional uint32 RebateGold = 1;
inline bool TPayRebateReq::has_rebategold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayRebateReq::set_has_rebategold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayRebateReq::clear_has_rebategold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayRebateReq::clear_rebategold() {
  rebategold_ = 0u;
  clear_has_rebategold();
}
inline ::google::protobuf::uint32 TPayRebateReq::rebategold() const {
  // @@protoc_insertion_point(field_get:pb.TPayRebateReq.RebateGold)
  return rebategold_;
}
inline void TPayRebateReq::set_rebategold(::google::protobuf::uint32 value) {
  set_has_rebategold();
  rebategold_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayRebateReq.RebateGold)
}

// optional uint32 Money = 2;
inline bool TPayRebateReq::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPayRebateReq::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPayRebateReq::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPayRebateReq::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 TPayRebateReq::money() const {
  // @@protoc_insertion_point(field_get:pb.TPayRebateReq.Money)
  return money_;
}
inline void TPayRebateReq::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayRebateReq.Money)
}

// -------------------------------------------------------------------

// TPayExchangeGiftReq

// optional uint32 ProductId = 1;
inline bool TPayExchangeGiftReq::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayExchangeGiftReq::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayExchangeGiftReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayExchangeGiftReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TPayExchangeGiftReq::productid() const {
  // @@protoc_insertion_point(field_get:pb.TPayExchangeGiftReq.ProductId)
  return productid_;
}
inline void TPayExchangeGiftReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayExchangeGiftReq.ProductId)
}

// optional uint32 Double = 2;
inline bool TPayExchangeGiftReq::has_double_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPayExchangeGiftReq::set_has_double_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPayExchangeGiftReq::clear_has_double_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPayExchangeGiftReq::clear_double_() {
  double__ = 0u;
  clear_has_double_();
}
inline ::google::protobuf::uint32 TPayExchangeGiftReq::double_() const {
  // @@protoc_insertion_point(field_get:pb.TPayExchangeGiftReq.Double)
  return double__;
}
inline void TPayExchangeGiftReq::set_double_(::google::protobuf::uint32 value) {
  set_has_double_();
  double__ = value;
  // @@protoc_insertion_point(field_set:pb.TPayExchangeGiftReq.Double)
}

// optional string UnifiedWorld = 3;
inline bool TPayExchangeGiftReq::has_unifiedworld() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPayExchangeGiftReq::set_has_unifiedworld() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPayExchangeGiftReq::clear_has_unifiedworld() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPayExchangeGiftReq::clear_unifiedworld() {
  if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_->clear();
  }
  clear_has_unifiedworld();
}
inline const ::std::string& TPayExchangeGiftReq::unifiedworld() const {
  // @@protoc_insertion_point(field_get:pb.TPayExchangeGiftReq.UnifiedWorld)
  return *unifiedworld_;
}
inline void TPayExchangeGiftReq::set_unifiedworld(const ::std::string& value) {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  unifiedworld_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TPayExchangeGiftReq.UnifiedWorld)
}
inline void TPayExchangeGiftReq::set_unifiedworld(const char* value) {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  unifiedworld_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TPayExchangeGiftReq.UnifiedWorld)
}
inline void TPayExchangeGiftReq::set_unifiedworld(const char* value, size_t size) {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  unifiedworld_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TPayExchangeGiftReq.UnifiedWorld)
}
inline ::std::string* TPayExchangeGiftReq::mutable_unifiedworld() {
  set_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unifiedworld_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TPayExchangeGiftReq.UnifiedWorld)
  return unifiedworld_;
}
inline ::std::string* TPayExchangeGiftReq::release_unifiedworld() {
  clear_has_unifiedworld();
  if (unifiedworld_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = unifiedworld_;
    unifiedworld_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TPayExchangeGiftReq::set_allocated_unifiedworld(::std::string* unifiedworld) {
  if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unifiedworld_;
  }
  if (unifiedworld) {
    set_has_unifiedworld();
    unifiedworld_ = unifiedworld;
  } else {
    clear_has_unifiedworld();
    unifiedworld_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TPayExchangeGiftReq.UnifiedWorld)
}

// -------------------------------------------------------------------

// TPayExchangeGoldReq

// optional uint32 ProductId = 1;
inline bool TPayExchangeGoldReq::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayExchangeGoldReq::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayExchangeGoldReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayExchangeGoldReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TPayExchangeGoldReq::productid() const {
  // @@protoc_insertion_point(field_get:pb.TPayExchangeGoldReq.ProductId)
  return productid_;
}
inline void TPayExchangeGoldReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayExchangeGoldReq.ProductId)
}

// -------------------------------------------------------------------

// TPayRebateRsp

// optional .pb.ERebateRetCode RetCode = 1;
inline bool TPayRebateRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayRebateRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayRebateRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayRebateRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::ERebateRetCode TPayRebateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TPayRebateRsp.RetCode)
  return static_cast< ::pb::ERebateRetCode >(retcode_);
}
inline void TPayRebateRsp::set_retcode(::pb::ERebateRetCode value) {
  assert(::pb::ERebateRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayRebateRsp.RetCode)
}

// -------------------------------------------------------------------

// TPayDoubleNotify

// optional uint32 ProductId = 1;
inline bool TPayDoubleNotify::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPayDoubleNotify::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPayDoubleNotify::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPayDoubleNotify::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TPayDoubleNotify::productid() const {
  // @@protoc_insertion_point(field_get:pb.TPayDoubleNotify.ProductId)
  return productid_;
}
inline void TPayDoubleNotify::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayDoubleNotify.ProductId)
}

// optional uint32 Rate = 2;
inline bool TPayDoubleNotify::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPayDoubleNotify::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPayDoubleNotify::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPayDoubleNotify::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 TPayDoubleNotify::rate() const {
  // @@protoc_insertion_point(field_get:pb.TPayDoubleNotify.Rate)
  return rate_;
}
inline void TPayDoubleNotify::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:pb.TPayDoubleNotify.Rate)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ERebateRetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ERebateRetCode>() {
  return ::pb::ERebateRetCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fPay_2eproto__INCLUDED
