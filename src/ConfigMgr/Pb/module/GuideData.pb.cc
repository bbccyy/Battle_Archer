// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/GuideData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/GuideData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* RewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GuideData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GuideData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GuideParagraph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GuideParagraph_reflection_ = NULL;
const ::google::protobuf::Descriptor* GuideStepRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GuideStepRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScrollInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScrollInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExtraInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtraInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GuideStep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GuideStep_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EGuideStepType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGuideGirlType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EEffectType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fGuideData_2eproto() {
  protobuf_AddDesc_module_2fGuideData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/GuideData.proto");
  GOOGLE_CHECK(file != NULL);
  RewardInfo_descriptor_ = file->message_type(0);
  static const int RewardInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardInfo, rewardtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardInfo, rewardnum_),
  };
  RewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RewardInfo_descriptor_,
      RewardInfo::default_instance_,
      RewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RewardInfo));
  GuideData_descriptor_ = file->message_type(1);
  static const int GuideData_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, layerpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, scenename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, userlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, preid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, equiptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, rewardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, skip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, paragrapharr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, sceneconfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, iteminfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, mutexid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, userlevellimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, dialogid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, relationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, triggerstronghold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, triggerskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, noforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, beaststrongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, tdplotend_),
  };
  GuideData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GuideData_descriptor_,
      GuideData::default_instance_,
      GuideData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GuideData));
  GuideParagraph_descriptor_ = file->message_type(2);
  static const int GuideParagraph_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, steparr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, finishonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, runonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, desc_),
  };
  GuideParagraph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GuideParagraph_descriptor_,
      GuideParagraph::default_instance_,
      GuideParagraph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideParagraph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GuideParagraph));
  GuideStepRes_descriptor_ = file->message_type(3);
  static const int GuideStepRes_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, insert_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, girlpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, boxpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, girlflip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, boxflip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, boxlocalized_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, girltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, effecttype_),
  };
  GuideStepRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GuideStepRes_descriptor_,
      GuideStepRes::default_instance_,
      GuideStepRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStepRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GuideStepRes));
  ScrollInfo_descriptor_ = file->message_type(4);
  static const int ScrollInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, scrollpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, groupindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, itemindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, scrolltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, needscroll_),
  };
  ScrollInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScrollInfo_descriptor_,
      ScrollInfo::default_instance_,
      ScrollInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScrollInfo));
  ExtraInfo_descriptor_ = file->message_type(5);
  static const int ExtraInfo_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, lockuitouchmove_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, uselayermodal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, onlymark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, lookatbuilding_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, movespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, reqfuncname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, limittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, funcopenanim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, dragendwidget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, mainlayerpath_),
  };
  ExtraInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExtraInfo_descriptor_,
      ExtraInfo::default_instance_,
      ExtraInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExtraInfo));
  GuideStep_descriptor_ = file->message_type(6);
  static const int GuideStep_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, steptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, guiderespath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, guidewidget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, stepres_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, paramint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, extrainfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, sceneconfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, scrollinfo_),
  };
  GuideStep_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GuideStep_descriptor_,
      GuideStep::default_instance_,
      GuideStep_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuideStep, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GuideStep));
  EGuideStepType_descriptor_ = file->enum_type(0);
  EGuideGirlType_descriptor_ = file->enum_type(1);
  EEffectType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fGuideData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RewardInfo_descriptor_, &RewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GuideData_descriptor_, &GuideData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GuideParagraph_descriptor_, &GuideParagraph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GuideStepRes_descriptor_, &GuideStepRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScrollInfo_descriptor_, &ScrollInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExtraInfo_descriptor_, &ExtraInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GuideStep_descriptor_, &GuideStep::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fGuideData_2eproto() {
  delete RewardInfo::default_instance_;
  delete RewardInfo_reflection_;
  delete GuideData::default_instance_;
  delete GuideData_reflection_;
  delete GuideParagraph::default_instance_;
  delete GuideParagraph_reflection_;
  delete GuideStepRes::default_instance_;
  delete GuideStepRes_reflection_;
  delete ScrollInfo::default_instance_;
  delete ScrollInfo_reflection_;
  delete ExtraInfo::default_instance_;
  delete ExtraInfo_reflection_;
  delete GuideStep::default_instance_;
  delete GuideStep_reflection_;
}

void protobuf_AddDesc_module_2fGuideData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_module_2fUtil_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026module/GuideData.proto\022\002pb\032\021module/Uti"
    "l.proto\"3\n\nRewardInfo\022\022\n\nRewardType\030\001 \001("
    "\005\022\021\n\tRewardNum\030\002 \001(\005\"\334\003\n\tGuideData\022\n\n\002id"
    "\030\001 \001(\005\022\021\n\tLayerPath\030\002 \001(\t\022\021\n\tSceneName\030\003"
    " \001(\t\022\021\n\tUserLevel\030\004 \001(\005\022\r\n\005PreId\030\005 \001(\005\022\021"
    "\n\tEquipType\030\006 \001(\005\022\"\n\nRewardInfo\030\007 \001(\0132\016."
    "pb.RewardInfo\022\024\n\014StrongholdId\030\010 \001(\005\022\014\n\004S"
    "kip\030\t \001(\010\022(\n\014ParagraphArr\030\n \003(\0132\022.pb.Gui"
    "deParagraph\022\014\n\004Desc\030\013 \001(\t\022\025\n\rSceneConfNa"
    "me\030\014 \001(\t\022\020\n\010ItemInfo\030\r \003(\005\022\017\n\007MutexId\030\016 "
    "\001(\005\022\026\n\016UserLevelLimit\030\017 \001(\005\022\020\n\010DialogId\030"
    "\020 \001(\005\022\022\n\nRelationId\030\021 \001(\005\022\031\n\021TriggerStro"
    "nghold\030\022 \001(\005\022\026\n\016TriggerSkillId\030\023 \001(\005\022\017\n\007"
    "NoForce\030\024 \001(\010\022\031\n\021BeastStrongholdId\030\025 \001(\005"
    "\022\021\n\tTDPlotEnd\030\026 \001(\010\"o\n\016GuideParagraph\022\n\n"
    "\002id\030\001 \001(\005\022\036\n\007StepArr\030\002 \003(\0132\r.pb.GuideSte"
    "p\022\022\n\nFinishOnce\030\003 \001(\010\022\017\n\007RunOnce\030\004 \001(\010\022\014"
    "\n\004Desc\030\005 \001(\t\"\341\001\n\014GuideStepRes\022\016\n\006Insert\030"
    "\001 \001(\010\022\036\n\007GirlPos\030\002 \001(\0132\r.pb.PbVector2\022\035\n"
    "\006BoxPos\030\003 \001(\0132\r.pb.PbVector2\022\020\n\010GirlFlip"
    "\030\004 \001(\010\022\017\n\007BoxFlip\030\005 \001(\010\022\024\n\014BoxLocalized\030"
    "\006 \001(\005\022$\n\010GirlType\030\007 \001(\0162\022.pb.EGuideGirlT"
    "ype\022#\n\nEffectType\030\010 \001(\0162\017.pb.EEffectType"
    "\"o\n\nScrollInfo\022\022\n\nScrollPath\030\001 \001(\t\022\022\n\nGr"
    "oupIndex\030\002 \001(\005\022\021\n\tItemIndex\030\003 \001(\005\022\022\n\nScr"
    "ollType\030\004 \001(\005\022\022\n\nNeedScroll\030\005 \001(\005\"\344\001\n\tEx"
    "traInfo\022\027\n\017LockUITouchMove\030\001 \001(\010\022\025\n\rUseL"
    "ayerModal\030\002 \001(\010\022\020\n\010OnlyMark\030\003 \001(\010\022\026\n\016Loo"
    "kAtBuilding\030\004 \001(\010\022\021\n\tMoveSpeed\030\006 \001(\005\022\023\n\013"
    "ReqFuncName\030\007 \001(\t\022\021\n\tLimitTime\030\010 \001(\002\022\024\n\014"
    "FuncOpenAnim\030\t \001(\t\022\025\n\rDragEndWidget\030\n \001("
    "\t\022\025\n\rMainLayerPath\030\013 \001(\t\"\217\002\n\tGuideStep\022$"
    "\n\010StepType\030\001 \001(\0162\022.pb.EGuideStepType\022\024\n\014"
    "GuideResPath\030\002 \001(\t\022\023\n\013GuideWidget\030\003 \001(\t\022"
    "\021\n\tDelayTime\030\004 \001(\002\022!\n\007StepRes\030\005 \001(\0132\020.pb"
    ".GuideStepRes\022\020\n\010ParamInt\030\006 \001(\005\022 \n\tExtra"
    "Info\030\007 \001(\0132\r.pb.ExtraInfo\022\014\n\004Desc\030\010 \001(\t\022"
    "\025\n\rSceneConfName\030\t \001(\t\022\"\n\nScrollInfo\030\n \001"
    "(\0132\016.pb.ScrollInfo*\236\003\n\016EGuideStepType\022\017\n"
    "\013NormalLayer\020\000\022\017\n\013NormalScene\020\001\022\026\n\022WaitB"
    "ehaviorFinish\020\002\022\035\n\031WaitStrongholdBattleB"
    "egin\020\003\022\036\n\032WaitStrongholdBattleFinish\020\004\022\016"
    "\n\nWaitDialog\020\005\022\026\n\022WaitRageSkillReady\020\006\022\021"
    "\n\rInteractiveUI\020\007\022\021\n\rLayerDragFunc\020\010\022\021\n\r"
    "DestinyActive\020\t\022\025\n\021WaitBehaviorBegin\020\n\022\031"
    "\n\025InteractiveObjTrigger\020\013\022\024\n\020MainCityEnt"
    "rance\020\014\022\016\n\nWaitNetReq\020\r\022\020\n\014WaitFuncOpen\020"
    "\016\022\027\n\023InteractiveObjClick\020\017\022\014\n\010SubLayer\020\020"
    "\022\r\n\tRageSkill\020\021\022\022\n\016RageSkillModal\020\022*I\n\016E"
    "GuideGirlType\022\022\n\016GuideGirlSmall\020\000\022\020\n\014Gui"
    "deGirlBig\020\001\022\021\n\rGuideGirlNone\020\002*#\n\013EEffec"
    "tType\022\t\n\005Type1\020\000\022\t\n\005Type2\020\001", 2067);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/GuideData.proto", &protobuf_RegisterTypes);
  RewardInfo::default_instance_ = new RewardInfo();
  GuideData::default_instance_ = new GuideData();
  GuideParagraph::default_instance_ = new GuideParagraph();
  GuideStepRes::default_instance_ = new GuideStepRes();
  ScrollInfo::default_instance_ = new ScrollInfo();
  ExtraInfo::default_instance_ = new ExtraInfo();
  GuideStep::default_instance_ = new GuideStep();
  RewardInfo::default_instance_->InitAsDefaultInstance();
  GuideData::default_instance_->InitAsDefaultInstance();
  GuideParagraph::default_instance_->InitAsDefaultInstance();
  GuideStepRes::default_instance_->InitAsDefaultInstance();
  ScrollInfo::default_instance_->InitAsDefaultInstance();
  ExtraInfo::default_instance_->InitAsDefaultInstance();
  GuideStep::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fGuideData_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fGuideData_2eproto {
  StaticDescriptorInitializer_module_2fGuideData_2eproto() {
    protobuf_AddDesc_module_2fGuideData_2eproto();
  }
} static_descriptor_initializer_module_2fGuideData_2eproto_;
const ::google::protobuf::EnumDescriptor* EGuideStepType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGuideStepType_descriptor_;
}
bool EGuideStepType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGuideGirlType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGuideGirlType_descriptor_;
}
bool EGuideGirlType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EEffectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EEffectType_descriptor_;
}
bool EEffectType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int RewardInfo::kRewardTypeFieldNumber;
const int RewardInfo::kRewardNumFieldNumber;
#endif  // !_MSC_VER

RewardInfo::RewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RewardInfo)
}

void RewardInfo::InitAsDefaultInstance() {
}

RewardInfo::RewardInfo(const RewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RewardInfo)
}

void RewardInfo::SharedCtor() {
  _cached_size_ = 0;
  rewardtype_ = 0;
  rewardnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardInfo::~RewardInfo() {
  // @@protoc_insertion_point(destructor:pb.RewardInfo)
  SharedDtor();
}

void RewardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardInfo_descriptor_;
}

const RewardInfo& RewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

RewardInfo* RewardInfo::default_instance_ = NULL;

RewardInfo* RewardInfo::New() const {
  return new RewardInfo;
}

void RewardInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RewardInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rewardtype_, rewardnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RewardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 RewardType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardtype_)));
          set_has_rewardtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardNum;
        break;
      }

      // optional int32 RewardNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardnum_)));
          set_has_rewardnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RewardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RewardInfo)
  return false;
#undef DO_
}

void RewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RewardInfo)
  // optional int32 RewardType = 1;
  if (has_rewardtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rewardtype(), output);
  }

  // optional int32 RewardNum = 2;
  if (has_rewardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rewardnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RewardInfo)
}

::google::protobuf::uint8* RewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RewardInfo)
  // optional int32 RewardType = 1;
  if (has_rewardtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rewardtype(), target);
  }

  // optional int32 RewardNum = 2;
  if (has_rewardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rewardnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RewardInfo)
  return target;
}

int RewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 RewardType = 1;
    if (has_rewardtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardtype());
    }

    // optional int32 RewardNum = 2;
    if (has_rewardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RewardInfo::MergeFrom(const RewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rewardtype()) {
      set_rewardtype(from.rewardtype());
    }
    if (from.has_rewardnum()) {
      set_rewardnum(from.rewardnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardInfo::CopyFrom(const RewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardInfo::IsInitialized() const {

  return true;
}

void RewardInfo::Swap(RewardInfo* other) {
  if (other != this) {
    std::swap(rewardtype_, other->rewardtype_);
    std::swap(rewardnum_, other->rewardnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardInfo_descriptor_;
  metadata.reflection = RewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GuideData::kIdFieldNumber;
const int GuideData::kLayerPathFieldNumber;
const int GuideData::kSceneNameFieldNumber;
const int GuideData::kUserLevelFieldNumber;
const int GuideData::kPreIdFieldNumber;
const int GuideData::kEquipTypeFieldNumber;
const int GuideData::kRewardInfoFieldNumber;
const int GuideData::kStrongholdIdFieldNumber;
const int GuideData::kSkipFieldNumber;
const int GuideData::kParagraphArrFieldNumber;
const int GuideData::kDescFieldNumber;
const int GuideData::kSceneConfNameFieldNumber;
const int GuideData::kItemInfoFieldNumber;
const int GuideData::kMutexIdFieldNumber;
const int GuideData::kUserLevelLimitFieldNumber;
const int GuideData::kDialogIdFieldNumber;
const int GuideData::kRelationIdFieldNumber;
const int GuideData::kTriggerStrongholdFieldNumber;
const int GuideData::kTriggerSkillIdFieldNumber;
const int GuideData::kNoForceFieldNumber;
const int GuideData::kBeastStrongholdIdFieldNumber;
const int GuideData::kTDPlotEndFieldNumber;
#endif  // !_MSC_VER

GuideData::GuideData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GuideData)
}

void GuideData::InitAsDefaultInstance() {
  rewardinfo_ = const_cast< ::pb::RewardInfo*>(&::pb::RewardInfo::default_instance());
}

GuideData::GuideData(const GuideData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.GuideData)
}

void GuideData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  layerpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userlevel_ = 0;
  preid_ = 0;
  equiptype_ = 0;
  rewardinfo_ = NULL;
  strongholdid_ = 0;
  skip_ = false;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneconfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mutexid_ = 0;
  userlevellimit_ = 0;
  dialogid_ = 0;
  relationid_ = 0;
  triggerstronghold_ = 0;
  triggerskillid_ = 0;
  noforce_ = false;
  beaststrongholdid_ = 0;
  tdplotend_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GuideData::~GuideData() {
  // @@protoc_insertion_point(destructor:pb.GuideData)
  SharedDtor();
}

void GuideData::SharedDtor() {
  if (layerpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layerpath_;
  }
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scenename_;
  }
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (sceneconfname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sceneconfname_;
  }
  if (this != default_instance_) {
    delete rewardinfo_;
  }
}

void GuideData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuideData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuideData_descriptor_;
}

const GuideData& GuideData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

GuideData* GuideData::default_instance_ = NULL;

GuideData* GuideData::New() const {
  return new GuideData;
}

void GuideData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GuideData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, userlevel_);
    ZR_(preid_, equiptype_);
    if (has_layerpath()) {
      if (layerpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layerpath_->clear();
      }
    }
    if (has_scenename()) {
      if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scenename_->clear();
      }
    }
    if (has_rewardinfo()) {
      if (rewardinfo_ != NULL) rewardinfo_->::pb::RewardInfo::Clear();
    }
    strongholdid_ = 0;
  }
  if (_has_bits_[8 / 32] & 60672) {
    ZR_(userlevellimit_, dialogid_);
    skip_ = false;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        desc_->clear();
      }
    }
    if (has_sceneconfname()) {
      if (sceneconfname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sceneconfname_->clear();
      }
    }
    mutexid_ = 0;
  }
  if (_has_bits_[16 / 32] & 4128768) {
    ZR_(noforce_, beaststrongholdid_);
    relationid_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  paragrapharr_.Clear();
  iteminfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GuideData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GuideData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LayerPath;
        break;
      }

      // optional string LayerPath = 2;
      case 2: {
        if (tag == 18) {
         parse_LayerPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layerpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layerpath().data(), this->layerpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layerpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SceneName;
        break;
      }

      // optional string SceneName = 3;
      case 3: {
        if (tag == 26) {
         parse_SceneName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scenename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scenename().data(), this->scenename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scenename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UserLevel;
        break;
      }

      // optional int32 UserLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_UserLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userlevel_)));
          set_has_userlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_PreId;
        break;
      }

      // optional int32 PreId = 5;
      case 5: {
        if (tag == 40) {
         parse_PreId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &preid_)));
          set_has_preid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_EquipType;
        break;
      }

      // optional int32 EquipType = 6;
      case 6: {
        if (tag == 48) {
         parse_EquipType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equiptype_)));
          set_has_equiptype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_RewardInfo;
        break;
      }

      // optional .pb.RewardInfo RewardInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_RewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_StrongholdId;
        break;
      }

      // optional int32 StrongholdId = 8;
      case 8: {
        if (tag == 64) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Skip;
        break;
      }

      // optional bool Skip = 9;
      case 9: {
        if (tag == 72) {
         parse_Skip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_)));
          set_has_skip();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ParagraphArr;
        break;
      }

      // repeated .pb.GuideParagraph ParagraphArr = 10;
      case 10: {
        if (tag == 82) {
         parse_ParagraphArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_paragrapharr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ParagraphArr;
        if (input->ExpectTag(90)) goto parse_Desc;
        break;
      }

      // optional string Desc = 11;
      case 11: {
        if (tag == 90) {
         parse_Desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "desc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_SceneConfName;
        break;
      }

      // optional string SceneConfName = 12;
      case 12: {
        if (tag == 98) {
         parse_SceneConfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sceneconfname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sceneconfname().data(), this->sceneconfname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sceneconfname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_ItemInfo;
        break;
      }

      // repeated int32 ItemInfo = 13;
      case 13: {
        if (tag == 104) {
         parse_ItemInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_iteminfo())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_iteminfo())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_ItemInfo;
        if (input->ExpectTag(112)) goto parse_MutexId;
        break;
      }

      // optional int32 MutexId = 14;
      case 14: {
        if (tag == 112) {
         parse_MutexId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mutexid_)));
          set_has_mutexid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_UserLevelLimit;
        break;
      }

      // optional int32 UserLevelLimit = 15;
      case 15: {
        if (tag == 120) {
         parse_UserLevelLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userlevellimit_)));
          set_has_userlevellimit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_DialogId;
        break;
      }

      // optional int32 DialogId = 16;
      case 16: {
        if (tag == 128) {
         parse_DialogId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dialogid_)));
          set_has_dialogid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_RelationId;
        break;
      }

      // optional int32 RelationId = 17;
      case 17: {
        if (tag == 136) {
         parse_RelationId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relationid_)));
          set_has_relationid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_TriggerStronghold;
        break;
      }

      // optional int32 TriggerStronghold = 18;
      case 18: {
        if (tag == 144) {
         parse_TriggerStronghold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &triggerstronghold_)));
          set_has_triggerstronghold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_TriggerSkillId;
        break;
      }

      // optional int32 TriggerSkillId = 19;
      case 19: {
        if (tag == 152) {
         parse_TriggerSkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &triggerskillid_)));
          set_has_triggerskillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_NoForce;
        break;
      }

      // optional bool NoForce = 20;
      case 20: {
        if (tag == 160) {
         parse_NoForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noforce_)));
          set_has_noforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_BeastStrongholdId;
        break;
      }

      // optional int32 BeastStrongholdId = 21;
      case 21: {
        if (tag == 168) {
         parse_BeastStrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beaststrongholdid_)));
          set_has_beaststrongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_TDPlotEnd;
        break;
      }

      // optional bool TDPlotEnd = 22;
      case 22: {
        if (tag == 176) {
         parse_TDPlotEnd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tdplotend_)));
          set_has_tdplotend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GuideData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GuideData)
  return false;
#undef DO_
}

void GuideData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GuideData)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string LayerPath = 2;
  if (has_layerpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layerpath().data(), this->layerpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layerpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->layerpath(), output);
  }

  // optional string SceneName = 3;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->scenename(), output);
  }

  // optional int32 UserLevel = 4;
  if (has_userlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->userlevel(), output);
  }

  // optional int32 PreId = 5;
  if (has_preid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->preid(), output);
  }

  // optional int32 EquipType = 6;
  if (has_equiptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->equiptype(), output);
  }

  // optional .pb.RewardInfo RewardInfo = 7;
  if (has_rewardinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rewardinfo(), output);
  }

  // optional int32 StrongholdId = 8;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->strongholdid(), output);
  }

  // optional bool Skip = 9;
  if (has_skip()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->skip(), output);
  }

  // repeated .pb.GuideParagraph ParagraphArr = 10;
  for (int i = 0; i < this->paragrapharr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->paragrapharr(i), output);
  }

  // optional string Desc = 11;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->desc(), output);
  }

  // optional string SceneConfName = 12;
  if (has_sceneconfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sceneconfname().data(), this->sceneconfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sceneconfname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->sceneconfname(), output);
  }

  // repeated int32 ItemInfo = 13;
  for (int i = 0; i < this->iteminfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->iteminfo(i), output);
  }

  // optional int32 MutexId = 14;
  if (has_mutexid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->mutexid(), output);
  }

  // optional int32 UserLevelLimit = 15;
  if (has_userlevellimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->userlevellimit(), output);
  }

  // optional int32 DialogId = 16;
  if (has_dialogid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->dialogid(), output);
  }

  // optional int32 RelationId = 17;
  if (has_relationid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->relationid(), output);
  }

  // optional int32 TriggerStronghold = 18;
  if (has_triggerstronghold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->triggerstronghold(), output);
  }

  // optional int32 TriggerSkillId = 19;
  if (has_triggerskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->triggerskillid(), output);
  }

  // optional bool NoForce = 20;
  if (has_noforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->noforce(), output);
  }

  // optional int32 BeastStrongholdId = 21;
  if (has_beaststrongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->beaststrongholdid(), output);
  }

  // optional bool TDPlotEnd = 22;
  if (has_tdplotend()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->tdplotend(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GuideData)
}

::google::protobuf::uint8* GuideData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.GuideData)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string LayerPath = 2;
  if (has_layerpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layerpath().data(), this->layerpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layerpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->layerpath(), target);
  }

  // optional string SceneName = 3;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->scenename(), target);
  }

  // optional int32 UserLevel = 4;
  if (has_userlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->userlevel(), target);
  }

  // optional int32 PreId = 5;
  if (has_preid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->preid(), target);
  }

  // optional int32 EquipType = 6;
  if (has_equiptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->equiptype(), target);
  }

  // optional .pb.RewardInfo RewardInfo = 7;
  if (has_rewardinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rewardinfo(), target);
  }

  // optional int32 StrongholdId = 8;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->strongholdid(), target);
  }

  // optional bool Skip = 9;
  if (has_skip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->skip(), target);
  }

  // repeated .pb.GuideParagraph ParagraphArr = 10;
  for (int i = 0; i < this->paragrapharr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->paragrapharr(i), target);
  }

  // optional string Desc = 11;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->desc(), target);
  }

  // optional string SceneConfName = 12;
  if (has_sceneconfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sceneconfname().data(), this->sceneconfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sceneconfname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->sceneconfname(), target);
  }

  // repeated int32 ItemInfo = 13;
  for (int i = 0; i < this->iteminfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->iteminfo(i), target);
  }

  // optional int32 MutexId = 14;
  if (has_mutexid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->mutexid(), target);
  }

  // optional int32 UserLevelLimit = 15;
  if (has_userlevellimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->userlevellimit(), target);
  }

  // optional int32 DialogId = 16;
  if (has_dialogid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->dialogid(), target);
  }

  // optional int32 RelationId = 17;
  if (has_relationid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->relationid(), target);
  }

  // optional int32 TriggerStronghold = 18;
  if (has_triggerstronghold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->triggerstronghold(), target);
  }

  // optional int32 TriggerSkillId = 19;
  if (has_triggerskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->triggerskillid(), target);
  }

  // optional bool NoForce = 20;
  if (has_noforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->noforce(), target);
  }

  // optional int32 BeastStrongholdId = 21;
  if (has_beaststrongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->beaststrongholdid(), target);
  }

  // optional bool TDPlotEnd = 22;
  if (has_tdplotend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->tdplotend(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GuideData)
  return target;
}

int GuideData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string LayerPath = 2;
    if (has_layerpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layerpath());
    }

    // optional string SceneName = 3;
    if (has_scenename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scenename());
    }

    // optional int32 UserLevel = 4;
    if (has_userlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userlevel());
    }

    // optional int32 PreId = 5;
    if (has_preid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->preid());
    }

    // optional int32 EquipType = 6;
    if (has_equiptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equiptype());
    }

    // optional .pb.RewardInfo RewardInfo = 7;
    if (has_rewardinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rewardinfo());
    }

    // optional int32 StrongholdId = 8;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strongholdid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool Skip = 9;
    if (has_skip()) {
      total_size += 1 + 1;
    }

    // optional string Desc = 11;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional string SceneConfName = 12;
    if (has_sceneconfname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sceneconfname());
    }

    // optional int32 MutexId = 14;
    if (has_mutexid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mutexid());
    }

    // optional int32 UserLevelLimit = 15;
    if (has_userlevellimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userlevellimit());
    }

    // optional int32 DialogId = 16;
    if (has_dialogid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dialogid());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 RelationId = 17;
    if (has_relationid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relationid());
    }

    // optional int32 TriggerStronghold = 18;
    if (has_triggerstronghold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->triggerstronghold());
    }

    // optional int32 TriggerSkillId = 19;
    if (has_triggerskillid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->triggerskillid());
    }

    // optional bool NoForce = 20;
    if (has_noforce()) {
      total_size += 2 + 1;
    }

    // optional int32 BeastStrongholdId = 21;
    if (has_beaststrongholdid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beaststrongholdid());
    }

    // optional bool TDPlotEnd = 22;
    if (has_tdplotend()) {
      total_size += 2 + 1;
    }

  }
  // repeated .pb.GuideParagraph ParagraphArr = 10;
  total_size += 1 * this->paragrapharr_size();
  for (int i = 0; i < this->paragrapharr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->paragrapharr(i));
  }

  // repeated int32 ItemInfo = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->iteminfo_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->iteminfo(i));
    }
    total_size += 1 * this->iteminfo_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuideData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GuideData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GuideData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GuideData::MergeFrom(const GuideData& from) {
  GOOGLE_CHECK_NE(&from, this);
  paragrapharr_.MergeFrom(from.paragrapharr_);
  iteminfo_.MergeFrom(from.iteminfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_layerpath()) {
      set_layerpath(from.layerpath());
    }
    if (from.has_scenename()) {
      set_scenename(from.scenename());
    }
    if (from.has_userlevel()) {
      set_userlevel(from.userlevel());
    }
    if (from.has_preid()) {
      set_preid(from.preid());
    }
    if (from.has_equiptype()) {
      set_equiptype(from.equiptype());
    }
    if (from.has_rewardinfo()) {
      mutable_rewardinfo()->::pb::RewardInfo::MergeFrom(from.rewardinfo());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_skip()) {
      set_skip(from.skip());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_sceneconfname()) {
      set_sceneconfname(from.sceneconfname());
    }
    if (from.has_mutexid()) {
      set_mutexid(from.mutexid());
    }
    if (from.has_userlevellimit()) {
      set_userlevellimit(from.userlevellimit());
    }
    if (from.has_dialogid()) {
      set_dialogid(from.dialogid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_relationid()) {
      set_relationid(from.relationid());
    }
    if (from.has_triggerstronghold()) {
      set_triggerstronghold(from.triggerstronghold());
    }
    if (from.has_triggerskillid()) {
      set_triggerskillid(from.triggerskillid());
    }
    if (from.has_noforce()) {
      set_noforce(from.noforce());
    }
    if (from.has_beaststrongholdid()) {
      set_beaststrongholdid(from.beaststrongholdid());
    }
    if (from.has_tdplotend()) {
      set_tdplotend(from.tdplotend());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GuideData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuideData::CopyFrom(const GuideData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuideData::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->paragrapharr())) return false;
  return true;
}

void GuideData::Swap(GuideData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(layerpath_, other->layerpath_);
    std::swap(scenename_, other->scenename_);
    std::swap(userlevel_, other->userlevel_);
    std::swap(preid_, other->preid_);
    std::swap(equiptype_, other->equiptype_);
    std::swap(rewardinfo_, other->rewardinfo_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(skip_, other->skip_);
    paragrapharr_.Swap(&other->paragrapharr_);
    std::swap(desc_, other->desc_);
    std::swap(sceneconfname_, other->sceneconfname_);
    iteminfo_.Swap(&other->iteminfo_);
    std::swap(mutexid_, other->mutexid_);
    std::swap(userlevellimit_, other->userlevellimit_);
    std::swap(dialogid_, other->dialogid_);
    std::swap(relationid_, other->relationid_);
    std::swap(triggerstronghold_, other->triggerstronghold_);
    std::swap(triggerskillid_, other->triggerskillid_);
    std::swap(noforce_, other->noforce_);
    std::swap(beaststrongholdid_, other->beaststrongholdid_);
    std::swap(tdplotend_, other->tdplotend_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GuideData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GuideData_descriptor_;
  metadata.reflection = GuideData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GuideParagraph::kIdFieldNumber;
const int GuideParagraph::kStepArrFieldNumber;
const int GuideParagraph::kFinishOnceFieldNumber;
const int GuideParagraph::kRunOnceFieldNumber;
const int GuideParagraph::kDescFieldNumber;
#endif  // !_MSC_VER

GuideParagraph::GuideParagraph()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GuideParagraph)
}

void GuideParagraph::InitAsDefaultInstance() {
}

GuideParagraph::GuideParagraph(const GuideParagraph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.GuideParagraph)
}

void GuideParagraph::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  finishonce_ = false;
  runonce_ = false;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GuideParagraph::~GuideParagraph() {
  // @@protoc_insertion_point(destructor:pb.GuideParagraph)
  SharedDtor();
}

void GuideParagraph::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (this != default_instance_) {
  }
}

void GuideParagraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuideParagraph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuideParagraph_descriptor_;
}

const GuideParagraph& GuideParagraph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

GuideParagraph* GuideParagraph::default_instance_ = NULL;

GuideParagraph* GuideParagraph::New() const {
  return new GuideParagraph;
}

void GuideParagraph::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GuideParagraph*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 29) {
    ZR_(id_, runonce_);
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        desc_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  steparr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GuideParagraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GuideParagraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StepArr;
        break;
      }

      // repeated .pb.GuideStep StepArr = 2;
      case 2: {
        if (tag == 18) {
         parse_StepArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_steparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StepArr;
        if (input->ExpectTag(24)) goto parse_FinishOnce;
        break;
      }

      // optional bool FinishOnce = 3;
      case 3: {
        if (tag == 24) {
         parse_FinishOnce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finishonce_)));
          set_has_finishonce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RunOnce;
        break;
      }

      // optional bool RunOnce = 4;
      case 4: {
        if (tag == 32) {
         parse_RunOnce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &runonce_)));
          set_has_runonce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Desc;
        break;
      }

      // optional string Desc = 5;
      case 5: {
        if (tag == 42) {
         parse_Desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "desc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GuideParagraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GuideParagraph)
  return false;
#undef DO_
}

void GuideParagraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GuideParagraph)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .pb.GuideStep StepArr = 2;
  for (int i = 0; i < this->steparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->steparr(i), output);
  }

  // optional bool FinishOnce = 3;
  if (has_finishonce()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->finishonce(), output);
  }

  // optional bool RunOnce = 4;
  if (has_runonce()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->runonce(), output);
  }

  // optional string Desc = 5;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GuideParagraph)
}

::google::protobuf::uint8* GuideParagraph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.GuideParagraph)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .pb.GuideStep StepArr = 2;
  for (int i = 0; i < this->steparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->steparr(i), target);
  }

  // optional bool FinishOnce = 3;
  if (has_finishonce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->finishonce(), target);
  }

  // optional bool RunOnce = 4;
  if (has_runonce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->runonce(), target);
  }

  // optional string Desc = 5;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GuideParagraph)
  return target;
}

int GuideParagraph::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional bool FinishOnce = 3;
    if (has_finishonce()) {
      total_size += 1 + 1;
    }

    // optional bool RunOnce = 4;
    if (has_runonce()) {
      total_size += 1 + 1;
    }

    // optional string Desc = 5;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  // repeated .pb.GuideStep StepArr = 2;
  total_size += 1 * this->steparr_size();
  for (int i = 0; i < this->steparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->steparr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuideParagraph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GuideParagraph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GuideParagraph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GuideParagraph::MergeFrom(const GuideParagraph& from) {
  GOOGLE_CHECK_NE(&from, this);
  steparr_.MergeFrom(from.steparr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_finishonce()) {
      set_finishonce(from.finishonce());
    }
    if (from.has_runonce()) {
      set_runonce(from.runonce());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GuideParagraph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuideParagraph::CopyFrom(const GuideParagraph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuideParagraph::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->steparr())) return false;
  return true;
}

void GuideParagraph::Swap(GuideParagraph* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    steparr_.Swap(&other->steparr_);
    std::swap(finishonce_, other->finishonce_);
    std::swap(runonce_, other->runonce_);
    std::swap(desc_, other->desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GuideParagraph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GuideParagraph_descriptor_;
  metadata.reflection = GuideParagraph_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GuideStepRes::kInsertFieldNumber;
const int GuideStepRes::kGirlPosFieldNumber;
const int GuideStepRes::kBoxPosFieldNumber;
const int GuideStepRes::kGirlFlipFieldNumber;
const int GuideStepRes::kBoxFlipFieldNumber;
const int GuideStepRes::kBoxLocalizedFieldNumber;
const int GuideStepRes::kGirlTypeFieldNumber;
const int GuideStepRes::kEffectTypeFieldNumber;
#endif  // !_MSC_VER

GuideStepRes::GuideStepRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GuideStepRes)
}

void GuideStepRes::InitAsDefaultInstance() {
  girlpos_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
  boxpos_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
}

GuideStepRes::GuideStepRes(const GuideStepRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.GuideStepRes)
}

void GuideStepRes::SharedCtor() {
  _cached_size_ = 0;
  insert_ = false;
  girlpos_ = NULL;
  boxpos_ = NULL;
  girlflip_ = false;
  boxflip_ = false;
  boxlocalized_ = 0;
  girltype_ = 0;
  effecttype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GuideStepRes::~GuideStepRes() {
  // @@protoc_insertion_point(destructor:pb.GuideStepRes)
  SharedDtor();
}

void GuideStepRes::SharedDtor() {
  if (this != default_instance_) {
    delete girlpos_;
    delete boxpos_;
  }
}

void GuideStepRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuideStepRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuideStepRes_descriptor_;
}

const GuideStepRes& GuideStepRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

GuideStepRes* GuideStepRes::default_instance_ = NULL;

GuideStepRes* GuideStepRes::New() const {
  return new GuideStepRes;
}

void GuideStepRes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GuideStepRes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(insert_, effecttype_);
    if (has_girlpos()) {
      if (girlpos_ != NULL) girlpos_->::pb::PbVector2::Clear();
    }
    if (has_boxpos()) {
      if (boxpos_ != NULL) boxpos_->::pb::PbVector2::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GuideStepRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GuideStepRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Insert = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &insert_)));
          set_has_insert();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GirlPos;
        break;
      }

      // optional .pb.PbVector2 GirlPos = 2;
      case 2: {
        if (tag == 18) {
         parse_GirlPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_girlpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BoxPos;
        break;
      }

      // optional .pb.PbVector2 BoxPos = 3;
      case 3: {
        if (tag == 26) {
         parse_BoxPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_boxpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_GirlFlip;
        break;
      }

      // optional bool GirlFlip = 4;
      case 4: {
        if (tag == 32) {
         parse_GirlFlip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &girlflip_)));
          set_has_girlflip();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BoxFlip;
        break;
      }

      // optional bool BoxFlip = 5;
      case 5: {
        if (tag == 40) {
         parse_BoxFlip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boxflip_)));
          set_has_boxflip();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_BoxLocalized;
        break;
      }

      // optional int32 BoxLocalized = 6;
      case 6: {
        if (tag == 48) {
         parse_BoxLocalized:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boxlocalized_)));
          set_has_boxlocalized();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_GirlType;
        break;
      }

      // optional .pb.EGuideGirlType GirlType = 7;
      case 7: {
        if (tag == 56) {
         parse_GirlType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EGuideGirlType_IsValid(value)) {
            set_girltype(static_cast< ::pb::EGuideGirlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_EffectType;
        break;
      }

      // optional .pb.EEffectType EffectType = 8;
      case 8: {
        if (tag == 64) {
         parse_EffectType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EEffectType_IsValid(value)) {
            set_effecttype(static_cast< ::pb::EEffectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GuideStepRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GuideStepRes)
  return false;
#undef DO_
}

void GuideStepRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GuideStepRes)
  // optional bool Insert = 1;
  if (has_insert()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->insert(), output);
  }

  // optional .pb.PbVector2 GirlPos = 2;
  if (has_girlpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->girlpos(), output);
  }

  // optional .pb.PbVector2 BoxPos = 3;
  if (has_boxpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->boxpos(), output);
  }

  // optional bool GirlFlip = 4;
  if (has_girlflip()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->girlflip(), output);
  }

  // optional bool BoxFlip = 5;
  if (has_boxflip()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->boxflip(), output);
  }

  // optional int32 BoxLocalized = 6;
  if (has_boxlocalized()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->boxlocalized(), output);
  }

  // optional .pb.EGuideGirlType GirlType = 7;
  if (has_girltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->girltype(), output);
  }

  // optional .pb.EEffectType EffectType = 8;
  if (has_effecttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->effecttype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GuideStepRes)
}

::google::protobuf::uint8* GuideStepRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.GuideStepRes)
  // optional bool Insert = 1;
  if (has_insert()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->insert(), target);
  }

  // optional .pb.PbVector2 GirlPos = 2;
  if (has_girlpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->girlpos(), target);
  }

  // optional .pb.PbVector2 BoxPos = 3;
  if (has_boxpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->boxpos(), target);
  }

  // optional bool GirlFlip = 4;
  if (has_girlflip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->girlflip(), target);
  }

  // optional bool BoxFlip = 5;
  if (has_boxflip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->boxflip(), target);
  }

  // optional int32 BoxLocalized = 6;
  if (has_boxlocalized()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->boxlocalized(), target);
  }

  // optional .pb.EGuideGirlType GirlType = 7;
  if (has_girltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->girltype(), target);
  }

  // optional .pb.EEffectType EffectType = 8;
  if (has_effecttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->effecttype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GuideStepRes)
  return target;
}

int GuideStepRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Insert = 1;
    if (has_insert()) {
      total_size += 1 + 1;
    }

    // optional .pb.PbVector2 GirlPos = 2;
    if (has_girlpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->girlpos());
    }

    // optional .pb.PbVector2 BoxPos = 3;
    if (has_boxpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->boxpos());
    }

    // optional bool GirlFlip = 4;
    if (has_girlflip()) {
      total_size += 1 + 1;
    }

    // optional bool BoxFlip = 5;
    if (has_boxflip()) {
      total_size += 1 + 1;
    }

    // optional int32 BoxLocalized = 6;
    if (has_boxlocalized()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boxlocalized());
    }

    // optional .pb.EGuideGirlType GirlType = 7;
    if (has_girltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->girltype());
    }

    // optional .pb.EEffectType EffectType = 8;
    if (has_effecttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->effecttype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuideStepRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GuideStepRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GuideStepRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GuideStepRes::MergeFrom(const GuideStepRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_insert()) {
      set_insert(from.insert());
    }
    if (from.has_girlpos()) {
      mutable_girlpos()->::pb::PbVector2::MergeFrom(from.girlpos());
    }
    if (from.has_boxpos()) {
      mutable_boxpos()->::pb::PbVector2::MergeFrom(from.boxpos());
    }
    if (from.has_girlflip()) {
      set_girlflip(from.girlflip());
    }
    if (from.has_boxflip()) {
      set_boxflip(from.boxflip());
    }
    if (from.has_boxlocalized()) {
      set_boxlocalized(from.boxlocalized());
    }
    if (from.has_girltype()) {
      set_girltype(from.girltype());
    }
    if (from.has_effecttype()) {
      set_effecttype(from.effecttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GuideStepRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuideStepRes::CopyFrom(const GuideStepRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuideStepRes::IsInitialized() const {

  if (has_girlpos()) {
    if (!this->girlpos().IsInitialized()) return false;
  }
  if (has_boxpos()) {
    if (!this->boxpos().IsInitialized()) return false;
  }
  return true;
}

void GuideStepRes::Swap(GuideStepRes* other) {
  if (other != this) {
    std::swap(insert_, other->insert_);
    std::swap(girlpos_, other->girlpos_);
    std::swap(boxpos_, other->boxpos_);
    std::swap(girlflip_, other->girlflip_);
    std::swap(boxflip_, other->boxflip_);
    std::swap(boxlocalized_, other->boxlocalized_);
    std::swap(girltype_, other->girltype_);
    std::swap(effecttype_, other->effecttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GuideStepRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GuideStepRes_descriptor_;
  metadata.reflection = GuideStepRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ScrollInfo::kScrollPathFieldNumber;
const int ScrollInfo::kGroupIndexFieldNumber;
const int ScrollInfo::kItemIndexFieldNumber;
const int ScrollInfo::kScrollTypeFieldNumber;
const int ScrollInfo::kNeedScrollFieldNumber;
#endif  // !_MSC_VER

ScrollInfo::ScrollInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ScrollInfo)
}

void ScrollInfo::InitAsDefaultInstance() {
}

ScrollInfo::ScrollInfo(const ScrollInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.ScrollInfo)
}

void ScrollInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scrollpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupindex_ = 0;
  itemindex_ = 0;
  scrolltype_ = 0;
  needscroll_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScrollInfo::~ScrollInfo() {
  // @@protoc_insertion_point(destructor:pb.ScrollInfo)
  SharedDtor();
}

void ScrollInfo::SharedDtor() {
  if (scrollpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scrollpath_;
  }
  if (this != default_instance_) {
  }
}

void ScrollInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScrollInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScrollInfo_descriptor_;
}

const ScrollInfo& ScrollInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

ScrollInfo* ScrollInfo::default_instance_ = NULL;

ScrollInfo* ScrollInfo::New() const {
  return new ScrollInfo;
}

void ScrollInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ScrollInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(groupindex_, needscroll_);
    if (has_scrollpath()) {
      if (scrollpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scrollpath_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScrollInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ScrollInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ScrollPath = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scrollpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scrollpath().data(), this->scrollpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scrollpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GroupIndex;
        break;
      }

      // optional int32 GroupIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_GroupIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupindex_)));
          set_has_groupindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemIndex;
        break;
      }

      // optional int32 ItemIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemindex_)));
          set_has_itemindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ScrollType;
        break;
      }

      // optional int32 ScrollType = 4;
      case 4: {
        if (tag == 32) {
         parse_ScrollType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scrolltype_)));
          set_has_scrolltype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_NeedScroll;
        break;
      }

      // optional int32 NeedScroll = 5;
      case 5: {
        if (tag == 40) {
         parse_NeedScroll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &needscroll_)));
          set_has_needscroll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ScrollInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ScrollInfo)
  return false;
#undef DO_
}

void ScrollInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ScrollInfo)
  // optional string ScrollPath = 1;
  if (has_scrollpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scrollpath().data(), this->scrollpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scrollpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scrollpath(), output);
  }

  // optional int32 GroupIndex = 2;
  if (has_groupindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->groupindex(), output);
  }

  // optional int32 ItemIndex = 3;
  if (has_itemindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemindex(), output);
  }

  // optional int32 ScrollType = 4;
  if (has_scrolltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scrolltype(), output);
  }

  // optional int32 NeedScroll = 5;
  if (has_needscroll()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->needscroll(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ScrollInfo)
}

::google::protobuf::uint8* ScrollInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ScrollInfo)
  // optional string ScrollPath = 1;
  if (has_scrollpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scrollpath().data(), this->scrollpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scrollpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scrollpath(), target);
  }

  // optional int32 GroupIndex = 2;
  if (has_groupindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->groupindex(), target);
  }

  // optional int32 ItemIndex = 3;
  if (has_itemindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemindex(), target);
  }

  // optional int32 ScrollType = 4;
  if (has_scrolltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scrolltype(), target);
  }

  // optional int32 NeedScroll = 5;
  if (has_needscroll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->needscroll(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ScrollInfo)
  return target;
}

int ScrollInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ScrollPath = 1;
    if (has_scrollpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scrollpath());
    }

    // optional int32 GroupIndex = 2;
    if (has_groupindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupindex());
    }

    // optional int32 ItemIndex = 3;
    if (has_itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemindex());
    }

    // optional int32 ScrollType = 4;
    if (has_scrolltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scrolltype());
    }

    // optional int32 NeedScroll = 5;
    if (has_needscroll()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->needscroll());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScrollInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScrollInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScrollInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScrollInfo::MergeFrom(const ScrollInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scrollpath()) {
      set_scrollpath(from.scrollpath());
    }
    if (from.has_groupindex()) {
      set_groupindex(from.groupindex());
    }
    if (from.has_itemindex()) {
      set_itemindex(from.itemindex());
    }
    if (from.has_scrolltype()) {
      set_scrolltype(from.scrolltype());
    }
    if (from.has_needscroll()) {
      set_needscroll(from.needscroll());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScrollInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScrollInfo::CopyFrom(const ScrollInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScrollInfo::IsInitialized() const {

  return true;
}

void ScrollInfo::Swap(ScrollInfo* other) {
  if (other != this) {
    std::swap(scrollpath_, other->scrollpath_);
    std::swap(groupindex_, other->groupindex_);
    std::swap(itemindex_, other->itemindex_);
    std::swap(scrolltype_, other->scrolltype_);
    std::swap(needscroll_, other->needscroll_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScrollInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScrollInfo_descriptor_;
  metadata.reflection = ScrollInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExtraInfo::kLockUITouchMoveFieldNumber;
const int ExtraInfo::kUseLayerModalFieldNumber;
const int ExtraInfo::kOnlyMarkFieldNumber;
const int ExtraInfo::kLookAtBuildingFieldNumber;
const int ExtraInfo::kMoveSpeedFieldNumber;
const int ExtraInfo::kReqFuncNameFieldNumber;
const int ExtraInfo::kLimitTimeFieldNumber;
const int ExtraInfo::kFuncOpenAnimFieldNumber;
const int ExtraInfo::kDragEndWidgetFieldNumber;
const int ExtraInfo::kMainLayerPathFieldNumber;
#endif  // !_MSC_VER

ExtraInfo::ExtraInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ExtraInfo)
}

void ExtraInfo::InitAsDefaultInstance() {
}

ExtraInfo::ExtraInfo(const ExtraInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.ExtraInfo)
}

void ExtraInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lockuitouchmove_ = false;
  uselayermodal_ = false;
  onlymark_ = false;
  lookatbuilding_ = false;
  movespeed_ = 0;
  reqfuncname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limittime_ = 0;
  funcopenanim_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dragendwidget_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainlayerpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtraInfo::~ExtraInfo() {
  // @@protoc_insertion_point(destructor:pb.ExtraInfo)
  SharedDtor();
}

void ExtraInfo::SharedDtor() {
  if (reqfuncname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reqfuncname_;
  }
  if (funcopenanim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete funcopenanim_;
  }
  if (dragendwidget_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dragendwidget_;
  }
  if (mainlayerpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mainlayerpath_;
  }
  if (this != default_instance_) {
  }
}

void ExtraInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtraInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtraInfo_descriptor_;
}

const ExtraInfo& ExtraInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

ExtraInfo* ExtraInfo::default_instance_ = NULL;

ExtraInfo* ExtraInfo::New() const {
  return new ExtraInfo;
}

void ExtraInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ExtraInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(lockuitouchmove_, movespeed_);
    if (has_reqfuncname()) {
      if (reqfuncname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reqfuncname_->clear();
      }
    }
    limittime_ = 0;
    if (has_funcopenanim()) {
      if (funcopenanim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        funcopenanim_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_dragendwidget()) {
      if (dragendwidget_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        dragendwidget_->clear();
      }
    }
    if (has_mainlayerpath()) {
      if (mainlayerpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mainlayerpath_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExtraInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ExtraInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool LockUITouchMove = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lockuitouchmove_)));
          set_has_lockuitouchmove();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UseLayerModal;
        break;
      }

      // optional bool UseLayerModal = 2;
      case 2: {
        if (tag == 16) {
         parse_UseLayerModal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uselayermodal_)));
          set_has_uselayermodal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_OnlyMark;
        break;
      }

      // optional bool OnlyMark = 3;
      case 3: {
        if (tag == 24) {
         parse_OnlyMark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &onlymark_)));
          set_has_onlymark();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_LookAtBuilding;
        break;
      }

      // optional bool LookAtBuilding = 4;
      case 4: {
        if (tag == 32) {
         parse_LookAtBuilding:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lookatbuilding_)));
          set_has_lookatbuilding();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MoveSpeed;
        break;
      }

      // optional int32 MoveSpeed = 6;
      case 6: {
        if (tag == 48) {
         parse_MoveSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movespeed_)));
          set_has_movespeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ReqFuncName;
        break;
      }

      // optional string ReqFuncName = 7;
      case 7: {
        if (tag == 58) {
         parse_ReqFuncName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqfuncname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reqfuncname().data(), this->reqfuncname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reqfuncname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_LimitTime;
        break;
      }

      // optional float LimitTime = 8;
      case 8: {
        if (tag == 69) {
         parse_LimitTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &limittime_)));
          set_has_limittime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_FuncOpenAnim;
        break;
      }

      // optional string FuncOpenAnim = 9;
      case 9: {
        if (tag == 74) {
         parse_FuncOpenAnim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcopenanim()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->funcopenanim().data(), this->funcopenanim().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "funcopenanim");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_DragEndWidget;
        break;
      }

      // optional string DragEndWidget = 10;
      case 10: {
        if (tag == 82) {
         parse_DragEndWidget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dragendwidget()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dragendwidget().data(), this->dragendwidget().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dragendwidget");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_MainLayerPath;
        break;
      }

      // optional string MainLayerPath = 11;
      case 11: {
        if (tag == 90) {
         parse_MainLayerPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainlayerpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainlayerpath().data(), this->mainlayerpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mainlayerpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ExtraInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ExtraInfo)
  return false;
#undef DO_
}

void ExtraInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ExtraInfo)
  // optional bool LockUITouchMove = 1;
  if (has_lockuitouchmove()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->lockuitouchmove(), output);
  }

  // optional bool UseLayerModal = 2;
  if (has_uselayermodal()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->uselayermodal(), output);
  }

  // optional bool OnlyMark = 3;
  if (has_onlymark()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->onlymark(), output);
  }

  // optional bool LookAtBuilding = 4;
  if (has_lookatbuilding()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->lookatbuilding(), output);
  }

  // optional int32 MoveSpeed = 6;
  if (has_movespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->movespeed(), output);
  }

  // optional string ReqFuncName = 7;
  if (has_reqfuncname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reqfuncname().data(), this->reqfuncname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reqfuncname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->reqfuncname(), output);
  }

  // optional float LimitTime = 8;
  if (has_limittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->limittime(), output);
  }

  // optional string FuncOpenAnim = 9;
  if (has_funcopenanim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->funcopenanim().data(), this->funcopenanim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "funcopenanim");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->funcopenanim(), output);
  }

  // optional string DragEndWidget = 10;
  if (has_dragendwidget()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dragendwidget().data(), this->dragendwidget().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dragendwidget");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->dragendwidget(), output);
  }

  // optional string MainLayerPath = 11;
  if (has_mainlayerpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainlayerpath().data(), this->mainlayerpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mainlayerpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->mainlayerpath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ExtraInfo)
}

::google::protobuf::uint8* ExtraInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ExtraInfo)
  // optional bool LockUITouchMove = 1;
  if (has_lockuitouchmove()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->lockuitouchmove(), target);
  }

  // optional bool UseLayerModal = 2;
  if (has_uselayermodal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->uselayermodal(), target);
  }

  // optional bool OnlyMark = 3;
  if (has_onlymark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->onlymark(), target);
  }

  // optional bool LookAtBuilding = 4;
  if (has_lookatbuilding()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->lookatbuilding(), target);
  }

  // optional int32 MoveSpeed = 6;
  if (has_movespeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->movespeed(), target);
  }

  // optional string ReqFuncName = 7;
  if (has_reqfuncname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reqfuncname().data(), this->reqfuncname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reqfuncname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->reqfuncname(), target);
  }

  // optional float LimitTime = 8;
  if (has_limittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->limittime(), target);
  }

  // optional string FuncOpenAnim = 9;
  if (has_funcopenanim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->funcopenanim().data(), this->funcopenanim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "funcopenanim");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->funcopenanim(), target);
  }

  // optional string DragEndWidget = 10;
  if (has_dragendwidget()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dragendwidget().data(), this->dragendwidget().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dragendwidget");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->dragendwidget(), target);
  }

  // optional string MainLayerPath = 11;
  if (has_mainlayerpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainlayerpath().data(), this->mainlayerpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mainlayerpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->mainlayerpath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ExtraInfo)
  return target;
}

int ExtraInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool LockUITouchMove = 1;
    if (has_lockuitouchmove()) {
      total_size += 1 + 1;
    }

    // optional bool UseLayerModal = 2;
    if (has_uselayermodal()) {
      total_size += 1 + 1;
    }

    // optional bool OnlyMark = 3;
    if (has_onlymark()) {
      total_size += 1 + 1;
    }

    // optional bool LookAtBuilding = 4;
    if (has_lookatbuilding()) {
      total_size += 1 + 1;
    }

    // optional int32 MoveSpeed = 6;
    if (has_movespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->movespeed());
    }

    // optional string ReqFuncName = 7;
    if (has_reqfuncname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqfuncname());
    }

    // optional float LimitTime = 8;
    if (has_limittime()) {
      total_size += 1 + 4;
    }

    // optional string FuncOpenAnim = 9;
    if (has_funcopenanim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcopenanim());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string DragEndWidget = 10;
    if (has_dragendwidget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dragendwidget());
    }

    // optional string MainLayerPath = 11;
    if (has_mainlayerpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainlayerpath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtraInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExtraInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExtraInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtraInfo::MergeFrom(const ExtraInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lockuitouchmove()) {
      set_lockuitouchmove(from.lockuitouchmove());
    }
    if (from.has_uselayermodal()) {
      set_uselayermodal(from.uselayermodal());
    }
    if (from.has_onlymark()) {
      set_onlymark(from.onlymark());
    }
    if (from.has_lookatbuilding()) {
      set_lookatbuilding(from.lookatbuilding());
    }
    if (from.has_movespeed()) {
      set_movespeed(from.movespeed());
    }
    if (from.has_reqfuncname()) {
      set_reqfuncname(from.reqfuncname());
    }
    if (from.has_limittime()) {
      set_limittime(from.limittime());
    }
    if (from.has_funcopenanim()) {
      set_funcopenanim(from.funcopenanim());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dragendwidget()) {
      set_dragendwidget(from.dragendwidget());
    }
    if (from.has_mainlayerpath()) {
      set_mainlayerpath(from.mainlayerpath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExtraInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraInfo::CopyFrom(const ExtraInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraInfo::IsInitialized() const {

  return true;
}

void ExtraInfo::Swap(ExtraInfo* other) {
  if (other != this) {
    std::swap(lockuitouchmove_, other->lockuitouchmove_);
    std::swap(uselayermodal_, other->uselayermodal_);
    std::swap(onlymark_, other->onlymark_);
    std::swap(lookatbuilding_, other->lookatbuilding_);
    std::swap(movespeed_, other->movespeed_);
    std::swap(reqfuncname_, other->reqfuncname_);
    std::swap(limittime_, other->limittime_);
    std::swap(funcopenanim_, other->funcopenanim_);
    std::swap(dragendwidget_, other->dragendwidget_);
    std::swap(mainlayerpath_, other->mainlayerpath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExtraInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtraInfo_descriptor_;
  metadata.reflection = ExtraInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GuideStep::kStepTypeFieldNumber;
const int GuideStep::kGuideResPathFieldNumber;
const int GuideStep::kGuideWidgetFieldNumber;
const int GuideStep::kDelayTimeFieldNumber;
const int GuideStep::kStepResFieldNumber;
const int GuideStep::kParamIntFieldNumber;
const int GuideStep::kExtraInfoFieldNumber;
const int GuideStep::kDescFieldNumber;
const int GuideStep::kSceneConfNameFieldNumber;
const int GuideStep::kScrollInfoFieldNumber;
#endif  // !_MSC_VER

GuideStep::GuideStep()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GuideStep)
}

void GuideStep::InitAsDefaultInstance() {
  stepres_ = const_cast< ::pb::GuideStepRes*>(&::pb::GuideStepRes::default_instance());
  extrainfo_ = const_cast< ::pb::ExtraInfo*>(&::pb::ExtraInfo::default_instance());
  scrollinfo_ = const_cast< ::pb::ScrollInfo*>(&::pb::ScrollInfo::default_instance());
}

GuideStep::GuideStep(const GuideStep& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.GuideStep)
}

void GuideStep::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  steptype_ = 0;
  guiderespath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guidewidget_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delaytime_ = 0;
  stepres_ = NULL;
  paramint_ = 0;
  extrainfo_ = NULL;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneconfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scrollinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GuideStep::~GuideStep() {
  // @@protoc_insertion_point(destructor:pb.GuideStep)
  SharedDtor();
}

void GuideStep::SharedDtor() {
  if (guiderespath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guiderespath_;
  }
  if (guidewidget_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guidewidget_;
  }
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (sceneconfname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sceneconfname_;
  }
  if (this != default_instance_) {
    delete stepres_;
    delete extrainfo_;
    delete scrollinfo_;
  }
}

void GuideStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuideStep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuideStep_descriptor_;
}

const GuideStep& GuideStep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fGuideData_2eproto();
  return *default_instance_;
}

GuideStep* GuideStep::default_instance_ = NULL;

GuideStep* GuideStep::New() const {
  return new GuideStep;
}

void GuideStep::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GuideStep*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(steptype_, delaytime_);
    if (has_guiderespath()) {
      if (guiderespath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guiderespath_->clear();
      }
    }
    if (has_guidewidget()) {
      if (guidewidget_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guidewidget_->clear();
      }
    }
    if (has_stepres()) {
      if (stepres_ != NULL) stepres_->::pb::GuideStepRes::Clear();
    }
    paramint_ = 0;
    if (has_extrainfo()) {
      if (extrainfo_ != NULL) extrainfo_->::pb::ExtraInfo::Clear();
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        desc_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_sceneconfname()) {
      if (sceneconfname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sceneconfname_->clear();
      }
    }
    if (has_scrollinfo()) {
      if (scrollinfo_ != NULL) scrollinfo_->::pb::ScrollInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GuideStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GuideStep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EGuideStepType StepType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EGuideStepType_IsValid(value)) {
            set_steptype(static_cast< ::pb::EGuideStepType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GuideResPath;
        break;
      }

      // optional string GuideResPath = 2;
      case 2: {
        if (tag == 18) {
         parse_GuideResPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guiderespath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guiderespath().data(), this->guiderespath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guiderespath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_GuideWidget;
        break;
      }

      // optional string GuideWidget = 3;
      case 3: {
        if (tag == 26) {
         parse_GuideWidget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guidewidget()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guidewidget().data(), this->guidewidget().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guidewidget");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_DelayTime;
        break;
      }

      // optional float DelayTime = 4;
      case 4: {
        if (tag == 37) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_StepRes;
        break;
      }

      // optional .pb.GuideStepRes StepRes = 5;
      case 5: {
        if (tag == 42) {
         parse_StepRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stepres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ParamInt;
        break;
      }

      // optional int32 ParamInt = 6;
      case 6: {
        if (tag == 48) {
         parse_ParamInt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paramint_)));
          set_has_paramint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ExtraInfo;
        break;
      }

      // optional .pb.ExtraInfo ExtraInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_ExtraInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extrainfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Desc;
        break;
      }

      // optional string Desc = 8;
      case 8: {
        if (tag == 66) {
         parse_Desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "desc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_SceneConfName;
        break;
      }

      // optional string SceneConfName = 9;
      case 9: {
        if (tag == 74) {
         parse_SceneConfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sceneconfname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sceneconfname().data(), this->sceneconfname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sceneconfname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ScrollInfo;
        break;
      }

      // optional .pb.ScrollInfo ScrollInfo = 10;
      case 10: {
        if (tag == 82) {
         parse_ScrollInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scrollinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GuideStep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GuideStep)
  return false;
#undef DO_
}

void GuideStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GuideStep)
  // optional .pb.EGuideStepType StepType = 1;
  if (has_steptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->steptype(), output);
  }

  // optional string GuideResPath = 2;
  if (has_guiderespath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guiderespath().data(), this->guiderespath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guiderespath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guiderespath(), output);
  }

  // optional string GuideWidget = 3;
  if (has_guidewidget()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guidewidget().data(), this->guidewidget().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guidewidget");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guidewidget(), output);
  }

  // optional float DelayTime = 4;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->delaytime(), output);
  }

  // optional .pb.GuideStepRes StepRes = 5;
  if (has_stepres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->stepres(), output);
  }

  // optional int32 ParamInt = 6;
  if (has_paramint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->paramint(), output);
  }

  // optional .pb.ExtraInfo ExtraInfo = 7;
  if (has_extrainfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->extrainfo(), output);
  }

  // optional string Desc = 8;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->desc(), output);
  }

  // optional string SceneConfName = 9;
  if (has_sceneconfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sceneconfname().data(), this->sceneconfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sceneconfname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sceneconfname(), output);
  }

  // optional .pb.ScrollInfo ScrollInfo = 10;
  if (has_scrollinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->scrollinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GuideStep)
}

::google::protobuf::uint8* GuideStep::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.GuideStep)
  // optional .pb.EGuideStepType StepType = 1;
  if (has_steptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->steptype(), target);
  }

  // optional string GuideResPath = 2;
  if (has_guiderespath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guiderespath().data(), this->guiderespath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guiderespath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guiderespath(), target);
  }

  // optional string GuideWidget = 3;
  if (has_guidewidget()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guidewidget().data(), this->guidewidget().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guidewidget");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guidewidget(), target);
  }

  // optional float DelayTime = 4;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->delaytime(), target);
  }

  // optional .pb.GuideStepRes StepRes = 5;
  if (has_stepres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->stepres(), target);
  }

  // optional int32 ParamInt = 6;
  if (has_paramint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->paramint(), target);
  }

  // optional .pb.ExtraInfo ExtraInfo = 7;
  if (has_extrainfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->extrainfo(), target);
  }

  // optional string Desc = 8;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->desc(), target);
  }

  // optional string SceneConfName = 9;
  if (has_sceneconfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sceneconfname().data(), this->sceneconfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sceneconfname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sceneconfname(), target);
  }

  // optional .pb.ScrollInfo ScrollInfo = 10;
  if (has_scrollinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->scrollinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GuideStep)
  return target;
}

int GuideStep::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EGuideStepType StepType = 1;
    if (has_steptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->steptype());
    }

    // optional string GuideResPath = 2;
    if (has_guiderespath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guiderespath());
    }

    // optional string GuideWidget = 3;
    if (has_guidewidget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guidewidget());
    }

    // optional float DelayTime = 4;
    if (has_delaytime()) {
      total_size += 1 + 4;
    }

    // optional .pb.GuideStepRes StepRes = 5;
    if (has_stepres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stepres());
    }

    // optional int32 ParamInt = 6;
    if (has_paramint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paramint());
    }

    // optional .pb.ExtraInfo ExtraInfo = 7;
    if (has_extrainfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extrainfo());
    }

    // optional string Desc = 8;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string SceneConfName = 9;
    if (has_sceneconfname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sceneconfname());
    }

    // optional .pb.ScrollInfo ScrollInfo = 10;
    if (has_scrollinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scrollinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuideStep::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GuideStep* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GuideStep*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GuideStep::MergeFrom(const GuideStep& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steptype()) {
      set_steptype(from.steptype());
    }
    if (from.has_guiderespath()) {
      set_guiderespath(from.guiderespath());
    }
    if (from.has_guidewidget()) {
      set_guidewidget(from.guidewidget());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_stepres()) {
      mutable_stepres()->::pb::GuideStepRes::MergeFrom(from.stepres());
    }
    if (from.has_paramint()) {
      set_paramint(from.paramint());
    }
    if (from.has_extrainfo()) {
      mutable_extrainfo()->::pb::ExtraInfo::MergeFrom(from.extrainfo());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sceneconfname()) {
      set_sceneconfname(from.sceneconfname());
    }
    if (from.has_scrollinfo()) {
      mutable_scrollinfo()->::pb::ScrollInfo::MergeFrom(from.scrollinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GuideStep::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuideStep::CopyFrom(const GuideStep& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuideStep::IsInitialized() const {

  if (has_stepres()) {
    if (!this->stepres().IsInitialized()) return false;
  }
  return true;
}

void GuideStep::Swap(GuideStep* other) {
  if (other != this) {
    std::swap(steptype_, other->steptype_);
    std::swap(guiderespath_, other->guiderespath_);
    std::swap(guidewidget_, other->guidewidget_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(stepres_, other->stepres_);
    std::swap(paramint_, other->paramint_);
    std::swap(extrainfo_, other->extrainfo_);
    std::swap(desc_, other->desc_);
    std::swap(sceneconfname_, other->sceneconfname_);
    std::swap(scrollinfo_, other->scrollinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GuideStep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GuideStep_descriptor_;
  metadata.reflection = GuideStep_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
