// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TreasureMap.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/TreasureMap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TTreasureMapGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureMapGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureMapTriggerTreasureMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureMapTriggerTreasureMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureMapTriggerTreasureMapRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureMapTriggerTreasureMapRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureMapNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureMapNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TGuildTreasureMapNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TGuildTreasureMapNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fTreasureMap_2eproto() {
  protobuf_AddDesc_net_2fTreasureMap_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/TreasureMap.proto");
  GOOGLE_CHECK(file != NULL);
  TTreasureMapGetInfoRsp_descriptor_ = file->message_type(0);
  static const int TTreasureMapGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapGetInfoRsp, activetreasuremapitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapGetInfoRsp, arrselfmysteriousitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapGetInfoRsp, arrguildmysteriousitem_),
  };
  TTreasureMapGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureMapGetInfoRsp_descriptor_,
      TTreasureMapGetInfoRsp::default_instance_,
      TTreasureMapGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureMapGetInfoRsp));
  TTreasureMapTriggerTreasureMapReq_descriptor_ = file->message_type(1);
  static const int TTreasureMapTriggerTreasureMapReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapReq, treasuremapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapReq, interactitemname_),
  };
  TTreasureMapTriggerTreasureMapReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureMapTriggerTreasureMapReq_descriptor_,
      TTreasureMapTriggerTreasureMapReq::default_instance_,
      TTreasureMapTriggerTreasureMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureMapTriggerTreasureMapReq));
  TTreasureMapTriggerTreasureMapRsp_descriptor_ = file->message_type(2);
  static const int TTreasureMapTriggerTreasureMapRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapRsp, rewardarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapRsp, eventid_),
  };
  TTreasureMapTriggerTreasureMapRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureMapTriggerTreasureMapRsp_descriptor_,
      TTreasureMapTriggerTreasureMapRsp::default_instance_,
      TTreasureMapTriggerTreasureMapRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapTriggerTreasureMapRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureMapTriggerTreasureMapRsp));
  TTreasureMapNotify_descriptor_ = file->message_type(3);
  static const int TTreasureMapNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapNotify, activetreasuremapitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapNotify, arrselfmysteriousitem_),
  };
  TTreasureMapNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureMapNotify_descriptor_,
      TTreasureMapNotify::default_instance_,
      TTreasureMapNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureMapNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureMapNotify));
  TGuildTreasureMapNotify_descriptor_ = file->message_type(4);
  static const int TGuildTreasureMapNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGuildTreasureMapNotify, arrguildmysteriousitem_),
  };
  TGuildTreasureMapNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TGuildTreasureMapNotify_descriptor_,
      TGuildTreasureMapNotify::default_instance_,
      TGuildTreasureMapNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGuildTreasureMapNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGuildTreasureMapNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TGuildTreasureMapNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fTreasureMap_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureMapGetInfoRsp_descriptor_, &TTreasureMapGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureMapTriggerTreasureMapReq_descriptor_, &TTreasureMapTriggerTreasureMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureMapTriggerTreasureMapRsp_descriptor_, &TTreasureMapTriggerTreasureMapRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureMapNotify_descriptor_, &TTreasureMapNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TGuildTreasureMapNotify_descriptor_, &TGuildTreasureMapNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fTreasureMap_2eproto() {
  delete TTreasureMapGetInfoRsp::default_instance_;
  delete TTreasureMapGetInfoRsp_reflection_;
  delete TTreasureMapTriggerTreasureMapReq::default_instance_;
  delete TTreasureMapTriggerTreasureMapReq_reflection_;
  delete TTreasureMapTriggerTreasureMapRsp::default_instance_;
  delete TTreasureMapTriggerTreasureMapRsp_reflection_;
  delete TTreasureMapNotify::default_instance_;
  delete TTreasureMapNotify_reflection_;
  delete TGuildTreasureMapNotify::default_instance_;
  delete TGuildTreasureMapNotify_reflection_;
}

void protobuf_AddDesc_net_2fTreasureMap_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025net/TreasureMap.proto\022\002pb\032\020net/Common."
    "proto\032\026net/CommonReward.proto\"\207\001\n\026TTreas"
    "ureMapGetInfoRsp\022.\n\025ActiveTreasureMapIte"
    "m\030\001 \001(\0132\017.pb.TSimpleItem\022\035\n\025ArrSelfMyste"
    "riousItem\030\002 \003(\r\022\036\n\026ArrGuildMysteriousIte"
    "m\030\003 \003(\r\"T\n!TTreasureMapTriggerTreasureMa"
    "pReq\022\025\n\rTreasureMapId\030\001 \001(\r\022\030\n\020InterActI"
    "temName\030\002 \001(\t\"\\\n!TTreasureMapTriggerTrea"
    "sureMapRsp\022&\n\013RewardArray\030\001 \003(\0132\021.pb.TCo"
    "mmonReward\022\017\n\007EventId\030\002 \001(\r\"c\n\022TTreasure"
    "MapNotify\022.\n\025ActiveTreasureMapItem\030\001 \001(\013"
    "2\017.pb.TSimpleItem\022\035\n\025ArrSelfMysteriousIt"
    "em\030\002 \003(\r\"9\n\027TGuildTreasureMapNotify\022\036\n\026A"
    "rrGuildMysteriousItem\030\001 \003(\r", 547);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/TreasureMap.proto", &protobuf_RegisterTypes);
  TTreasureMapGetInfoRsp::default_instance_ = new TTreasureMapGetInfoRsp();
  TTreasureMapTriggerTreasureMapReq::default_instance_ = new TTreasureMapTriggerTreasureMapReq();
  TTreasureMapTriggerTreasureMapRsp::default_instance_ = new TTreasureMapTriggerTreasureMapRsp();
  TTreasureMapNotify::default_instance_ = new TTreasureMapNotify();
  TGuildTreasureMapNotify::default_instance_ = new TGuildTreasureMapNotify();
  TTreasureMapGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TTreasureMapTriggerTreasureMapReq::default_instance_->InitAsDefaultInstance();
  TTreasureMapTriggerTreasureMapRsp::default_instance_->InitAsDefaultInstance();
  TTreasureMapNotify::default_instance_->InitAsDefaultInstance();
  TGuildTreasureMapNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fTreasureMap_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fTreasureMap_2eproto {
  StaticDescriptorInitializer_net_2fTreasureMap_2eproto() {
    protobuf_AddDesc_net_2fTreasureMap_2eproto();
  }
} static_descriptor_initializer_net_2fTreasureMap_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TTreasureMapGetInfoRsp::kActiveTreasureMapItemFieldNumber;
const int TTreasureMapGetInfoRsp::kArrSelfMysteriousItemFieldNumber;
const int TTreasureMapGetInfoRsp::kArrGuildMysteriousItemFieldNumber;
#endif  // !_MSC_VER

TTreasureMapGetInfoRsp::TTreasureMapGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureMapGetInfoRsp)
}

void TTreasureMapGetInfoRsp::InitAsDefaultInstance() {
  activetreasuremapitem_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

TTreasureMapGetInfoRsp::TTreasureMapGetInfoRsp(const TTreasureMapGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureMapGetInfoRsp)
}

void TTreasureMapGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  activetreasuremapitem_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureMapGetInfoRsp::~TTreasureMapGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTreasureMapGetInfoRsp)
  SharedDtor();
}

void TTreasureMapGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete activetreasuremapitem_;
  }
}

void TTreasureMapGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureMapGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureMapGetInfoRsp_descriptor_;
}

const TTreasureMapGetInfoRsp& TTreasureMapGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureMap_2eproto();
  return *default_instance_;
}

TTreasureMapGetInfoRsp* TTreasureMapGetInfoRsp::default_instance_ = NULL;

TTreasureMapGetInfoRsp* TTreasureMapGetInfoRsp::New() const {
  return new TTreasureMapGetInfoRsp;
}

void TTreasureMapGetInfoRsp::Clear() {
  if (has_activetreasuremapitem()) {
    if (activetreasuremapitem_ != NULL) activetreasuremapitem_->::pb::TSimpleItem::Clear();
  }
  arrselfmysteriousitem_.Clear();
  arrguildmysteriousitem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureMapGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureMapGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activetreasuremapitem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrSelfMysteriousItem;
        break;
      }

      // repeated uint32 ArrSelfMysteriousItem = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrSelfMysteriousItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arrselfmysteriousitem())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrselfmysteriousitem())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrSelfMysteriousItem;
        if (input->ExpectTag(24)) goto parse_ArrGuildMysteriousItem;
        break;
      }

      // repeated uint32 ArrGuildMysteriousItem = 3;
      case 3: {
        if (tag == 24) {
         parse_ArrGuildMysteriousItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_arrguildmysteriousitem())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrguildmysteriousitem())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ArrGuildMysteriousItem;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureMapGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureMapGetInfoRsp)
  return false;
#undef DO_
}

void TTreasureMapGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureMapGetInfoRsp)
  // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
  if (has_activetreasuremapitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activetreasuremapitem(), output);
  }

  // repeated uint32 ArrSelfMysteriousItem = 2;
  for (int i = 0; i < this->arrselfmysteriousitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arrselfmysteriousitem(i), output);
  }

  // repeated uint32 ArrGuildMysteriousItem = 3;
  for (int i = 0; i < this->arrguildmysteriousitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->arrguildmysteriousitem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureMapGetInfoRsp)
}

::google::protobuf::uint8* TTreasureMapGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureMapGetInfoRsp)
  // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
  if (has_activetreasuremapitem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activetreasuremapitem(), target);
  }

  // repeated uint32 ArrSelfMysteriousItem = 2;
  for (int i = 0; i < this->arrselfmysteriousitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arrselfmysteriousitem(i), target);
  }

  // repeated uint32 ArrGuildMysteriousItem = 3;
  for (int i = 0; i < this->arrguildmysteriousitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->arrguildmysteriousitem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureMapGetInfoRsp)
  return target;
}

int TTreasureMapGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
    if (has_activetreasuremapitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activetreasuremapitem());
    }

  }
  // repeated uint32 ArrSelfMysteriousItem = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrselfmysteriousitem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrselfmysteriousitem(i));
    }
    total_size += 1 * this->arrselfmysteriousitem_size() + data_size;
  }

  // repeated uint32 ArrGuildMysteriousItem = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrguildmysteriousitem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrguildmysteriousitem(i));
    }
    total_size += 1 * this->arrguildmysteriousitem_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureMapGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureMapGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureMapGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureMapGetInfoRsp::MergeFrom(const TTreasureMapGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrselfmysteriousitem_.MergeFrom(from.arrselfmysteriousitem_);
  arrguildmysteriousitem_.MergeFrom(from.arrguildmysteriousitem_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activetreasuremapitem()) {
      mutable_activetreasuremapitem()->::pb::TSimpleItem::MergeFrom(from.activetreasuremapitem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureMapGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureMapGetInfoRsp::CopyFrom(const TTreasureMapGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureMapGetInfoRsp::IsInitialized() const {

  return true;
}

void TTreasureMapGetInfoRsp::Swap(TTreasureMapGetInfoRsp* other) {
  if (other != this) {
    std::swap(activetreasuremapitem_, other->activetreasuremapitem_);
    arrselfmysteriousitem_.Swap(&other->arrselfmysteriousitem_);
    arrguildmysteriousitem_.Swap(&other->arrguildmysteriousitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureMapGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureMapGetInfoRsp_descriptor_;
  metadata.reflection = TTreasureMapGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureMapTriggerTreasureMapReq::kTreasureMapIdFieldNumber;
const int TTreasureMapTriggerTreasureMapReq::kInterActItemNameFieldNumber;
#endif  // !_MSC_VER

TTreasureMapTriggerTreasureMapReq::TTreasureMapTriggerTreasureMapReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureMapTriggerTreasureMapReq)
}

void TTreasureMapTriggerTreasureMapReq::InitAsDefaultInstance() {
}

TTreasureMapTriggerTreasureMapReq::TTreasureMapTriggerTreasureMapReq(const TTreasureMapTriggerTreasureMapReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureMapTriggerTreasureMapReq)
}

void TTreasureMapTriggerTreasureMapReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  treasuremapid_ = 0u;
  interactitemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureMapTriggerTreasureMapReq::~TTreasureMapTriggerTreasureMapReq() {
  // @@protoc_insertion_point(destructor:pb.TTreasureMapTriggerTreasureMapReq)
  SharedDtor();
}

void TTreasureMapTriggerTreasureMapReq::SharedDtor() {
  if (interactitemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete interactitemname_;
  }
  if (this != default_instance_) {
  }
}

void TTreasureMapTriggerTreasureMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureMapTriggerTreasureMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureMapTriggerTreasureMapReq_descriptor_;
}

const TTreasureMapTriggerTreasureMapReq& TTreasureMapTriggerTreasureMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureMap_2eproto();
  return *default_instance_;
}

TTreasureMapTriggerTreasureMapReq* TTreasureMapTriggerTreasureMapReq::default_instance_ = NULL;

TTreasureMapTriggerTreasureMapReq* TTreasureMapTriggerTreasureMapReq::New() const {
  return new TTreasureMapTriggerTreasureMapReq;
}

void TTreasureMapTriggerTreasureMapReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    treasuremapid_ = 0u;
    if (has_interactitemname()) {
      if (interactitemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        interactitemname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureMapTriggerTreasureMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureMapTriggerTreasureMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TreasureMapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasuremapid_)));
          set_has_treasuremapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_InterActItemName;
        break;
      }

      // optional string InterActItemName = 2;
      case 2: {
        if (tag == 18) {
         parse_InterActItemName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interactitemname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interactitemname().data(), this->interactitemname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "interactitemname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureMapTriggerTreasureMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureMapTriggerTreasureMapReq)
  return false;
#undef DO_
}

void TTreasureMapTriggerTreasureMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureMapTriggerTreasureMapReq)
  // optional uint32 TreasureMapId = 1;
  if (has_treasuremapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->treasuremapid(), output);
  }

  // optional string InterActItemName = 2;
  if (has_interactitemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interactitemname().data(), this->interactitemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "interactitemname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->interactitemname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureMapTriggerTreasureMapReq)
}

::google::protobuf::uint8* TTreasureMapTriggerTreasureMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureMapTriggerTreasureMapReq)
  // optional uint32 TreasureMapId = 1;
  if (has_treasuremapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->treasuremapid(), target);
  }

  // optional string InterActItemName = 2;
  if (has_interactitemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interactitemname().data(), this->interactitemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "interactitemname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->interactitemname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureMapTriggerTreasureMapReq)
  return target;
}

int TTreasureMapTriggerTreasureMapReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TreasureMapId = 1;
    if (has_treasuremapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->treasuremapid());
    }

    // optional string InterActItemName = 2;
    if (has_interactitemname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interactitemname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureMapTriggerTreasureMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureMapTriggerTreasureMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureMapTriggerTreasureMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureMapTriggerTreasureMapReq::MergeFrom(const TTreasureMapTriggerTreasureMapReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_treasuremapid()) {
      set_treasuremapid(from.treasuremapid());
    }
    if (from.has_interactitemname()) {
      set_interactitemname(from.interactitemname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureMapTriggerTreasureMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureMapTriggerTreasureMapReq::CopyFrom(const TTreasureMapTriggerTreasureMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureMapTriggerTreasureMapReq::IsInitialized() const {

  return true;
}

void TTreasureMapTriggerTreasureMapReq::Swap(TTreasureMapTriggerTreasureMapReq* other) {
  if (other != this) {
    std::swap(treasuremapid_, other->treasuremapid_);
    std::swap(interactitemname_, other->interactitemname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureMapTriggerTreasureMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureMapTriggerTreasureMapReq_descriptor_;
  metadata.reflection = TTreasureMapTriggerTreasureMapReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureMapTriggerTreasureMapRsp::kRewardArrayFieldNumber;
const int TTreasureMapTriggerTreasureMapRsp::kEventIdFieldNumber;
#endif  // !_MSC_VER

TTreasureMapTriggerTreasureMapRsp::TTreasureMapTriggerTreasureMapRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureMapTriggerTreasureMapRsp)
}

void TTreasureMapTriggerTreasureMapRsp::InitAsDefaultInstance() {
}

TTreasureMapTriggerTreasureMapRsp::TTreasureMapTriggerTreasureMapRsp(const TTreasureMapTriggerTreasureMapRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureMapTriggerTreasureMapRsp)
}

void TTreasureMapTriggerTreasureMapRsp::SharedCtor() {
  _cached_size_ = 0;
  eventid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureMapTriggerTreasureMapRsp::~TTreasureMapTriggerTreasureMapRsp() {
  // @@protoc_insertion_point(destructor:pb.TTreasureMapTriggerTreasureMapRsp)
  SharedDtor();
}

void TTreasureMapTriggerTreasureMapRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureMapTriggerTreasureMapRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureMapTriggerTreasureMapRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureMapTriggerTreasureMapRsp_descriptor_;
}

const TTreasureMapTriggerTreasureMapRsp& TTreasureMapTriggerTreasureMapRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureMap_2eproto();
  return *default_instance_;
}

TTreasureMapTriggerTreasureMapRsp* TTreasureMapTriggerTreasureMapRsp::default_instance_ = NULL;

TTreasureMapTriggerTreasureMapRsp* TTreasureMapTriggerTreasureMapRsp::New() const {
  return new TTreasureMapTriggerTreasureMapRsp;
}

void TTreasureMapTriggerTreasureMapRsp::Clear() {
  eventid_ = 0u;
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureMapTriggerTreasureMapRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureMapTriggerTreasureMapRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectTag(16)) goto parse_EventId;
        break;
      }

      // optional uint32 EventId = 2;
      case 2: {
        if (tag == 16) {
         parse_EventId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eventid_)));
          set_has_eventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureMapTriggerTreasureMapRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureMapTriggerTreasureMapRsp)
  return false;
#undef DO_
}

void TTreasureMapTriggerTreasureMapRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureMapTriggerTreasureMapRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  // optional uint32 EventId = 2;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eventid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureMapTriggerTreasureMapRsp)
}

::google::protobuf::uint8* TTreasureMapTriggerTreasureMapRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureMapTriggerTreasureMapRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  // optional uint32 EventId = 2;
  if (has_eventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eventid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureMapTriggerTreasureMapRsp)
  return target;
}

int TTreasureMapTriggerTreasureMapRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 EventId = 2;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eventid());
    }

  }
  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureMapTriggerTreasureMapRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureMapTriggerTreasureMapRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureMapTriggerTreasureMapRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureMapTriggerTreasureMapRsp::MergeFrom(const TTreasureMapTriggerTreasureMapRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureMapTriggerTreasureMapRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureMapTriggerTreasureMapRsp::CopyFrom(const TTreasureMapTriggerTreasureMapRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureMapTriggerTreasureMapRsp::IsInitialized() const {

  return true;
}

void TTreasureMapTriggerTreasureMapRsp::Swap(TTreasureMapTriggerTreasureMapRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(eventid_, other->eventid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureMapTriggerTreasureMapRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureMapTriggerTreasureMapRsp_descriptor_;
  metadata.reflection = TTreasureMapTriggerTreasureMapRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureMapNotify::kActiveTreasureMapItemFieldNumber;
const int TTreasureMapNotify::kArrSelfMysteriousItemFieldNumber;
#endif  // !_MSC_VER

TTreasureMapNotify::TTreasureMapNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureMapNotify)
}

void TTreasureMapNotify::InitAsDefaultInstance() {
  activetreasuremapitem_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

TTreasureMapNotify::TTreasureMapNotify(const TTreasureMapNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureMapNotify)
}

void TTreasureMapNotify::SharedCtor() {
  _cached_size_ = 0;
  activetreasuremapitem_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureMapNotify::~TTreasureMapNotify() {
  // @@protoc_insertion_point(destructor:pb.TTreasureMapNotify)
  SharedDtor();
}

void TTreasureMapNotify::SharedDtor() {
  if (this != default_instance_) {
    delete activetreasuremapitem_;
  }
}

void TTreasureMapNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureMapNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureMapNotify_descriptor_;
}

const TTreasureMapNotify& TTreasureMapNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureMap_2eproto();
  return *default_instance_;
}

TTreasureMapNotify* TTreasureMapNotify::default_instance_ = NULL;

TTreasureMapNotify* TTreasureMapNotify::New() const {
  return new TTreasureMapNotify;
}

void TTreasureMapNotify::Clear() {
  if (has_activetreasuremapitem()) {
    if (activetreasuremapitem_ != NULL) activetreasuremapitem_->::pb::TSimpleItem::Clear();
  }
  arrselfmysteriousitem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureMapNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureMapNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activetreasuremapitem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrSelfMysteriousItem;
        break;
      }

      // repeated uint32 ArrSelfMysteriousItem = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrSelfMysteriousItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arrselfmysteriousitem())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrselfmysteriousitem())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrSelfMysteriousItem;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureMapNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureMapNotify)
  return false;
#undef DO_
}

void TTreasureMapNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureMapNotify)
  // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
  if (has_activetreasuremapitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activetreasuremapitem(), output);
  }

  // repeated uint32 ArrSelfMysteriousItem = 2;
  for (int i = 0; i < this->arrselfmysteriousitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arrselfmysteriousitem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureMapNotify)
}

::google::protobuf::uint8* TTreasureMapNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureMapNotify)
  // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
  if (has_activetreasuremapitem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activetreasuremapitem(), target);
  }

  // repeated uint32 ArrSelfMysteriousItem = 2;
  for (int i = 0; i < this->arrselfmysteriousitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arrselfmysteriousitem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureMapNotify)
  return target;
}

int TTreasureMapNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TSimpleItem ActiveTreasureMapItem = 1;
    if (has_activetreasuremapitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activetreasuremapitem());
    }

  }
  // repeated uint32 ArrSelfMysteriousItem = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrselfmysteriousitem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrselfmysteriousitem(i));
    }
    total_size += 1 * this->arrselfmysteriousitem_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureMapNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureMapNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureMapNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureMapNotify::MergeFrom(const TTreasureMapNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrselfmysteriousitem_.MergeFrom(from.arrselfmysteriousitem_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activetreasuremapitem()) {
      mutable_activetreasuremapitem()->::pb::TSimpleItem::MergeFrom(from.activetreasuremapitem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureMapNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureMapNotify::CopyFrom(const TTreasureMapNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureMapNotify::IsInitialized() const {

  return true;
}

void TTreasureMapNotify::Swap(TTreasureMapNotify* other) {
  if (other != this) {
    std::swap(activetreasuremapitem_, other->activetreasuremapitem_);
    arrselfmysteriousitem_.Swap(&other->arrselfmysteriousitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureMapNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureMapNotify_descriptor_;
  metadata.reflection = TTreasureMapNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TGuildTreasureMapNotify::kArrGuildMysteriousItemFieldNumber;
#endif  // !_MSC_VER

TGuildTreasureMapNotify::TGuildTreasureMapNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TGuildTreasureMapNotify)
}

void TGuildTreasureMapNotify::InitAsDefaultInstance() {
}

TGuildTreasureMapNotify::TGuildTreasureMapNotify(const TGuildTreasureMapNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TGuildTreasureMapNotify)
}

void TGuildTreasureMapNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TGuildTreasureMapNotify::~TGuildTreasureMapNotify() {
  // @@protoc_insertion_point(destructor:pb.TGuildTreasureMapNotify)
  SharedDtor();
}

void TGuildTreasureMapNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TGuildTreasureMapNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TGuildTreasureMapNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TGuildTreasureMapNotify_descriptor_;
}

const TGuildTreasureMapNotify& TGuildTreasureMapNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureMap_2eproto();
  return *default_instance_;
}

TGuildTreasureMapNotify* TGuildTreasureMapNotify::default_instance_ = NULL;

TGuildTreasureMapNotify* TGuildTreasureMapNotify::New() const {
  return new TGuildTreasureMapNotify;
}

void TGuildTreasureMapNotify::Clear() {
  arrguildmysteriousitem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TGuildTreasureMapNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TGuildTreasureMapNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrGuildMysteriousItem = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrGuildMysteriousItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arrguildmysteriousitem())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrguildmysteriousitem())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrGuildMysteriousItem;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TGuildTreasureMapNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TGuildTreasureMapNotify)
  return false;
#undef DO_
}

void TGuildTreasureMapNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TGuildTreasureMapNotify)
  // repeated uint32 ArrGuildMysteriousItem = 1;
  for (int i = 0; i < this->arrguildmysteriousitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arrguildmysteriousitem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TGuildTreasureMapNotify)
}

::google::protobuf::uint8* TGuildTreasureMapNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TGuildTreasureMapNotify)
  // repeated uint32 ArrGuildMysteriousItem = 1;
  for (int i = 0; i < this->arrguildmysteriousitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arrguildmysteriousitem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TGuildTreasureMapNotify)
  return target;
}

int TGuildTreasureMapNotify::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrGuildMysteriousItem = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrguildmysteriousitem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrguildmysteriousitem(i));
    }
    total_size += 1 * this->arrguildmysteriousitem_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TGuildTreasureMapNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TGuildTreasureMapNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TGuildTreasureMapNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TGuildTreasureMapNotify::MergeFrom(const TGuildTreasureMapNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrguildmysteriousitem_.MergeFrom(from.arrguildmysteriousitem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TGuildTreasureMapNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGuildTreasureMapNotify::CopyFrom(const TGuildTreasureMapNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGuildTreasureMapNotify::IsInitialized() const {

  return true;
}

void TGuildTreasureMapNotify::Swap(TGuildTreasureMapNotify* other) {
  if (other != this) {
    arrguildmysteriousitem_.Swap(&other->arrguildmysteriousitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TGuildTreasureMapNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TGuildTreasureMapNotify_descriptor_;
  metadata.reflection = TGuildTreasureMapNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
