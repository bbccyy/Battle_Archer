// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActWeeklyFund.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActWeeklyFund.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActWeeklyFundSignInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundSignInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundGetDailyGiftRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundGetDailyGiftRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundGetTotalUnlockGiftRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundGetTotalUnlockGiftRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundActIdRewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundActIdRewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundAutoGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundAutoGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActWeeklyFundNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActWeeklyFundNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActWeeklyFund_2eproto() {
  protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActWeeklyFund.proto");
  GOOGLE_CHECK(file != NULL);
  TActWeeklyFundSignInfo_descriptor_ = file->message_type(0);
  static const int TActWeeklyFundSignInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundSignInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundSignInfo, paytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundSignInfo, rewardidarr_),
  };
  TActWeeklyFundSignInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundSignInfo_descriptor_,
      TActWeeklyFundSignInfo::default_instance_,
      TActWeeklyFundSignInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundSignInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundSignInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundSignInfo));
  TActWeeklyFundGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TActWeeklyFundGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetInfoRsp, signarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetInfoRsp, dailygiftgettime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetInfoRsp, totalunlockgiftgettime_),
  };
  TActWeeklyFundGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundGetInfoRsp_descriptor_,
      TActWeeklyFundGetInfoRsp::default_instance_,
      TActWeeklyFundGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundGetInfoRsp));
  TActWeeklyFundGetDailyGiftRsp_descriptor_ = file->message_type(2);
  static const int TActWeeklyFundGetDailyGiftRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetDailyGiftRsp, dailygiftgettime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetDailyGiftRsp, droparr_),
  };
  TActWeeklyFundGetDailyGiftRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundGetDailyGiftRsp_descriptor_,
      TActWeeklyFundGetDailyGiftRsp::default_instance_,
      TActWeeklyFundGetDailyGiftRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetDailyGiftRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetDailyGiftRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundGetDailyGiftRsp));
  TActWeeklyFundGetTotalUnlockGiftRsp_descriptor_ = file->message_type(3);
  static const int TActWeeklyFundGetTotalUnlockGiftRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetTotalUnlockGiftRsp, totalunlockgiftgettime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetTotalUnlockGiftRsp, droparr_),
  };
  TActWeeklyFundGetTotalUnlockGiftRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundGetTotalUnlockGiftRsp_descriptor_,
      TActWeeklyFundGetTotalUnlockGiftRsp::default_instance_,
      TActWeeklyFundGetTotalUnlockGiftRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetTotalUnlockGiftRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetTotalUnlockGiftRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundGetTotalUnlockGiftRsp));
  TActWeeklyFundGetRewardReq_descriptor_ = file->message_type(4);
  static const int TActWeeklyFundGetRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetRewardReq, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetRewardReq, rewardid_),
  };
  TActWeeklyFundGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundGetRewardReq_descriptor_,
      TActWeeklyFundGetRewardReq::default_instance_,
      TActWeeklyFundGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundGetRewardReq));
  TActWeeklyFundActIdRewardInfo_descriptor_ = file->message_type(5);
  static const int TActWeeklyFundActIdRewardInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundActIdRewardInfo, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundActIdRewardInfo, rewardidarr_),
  };
  TActWeeklyFundActIdRewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundActIdRewardInfo_descriptor_,
      TActWeeklyFundActIdRewardInfo::default_instance_,
      TActWeeklyFundActIdRewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundActIdRewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundActIdRewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundActIdRewardInfo));
  TActWeeklyFundAutoGetRewardRsp_descriptor_ = file->message_type(6);
  static const int TActWeeklyFundAutoGetRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundAutoGetRewardRsp, actidrewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundAutoGetRewardRsp, rewardarr_),
  };
  TActWeeklyFundAutoGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundAutoGetRewardRsp_descriptor_,
      TActWeeklyFundAutoGetRewardRsp::default_instance_,
      TActWeeklyFundAutoGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundAutoGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundAutoGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundAutoGetRewardRsp));
  TActWeeklyFundNotify_descriptor_ = file->message_type(7);
  static const int TActWeeklyFundNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundNotify, signarr_),
  };
  TActWeeklyFundNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActWeeklyFundNotify_descriptor_,
      TActWeeklyFundNotify::default_instance_,
      TActWeeklyFundNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActWeeklyFundNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActWeeklyFundNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActWeeklyFund_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundSignInfo_descriptor_, &TActWeeklyFundSignInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundGetInfoRsp_descriptor_, &TActWeeklyFundGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundGetDailyGiftRsp_descriptor_, &TActWeeklyFundGetDailyGiftRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundGetTotalUnlockGiftRsp_descriptor_, &TActWeeklyFundGetTotalUnlockGiftRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundGetRewardReq_descriptor_, &TActWeeklyFundGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundActIdRewardInfo_descriptor_, &TActWeeklyFundActIdRewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundAutoGetRewardRsp_descriptor_, &TActWeeklyFundAutoGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActWeeklyFundNotify_descriptor_, &TActWeeklyFundNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActWeeklyFund_2eproto() {
  delete TActWeeklyFundSignInfo::default_instance_;
  delete TActWeeklyFundSignInfo_reflection_;
  delete TActWeeklyFundGetInfoRsp::default_instance_;
  delete TActWeeklyFundGetInfoRsp_reflection_;
  delete TActWeeklyFundGetDailyGiftRsp::default_instance_;
  delete TActWeeklyFundGetDailyGiftRsp_reflection_;
  delete TActWeeklyFundGetTotalUnlockGiftRsp::default_instance_;
  delete TActWeeklyFundGetTotalUnlockGiftRsp_reflection_;
  delete TActWeeklyFundGetRewardReq::default_instance_;
  delete TActWeeklyFundGetRewardReq_reflection_;
  delete TActWeeklyFundActIdRewardInfo::default_instance_;
  delete TActWeeklyFundActIdRewardInfo_reflection_;
  delete TActWeeklyFundAutoGetRewardRsp::default_instance_;
  delete TActWeeklyFundAutoGetRewardRsp_reflection_;
  delete TActWeeklyFundNotify::default_instance_;
  delete TActWeeklyFundNotify_reflection_;
}

void protobuf_AddDesc_net_2fActWeeklyFund_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027net/ActWeeklyFund.proto\022\002pb\032\026net/Commo"
    "nReward.proto\"J\n\026TActWeeklyFundSignInfo\022"
    "\n\n\002Id\030\001 \001(\r\022\017\n\007PayTime\030\002 \001(\004\022\023\n\013RewardId"
    "Arr\030\003 \003(\r\"\201\001\n\030TActWeeklyFundGetInfoRsp\022+"
    "\n\007SignArr\030\001 \003(\0132\032.pb.TActWeeklyFundSignI"
    "nfo\022\030\n\020DailyGiftGetTime\030\002 \001(\004\022\036\n\026TotalUn"
    "lockGiftGetTime\030\003 \001(\004\"]\n\035TActWeeklyFundG"
    "etDailyGiftRsp\022\030\n\020DailyGiftGetTime\030\001 \001(\004"
    "\022\"\n\007DropArr\030\002 \003(\0132\021.pb.TCommonReward\"i\n#"
    "TActWeeklyFundGetTotalUnlockGiftRsp\022\036\n\026T"
    "otalUnlockGiftGetTime\030\001 \001(\004\022\"\n\007DropArr\030\002"
    " \003(\0132\021.pb.TCommonReward\"=\n\032TActWeeklyFun"
    "dGetRewardReq\022\r\n\005ActId\030\001 \001(\r\022\020\n\010RewardId"
    "\030\002 \001(\r\"C\n\035TActWeeklyFundActIdRewardInfo\022"
    "\r\n\005ActId\030\001 \001(\r\022\023\n\013RewardIdArr\030\002 \003(\r\"\201\001\n\036"
    "TActWeeklyFundAutoGetRewardRsp\0229\n\016ActIdR"
    "ewardArr\030\001 \003(\0132!.pb.TActWeeklyFundActIdR"
    "ewardInfo\022$\n\tRewardArr\030\003 \003(\0132\021.pb.TCommo"
    "nReward\"C\n\024TActWeeklyFundNotify\022+\n\007SignA"
    "rr\030\001 \001(\0132\032.pb.TActWeeklyFundSignInfo", 796);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActWeeklyFund.proto", &protobuf_RegisterTypes);
  TActWeeklyFundSignInfo::default_instance_ = new TActWeeklyFundSignInfo();
  TActWeeklyFundGetInfoRsp::default_instance_ = new TActWeeklyFundGetInfoRsp();
  TActWeeklyFundGetDailyGiftRsp::default_instance_ = new TActWeeklyFundGetDailyGiftRsp();
  TActWeeklyFundGetTotalUnlockGiftRsp::default_instance_ = new TActWeeklyFundGetTotalUnlockGiftRsp();
  TActWeeklyFundGetRewardReq::default_instance_ = new TActWeeklyFundGetRewardReq();
  TActWeeklyFundActIdRewardInfo::default_instance_ = new TActWeeklyFundActIdRewardInfo();
  TActWeeklyFundAutoGetRewardRsp::default_instance_ = new TActWeeklyFundAutoGetRewardRsp();
  TActWeeklyFundNotify::default_instance_ = new TActWeeklyFundNotify();
  TActWeeklyFundSignInfo::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundGetDailyGiftRsp::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundGetTotalUnlockGiftRsp::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundGetRewardReq::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundActIdRewardInfo::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundAutoGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TActWeeklyFundNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActWeeklyFund_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActWeeklyFund_2eproto {
  StaticDescriptorInitializer_net_2fActWeeklyFund_2eproto() {
    protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  }
} static_descriptor_initializer_net_2fActWeeklyFund_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundSignInfo::kIdFieldNumber;
const int TActWeeklyFundSignInfo::kPayTimeFieldNumber;
const int TActWeeklyFundSignInfo::kRewardIdArrFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundSignInfo::TActWeeklyFundSignInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundSignInfo)
}

void TActWeeklyFundSignInfo::InitAsDefaultInstance() {
}

TActWeeklyFundSignInfo::TActWeeklyFundSignInfo(const TActWeeklyFundSignInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundSignInfo)
}

void TActWeeklyFundSignInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  paytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundSignInfo::~TActWeeklyFundSignInfo() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundSignInfo)
  SharedDtor();
}

void TActWeeklyFundSignInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundSignInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundSignInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundSignInfo_descriptor_;
}

const TActWeeklyFundSignInfo& TActWeeklyFundSignInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundSignInfo* TActWeeklyFundSignInfo::default_instance_ = NULL;

TActWeeklyFundSignInfo* TActWeeklyFundSignInfo::New() const {
  return new TActWeeklyFundSignInfo;
}

void TActWeeklyFundSignInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0u;
    paytime_ = GOOGLE_ULONGLONG(0);
  }
  rewardidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundSignInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundSignInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PayTime;
        break;
      }

      // optional uint64 PayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_PayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &paytime_)));
          set_has_paytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        break;
      }

      // repeated uint32 RewardIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_RewardIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_rewardidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundSignInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundSignInfo)
  return false;
#undef DO_
}

void TActWeeklyFundSignInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundSignInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 PayTime = 2;
  if (has_paytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->paytime(), output);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->rewardidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundSignInfo)
}

::google::protobuf::uint8* TActWeeklyFundSignInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundSignInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 PayTime = 2;
  if (has_paytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->paytime(), target);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->rewardidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundSignInfo)
  return target;
}

int TActWeeklyFundSignInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 PayTime = 2;
    if (has_paytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->paytime());
    }

  }
  // repeated uint32 RewardIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardidarr(i));
    }
    total_size += 1 * this->rewardidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundSignInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundSignInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundSignInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundSignInfo::MergeFrom(const TActWeeklyFundSignInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardidarr_.MergeFrom(from.rewardidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_paytime()) {
      set_paytime(from.paytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundSignInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundSignInfo::CopyFrom(const TActWeeklyFundSignInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundSignInfo::IsInitialized() const {

  return true;
}

void TActWeeklyFundSignInfo::Swap(TActWeeklyFundSignInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(paytime_, other->paytime_);
    rewardidarr_.Swap(&other->rewardidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundSignInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundSignInfo_descriptor_;
  metadata.reflection = TActWeeklyFundSignInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundGetInfoRsp::kSignArrFieldNumber;
const int TActWeeklyFundGetInfoRsp::kDailyGiftGetTimeFieldNumber;
const int TActWeeklyFundGetInfoRsp::kTotalUnlockGiftGetTimeFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundGetInfoRsp::TActWeeklyFundGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundGetInfoRsp)
}

void TActWeeklyFundGetInfoRsp::InitAsDefaultInstance() {
}

TActWeeklyFundGetInfoRsp::TActWeeklyFundGetInfoRsp(const TActWeeklyFundGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundGetInfoRsp)
}

void TActWeeklyFundGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  dailygiftgettime_ = GOOGLE_ULONGLONG(0);
  totalunlockgiftgettime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundGetInfoRsp::~TActWeeklyFundGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundGetInfoRsp)
  SharedDtor();
}

void TActWeeklyFundGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundGetInfoRsp_descriptor_;
}

const TActWeeklyFundGetInfoRsp& TActWeeklyFundGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundGetInfoRsp* TActWeeklyFundGetInfoRsp::default_instance_ = NULL;

TActWeeklyFundGetInfoRsp* TActWeeklyFundGetInfoRsp::New() const {
  return new TActWeeklyFundGetInfoRsp;
}

void TActWeeklyFundGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActWeeklyFundGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(dailygiftgettime_, totalunlockgiftgettime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  signarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActWeeklyFundSignInfo SignArr = 1;
      case 1: {
        if (tag == 10) {
         parse_SignArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_SignArr;
        if (input->ExpectTag(16)) goto parse_DailyGiftGetTime;
        break;
      }

      // optional uint64 DailyGiftGetTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DailyGiftGetTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dailygiftgettime_)));
          set_has_dailygiftgettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TotalUnlockGiftGetTime;
        break;
      }

      // optional uint64 TotalUnlockGiftGetTime = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalUnlockGiftGetTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalunlockgiftgettime_)));
          set_has_totalunlockgiftgettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundGetInfoRsp)
  return false;
#undef DO_
}

void TActWeeklyFundGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundGetInfoRsp)
  // repeated .pb.TActWeeklyFundSignInfo SignArr = 1;
  for (int i = 0; i < this->signarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->signarr(i), output);
  }

  // optional uint64 DailyGiftGetTime = 2;
  if (has_dailygiftgettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dailygiftgettime(), output);
  }

  // optional uint64 TotalUnlockGiftGetTime = 3;
  if (has_totalunlockgiftgettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->totalunlockgiftgettime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundGetInfoRsp)
}

::google::protobuf::uint8* TActWeeklyFundGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundGetInfoRsp)
  // repeated .pb.TActWeeklyFundSignInfo SignArr = 1;
  for (int i = 0; i < this->signarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->signarr(i), target);
  }

  // optional uint64 DailyGiftGetTime = 2;
  if (has_dailygiftgettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dailygiftgettime(), target);
  }

  // optional uint64 TotalUnlockGiftGetTime = 3;
  if (has_totalunlockgiftgettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->totalunlockgiftgettime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundGetInfoRsp)
  return target;
}

int TActWeeklyFundGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint64 DailyGiftGetTime = 2;
    if (has_dailygiftgettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->dailygiftgettime());
    }

    // optional uint64 TotalUnlockGiftGetTime = 3;
    if (has_totalunlockgiftgettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->totalunlockgiftgettime());
    }

  }
  // repeated .pb.TActWeeklyFundSignInfo SignArr = 1;
  total_size += 1 * this->signarr_size();
  for (int i = 0; i < this->signarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundGetInfoRsp::MergeFrom(const TActWeeklyFundGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  signarr_.MergeFrom(from.signarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_dailygiftgettime()) {
      set_dailygiftgettime(from.dailygiftgettime());
    }
    if (from.has_totalunlockgiftgettime()) {
      set_totalunlockgiftgettime(from.totalunlockgiftgettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundGetInfoRsp::CopyFrom(const TActWeeklyFundGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundGetInfoRsp::IsInitialized() const {

  return true;
}

void TActWeeklyFundGetInfoRsp::Swap(TActWeeklyFundGetInfoRsp* other) {
  if (other != this) {
    signarr_.Swap(&other->signarr_);
    std::swap(dailygiftgettime_, other->dailygiftgettime_);
    std::swap(totalunlockgiftgettime_, other->totalunlockgiftgettime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundGetInfoRsp_descriptor_;
  metadata.reflection = TActWeeklyFundGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundGetDailyGiftRsp::kDailyGiftGetTimeFieldNumber;
const int TActWeeklyFundGetDailyGiftRsp::kDropArrFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundGetDailyGiftRsp::TActWeeklyFundGetDailyGiftRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundGetDailyGiftRsp)
}

void TActWeeklyFundGetDailyGiftRsp::InitAsDefaultInstance() {
}

TActWeeklyFundGetDailyGiftRsp::TActWeeklyFundGetDailyGiftRsp(const TActWeeklyFundGetDailyGiftRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundGetDailyGiftRsp)
}

void TActWeeklyFundGetDailyGiftRsp::SharedCtor() {
  _cached_size_ = 0;
  dailygiftgettime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundGetDailyGiftRsp::~TActWeeklyFundGetDailyGiftRsp() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundGetDailyGiftRsp)
  SharedDtor();
}

void TActWeeklyFundGetDailyGiftRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundGetDailyGiftRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundGetDailyGiftRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundGetDailyGiftRsp_descriptor_;
}

const TActWeeklyFundGetDailyGiftRsp& TActWeeklyFundGetDailyGiftRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundGetDailyGiftRsp* TActWeeklyFundGetDailyGiftRsp::default_instance_ = NULL;

TActWeeklyFundGetDailyGiftRsp* TActWeeklyFundGetDailyGiftRsp::New() const {
  return new TActWeeklyFundGetDailyGiftRsp;
}

void TActWeeklyFundGetDailyGiftRsp::Clear() {
  dailygiftgettime_ = GOOGLE_ULONGLONG(0);
  droparr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundGetDailyGiftRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundGetDailyGiftRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 DailyGiftGetTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dailygiftgettime_)));
          set_has_dailygiftgettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArr;
        break;
      }

      // repeated .pb.TCommonReward DropArr = 2;
      case 2: {
        if (tag == 18) {
         parse_DropArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundGetDailyGiftRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundGetDailyGiftRsp)
  return false;
#undef DO_
}

void TActWeeklyFundGetDailyGiftRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundGetDailyGiftRsp)
  // optional uint64 DailyGiftGetTime = 1;
  if (has_dailygiftgettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dailygiftgettime(), output);
  }

  // repeated .pb.TCommonReward DropArr = 2;
  for (int i = 0; i < this->droparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->droparr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundGetDailyGiftRsp)
}

::google::protobuf::uint8* TActWeeklyFundGetDailyGiftRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundGetDailyGiftRsp)
  // optional uint64 DailyGiftGetTime = 1;
  if (has_dailygiftgettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dailygiftgettime(), target);
  }

  // repeated .pb.TCommonReward DropArr = 2;
  for (int i = 0; i < this->droparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->droparr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundGetDailyGiftRsp)
  return target;
}

int TActWeeklyFundGetDailyGiftRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 DailyGiftGetTime = 1;
    if (has_dailygiftgettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->dailygiftgettime());
    }

  }
  // repeated .pb.TCommonReward DropArr = 2;
  total_size += 1 * this->droparr_size();
  for (int i = 0; i < this->droparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundGetDailyGiftRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundGetDailyGiftRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundGetDailyGiftRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundGetDailyGiftRsp::MergeFrom(const TActWeeklyFundGetDailyGiftRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparr_.MergeFrom(from.droparr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dailygiftgettime()) {
      set_dailygiftgettime(from.dailygiftgettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundGetDailyGiftRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundGetDailyGiftRsp::CopyFrom(const TActWeeklyFundGetDailyGiftRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundGetDailyGiftRsp::IsInitialized() const {

  return true;
}

void TActWeeklyFundGetDailyGiftRsp::Swap(TActWeeklyFundGetDailyGiftRsp* other) {
  if (other != this) {
    std::swap(dailygiftgettime_, other->dailygiftgettime_);
    droparr_.Swap(&other->droparr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundGetDailyGiftRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundGetDailyGiftRsp_descriptor_;
  metadata.reflection = TActWeeklyFundGetDailyGiftRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundGetTotalUnlockGiftRsp::kTotalUnlockGiftGetTimeFieldNumber;
const int TActWeeklyFundGetTotalUnlockGiftRsp::kDropArrFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundGetTotalUnlockGiftRsp::TActWeeklyFundGetTotalUnlockGiftRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
}

void TActWeeklyFundGetTotalUnlockGiftRsp::InitAsDefaultInstance() {
}

TActWeeklyFundGetTotalUnlockGiftRsp::TActWeeklyFundGetTotalUnlockGiftRsp(const TActWeeklyFundGetTotalUnlockGiftRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
}

void TActWeeklyFundGetTotalUnlockGiftRsp::SharedCtor() {
  _cached_size_ = 0;
  totalunlockgiftgettime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundGetTotalUnlockGiftRsp::~TActWeeklyFundGetTotalUnlockGiftRsp() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  SharedDtor();
}

void TActWeeklyFundGetTotalUnlockGiftRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundGetTotalUnlockGiftRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundGetTotalUnlockGiftRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundGetTotalUnlockGiftRsp_descriptor_;
}

const TActWeeklyFundGetTotalUnlockGiftRsp& TActWeeklyFundGetTotalUnlockGiftRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundGetTotalUnlockGiftRsp* TActWeeklyFundGetTotalUnlockGiftRsp::default_instance_ = NULL;

TActWeeklyFundGetTotalUnlockGiftRsp* TActWeeklyFundGetTotalUnlockGiftRsp::New() const {
  return new TActWeeklyFundGetTotalUnlockGiftRsp;
}

void TActWeeklyFundGetTotalUnlockGiftRsp::Clear() {
  totalunlockgiftgettime_ = GOOGLE_ULONGLONG(0);
  droparr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundGetTotalUnlockGiftRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TotalUnlockGiftGetTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalunlockgiftgettime_)));
          set_has_totalunlockgiftgettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArr;
        break;
      }

      // repeated .pb.TCommonReward DropArr = 2;
      case 2: {
        if (tag == 18) {
         parse_DropArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  return false;
#undef DO_
}

void TActWeeklyFundGetTotalUnlockGiftRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  // optional uint64 TotalUnlockGiftGetTime = 1;
  if (has_totalunlockgiftgettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->totalunlockgiftgettime(), output);
  }

  // repeated .pb.TCommonReward DropArr = 2;
  for (int i = 0; i < this->droparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->droparr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
}

::google::protobuf::uint8* TActWeeklyFundGetTotalUnlockGiftRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  // optional uint64 TotalUnlockGiftGetTime = 1;
  if (has_totalunlockgiftgettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->totalunlockgiftgettime(), target);
  }

  // repeated .pb.TCommonReward DropArr = 2;
  for (int i = 0; i < this->droparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->droparr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundGetTotalUnlockGiftRsp)
  return target;
}

int TActWeeklyFundGetTotalUnlockGiftRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 TotalUnlockGiftGetTime = 1;
    if (has_totalunlockgiftgettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->totalunlockgiftgettime());
    }

  }
  // repeated .pb.TCommonReward DropArr = 2;
  total_size += 1 * this->droparr_size();
  for (int i = 0; i < this->droparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundGetTotalUnlockGiftRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundGetTotalUnlockGiftRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundGetTotalUnlockGiftRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundGetTotalUnlockGiftRsp::MergeFrom(const TActWeeklyFundGetTotalUnlockGiftRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparr_.MergeFrom(from.droparr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_totalunlockgiftgettime()) {
      set_totalunlockgiftgettime(from.totalunlockgiftgettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundGetTotalUnlockGiftRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundGetTotalUnlockGiftRsp::CopyFrom(const TActWeeklyFundGetTotalUnlockGiftRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundGetTotalUnlockGiftRsp::IsInitialized() const {

  return true;
}

void TActWeeklyFundGetTotalUnlockGiftRsp::Swap(TActWeeklyFundGetTotalUnlockGiftRsp* other) {
  if (other != this) {
    std::swap(totalunlockgiftgettime_, other->totalunlockgiftgettime_);
    droparr_.Swap(&other->droparr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundGetTotalUnlockGiftRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundGetTotalUnlockGiftRsp_descriptor_;
  metadata.reflection = TActWeeklyFundGetTotalUnlockGiftRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundGetRewardReq::kActIdFieldNumber;
const int TActWeeklyFundGetRewardReq::kRewardIdFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundGetRewardReq::TActWeeklyFundGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundGetRewardReq)
}

void TActWeeklyFundGetRewardReq::InitAsDefaultInstance() {
}

TActWeeklyFundGetRewardReq::TActWeeklyFundGetRewardReq(const TActWeeklyFundGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundGetRewardReq)
}

void TActWeeklyFundGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  actid_ = 0u;
  rewardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundGetRewardReq::~TActWeeklyFundGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundGetRewardReq)
  SharedDtor();
}

void TActWeeklyFundGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundGetRewardReq_descriptor_;
}

const TActWeeklyFundGetRewardReq& TActWeeklyFundGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundGetRewardReq* TActWeeklyFundGetRewardReq::default_instance_ = NULL;

TActWeeklyFundGetRewardReq* TActWeeklyFundGetRewardReq::New() const {
  return new TActWeeklyFundGetRewardReq;
}

void TActWeeklyFundGetRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActWeeklyFundGetRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(actid_, rewardid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ActId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actid_)));
          set_has_actid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardId;
        break;
      }

      // optional uint32 RewardId = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundGetRewardReq)
  return false;
#undef DO_
}

void TActWeeklyFundGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundGetRewardReq)
  // optional uint32 ActId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->actid(), output);
  }

  // optional uint32 RewardId = 2;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundGetRewardReq)
}

::google::protobuf::uint8* TActWeeklyFundGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundGetRewardReq)
  // optional uint32 ActId = 1;
  if (has_actid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->actid(), target);
  }

  // optional uint32 RewardId = 2;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundGetRewardReq)
  return target;
}

int TActWeeklyFundGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ActId = 1;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->actid());
    }

    // optional uint32 RewardId = 2;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundGetRewardReq::MergeFrom(const TActWeeklyFundGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actid()) {
      set_actid(from.actid());
    }
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundGetRewardReq::CopyFrom(const TActWeeklyFundGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundGetRewardReq::IsInitialized() const {

  return true;
}

void TActWeeklyFundGetRewardReq::Swap(TActWeeklyFundGetRewardReq* other) {
  if (other != this) {
    std::swap(actid_, other->actid_);
    std::swap(rewardid_, other->rewardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundGetRewardReq_descriptor_;
  metadata.reflection = TActWeeklyFundGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundActIdRewardInfo::kActIdFieldNumber;
const int TActWeeklyFundActIdRewardInfo::kRewardIdArrFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundActIdRewardInfo::TActWeeklyFundActIdRewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundActIdRewardInfo)
}

void TActWeeklyFundActIdRewardInfo::InitAsDefaultInstance() {
}

TActWeeklyFundActIdRewardInfo::TActWeeklyFundActIdRewardInfo(const TActWeeklyFundActIdRewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundActIdRewardInfo)
}

void TActWeeklyFundActIdRewardInfo::SharedCtor() {
  _cached_size_ = 0;
  actid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundActIdRewardInfo::~TActWeeklyFundActIdRewardInfo() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundActIdRewardInfo)
  SharedDtor();
}

void TActWeeklyFundActIdRewardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundActIdRewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundActIdRewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundActIdRewardInfo_descriptor_;
}

const TActWeeklyFundActIdRewardInfo& TActWeeklyFundActIdRewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundActIdRewardInfo* TActWeeklyFundActIdRewardInfo::default_instance_ = NULL;

TActWeeklyFundActIdRewardInfo* TActWeeklyFundActIdRewardInfo::New() const {
  return new TActWeeklyFundActIdRewardInfo;
}

void TActWeeklyFundActIdRewardInfo::Clear() {
  actid_ = 0u;
  rewardidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundActIdRewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundActIdRewardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ActId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actid_)));
          set_has_actid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIdArr;
        break;
      }

      // repeated uint32 RewardIdArr = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_rewardidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundActIdRewardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundActIdRewardInfo)
  return false;
#undef DO_
}

void TActWeeklyFundActIdRewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundActIdRewardInfo)
  // optional uint32 ActId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->actid(), output);
  }

  // repeated uint32 RewardIdArr = 2;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->rewardidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundActIdRewardInfo)
}

::google::protobuf::uint8* TActWeeklyFundActIdRewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundActIdRewardInfo)
  // optional uint32 ActId = 1;
  if (has_actid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->actid(), target);
  }

  // repeated uint32 RewardIdArr = 2;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->rewardidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundActIdRewardInfo)
  return target;
}

int TActWeeklyFundActIdRewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ActId = 1;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->actid());
    }

  }
  // repeated uint32 RewardIdArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardidarr(i));
    }
    total_size += 1 * this->rewardidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundActIdRewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundActIdRewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundActIdRewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundActIdRewardInfo::MergeFrom(const TActWeeklyFundActIdRewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardidarr_.MergeFrom(from.rewardidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actid()) {
      set_actid(from.actid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundActIdRewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundActIdRewardInfo::CopyFrom(const TActWeeklyFundActIdRewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundActIdRewardInfo::IsInitialized() const {

  return true;
}

void TActWeeklyFundActIdRewardInfo::Swap(TActWeeklyFundActIdRewardInfo* other) {
  if (other != this) {
    std::swap(actid_, other->actid_);
    rewardidarr_.Swap(&other->rewardidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundActIdRewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundActIdRewardInfo_descriptor_;
  metadata.reflection = TActWeeklyFundActIdRewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundAutoGetRewardRsp::kActIdRewardArrFieldNumber;
const int TActWeeklyFundAutoGetRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundAutoGetRewardRsp::TActWeeklyFundAutoGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundAutoGetRewardRsp)
}

void TActWeeklyFundAutoGetRewardRsp::InitAsDefaultInstance() {
}

TActWeeklyFundAutoGetRewardRsp::TActWeeklyFundAutoGetRewardRsp(const TActWeeklyFundAutoGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundAutoGetRewardRsp)
}

void TActWeeklyFundAutoGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundAutoGetRewardRsp::~TActWeeklyFundAutoGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundAutoGetRewardRsp)
  SharedDtor();
}

void TActWeeklyFundAutoGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActWeeklyFundAutoGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundAutoGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundAutoGetRewardRsp_descriptor_;
}

const TActWeeklyFundAutoGetRewardRsp& TActWeeklyFundAutoGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundAutoGetRewardRsp* TActWeeklyFundAutoGetRewardRsp::default_instance_ = NULL;

TActWeeklyFundAutoGetRewardRsp* TActWeeklyFundAutoGetRewardRsp::New() const {
  return new TActWeeklyFundAutoGetRewardRsp;
}

void TActWeeklyFundAutoGetRewardRsp::Clear() {
  actidrewardarr_.Clear();
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundAutoGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundAutoGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActWeeklyFundActIdRewardInfo ActIdRewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_ActIdRewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actidrewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ActIdRewardArr;
        if (input->ExpectTag(26)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TCommonReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundAutoGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundAutoGetRewardRsp)
  return false;
#undef DO_
}

void TActWeeklyFundAutoGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundAutoGetRewardRsp)
  // repeated .pb.TActWeeklyFundActIdRewardInfo ActIdRewardArr = 1;
  for (int i = 0; i < this->actidrewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->actidrewardarr(i), output);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundAutoGetRewardRsp)
}

::google::protobuf::uint8* TActWeeklyFundAutoGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundAutoGetRewardRsp)
  // repeated .pb.TActWeeklyFundActIdRewardInfo ActIdRewardArr = 1;
  for (int i = 0; i < this->actidrewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->actidrewardarr(i), target);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundAutoGetRewardRsp)
  return target;
}

int TActWeeklyFundAutoGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActWeeklyFundActIdRewardInfo ActIdRewardArr = 1;
  total_size += 1 * this->actidrewardarr_size();
  for (int i = 0; i < this->actidrewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actidrewardarr(i));
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundAutoGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundAutoGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundAutoGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundAutoGetRewardRsp::MergeFrom(const TActWeeklyFundAutoGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  actidrewardarr_.MergeFrom(from.actidrewardarr_);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundAutoGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundAutoGetRewardRsp::CopyFrom(const TActWeeklyFundAutoGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundAutoGetRewardRsp::IsInitialized() const {

  return true;
}

void TActWeeklyFundAutoGetRewardRsp::Swap(TActWeeklyFundAutoGetRewardRsp* other) {
  if (other != this) {
    actidrewardarr_.Swap(&other->actidrewardarr_);
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundAutoGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundAutoGetRewardRsp_descriptor_;
  metadata.reflection = TActWeeklyFundAutoGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActWeeklyFundNotify::kSignArrFieldNumber;
#endif  // !_MSC_VER

TActWeeklyFundNotify::TActWeeklyFundNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActWeeklyFundNotify)
}

void TActWeeklyFundNotify::InitAsDefaultInstance() {
  signarr_ = const_cast< ::pb::TActWeeklyFundSignInfo*>(&::pb::TActWeeklyFundSignInfo::default_instance());
}

TActWeeklyFundNotify::TActWeeklyFundNotify(const TActWeeklyFundNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActWeeklyFundNotify)
}

void TActWeeklyFundNotify::SharedCtor() {
  _cached_size_ = 0;
  signarr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActWeeklyFundNotify::~TActWeeklyFundNotify() {
  // @@protoc_insertion_point(destructor:pb.TActWeeklyFundNotify)
  SharedDtor();
}

void TActWeeklyFundNotify::SharedDtor() {
  if (this != default_instance_) {
    delete signarr_;
  }
}

void TActWeeklyFundNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActWeeklyFundNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActWeeklyFundNotify_descriptor_;
}

const TActWeeklyFundNotify& TActWeeklyFundNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActWeeklyFund_2eproto();
  return *default_instance_;
}

TActWeeklyFundNotify* TActWeeklyFundNotify::default_instance_ = NULL;

TActWeeklyFundNotify* TActWeeklyFundNotify::New() const {
  return new TActWeeklyFundNotify;
}

void TActWeeklyFundNotify::Clear() {
  if (has_signarr()) {
    if (signarr_ != NULL) signarr_->::pb::TActWeeklyFundSignInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActWeeklyFundNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActWeeklyFundNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TActWeeklyFundSignInfo SignArr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_signarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActWeeklyFundNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActWeeklyFundNotify)
  return false;
#undef DO_
}

void TActWeeklyFundNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActWeeklyFundNotify)
  // optional .pb.TActWeeklyFundSignInfo SignArr = 1;
  if (has_signarr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->signarr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActWeeklyFundNotify)
}

::google::protobuf::uint8* TActWeeklyFundNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActWeeklyFundNotify)
  // optional .pb.TActWeeklyFundSignInfo SignArr = 1;
  if (has_signarr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->signarr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActWeeklyFundNotify)
  return target;
}

int TActWeeklyFundNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TActWeeklyFundSignInfo SignArr = 1;
    if (has_signarr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->signarr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActWeeklyFundNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActWeeklyFundNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActWeeklyFundNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActWeeklyFundNotify::MergeFrom(const TActWeeklyFundNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_signarr()) {
      mutable_signarr()->::pb::TActWeeklyFundSignInfo::MergeFrom(from.signarr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActWeeklyFundNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActWeeklyFundNotify::CopyFrom(const TActWeeklyFundNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActWeeklyFundNotify::IsInitialized() const {

  return true;
}

void TActWeeklyFundNotify::Swap(TActWeeklyFundNotify* other) {
  if (other != this) {
    std::swap(signarr_, other->signarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActWeeklyFundNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActWeeklyFundNotify_descriptor_;
  metadata.reflection = TActWeeklyFundNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
