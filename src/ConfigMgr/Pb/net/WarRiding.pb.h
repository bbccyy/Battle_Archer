// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/WarRiding.proto

#ifndef PROTOBUF_net_2fWarRiding_2eproto__INCLUDED
#define PROTOBUF_net_2fWarRiding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Common.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fWarRiding_2eproto();
void protobuf_AssignDesc_net_2fWarRiding_2eproto();
void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

class TWarRidingSingle;
class TOtherWarRidingInfo;
class TWarRidingGetInfoRsp;
class TWarRidingCombineWarRidingReq;
class TWarRidingLevelUpReq;
class TWarRidingStarUpReq;
class TWarRidingAdvanceReq;
class TNewWarRidingNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TWarRidingSingle</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingSingle : public ::google::protobuf::Message {
 public:
  TWarRidingSingle();
  virtual ~TWarRidingSingle();

  TWarRidingSingle(const TWarRidingSingle& from);

  inline TWarRidingSingle& operator=(const TWarRidingSingle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingSingle& default_instance();

  void Swap(TWarRidingSingle* other);

  // implements Message ----------------------------------------------

  TWarRidingSingle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingSingle& from);
  void MergeFrom(const TWarRidingSingle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingSingle</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingSingle</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingSingle</name>
  	<Function>
  		<name>exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 AdvLv = 4;
  inline bool has_advlv() const;
  inline void clear_advlv();
  static const int kAdvLvFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingSingle</name>
  	<Function>
  		<name>advlv</name>
  		<replaceName>AdvLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_advlv</name>
  		<replaceName>AdvLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_advlv</name>
  		<replaceName>AdvLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 advlv() const;
  inline void set_advlv(::google::protobuf::uint32 value);

  // optional uint32 Star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingSingle</name>
  	<Function>
  		<name>star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingSingle)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_advlv();
  inline void clear_has_advlv();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 advlv_;
  ::google::protobuf::uint32 star_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingSingle* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOtherWarRidingInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOtherWarRidingInfo : public ::google::protobuf::Message {
 public:
  TOtherWarRidingInfo();
  virtual ~TOtherWarRidingInfo();

  TOtherWarRidingInfo(const TOtherWarRidingInfo& from);

  inline TOtherWarRidingInfo& operator=(const TOtherWarRidingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOtherWarRidingInfo& default_instance();

  void Swap(TOtherWarRidingInfo* other);

  // implements Message ----------------------------------------------

  TOtherWarRidingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOtherWarRidingInfo& from);
  void MergeFrom(const TOtherWarRidingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWarRidingSingle WarRidingArray = 1;
  inline int warridingarray_size() const;
  inline void clear_warridingarray();
  static const int kWarRidingArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOtherWarRidingInfo</name>
  	<Function>
  		<name>warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>warridingarray_size</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWarRidingSingle& warridingarray(int index) const;
  inline ::pb::TWarRidingSingle* mutable_warridingarray(int index);
  inline ::pb::TWarRidingSingle* add_warridingarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >&
      warridingarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >*
      mutable_warridingarray();

  // @@protoc_insertion_point(class_scope:pb.TOtherWarRidingInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle > warridingarray_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TOtherWarRidingInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingGetInfoRsp : public ::google::protobuf::Message {
 public:
  TWarRidingGetInfoRsp();
  virtual ~TWarRidingGetInfoRsp();

  TWarRidingGetInfoRsp(const TWarRidingGetInfoRsp& from);

  inline TWarRidingGetInfoRsp& operator=(const TWarRidingGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingGetInfoRsp& default_instance();

  void Swap(TWarRidingGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TWarRidingGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingGetInfoRsp& from);
  void MergeFrom(const TWarRidingGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWarRidingSingle WarRidingArray = 1;
  inline int warridingarray_size() const;
  inline void clear_warridingarray();
  static const int kWarRidingArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingGetInfoRsp</name>
  	<Function>
  		<name>warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>warridingarray_size</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWarRidingSingle& warridingarray(int index) const;
  inline ::pb::TWarRidingSingle* mutable_warridingarray(int index);
  inline ::pb::TWarRidingSingle* add_warridingarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >&
      warridingarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >*
      mutable_warridingarray();

  // @@protoc_insertion_point(class_scope:pb.TWarRidingGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle > warridingarray_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingCombineWarRidingReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingCombineWarRidingReq : public ::google::protobuf::Message {
 public:
  TWarRidingCombineWarRidingReq();
  virtual ~TWarRidingCombineWarRidingReq();

  TWarRidingCombineWarRidingReq(const TWarRidingCombineWarRidingReq& from);

  inline TWarRidingCombineWarRidingReq& operator=(const TWarRidingCombineWarRidingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingCombineWarRidingReq& default_instance();

  void Swap(TWarRidingCombineWarRidingReq* other);

  // implements Message ----------------------------------------------

  TWarRidingCombineWarRidingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingCombineWarRidingReq& from);
  void MergeFrom(const TWarRidingCombineWarRidingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingCombineWarRidingReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingCombineWarRidingReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingCombineWarRidingReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingLevelUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingLevelUpReq : public ::google::protobuf::Message {
 public:
  TWarRidingLevelUpReq();
  virtual ~TWarRidingLevelUpReq();

  TWarRidingLevelUpReq(const TWarRidingLevelUpReq& from);

  inline TWarRidingLevelUpReq& operator=(const TWarRidingLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingLevelUpReq& default_instance();

  void Swap(TWarRidingLevelUpReq* other);

  // implements Message ----------------------------------------------

  TWarRidingLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingLevelUpReq& from);
  void MergeFrom(const TWarRidingLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingLevelUpReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem LevelUpItemArray = 2;
  inline int levelupitemarray_size() const;
  inline void clear_levelupitemarray();
  static const int kLevelUpItemArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingLevelUpReq</name>
  	<Function>
  		<name>levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>levelupitemarray_size</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& levelupitemarray(int index) const;
  inline ::pb::TSimpleItem* mutable_levelupitemarray(int index);
  inline ::pb::TSimpleItem* add_levelupitemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      levelupitemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_levelupitemarray();

  // @@protoc_insertion_point(class_scope:pb.TWarRidingLevelUpReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > levelupitemarray_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingStarUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingStarUpReq : public ::google::protobuf::Message {
 public:
  TWarRidingStarUpReq();
  virtual ~TWarRidingStarUpReq();

  TWarRidingStarUpReq(const TWarRidingStarUpReq& from);

  inline TWarRidingStarUpReq& operator=(const TWarRidingStarUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingStarUpReq& default_instance();

  void Swap(TWarRidingStarUpReq* other);

  // implements Message ----------------------------------------------

  TWarRidingStarUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingStarUpReq& from);
  void MergeFrom(const TWarRidingStarUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingStarUpReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingStarUpReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingStarUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingAdvanceReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingAdvanceReq : public ::google::protobuf::Message {
 public:
  TWarRidingAdvanceReq();
  virtual ~TWarRidingAdvanceReq();

  TWarRidingAdvanceReq(const TWarRidingAdvanceReq& from);

  inline TWarRidingAdvanceReq& operator=(const TWarRidingAdvanceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingAdvanceReq& default_instance();

  void Swap(TWarRidingAdvanceReq* other);

  // implements Message ----------------------------------------------

  TWarRidingAdvanceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingAdvanceReq& from);
  void MergeFrom(const TWarRidingAdvanceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingAdvanceReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 UpNum = 2;
  inline bool has_upnum() const;
  inline void clear_upnum();
  static const int kUpNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingAdvanceReq</name>
  	<Function>
  		<name>upnum</name>
  		<replaceName>UpNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_upnum</name>
  		<replaceName>UpNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_upnum</name>
  		<replaceName>UpNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 upnum() const;
  inline void set_upnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingAdvanceReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_upnum();
  inline void clear_has_upnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 upnum_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingAdvanceReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TNewWarRidingNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRiding.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TNewWarRidingNotify : public ::google::protobuf::Message {
 public:
  TNewWarRidingNotify();
  virtual ~TNewWarRidingNotify();

  TNewWarRidingNotify(const TNewWarRidingNotify& from);

  inline TNewWarRidingNotify& operator=(const TNewWarRidingNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TNewWarRidingNotify& default_instance();

  void Swap(TNewWarRidingNotify* other);

  // implements Message ----------------------------------------------

  TNewWarRidingNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TNewWarRidingNotify& from);
  void MergeFrom(const TNewWarRidingNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWarRidingSingle WarRidingArray = 1;
  inline int warridingarray_size() const;
  inline void clear_warridingarray();
  static const int kWarRidingArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TNewWarRidingNotify</name>
  	<Function>
  		<name>warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridingarray</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>warridingarray_size</name>
  		<replaceName>WarRidingArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWarRidingSingle& warridingarray(int index) const;
  inline ::pb::TWarRidingSingle* mutable_warridingarray(int index);
  inline ::pb::TWarRidingSingle* add_warridingarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >&
      warridingarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >*
      mutable_warridingarray();

  // @@protoc_insertion_point(class_scope:pb.TNewWarRidingNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle > warridingarray_;
  friend void  protobuf_AddDesc_net_2fWarRiding_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRiding_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRiding_2eproto();

  void InitAsDefaultInstance();
  static TNewWarRidingNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TWarRidingSingle

// optional uint32 Tid = 1;
inline bool TWarRidingSingle::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingSingle::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingSingle::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingSingle::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TWarRidingSingle::tid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingSingle.Tid)
  return tid_;
}
inline void TWarRidingSingle::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingSingle.Tid)
}

// optional uint32 Level = 2;
inline bool TWarRidingSingle::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWarRidingSingle::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWarRidingSingle::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWarRidingSingle::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TWarRidingSingle::level() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingSingle.Level)
  return level_;
}
inline void TWarRidingSingle::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingSingle.Level)
}

// optional uint32 Exp = 3;
inline bool TWarRidingSingle::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWarRidingSingle::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWarRidingSingle::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWarRidingSingle::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 TWarRidingSingle::exp() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingSingle.Exp)
  return exp_;
}
inline void TWarRidingSingle::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingSingle.Exp)
}

// optional uint32 AdvLv = 4;
inline bool TWarRidingSingle::has_advlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TWarRidingSingle::set_has_advlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TWarRidingSingle::clear_has_advlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TWarRidingSingle::clear_advlv() {
  advlv_ = 0u;
  clear_has_advlv();
}
inline ::google::protobuf::uint32 TWarRidingSingle::advlv() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingSingle.AdvLv)
  return advlv_;
}
inline void TWarRidingSingle::set_advlv(::google::protobuf::uint32 value) {
  set_has_advlv();
  advlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingSingle.AdvLv)
}

// optional uint32 Star = 5;
inline bool TWarRidingSingle::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TWarRidingSingle::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TWarRidingSingle::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TWarRidingSingle::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 TWarRidingSingle::star() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingSingle.Star)
  return star_;
}
inline void TWarRidingSingle::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingSingle.Star)
}

// -------------------------------------------------------------------

// TOtherWarRidingInfo

// repeated .pb.TWarRidingSingle WarRidingArray = 1;
inline int TOtherWarRidingInfo::warridingarray_size() const {
  return warridingarray_.size();
}
inline void TOtherWarRidingInfo::clear_warridingarray() {
  warridingarray_.Clear();
}
inline const ::pb::TWarRidingSingle& TOtherWarRidingInfo::warridingarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOtherWarRidingInfo.WarRidingArray)
  return warridingarray_.Get(index);
}
inline ::pb::TWarRidingSingle* TOtherWarRidingInfo::mutable_warridingarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOtherWarRidingInfo.WarRidingArray)
  return warridingarray_.Mutable(index);
}
inline ::pb::TWarRidingSingle* TOtherWarRidingInfo::add_warridingarray() {
  // @@protoc_insertion_point(field_add:pb.TOtherWarRidingInfo.WarRidingArray)
  return warridingarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >&
TOtherWarRidingInfo::warridingarray() const {
  // @@protoc_insertion_point(field_list:pb.TOtherWarRidingInfo.WarRidingArray)
  return warridingarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >*
TOtherWarRidingInfo::mutable_warridingarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOtherWarRidingInfo.WarRidingArray)
  return &warridingarray_;
}

// -------------------------------------------------------------------

// TWarRidingGetInfoRsp

// repeated .pb.TWarRidingSingle WarRidingArray = 1;
inline int TWarRidingGetInfoRsp::warridingarray_size() const {
  return warridingarray_.size();
}
inline void TWarRidingGetInfoRsp::clear_warridingarray() {
  warridingarray_.Clear();
}
inline const ::pb::TWarRidingSingle& TWarRidingGetInfoRsp::warridingarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingGetInfoRsp.WarRidingArray)
  return warridingarray_.Get(index);
}
inline ::pb::TWarRidingSingle* TWarRidingGetInfoRsp::mutable_warridingarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWarRidingGetInfoRsp.WarRidingArray)
  return warridingarray_.Mutable(index);
}
inline ::pb::TWarRidingSingle* TWarRidingGetInfoRsp::add_warridingarray() {
  // @@protoc_insertion_point(field_add:pb.TWarRidingGetInfoRsp.WarRidingArray)
  return warridingarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >&
TWarRidingGetInfoRsp::warridingarray() const {
  // @@protoc_insertion_point(field_list:pb.TWarRidingGetInfoRsp.WarRidingArray)
  return warridingarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >*
TWarRidingGetInfoRsp::mutable_warridingarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWarRidingGetInfoRsp.WarRidingArray)
  return &warridingarray_;
}

// -------------------------------------------------------------------

// TWarRidingCombineWarRidingReq

// optional uint32 Tid = 1;
inline bool TWarRidingCombineWarRidingReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingCombineWarRidingReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingCombineWarRidingReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingCombineWarRidingReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TWarRidingCombineWarRidingReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingCombineWarRidingReq.Tid)
  return tid_;
}
inline void TWarRidingCombineWarRidingReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingCombineWarRidingReq.Tid)
}

// -------------------------------------------------------------------

// TWarRidingLevelUpReq

// optional uint32 Tid = 1;
inline bool TWarRidingLevelUpReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingLevelUpReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingLevelUpReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingLevelUpReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TWarRidingLevelUpReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingLevelUpReq.Tid)
  return tid_;
}
inline void TWarRidingLevelUpReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingLevelUpReq.Tid)
}

// repeated .pb.TSimpleItem LevelUpItemArray = 2;
inline int TWarRidingLevelUpReq::levelupitemarray_size() const {
  return levelupitemarray_.size();
}
inline void TWarRidingLevelUpReq::clear_levelupitemarray() {
  levelupitemarray_.Clear();
}
inline const ::pb::TSimpleItem& TWarRidingLevelUpReq::levelupitemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingLevelUpReq.LevelUpItemArray)
  return levelupitemarray_.Get(index);
}
inline ::pb::TSimpleItem* TWarRidingLevelUpReq::mutable_levelupitemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWarRidingLevelUpReq.LevelUpItemArray)
  return levelupitemarray_.Mutable(index);
}
inline ::pb::TSimpleItem* TWarRidingLevelUpReq::add_levelupitemarray() {
  // @@protoc_insertion_point(field_add:pb.TWarRidingLevelUpReq.LevelUpItemArray)
  return levelupitemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
TWarRidingLevelUpReq::levelupitemarray() const {
  // @@protoc_insertion_point(field_list:pb.TWarRidingLevelUpReq.LevelUpItemArray)
  return levelupitemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
TWarRidingLevelUpReq::mutable_levelupitemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWarRidingLevelUpReq.LevelUpItemArray)
  return &levelupitemarray_;
}

// -------------------------------------------------------------------

// TWarRidingStarUpReq

// optional uint32 Tid = 1;
inline bool TWarRidingStarUpReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingStarUpReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingStarUpReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingStarUpReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TWarRidingStarUpReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingStarUpReq.Tid)
  return tid_;
}
inline void TWarRidingStarUpReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingStarUpReq.Tid)
}

// -------------------------------------------------------------------

// TWarRidingAdvanceReq

// optional uint32 Tid = 1;
inline bool TWarRidingAdvanceReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingAdvanceReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingAdvanceReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingAdvanceReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TWarRidingAdvanceReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingAdvanceReq.Tid)
  return tid_;
}
inline void TWarRidingAdvanceReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingAdvanceReq.Tid)
}

// optional uint32 UpNum = 2;
inline bool TWarRidingAdvanceReq::has_upnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWarRidingAdvanceReq::set_has_upnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWarRidingAdvanceReq::clear_has_upnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWarRidingAdvanceReq::clear_upnum() {
  upnum_ = 0u;
  clear_has_upnum();
}
inline ::google::protobuf::uint32 TWarRidingAdvanceReq::upnum() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingAdvanceReq.UpNum)
  return upnum_;
}
inline void TWarRidingAdvanceReq::set_upnum(::google::protobuf::uint32 value) {
  set_has_upnum();
  upnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingAdvanceReq.UpNum)
}

// -------------------------------------------------------------------

// TNewWarRidingNotify

// repeated .pb.TWarRidingSingle WarRidingArray = 1;
inline int TNewWarRidingNotify::warridingarray_size() const {
  return warridingarray_.size();
}
inline void TNewWarRidingNotify::clear_warridingarray() {
  warridingarray_.Clear();
}
inline const ::pb::TWarRidingSingle& TNewWarRidingNotify::warridingarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TNewWarRidingNotify.WarRidingArray)
  return warridingarray_.Get(index);
}
inline ::pb::TWarRidingSingle* TNewWarRidingNotify::mutable_warridingarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TNewWarRidingNotify.WarRidingArray)
  return warridingarray_.Mutable(index);
}
inline ::pb::TWarRidingSingle* TNewWarRidingNotify::add_warridingarray() {
  // @@protoc_insertion_point(field_add:pb.TNewWarRidingNotify.WarRidingArray)
  return warridingarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >&
TNewWarRidingNotify::warridingarray() const {
  // @@protoc_insertion_point(field_list:pb.TNewWarRidingNotify.WarRidingArray)
  return warridingarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingSingle >*
TNewWarRidingNotify::mutable_warridingarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TNewWarRidingNotify.WarRidingArray)
  return &warridingarray_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fWarRiding_2eproto__INCLUDED
