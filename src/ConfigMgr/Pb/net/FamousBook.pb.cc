// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FamousBook.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/FamousBook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TFamousBookGetFamousBookSlotNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFamousBookGetFamousBookSlotNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFamousBookGetFamousBookSingleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFamousBookGetFamousBookSingleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFamousBookGetFamousBookInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFamousBookGetFamousBookInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFamousBookLightUpOrExtinguishedSlotNodeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFamousBookLightUpOrExtinguishedSlotNodeReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EItemType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fFamousBook_2eproto() {
  protobuf_AddDesc_net_2fFamousBook_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/FamousBook.proto");
  GOOGLE_CHECK(file != NULL);
  TFamousBookGetFamousBookSlotNode_descriptor_ = file->message_type(0);
  static const int TFamousBookGetFamousBookSlotNode_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSlotNode, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSlotNode, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSlotNode, type_),
  };
  TFamousBookGetFamousBookSlotNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFamousBookGetFamousBookSlotNode_descriptor_,
      TFamousBookGetFamousBookSlotNode::default_instance_,
      TFamousBookGetFamousBookSlotNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSlotNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSlotNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFamousBookGetFamousBookSlotNode));
  TFamousBookGetFamousBookSingleInfo_descriptor_ = file->message_type(1);
  static const int TFamousBookGetFamousBookSingleInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSingleInfo, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSingleInfo, slotnodearr_),
  };
  TFamousBookGetFamousBookSingleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFamousBookGetFamousBookSingleInfo_descriptor_,
      TFamousBookGetFamousBookSingleInfo::default_instance_,
      TFamousBookGetFamousBookSingleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSingleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookSingleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFamousBookGetFamousBookSingleInfo));
  TFamousBookGetFamousBookInfoRsp_descriptor_ = file->message_type(2);
  static const int TFamousBookGetFamousBookInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookInfoRsp, bookinfoarr_),
  };
  TFamousBookGetFamousBookInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFamousBookGetFamousBookInfoRsp_descriptor_,
      TFamousBookGetFamousBookInfoRsp::default_instance_,
      TFamousBookGetFamousBookInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookGetFamousBookInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFamousBookGetFamousBookInfoRsp));
  TFamousBookLightUpOrExtinguishedSlotNodeReq_descriptor_ = file->message_type(3);
  static const int TFamousBookLightUpOrExtinguishedSlotNodeReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookLightUpOrExtinguishedSlotNodeReq, bookindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookLightUpOrExtinguishedSlotNodeReq, slotnodeindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookLightUpOrExtinguishedSlotNodeReq, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookLightUpOrExtinguishedSlotNodeReq, type_),
  };
  TFamousBookLightUpOrExtinguishedSlotNodeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFamousBookLightUpOrExtinguishedSlotNodeReq_descriptor_,
      TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance_,
      TFamousBookLightUpOrExtinguishedSlotNodeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookLightUpOrExtinguishedSlotNodeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFamousBookLightUpOrExtinguishedSlotNodeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFamousBookLightUpOrExtinguishedSlotNodeReq));
  EItemType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fFamousBook_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFamousBookGetFamousBookSlotNode_descriptor_, &TFamousBookGetFamousBookSlotNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFamousBookGetFamousBookSingleInfo_descriptor_, &TFamousBookGetFamousBookSingleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFamousBookGetFamousBookInfoRsp_descriptor_, &TFamousBookGetFamousBookInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFamousBookLightUpOrExtinguishedSlotNodeReq_descriptor_, &TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fFamousBook_2eproto() {
  delete TFamousBookGetFamousBookSlotNode::default_instance_;
  delete TFamousBookGetFamousBookSlotNode_reflection_;
  delete TFamousBookGetFamousBookSingleInfo::default_instance_;
  delete TFamousBookGetFamousBookSingleInfo_reflection_;
  delete TFamousBookGetFamousBookInfoRsp::default_instance_;
  delete TFamousBookGetFamousBookInfoRsp_reflection_;
  delete TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance_;
  delete TFamousBookLightUpOrExtinguishedSlotNodeReq_reflection_;
}

void protobuf_AddDesc_net_2fFamousBook_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024net/FamousBook.proto\022\002pb\"[\n TFamousBoo"
    "kGetFamousBookSlotNode\022\r\n\005Index\030\001 \001(\r\022\013\n"
    "\003Tid\030\002 \001(\r\022\033\n\004Type\030\003 \001(\0162\r.pb.EItemType\""
    "n\n\"TFamousBookGetFamousBookSingleInfo\022\r\n"
    "\005Index\030\001 \001(\r\0229\n\013SlotNodeArr\030\002 \003(\0132$.pb.T"
    "FamousBookGetFamousBookSlotNode\"^\n\037TFamo"
    "usBookGetFamousBookInfoRsp\022;\n\013BookInfoAr"
    "r\030\001 \003(\0132&.pb.TFamousBookGetFamousBookSin"
    "gleInfo\"\201\001\n+TFamousBookLightUpOrExtingui"
    "shedSlotNodeReq\022\021\n\tBookIndex\030\001 \001(\r\022\025\n\rSl"
    "otNodeIndex\030\002 \001(\r\022\013\n\003Tid\030\003 \001(\r\022\033\n\004Type\030\004"
    " \001(\0162\r.pb.EItemType*.\n\tEItemType\022\013\n\007FASH"
    "ION\020\001\022\t\n\005MOUNT\020\002\022\t\n\005TITLE\020\003", 507);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/FamousBook.proto", &protobuf_RegisterTypes);
  TFamousBookGetFamousBookSlotNode::default_instance_ = new TFamousBookGetFamousBookSlotNode();
  TFamousBookGetFamousBookSingleInfo::default_instance_ = new TFamousBookGetFamousBookSingleInfo();
  TFamousBookGetFamousBookInfoRsp::default_instance_ = new TFamousBookGetFamousBookInfoRsp();
  TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance_ = new TFamousBookLightUpOrExtinguishedSlotNodeReq();
  TFamousBookGetFamousBookSlotNode::default_instance_->InitAsDefaultInstance();
  TFamousBookGetFamousBookSingleInfo::default_instance_->InitAsDefaultInstance();
  TFamousBookGetFamousBookInfoRsp::default_instance_->InitAsDefaultInstance();
  TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fFamousBook_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fFamousBook_2eproto {
  StaticDescriptorInitializer_net_2fFamousBook_2eproto() {
    protobuf_AddDesc_net_2fFamousBook_2eproto();
  }
} static_descriptor_initializer_net_2fFamousBook_2eproto_;
const ::google::protobuf::EnumDescriptor* EItemType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EItemType_descriptor_;
}
bool EItemType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TFamousBookGetFamousBookSlotNode::kIndexFieldNumber;
const int TFamousBookGetFamousBookSlotNode::kTidFieldNumber;
const int TFamousBookGetFamousBookSlotNode::kTypeFieldNumber;
#endif  // !_MSC_VER

TFamousBookGetFamousBookSlotNode::TFamousBookGetFamousBookSlotNode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFamousBookGetFamousBookSlotNode)
}

void TFamousBookGetFamousBookSlotNode::InitAsDefaultInstance() {
}

TFamousBookGetFamousBookSlotNode::TFamousBookGetFamousBookSlotNode(const TFamousBookGetFamousBookSlotNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFamousBookGetFamousBookSlotNode)
}

void TFamousBookGetFamousBookSlotNode::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  tid_ = 0u;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFamousBookGetFamousBookSlotNode::~TFamousBookGetFamousBookSlotNode() {
  // @@protoc_insertion_point(destructor:pb.TFamousBookGetFamousBookSlotNode)
  SharedDtor();
}

void TFamousBookGetFamousBookSlotNode::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFamousBookGetFamousBookSlotNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFamousBookGetFamousBookSlotNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFamousBookGetFamousBookSlotNode_descriptor_;
}

const TFamousBookGetFamousBookSlotNode& TFamousBookGetFamousBookSlotNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFamousBook_2eproto();
  return *default_instance_;
}

TFamousBookGetFamousBookSlotNode* TFamousBookGetFamousBookSlotNode::default_instance_ = NULL;

TFamousBookGetFamousBookSlotNode* TFamousBookGetFamousBookSlotNode::New() const {
  return new TFamousBookGetFamousBookSlotNode;
}

void TFamousBookGetFamousBookSlotNode::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFamousBookGetFamousBookSlotNode*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(index_, tid_);
    type_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFamousBookGetFamousBookSlotNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFamousBookGetFamousBookSlotNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Tid;
        break;
      }

      // optional uint32 Tid = 2;
      case 2: {
        if (tag == 16) {
         parse_Tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Type;
        break;
      }

      // optional .pb.EItemType Type = 3;
      case 3: {
        if (tag == 24) {
         parse_Type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EItemType_IsValid(value)) {
            set_type(static_cast< ::pb::EItemType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFamousBookGetFamousBookSlotNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFamousBookGetFamousBookSlotNode)
  return false;
#undef DO_
}

void TFamousBookGetFamousBookSlotNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFamousBookGetFamousBookSlotNode)
  // optional uint32 Index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tid(), output);
  }

  // optional .pb.EItemType Type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFamousBookGetFamousBookSlotNode)
}

::google::protobuf::uint8* TFamousBookGetFamousBookSlotNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFamousBookGetFamousBookSlotNode)
  // optional uint32 Index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tid(), target);
  }

  // optional .pb.EItemType Type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFamousBookGetFamousBookSlotNode)
  return target;
}

int TFamousBookGetFamousBookSlotNode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // optional uint32 Tid = 2;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional .pb.EItemType Type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFamousBookGetFamousBookSlotNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFamousBookGetFamousBookSlotNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFamousBookGetFamousBookSlotNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFamousBookGetFamousBookSlotNode::MergeFrom(const TFamousBookGetFamousBookSlotNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFamousBookGetFamousBookSlotNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFamousBookGetFamousBookSlotNode::CopyFrom(const TFamousBookGetFamousBookSlotNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFamousBookGetFamousBookSlotNode::IsInitialized() const {

  return true;
}

void TFamousBookGetFamousBookSlotNode::Swap(TFamousBookGetFamousBookSlotNode* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(tid_, other->tid_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFamousBookGetFamousBookSlotNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFamousBookGetFamousBookSlotNode_descriptor_;
  metadata.reflection = TFamousBookGetFamousBookSlotNode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFamousBookGetFamousBookSingleInfo::kIndexFieldNumber;
const int TFamousBookGetFamousBookSingleInfo::kSlotNodeArrFieldNumber;
#endif  // !_MSC_VER

TFamousBookGetFamousBookSingleInfo::TFamousBookGetFamousBookSingleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFamousBookGetFamousBookSingleInfo)
}

void TFamousBookGetFamousBookSingleInfo::InitAsDefaultInstance() {
}

TFamousBookGetFamousBookSingleInfo::TFamousBookGetFamousBookSingleInfo(const TFamousBookGetFamousBookSingleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFamousBookGetFamousBookSingleInfo)
}

void TFamousBookGetFamousBookSingleInfo::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFamousBookGetFamousBookSingleInfo::~TFamousBookGetFamousBookSingleInfo() {
  // @@protoc_insertion_point(destructor:pb.TFamousBookGetFamousBookSingleInfo)
  SharedDtor();
}

void TFamousBookGetFamousBookSingleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFamousBookGetFamousBookSingleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFamousBookGetFamousBookSingleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFamousBookGetFamousBookSingleInfo_descriptor_;
}

const TFamousBookGetFamousBookSingleInfo& TFamousBookGetFamousBookSingleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFamousBook_2eproto();
  return *default_instance_;
}

TFamousBookGetFamousBookSingleInfo* TFamousBookGetFamousBookSingleInfo::default_instance_ = NULL;

TFamousBookGetFamousBookSingleInfo* TFamousBookGetFamousBookSingleInfo::New() const {
  return new TFamousBookGetFamousBookSingleInfo;
}

void TFamousBookGetFamousBookSingleInfo::Clear() {
  index_ = 0u;
  slotnodearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFamousBookGetFamousBookSingleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFamousBookGetFamousBookSingleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SlotNodeArr;
        break;
      }

      // repeated .pb.TFamousBookGetFamousBookSlotNode SlotNodeArr = 2;
      case 2: {
        if (tag == 18) {
         parse_SlotNodeArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slotnodearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SlotNodeArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFamousBookGetFamousBookSingleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFamousBookGetFamousBookSingleInfo)
  return false;
#undef DO_
}

void TFamousBookGetFamousBookSingleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFamousBookGetFamousBookSingleInfo)
  // optional uint32 Index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // repeated .pb.TFamousBookGetFamousBookSlotNode SlotNodeArr = 2;
  for (int i = 0; i < this->slotnodearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->slotnodearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFamousBookGetFamousBookSingleInfo)
}

::google::protobuf::uint8* TFamousBookGetFamousBookSingleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFamousBookGetFamousBookSingleInfo)
  // optional uint32 Index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // repeated .pb.TFamousBookGetFamousBookSlotNode SlotNodeArr = 2;
  for (int i = 0; i < this->slotnodearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->slotnodearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFamousBookGetFamousBookSingleInfo)
  return target;
}

int TFamousBookGetFamousBookSingleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  // repeated .pb.TFamousBookGetFamousBookSlotNode SlotNodeArr = 2;
  total_size += 1 * this->slotnodearr_size();
  for (int i = 0; i < this->slotnodearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slotnodearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFamousBookGetFamousBookSingleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFamousBookGetFamousBookSingleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFamousBookGetFamousBookSingleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFamousBookGetFamousBookSingleInfo::MergeFrom(const TFamousBookGetFamousBookSingleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  slotnodearr_.MergeFrom(from.slotnodearr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFamousBookGetFamousBookSingleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFamousBookGetFamousBookSingleInfo::CopyFrom(const TFamousBookGetFamousBookSingleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFamousBookGetFamousBookSingleInfo::IsInitialized() const {

  return true;
}

void TFamousBookGetFamousBookSingleInfo::Swap(TFamousBookGetFamousBookSingleInfo* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    slotnodearr_.Swap(&other->slotnodearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFamousBookGetFamousBookSingleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFamousBookGetFamousBookSingleInfo_descriptor_;
  metadata.reflection = TFamousBookGetFamousBookSingleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFamousBookGetFamousBookInfoRsp::kBookInfoArrFieldNumber;
#endif  // !_MSC_VER

TFamousBookGetFamousBookInfoRsp::TFamousBookGetFamousBookInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFamousBookGetFamousBookInfoRsp)
}

void TFamousBookGetFamousBookInfoRsp::InitAsDefaultInstance() {
}

TFamousBookGetFamousBookInfoRsp::TFamousBookGetFamousBookInfoRsp(const TFamousBookGetFamousBookInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFamousBookGetFamousBookInfoRsp)
}

void TFamousBookGetFamousBookInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFamousBookGetFamousBookInfoRsp::~TFamousBookGetFamousBookInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TFamousBookGetFamousBookInfoRsp)
  SharedDtor();
}

void TFamousBookGetFamousBookInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFamousBookGetFamousBookInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFamousBookGetFamousBookInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFamousBookGetFamousBookInfoRsp_descriptor_;
}

const TFamousBookGetFamousBookInfoRsp& TFamousBookGetFamousBookInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFamousBook_2eproto();
  return *default_instance_;
}

TFamousBookGetFamousBookInfoRsp* TFamousBookGetFamousBookInfoRsp::default_instance_ = NULL;

TFamousBookGetFamousBookInfoRsp* TFamousBookGetFamousBookInfoRsp::New() const {
  return new TFamousBookGetFamousBookInfoRsp;
}

void TFamousBookGetFamousBookInfoRsp::Clear() {
  bookinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFamousBookGetFamousBookInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFamousBookGetFamousBookInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFamousBookGetFamousBookSingleInfo BookInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BookInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bookinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BookInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFamousBookGetFamousBookInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFamousBookGetFamousBookInfoRsp)
  return false;
#undef DO_
}

void TFamousBookGetFamousBookInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFamousBookGetFamousBookInfoRsp)
  // repeated .pb.TFamousBookGetFamousBookSingleInfo BookInfoArr = 1;
  for (int i = 0; i < this->bookinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bookinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFamousBookGetFamousBookInfoRsp)
}

::google::protobuf::uint8* TFamousBookGetFamousBookInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFamousBookGetFamousBookInfoRsp)
  // repeated .pb.TFamousBookGetFamousBookSingleInfo BookInfoArr = 1;
  for (int i = 0; i < this->bookinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bookinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFamousBookGetFamousBookInfoRsp)
  return target;
}

int TFamousBookGetFamousBookInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TFamousBookGetFamousBookSingleInfo BookInfoArr = 1;
  total_size += 1 * this->bookinfoarr_size();
  for (int i = 0; i < this->bookinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bookinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFamousBookGetFamousBookInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFamousBookGetFamousBookInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFamousBookGetFamousBookInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFamousBookGetFamousBookInfoRsp::MergeFrom(const TFamousBookGetFamousBookInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  bookinfoarr_.MergeFrom(from.bookinfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFamousBookGetFamousBookInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFamousBookGetFamousBookInfoRsp::CopyFrom(const TFamousBookGetFamousBookInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFamousBookGetFamousBookInfoRsp::IsInitialized() const {

  return true;
}

void TFamousBookGetFamousBookInfoRsp::Swap(TFamousBookGetFamousBookInfoRsp* other) {
  if (other != this) {
    bookinfoarr_.Swap(&other->bookinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFamousBookGetFamousBookInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFamousBookGetFamousBookInfoRsp_descriptor_;
  metadata.reflection = TFamousBookGetFamousBookInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFamousBookLightUpOrExtinguishedSlotNodeReq::kBookIndexFieldNumber;
const int TFamousBookLightUpOrExtinguishedSlotNodeReq::kSlotNodeIndexFieldNumber;
const int TFamousBookLightUpOrExtinguishedSlotNodeReq::kTidFieldNumber;
const int TFamousBookLightUpOrExtinguishedSlotNodeReq::kTypeFieldNumber;
#endif  // !_MSC_VER

TFamousBookLightUpOrExtinguishedSlotNodeReq::TFamousBookLightUpOrExtinguishedSlotNodeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::InitAsDefaultInstance() {
}

TFamousBookLightUpOrExtinguishedSlotNodeReq::TFamousBookLightUpOrExtinguishedSlotNodeReq(const TFamousBookLightUpOrExtinguishedSlotNodeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::SharedCtor() {
  _cached_size_ = 0;
  bookindex_ = 0u;
  slotnodeindex_ = 0u;
  tid_ = 0u;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFamousBookLightUpOrExtinguishedSlotNodeReq::~TFamousBookLightUpOrExtinguishedSlotNodeReq() {
  // @@protoc_insertion_point(destructor:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  SharedDtor();
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFamousBookLightUpOrExtinguishedSlotNodeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFamousBookLightUpOrExtinguishedSlotNodeReq_descriptor_;
}

const TFamousBookLightUpOrExtinguishedSlotNodeReq& TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFamousBook_2eproto();
  return *default_instance_;
}

TFamousBookLightUpOrExtinguishedSlotNodeReq* TFamousBookLightUpOrExtinguishedSlotNodeReq::default_instance_ = NULL;

TFamousBookLightUpOrExtinguishedSlotNodeReq* TFamousBookLightUpOrExtinguishedSlotNodeReq::New() const {
  return new TFamousBookLightUpOrExtinguishedSlotNodeReq;
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFamousBookLightUpOrExtinguishedSlotNodeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(bookindex_, tid_);
    type_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFamousBookLightUpOrExtinguishedSlotNodeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BookIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bookindex_)));
          set_has_bookindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SlotNodeIndex;
        break;
      }

      // optional uint32 SlotNodeIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_SlotNodeIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotnodeindex_)));
          set_has_slotnodeindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Tid;
        break;
      }

      // optional uint32 Tid = 3;
      case 3: {
        if (tag == 24) {
         parse_Tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Type;
        break;
      }

      // optional .pb.EItemType Type = 4;
      case 4: {
        if (tag == 32) {
         parse_Type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EItemType_IsValid(value)) {
            set_type(static_cast< ::pb::EItemType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  return false;
#undef DO_
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  // optional uint32 BookIndex = 1;
  if (has_bookindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bookindex(), output);
  }

  // optional uint32 SlotNodeIndex = 2;
  if (has_slotnodeindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->slotnodeindex(), output);
  }

  // optional uint32 Tid = 3;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tid(), output);
  }

  // optional .pb.EItemType Type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
}

::google::protobuf::uint8* TFamousBookLightUpOrExtinguishedSlotNodeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  // optional uint32 BookIndex = 1;
  if (has_bookindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bookindex(), target);
  }

  // optional uint32 SlotNodeIndex = 2;
  if (has_slotnodeindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->slotnodeindex(), target);
  }

  // optional uint32 Tid = 3;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tid(), target);
  }

  // optional .pb.EItemType Type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFamousBookLightUpOrExtinguishedSlotNodeReq)
  return target;
}

int TFamousBookLightUpOrExtinguishedSlotNodeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BookIndex = 1;
    if (has_bookindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bookindex());
    }

    // optional uint32 SlotNodeIndex = 2;
    if (has_slotnodeindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slotnodeindex());
    }

    // optional uint32 Tid = 3;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional .pb.EItemType Type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFamousBookLightUpOrExtinguishedSlotNodeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFamousBookLightUpOrExtinguishedSlotNodeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::MergeFrom(const TFamousBookLightUpOrExtinguishedSlotNodeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bookindex()) {
      set_bookindex(from.bookindex());
    }
    if (from.has_slotnodeindex()) {
      set_slotnodeindex(from.slotnodeindex());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::CopyFrom(const TFamousBookLightUpOrExtinguishedSlotNodeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFamousBookLightUpOrExtinguishedSlotNodeReq::IsInitialized() const {

  return true;
}

void TFamousBookLightUpOrExtinguishedSlotNodeReq::Swap(TFamousBookLightUpOrExtinguishedSlotNodeReq* other) {
  if (other != this) {
    std::swap(bookindex_, other->bookindex_);
    std::swap(slotnodeindex_, other->slotnodeindex_);
    std::swap(tid_, other->tid_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFamousBookLightUpOrExtinguishedSlotNodeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFamousBookLightUpOrExtinguishedSlotNodeReq_descriptor_;
  metadata.reflection = TFamousBookLightUpOrExtinguishedSlotNodeReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
