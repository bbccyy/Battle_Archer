// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/OfficialPosition.proto

#ifndef PROTOBUF_net_2fOfficialPosition_2eproto__INCLUDED
#define PROTOBUF_net_2fOfficialPosition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/OpenActivity.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

class TOfficialPositionTaskInfo;
class TOfficialPositionGetInfoRsp;
class TOfficialPositionGetTaskRewardReq;
class TOfficialPositionGetTaskRewardRsp;
class TOfficialPositionGetAllTaskRewardReq;
class TOfficialPositionGetAllTaskRewardRsp;
class TOfficialPositionNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TOfficialPositionTaskInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionTaskInfo : public ::google::protobuf::Message {
 public:
  TOfficialPositionTaskInfo();
  virtual ~TOfficialPositionTaskInfo();

  TOfficialPositionTaskInfo(const TOfficialPositionTaskInfo& from);

  inline TOfficialPositionTaskInfo& operator=(const TOfficialPositionTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionTaskInfo& default_instance();

  void Swap(TOfficialPositionTaskInfo* other);

  // implements Message ----------------------------------------------

  TOfficialPositionTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionTaskInfo& from);
  void MergeFrom(const TOfficialPositionTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TaskType = 1;
  inline bool has_tasktype() const;
  inline void clear_tasktype();
  static const int kTaskTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionTaskInfo</name>
  	<Function>
  		<name>tasktype</name>
  		<replaceName>TaskType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tasktype</name>
  		<replaceName>TaskType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tasktype</name>
  		<replaceName>TaskType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tasktype() const;
  inline void set_tasktype(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionTaskInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionTaskInfo)
 private:
  inline void set_has_tasktype();
  inline void clear_has_tasktype();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tasktype_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOfficialPositionGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOfficialPositionGetInfoRsp();
  virtual ~TOfficialPositionGetInfoRsp();

  TOfficialPositionGetInfoRsp(const TOfficialPositionGetInfoRsp& from);

  inline TOfficialPositionGetInfoRsp& operator=(const TOfficialPositionGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionGetInfoRsp& default_instance();

  void Swap(TOfficialPositionGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOfficialPositionGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionGetInfoRsp& from);
  void MergeFrom(const TOfficialPositionGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PositionId = 1;
  inline bool has_positionid() const;
  inline void clear_positionid();
  static const int kPositionIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetInfoRsp</name>
  	<Function>
  		<name>positionid</name>
  		<replaceName>PositionId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_positionid</name>
  		<replaceName>PositionId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_positionid</name>
  		<replaceName>PositionId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 positionid() const;
  inline void set_positionid(::google::protobuf::uint32 value);

  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 2;
  inline int arrtaskinfo_size() const;
  inline void clear_arrtaskinfo();
  static const int kArrTaskInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetInfoRsp</name>
  	<Function>
  		<name>arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskinfo_size</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOfficialPositionTaskInfo& arrtaskinfo(int index) const;
  inline ::pb::TOfficialPositionTaskInfo* mutable_arrtaskinfo(int index);
  inline ::pb::TOfficialPositionTaskInfo* add_arrtaskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >&
      arrtaskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >*
      mutable_arrtaskinfo();

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
  inline int arrtaskrewardinfo_size() const;
  inline void clear_arrtaskrewardinfo();
  static const int kArrTaskRewardInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetInfoRsp</name>
  	<Function>
  		<name>arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskrewardinfo_size</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrtaskrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrtaskrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrtaskrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrtaskrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrtaskrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionGetInfoRsp)
 private:
  inline void set_has_positionid();
  inline void clear_has_positionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo > arrtaskinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrtaskrewardinfo_;
  ::google::protobuf::uint32 positionid_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOfficialPositionGetTaskRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionGetTaskRewardReq : public ::google::protobuf::Message {
 public:
  TOfficialPositionGetTaskRewardReq();
  virtual ~TOfficialPositionGetTaskRewardReq();

  TOfficialPositionGetTaskRewardReq(const TOfficialPositionGetTaskRewardReq& from);

  inline TOfficialPositionGetTaskRewardReq& operator=(const TOfficialPositionGetTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionGetTaskRewardReq& default_instance();

  void Swap(TOfficialPositionGetTaskRewardReq* other);

  // implements Message ----------------------------------------------

  TOfficialPositionGetTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionGetTaskRewardReq& from);
  void MergeFrom(const TOfficialPositionGetTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TaskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetTaskRewardReq</name>
  	<Function>
  		<name>taskid</name>
  		<replaceName>TaskId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_taskid</name>
  		<replaceName>TaskId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_taskid</name>
  		<replaceName>TaskId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionGetTaskRewardReq)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionGetTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOfficialPositionGetTaskRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionGetTaskRewardRsp : public ::google::protobuf::Message {
 public:
  TOfficialPositionGetTaskRewardRsp();
  virtual ~TOfficialPositionGetTaskRewardRsp();

  TOfficialPositionGetTaskRewardRsp(const TOfficialPositionGetTaskRewardRsp& from);

  inline TOfficialPositionGetTaskRewardRsp& operator=(const TOfficialPositionGetTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionGetTaskRewardRsp& default_instance();

  void Swap(TOfficialPositionGetTaskRewardRsp* other);

  // implements Message ----------------------------------------------

  TOfficialPositionGetTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionGetTaskRewardRsp& from);
  void MergeFrom(const TOfficialPositionGetTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetTaskRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionGetTaskRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionGetTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOfficialPositionGetAllTaskRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionGetAllTaskRewardReq : public ::google::protobuf::Message {
 public:
  TOfficialPositionGetAllTaskRewardReq();
  virtual ~TOfficialPositionGetAllTaskRewardReq();

  TOfficialPositionGetAllTaskRewardReq(const TOfficialPositionGetAllTaskRewardReq& from);

  inline TOfficialPositionGetAllTaskRewardReq& operator=(const TOfficialPositionGetAllTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionGetAllTaskRewardReq& default_instance();

  void Swap(TOfficialPositionGetAllTaskRewardReq* other);

  // implements Message ----------------------------------------------

  TOfficialPositionGetAllTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionGetAllTaskRewardReq& from);
  void MergeFrom(const TOfficialPositionGetAllTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetAllTaskRewardReq</name>
  	<Function>
  		<name>type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionGetAllTaskRewardReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionGetAllTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOfficialPositionGetAllTaskRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionGetAllTaskRewardRsp : public ::google::protobuf::Message {
 public:
  TOfficialPositionGetAllTaskRewardRsp();
  virtual ~TOfficialPositionGetAllTaskRewardRsp();

  TOfficialPositionGetAllTaskRewardRsp(const TOfficialPositionGetAllTaskRewardRsp& from);

  inline TOfficialPositionGetAllTaskRewardRsp& operator=(const TOfficialPositionGetAllTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionGetAllTaskRewardRsp& default_instance();

  void Swap(TOfficialPositionGetAllTaskRewardRsp* other);

  // implements Message ----------------------------------------------

  TOfficialPositionGetAllTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionGetAllTaskRewardRsp& from);
  void MergeFrom(const TOfficialPositionGetAllTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionGetAllTaskRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionGetAllTaskRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionGetAllTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOfficialPositionNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OfficialPosition.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOfficialPositionNotify : public ::google::protobuf::Message {
 public:
  TOfficialPositionNotify();
  virtual ~TOfficialPositionNotify();

  TOfficialPositionNotify(const TOfficialPositionNotify& from);

  inline TOfficialPositionNotify& operator=(const TOfficialPositionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOfficialPositionNotify& default_instance();

  void Swap(TOfficialPositionNotify* other);

  // implements Message ----------------------------------------------

  TOfficialPositionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOfficialPositionNotify& from);
  void MergeFrom(const TOfficialPositionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 1;
  inline int arrtaskinfo_size() const;
  inline void clear_arrtaskinfo();
  static const int kArrTaskInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOfficialPositionNotify</name>
  	<Function>
  		<name>arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskinfo_size</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOfficialPositionTaskInfo& arrtaskinfo(int index) const;
  inline ::pb::TOfficialPositionTaskInfo* mutable_arrtaskinfo(int index);
  inline ::pb::TOfficialPositionTaskInfo* add_arrtaskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >&
      arrtaskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >*
      mutable_arrtaskinfo();

  // @@protoc_insertion_point(class_scope:pb.TOfficialPositionNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo > arrtaskinfo_;
  friend void  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_AssignDesc_net_2fOfficialPosition_2eproto();
  friend void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto();

  void InitAsDefaultInstance();
  static TOfficialPositionNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TOfficialPositionTaskInfo

// optional uint32 TaskType = 1;
inline bool TOfficialPositionTaskInfo::has_tasktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOfficialPositionTaskInfo::set_has_tasktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOfficialPositionTaskInfo::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOfficialPositionTaskInfo::clear_tasktype() {
  tasktype_ = 0u;
  clear_has_tasktype();
}
inline ::google::protobuf::uint32 TOfficialPositionTaskInfo::tasktype() const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionTaskInfo.TaskType)
  return tasktype_;
}
inline void TOfficialPositionTaskInfo::set_tasktype(::google::protobuf::uint32 value) {
  set_has_tasktype();
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:pb.TOfficialPositionTaskInfo.TaskType)
}

// optional uint32 Num = 2;
inline bool TOfficialPositionTaskInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOfficialPositionTaskInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOfficialPositionTaskInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOfficialPositionTaskInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TOfficialPositionTaskInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionTaskInfo.Num)
  return num_;
}
inline void TOfficialPositionTaskInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TOfficialPositionTaskInfo.Num)
}

// -------------------------------------------------------------------

// TOfficialPositionGetInfoRsp

// optional uint32 PositionId = 1;
inline bool TOfficialPositionGetInfoRsp::has_positionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOfficialPositionGetInfoRsp::set_has_positionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOfficialPositionGetInfoRsp::clear_has_positionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOfficialPositionGetInfoRsp::clear_positionid() {
  positionid_ = 0u;
  clear_has_positionid();
}
inline ::google::protobuf::uint32 TOfficialPositionGetInfoRsp::positionid() const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetInfoRsp.PositionId)
  return positionid_;
}
inline void TOfficialPositionGetInfoRsp::set_positionid(::google::protobuf::uint32 value) {
  set_has_positionid();
  positionid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOfficialPositionGetInfoRsp.PositionId)
}

// repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 2;
inline int TOfficialPositionGetInfoRsp::arrtaskinfo_size() const {
  return arrtaskinfo_.size();
}
inline void TOfficialPositionGetInfoRsp::clear_arrtaskinfo() {
  arrtaskinfo_.Clear();
}
inline const ::pb::TOfficialPositionTaskInfo& TOfficialPositionGetInfoRsp::arrtaskinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Get(index);
}
inline ::pb::TOfficialPositionTaskInfo* TOfficialPositionGetInfoRsp::mutable_arrtaskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOfficialPositionGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Mutable(index);
}
inline ::pb::TOfficialPositionTaskInfo* TOfficialPositionGetInfoRsp::add_arrtaskinfo() {
  // @@protoc_insertion_point(field_add:pb.TOfficialPositionGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >&
TOfficialPositionGetInfoRsp::arrtaskinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOfficialPositionGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >*
TOfficialPositionGetInfoRsp::mutable_arrtaskinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOfficialPositionGetInfoRsp.ArrTaskInfo)
  return &arrtaskinfo_;
}

// repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
inline int TOfficialPositionGetInfoRsp::arrtaskrewardinfo_size() const {
  return arrtaskrewardinfo_.size();
}
inline void TOfficialPositionGetInfoRsp::clear_arrtaskrewardinfo() {
  arrtaskrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOfficialPositionGetInfoRsp::arrtaskrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOfficialPositionGetInfoRsp::mutable_arrtaskrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOfficialPositionGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOfficialPositionGetInfoRsp::add_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOfficialPositionGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOfficialPositionGetInfoRsp::arrtaskrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOfficialPositionGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOfficialPositionGetInfoRsp::mutable_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOfficialPositionGetInfoRsp.ArrTaskRewardInfo)
  return &arrtaskrewardinfo_;
}

// -------------------------------------------------------------------

// TOfficialPositionGetTaskRewardReq

// optional uint32 TaskId = 1;
inline bool TOfficialPositionGetTaskRewardReq::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOfficialPositionGetTaskRewardReq::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOfficialPositionGetTaskRewardReq::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOfficialPositionGetTaskRewardReq::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 TOfficialPositionGetTaskRewardReq::taskid() const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetTaskRewardReq.TaskId)
  return taskid_;
}
inline void TOfficialPositionGetTaskRewardReq::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOfficialPositionGetTaskRewardReq.TaskId)
}

// -------------------------------------------------------------------

// TOfficialPositionGetTaskRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOfficialPositionGetTaskRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOfficialPositionGetTaskRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOfficialPositionGetTaskRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetTaskRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOfficialPositionGetTaskRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOfficialPositionGetTaskRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOfficialPositionGetTaskRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOfficialPositionGetTaskRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOfficialPositionGetTaskRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOfficialPositionGetTaskRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOfficialPositionGetTaskRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOfficialPositionGetTaskRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOfficialPositionGetAllTaskRewardReq

// optional uint32 Type = 1;
inline bool TOfficialPositionGetAllTaskRewardReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOfficialPositionGetAllTaskRewardReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOfficialPositionGetAllTaskRewardReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOfficialPositionGetAllTaskRewardReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TOfficialPositionGetAllTaskRewardReq::type() const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetAllTaskRewardReq.Type)
  return type_;
}
inline void TOfficialPositionGetAllTaskRewardReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.TOfficialPositionGetAllTaskRewardReq.Type)
}

// -------------------------------------------------------------------

// TOfficialPositionGetAllTaskRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOfficialPositionGetAllTaskRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOfficialPositionGetAllTaskRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOfficialPositionGetAllTaskRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionGetAllTaskRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOfficialPositionGetAllTaskRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOfficialPositionGetAllTaskRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOfficialPositionGetAllTaskRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOfficialPositionGetAllTaskRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOfficialPositionGetAllTaskRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOfficialPositionGetAllTaskRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOfficialPositionGetAllTaskRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOfficialPositionGetAllTaskRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOfficialPositionNotify

// repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 1;
inline int TOfficialPositionNotify::arrtaskinfo_size() const {
  return arrtaskinfo_.size();
}
inline void TOfficialPositionNotify::clear_arrtaskinfo() {
  arrtaskinfo_.Clear();
}
inline const ::pb::TOfficialPositionTaskInfo& TOfficialPositionNotify::arrtaskinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOfficialPositionNotify.ArrTaskInfo)
  return arrtaskinfo_.Get(index);
}
inline ::pb::TOfficialPositionTaskInfo* TOfficialPositionNotify::mutable_arrtaskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOfficialPositionNotify.ArrTaskInfo)
  return arrtaskinfo_.Mutable(index);
}
inline ::pb::TOfficialPositionTaskInfo* TOfficialPositionNotify::add_arrtaskinfo() {
  // @@protoc_insertion_point(field_add:pb.TOfficialPositionNotify.ArrTaskInfo)
  return arrtaskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >&
TOfficialPositionNotify::arrtaskinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOfficialPositionNotify.ArrTaskInfo)
  return arrtaskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TOfficialPositionTaskInfo >*
TOfficialPositionNotify::mutable_arrtaskinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOfficialPositionNotify.ArrTaskInfo)
  return &arrtaskinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fOfficialPosition_2eproto__INCLUDED
