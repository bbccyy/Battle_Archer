// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/WarRidingHandbook.proto

#ifndef PROTOBUF_net_2fWarRidingHandbook_2eproto__INCLUDED
#define PROTOBUF_net_2fWarRidingHandbook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

class TWarRidingHandBookInfo;
class TWarRidingHandBookGetInfoRsp;
class TWarRidingHandBookUpgradeReq;
class TWarRidingHandBookUpgradeRsp;
class TWarRidingHandBookActiveReq;
class TWarRidingHandBookActiveRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TWarRidingHandBookInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRidingHandbook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingHandBookInfo : public ::google::protobuf::Message {
 public:
  TWarRidingHandBookInfo();
  virtual ~TWarRidingHandBookInfo();

  TWarRidingHandBookInfo(const TWarRidingHandBookInfo& from);

  inline TWarRidingHandBookInfo& operator=(const TWarRidingHandBookInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingHandBookInfo& default_instance();

  void Swap(TWarRidingHandBookInfo* other);

  // implements Message ----------------------------------------------

  TWarRidingHandBookInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingHandBookInfo& from);
  void MergeFrom(const TWarRidingHandBookInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 WarRidingHandBookId = 1;
  inline bool has_warridinghandbookid() const;
  inline void clear_warridinghandbookid();
  static const int kWarRidingHandBookIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookInfo</name>
  	<Function>
  		<name>warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridinghandbookid() const;
  inline void set_warridinghandbookid(::google::protobuf::uint32 value);

  // optional uint32 WarRidingHandBookLv = 2;
  inline bool has_warridinghandbooklv() const;
  inline void clear_warridinghandbooklv();
  static const int kWarRidingHandBookLvFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookInfo</name>
  	<Function>
  		<name>warridinghandbooklv</name>
  		<replaceName>WarRidingHandBookLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinghandbooklv</name>
  		<replaceName>WarRidingHandBookLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbooklv</name>
  		<replaceName>WarRidingHandBookLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridinghandbooklv() const;
  inline void set_warridinghandbooklv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingHandBookInfo)
 private:
  inline void set_has_warridinghandbookid();
  inline void clear_has_warridinghandbookid();
  inline void set_has_warridinghandbooklv();
  inline void clear_has_warridinghandbooklv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 warridinghandbookid_;
  ::google::protobuf::uint32 warridinghandbooklv_;
  friend void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingHandBookInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingHandBookGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRidingHandbook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingHandBookGetInfoRsp : public ::google::protobuf::Message {
 public:
  TWarRidingHandBookGetInfoRsp();
  virtual ~TWarRidingHandBookGetInfoRsp();

  TWarRidingHandBookGetInfoRsp(const TWarRidingHandBookGetInfoRsp& from);

  inline TWarRidingHandBookGetInfoRsp& operator=(const TWarRidingHandBookGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingHandBookGetInfoRsp& default_instance();

  void Swap(TWarRidingHandBookGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TWarRidingHandBookGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingHandBookGetInfoRsp& from);
  void MergeFrom(const TWarRidingHandBookGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWarRidingHandBookInfo WarRidingHandBookArr = 1;
  inline int warridinghandbookarr_size() const;
  inline void clear_warridinghandbookarr();
  static const int kWarRidingHandBookArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookGetInfoRsp</name>
  	<Function>
  		<name>warridinghandbookarr</name>
  		<replaceName>WarRidingHandBookArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_warridinghandbookarr</name>
  		<replaceName>WarRidingHandBookArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_warridinghandbookarr</name>
  		<replaceName>WarRidingHandBookArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbookarr</name>
  		<replaceName>WarRidingHandBookArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>warridinghandbookarr_size</name>
  		<replaceName>WarRidingHandBookArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWarRidingHandBookInfo& warridinghandbookarr(int index) const;
  inline ::pb::TWarRidingHandBookInfo* mutable_warridinghandbookarr(int index);
  inline ::pb::TWarRidingHandBookInfo* add_warridinghandbookarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingHandBookInfo >&
      warridinghandbookarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingHandBookInfo >*
      mutable_warridinghandbookarr();

  // @@protoc_insertion_point(class_scope:pb.TWarRidingHandBookGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingHandBookInfo > warridinghandbookarr_;
  friend void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingHandBookGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingHandBookUpgradeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRidingHandbook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingHandBookUpgradeReq : public ::google::protobuf::Message {
 public:
  TWarRidingHandBookUpgradeReq();
  virtual ~TWarRidingHandBookUpgradeReq();

  TWarRidingHandBookUpgradeReq(const TWarRidingHandBookUpgradeReq& from);

  inline TWarRidingHandBookUpgradeReq& operator=(const TWarRidingHandBookUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingHandBookUpgradeReq& default_instance();

  void Swap(TWarRidingHandBookUpgradeReq* other);

  // implements Message ----------------------------------------------

  TWarRidingHandBookUpgradeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingHandBookUpgradeReq& from);
  void MergeFrom(const TWarRidingHandBookUpgradeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 WarRidingHandBookId = 1;
  inline bool has_warridinghandbookid() const;
  inline void clear_warridinghandbookid();
  static const int kWarRidingHandBookIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookUpgradeReq</name>
  	<Function>
  		<name>warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridinghandbookid() const;
  inline void set_warridinghandbookid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingHandBookUpgradeReq)
 private:
  inline void set_has_warridinghandbookid();
  inline void clear_has_warridinghandbookid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 warridinghandbookid_;
  friend void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingHandBookUpgradeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingHandBookUpgradeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRidingHandbook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingHandBookUpgradeRsp : public ::google::protobuf::Message {
 public:
  TWarRidingHandBookUpgradeRsp();
  virtual ~TWarRidingHandBookUpgradeRsp();

  TWarRidingHandBookUpgradeRsp(const TWarRidingHandBookUpgradeRsp& from);

  inline TWarRidingHandBookUpgradeRsp& operator=(const TWarRidingHandBookUpgradeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingHandBookUpgradeRsp& default_instance();

  void Swap(TWarRidingHandBookUpgradeRsp* other);

  // implements Message ----------------------------------------------

  TWarRidingHandBookUpgradeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingHandBookUpgradeRsp& from);
  void MergeFrom(const TWarRidingHandBookUpgradeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TWarRidingHandBookInfo WarRidingHandBookInfo = 1;
  inline bool has_warridinghandbookinfo() const;
  inline void clear_warridinghandbookinfo();
  static const int kWarRidingHandBookInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookUpgradeRsp</name>
  	<Function>
  		<name>warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWarRidingHandBookInfo& warridinghandbookinfo() const;
  inline ::pb::TWarRidingHandBookInfo* mutable_warridinghandbookinfo();
  inline ::pb::TWarRidingHandBookInfo* release_warridinghandbookinfo();
  inline void set_allocated_warridinghandbookinfo(::pb::TWarRidingHandBookInfo* warridinghandbookinfo);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingHandBookUpgradeRsp)
 private:
  inline void set_has_warridinghandbookinfo();
  inline void clear_has_warridinghandbookinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TWarRidingHandBookInfo* warridinghandbookinfo_;
  friend void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingHandBookUpgradeRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingHandBookActiveReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRidingHandbook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingHandBookActiveReq : public ::google::protobuf::Message {
 public:
  TWarRidingHandBookActiveReq();
  virtual ~TWarRidingHandBookActiveReq();

  TWarRidingHandBookActiveReq(const TWarRidingHandBookActiveReq& from);

  inline TWarRidingHandBookActiveReq& operator=(const TWarRidingHandBookActiveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingHandBookActiveReq& default_instance();

  void Swap(TWarRidingHandBookActiveReq* other);

  // implements Message ----------------------------------------------

  TWarRidingHandBookActiveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingHandBookActiveReq& from);
  void MergeFrom(const TWarRidingHandBookActiveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 WarRidingHandBookId = 1;
  inline bool has_warridinghandbookid() const;
  inline void clear_warridinghandbookid();
  static const int kWarRidingHandBookIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookActiveReq</name>
  	<Function>
  		<name>warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbookid</name>
  		<replaceName>WarRidingHandBookId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridinghandbookid() const;
  inline void set_warridinghandbookid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingHandBookActiveReq)
 private:
  inline void set_has_warridinghandbookid();
  inline void clear_has_warridinghandbookid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 warridinghandbookid_;
  friend void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingHandBookActiveReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWarRidingHandBookActiveRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WarRidingHandbook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWarRidingHandBookActiveRsp : public ::google::protobuf::Message {
 public:
  TWarRidingHandBookActiveRsp();
  virtual ~TWarRidingHandBookActiveRsp();

  TWarRidingHandBookActiveRsp(const TWarRidingHandBookActiveRsp& from);

  inline TWarRidingHandBookActiveRsp& operator=(const TWarRidingHandBookActiveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWarRidingHandBookActiveRsp& default_instance();

  void Swap(TWarRidingHandBookActiveRsp* other);

  // implements Message ----------------------------------------------

  TWarRidingHandBookActiveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWarRidingHandBookActiveRsp& from);
  void MergeFrom(const TWarRidingHandBookActiveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TWarRidingHandBookInfo WarRidingHandBookInfo = 1;
  inline bool has_warridinghandbookinfo() const;
  inline void clear_warridinghandbookinfo();
  static const int kWarRidingHandBookInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWarRidingHandBookActiveRsp</name>
  	<Function>
  		<name>warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridinghandbookinfo</name>
  		<replaceName>WarRidingHandBookInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWarRidingHandBookInfo& warridinghandbookinfo() const;
  inline ::pb::TWarRidingHandBookInfo* mutable_warridinghandbookinfo();
  inline ::pb::TWarRidingHandBookInfo* release_warridinghandbookinfo();
  inline void set_allocated_warridinghandbookinfo(::pb::TWarRidingHandBookInfo* warridinghandbookinfo);

  // @@protoc_insertion_point(class_scope:pb.TWarRidingHandBookActiveRsp)
 private:
  inline void set_has_warridinghandbookinfo();
  inline void clear_has_warridinghandbookinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TWarRidingHandBookInfo* warridinghandbookinfo_;
  friend void  protobuf_AddDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_AssignDesc_net_2fWarRidingHandbook_2eproto();
  friend void protobuf_ShutdownFile_net_2fWarRidingHandbook_2eproto();

  void InitAsDefaultInstance();
  static TWarRidingHandBookActiveRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TWarRidingHandBookInfo

// optional uint32 WarRidingHandBookId = 1;
inline bool TWarRidingHandBookInfo::has_warridinghandbookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingHandBookInfo::set_has_warridinghandbookid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingHandBookInfo::clear_has_warridinghandbookid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingHandBookInfo::clear_warridinghandbookid() {
  warridinghandbookid_ = 0u;
  clear_has_warridinghandbookid();
}
inline ::google::protobuf::uint32 TWarRidingHandBookInfo::warridinghandbookid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookInfo.WarRidingHandBookId)
  return warridinghandbookid_;
}
inline void TWarRidingHandBookInfo::set_warridinghandbookid(::google::protobuf::uint32 value) {
  set_has_warridinghandbookid();
  warridinghandbookid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingHandBookInfo.WarRidingHandBookId)
}

// optional uint32 WarRidingHandBookLv = 2;
inline bool TWarRidingHandBookInfo::has_warridinghandbooklv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWarRidingHandBookInfo::set_has_warridinghandbooklv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWarRidingHandBookInfo::clear_has_warridinghandbooklv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWarRidingHandBookInfo::clear_warridinghandbooklv() {
  warridinghandbooklv_ = 0u;
  clear_has_warridinghandbooklv();
}
inline ::google::protobuf::uint32 TWarRidingHandBookInfo::warridinghandbooklv() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookInfo.WarRidingHandBookLv)
  return warridinghandbooklv_;
}
inline void TWarRidingHandBookInfo::set_warridinghandbooklv(::google::protobuf::uint32 value) {
  set_has_warridinghandbooklv();
  warridinghandbooklv_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingHandBookInfo.WarRidingHandBookLv)
}

// -------------------------------------------------------------------

// TWarRidingHandBookGetInfoRsp

// repeated .pb.TWarRidingHandBookInfo WarRidingHandBookArr = 1;
inline int TWarRidingHandBookGetInfoRsp::warridinghandbookarr_size() const {
  return warridinghandbookarr_.size();
}
inline void TWarRidingHandBookGetInfoRsp::clear_warridinghandbookarr() {
  warridinghandbookarr_.Clear();
}
inline const ::pb::TWarRidingHandBookInfo& TWarRidingHandBookGetInfoRsp::warridinghandbookarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookGetInfoRsp.WarRidingHandBookArr)
  return warridinghandbookarr_.Get(index);
}
inline ::pb::TWarRidingHandBookInfo* TWarRidingHandBookGetInfoRsp::mutable_warridinghandbookarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWarRidingHandBookGetInfoRsp.WarRidingHandBookArr)
  return warridinghandbookarr_.Mutable(index);
}
inline ::pb::TWarRidingHandBookInfo* TWarRidingHandBookGetInfoRsp::add_warridinghandbookarr() {
  // @@protoc_insertion_point(field_add:pb.TWarRidingHandBookGetInfoRsp.WarRidingHandBookArr)
  return warridinghandbookarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingHandBookInfo >&
TWarRidingHandBookGetInfoRsp::warridinghandbookarr() const {
  // @@protoc_insertion_point(field_list:pb.TWarRidingHandBookGetInfoRsp.WarRidingHandBookArr)
  return warridinghandbookarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWarRidingHandBookInfo >*
TWarRidingHandBookGetInfoRsp::mutable_warridinghandbookarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWarRidingHandBookGetInfoRsp.WarRidingHandBookArr)
  return &warridinghandbookarr_;
}

// -------------------------------------------------------------------

// TWarRidingHandBookUpgradeReq

// optional uint32 WarRidingHandBookId = 1;
inline bool TWarRidingHandBookUpgradeReq::has_warridinghandbookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingHandBookUpgradeReq::set_has_warridinghandbookid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingHandBookUpgradeReq::clear_has_warridinghandbookid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingHandBookUpgradeReq::clear_warridinghandbookid() {
  warridinghandbookid_ = 0u;
  clear_has_warridinghandbookid();
}
inline ::google::protobuf::uint32 TWarRidingHandBookUpgradeReq::warridinghandbookid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookUpgradeReq.WarRidingHandBookId)
  return warridinghandbookid_;
}
inline void TWarRidingHandBookUpgradeReq::set_warridinghandbookid(::google::protobuf::uint32 value) {
  set_has_warridinghandbookid();
  warridinghandbookid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingHandBookUpgradeReq.WarRidingHandBookId)
}

// -------------------------------------------------------------------

// TWarRidingHandBookUpgradeRsp

// optional .pb.TWarRidingHandBookInfo WarRidingHandBookInfo = 1;
inline bool TWarRidingHandBookUpgradeRsp::has_warridinghandbookinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingHandBookUpgradeRsp::set_has_warridinghandbookinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingHandBookUpgradeRsp::clear_has_warridinghandbookinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingHandBookUpgradeRsp::clear_warridinghandbookinfo() {
  if (warridinghandbookinfo_ != NULL) warridinghandbookinfo_->::pb::TWarRidingHandBookInfo::Clear();
  clear_has_warridinghandbookinfo();
}
inline const ::pb::TWarRidingHandBookInfo& TWarRidingHandBookUpgradeRsp::warridinghandbookinfo() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookUpgradeRsp.WarRidingHandBookInfo)
  return warridinghandbookinfo_ != NULL ? *warridinghandbookinfo_ : *default_instance_->warridinghandbookinfo_;
}
inline ::pb::TWarRidingHandBookInfo* TWarRidingHandBookUpgradeRsp::mutable_warridinghandbookinfo() {
  set_has_warridinghandbookinfo();
  if (warridinghandbookinfo_ == NULL) warridinghandbookinfo_ = new ::pb::TWarRidingHandBookInfo;
  // @@protoc_insertion_point(field_mutable:pb.TWarRidingHandBookUpgradeRsp.WarRidingHandBookInfo)
  return warridinghandbookinfo_;
}
inline ::pb::TWarRidingHandBookInfo* TWarRidingHandBookUpgradeRsp::release_warridinghandbookinfo() {
  clear_has_warridinghandbookinfo();
  ::pb::TWarRidingHandBookInfo* temp = warridinghandbookinfo_;
  warridinghandbookinfo_ = NULL;
  return temp;
}
inline void TWarRidingHandBookUpgradeRsp::set_allocated_warridinghandbookinfo(::pb::TWarRidingHandBookInfo* warridinghandbookinfo) {
  delete warridinghandbookinfo_;
  warridinghandbookinfo_ = warridinghandbookinfo;
  if (warridinghandbookinfo) {
    set_has_warridinghandbookinfo();
  } else {
    clear_has_warridinghandbookinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWarRidingHandBookUpgradeRsp.WarRidingHandBookInfo)
}

// -------------------------------------------------------------------

// TWarRidingHandBookActiveReq

// optional uint32 WarRidingHandBookId = 1;
inline bool TWarRidingHandBookActiveReq::has_warridinghandbookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingHandBookActiveReq::set_has_warridinghandbookid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingHandBookActiveReq::clear_has_warridinghandbookid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingHandBookActiveReq::clear_warridinghandbookid() {
  warridinghandbookid_ = 0u;
  clear_has_warridinghandbookid();
}
inline ::google::protobuf::uint32 TWarRidingHandBookActiveReq::warridinghandbookid() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookActiveReq.WarRidingHandBookId)
  return warridinghandbookid_;
}
inline void TWarRidingHandBookActiveReq::set_warridinghandbookid(::google::protobuf::uint32 value) {
  set_has_warridinghandbookid();
  warridinghandbookid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWarRidingHandBookActiveReq.WarRidingHandBookId)
}

// -------------------------------------------------------------------

// TWarRidingHandBookActiveRsp

// optional .pb.TWarRidingHandBookInfo WarRidingHandBookInfo = 1;
inline bool TWarRidingHandBookActiveRsp::has_warridinghandbookinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWarRidingHandBookActiveRsp::set_has_warridinghandbookinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWarRidingHandBookActiveRsp::clear_has_warridinghandbookinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWarRidingHandBookActiveRsp::clear_warridinghandbookinfo() {
  if (warridinghandbookinfo_ != NULL) warridinghandbookinfo_->::pb::TWarRidingHandBookInfo::Clear();
  clear_has_warridinghandbookinfo();
}
inline const ::pb::TWarRidingHandBookInfo& TWarRidingHandBookActiveRsp::warridinghandbookinfo() const {
  // @@protoc_insertion_point(field_get:pb.TWarRidingHandBookActiveRsp.WarRidingHandBookInfo)
  return warridinghandbookinfo_ != NULL ? *warridinghandbookinfo_ : *default_instance_->warridinghandbookinfo_;
}
inline ::pb::TWarRidingHandBookInfo* TWarRidingHandBookActiveRsp::mutable_warridinghandbookinfo() {
  set_has_warridinghandbookinfo();
  if (warridinghandbookinfo_ == NULL) warridinghandbookinfo_ = new ::pb::TWarRidingHandBookInfo;
  // @@protoc_insertion_point(field_mutable:pb.TWarRidingHandBookActiveRsp.WarRidingHandBookInfo)
  return warridinghandbookinfo_;
}
inline ::pb::TWarRidingHandBookInfo* TWarRidingHandBookActiveRsp::release_warridinghandbookinfo() {
  clear_has_warridinghandbookinfo();
  ::pb::TWarRidingHandBookInfo* temp = warridinghandbookinfo_;
  warridinghandbookinfo_ = NULL;
  return temp;
}
inline void TWarRidingHandBookActiveRsp::set_allocated_warridinghandbookinfo(::pb::TWarRidingHandBookInfo* warridinghandbookinfo) {
  delete warridinghandbookinfo_;
  warridinghandbookinfo_ = warridinghandbookinfo;
  if (warridinghandbookinfo) {
    set_has_warridinghandbookinfo();
  } else {
    clear_has_warridinghandbookinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWarRidingHandBookActiveRsp.WarRidingHandBookInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fWarRidingHandbook_2eproto__INCLUDED
