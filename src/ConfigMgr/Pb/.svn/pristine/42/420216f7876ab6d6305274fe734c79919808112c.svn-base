// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Shop.proto

#ifndef PROTOBUF_net_2fShop_2eproto__INCLUDED
#define PROTOBUF_net_2fShop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fShop_2eproto();
void protobuf_AssignDesc_net_2fShop_2eproto();
void protobuf_ShutdownFile_net_2fShop_2eproto();

class TShopGoodsInfo;
class TShopSingleShopInfo;
class TShopInfoReq;
class TShopInfoRsp;
class TShopInfoByIdReq;
class TShopInfoByIdRsp;
class TShopRefreshByIdReq;
class TShopRefreshByIdRsp;
class TShopBuyGoodsReq;
class TShopBuyGoodsRsp;
class TShopGetBuyRecordByIdReq;
class TShopGetBuyRecordByIdRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TShopGoodsInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopGoodsInfo : public ::google::protobuf::Message {
 public:
  TShopGoodsInfo();
  virtual ~TShopGoodsInfo();

  TShopGoodsInfo(const TShopGoodsInfo& from);

  inline TShopGoodsInfo& operator=(const TShopGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopGoodsInfo& default_instance();

  void Swap(TShopGoodsInfo* other);

  // implements Message ----------------------------------------------

  TShopGoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopGoodsInfo& from);
  void MergeFrom(const TShopGoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GoodsId = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopGoodsInfo</name>
  	<Function>
  		<name>goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // optional uint32 BoughtNum = 2;
  inline bool has_boughtnum() const;
  inline void clear_boughtnum();
  static const int kBoughtNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TShopGoodsInfo</name>
  	<Function>
  		<name>boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boughtnum() const;
  inline void set_boughtnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TShopGoodsInfo)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_boughtnum();
  inline void clear_has_boughtnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 boughtnum_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopGoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopSingleShopInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopSingleShopInfo : public ::google::protobuf::Message {
 public:
  TShopSingleShopInfo();
  virtual ~TShopSingleShopInfo();

  TShopSingleShopInfo(const TShopSingleShopInfo& from);

  inline TShopSingleShopInfo& operator=(const TShopSingleShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopSingleShopInfo& default_instance();

  void Swap(TShopSingleShopInfo* other);

  // implements Message ----------------------------------------------

  TShopSingleShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopSingleShopInfo& from);
  void MergeFrom(const TShopSingleShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopSingleShopInfo</name>
  	<Function>
  		<name>shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // optional uint64 RefreshTime = 2;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TShopSingleShopInfo</name>
  	<Function>
  		<name>refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint64 value);

  // optional uint32 RefreshNum = 3;
  inline bool has_refreshnum() const;
  inline void clear_refreshnum();
  static const int kRefreshNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TShopSingleShopInfo</name>
  	<Function>
  		<name>refreshnum</name>
  		<replaceName>RefreshNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_refreshnum</name>
  		<replaceName>RefreshNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_refreshnum</name>
  		<replaceName>RefreshNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 refreshnum() const;
  inline void set_refreshnum(::google::protobuf::uint32 value);

  // repeated .pb.TShopGoodsInfo GoodsArray = 4;
  inline int goodsarray_size() const;
  inline void clear_goodsarray();
  static const int kGoodsArrayFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TShopSingleShopInfo</name>
  	<Function>
  		<name>goodsarray</name>
  		<replaceName>GoodsArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_goodsarray</name>
  		<replaceName>GoodsArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_goodsarray</name>
  		<replaceName>GoodsArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsarray</name>
  		<replaceName>GoodsArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>goodsarray_size</name>
  		<replaceName>GoodsArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TShopGoodsInfo& goodsarray(int index) const;
  inline ::pb::TShopGoodsInfo* mutable_goodsarray(int index);
  inline ::pb::TShopGoodsInfo* add_goodsarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >&
      goodsarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >*
      mutable_goodsarray();

  // @@protoc_insertion_point(class_scope:pb.TShopSingleShopInfo)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();
  inline void set_has_refreshnum();
  inline void clear_has_refreshnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 refreshtime_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 refreshnum_;
  ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo > goodsarray_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopSingleShopInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopInfoReq : public ::google::protobuf::Message {
 public:
  TShopInfoReq();
  virtual ~TShopInfoReq();

  TShopInfoReq(const TShopInfoReq& from);

  inline TShopInfoReq& operator=(const TShopInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopInfoReq& default_instance();

  void Swap(TShopInfoReq* other);

  // implements Message ----------------------------------------------

  TShopInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopInfoReq& from);
  void MergeFrom(const TShopInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TShopInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopInfoRsp : public ::google::protobuf::Message {
 public:
  TShopInfoRsp();
  virtual ~TShopInfoRsp();

  TShopInfoRsp(const TShopInfoRsp& from);

  inline TShopInfoRsp& operator=(const TShopInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopInfoRsp& default_instance();

  void Swap(TShopInfoRsp* other);

  // implements Message ----------------------------------------------

  TShopInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopInfoRsp& from);
  void MergeFrom(const TShopInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TShopSingleShopInfo SingleShopArray = 1;
  inline int singleshoparray_size() const;
  inline void clear_singleshoparray();
  static const int kSingleShopArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopInfoRsp</name>
  	<Function>
  		<name>singleshoparray</name>
  		<replaceName>SingleShopArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_singleshoparray</name>
  		<replaceName>SingleShopArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_singleshoparray</name>
  		<replaceName>SingleShopArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_singleshoparray</name>
  		<replaceName>SingleShopArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>singleshoparray_size</name>
  		<replaceName>SingleShopArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TShopSingleShopInfo& singleshoparray(int index) const;
  inline ::pb::TShopSingleShopInfo* mutable_singleshoparray(int index);
  inline ::pb::TShopSingleShopInfo* add_singleshoparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TShopSingleShopInfo >&
      singleshoparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TShopSingleShopInfo >*
      mutable_singleshoparray();

  // @@protoc_insertion_point(class_scope:pb.TShopInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TShopSingleShopInfo > singleshoparray_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopInfoByIdReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopInfoByIdReq : public ::google::protobuf::Message {
 public:
  TShopInfoByIdReq();
  virtual ~TShopInfoByIdReq();

  TShopInfoByIdReq(const TShopInfoByIdReq& from);

  inline TShopInfoByIdReq& operator=(const TShopInfoByIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopInfoByIdReq& default_instance();

  void Swap(TShopInfoByIdReq* other);

  // implements Message ----------------------------------------------

  TShopInfoByIdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopInfoByIdReq& from);
  void MergeFrom(const TShopInfoByIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopInfoByIdReq</name>
  	<Function>
  		<name>shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TShopInfoByIdReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shopid_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopInfoByIdReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopInfoByIdRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopInfoByIdRsp : public ::google::protobuf::Message {
 public:
  TShopInfoByIdRsp();
  virtual ~TShopInfoByIdRsp();

  TShopInfoByIdRsp(const TShopInfoByIdRsp& from);

  inline TShopInfoByIdRsp& operator=(const TShopInfoByIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopInfoByIdRsp& default_instance();

  void Swap(TShopInfoByIdRsp* other);

  // implements Message ----------------------------------------------

  TShopInfoByIdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopInfoByIdRsp& from);
  void MergeFrom(const TShopInfoByIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
  inline bool has_singleshopinfo() const;
  inline void clear_singleshopinfo();
  static const int kSingleShopInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopInfoByIdRsp</name>
  	<Function>
  		<name>singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TShopSingleShopInfo& singleshopinfo() const;
  inline ::pb::TShopSingleShopInfo* mutable_singleshopinfo();
  inline ::pb::TShopSingleShopInfo* release_singleshopinfo();
  inline void set_allocated_singleshopinfo(::pb::TShopSingleShopInfo* singleshopinfo);

  // @@protoc_insertion_point(class_scope:pb.TShopInfoByIdRsp)
 private:
  inline void set_has_singleshopinfo();
  inline void clear_has_singleshopinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TShopSingleShopInfo* singleshopinfo_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopInfoByIdRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopRefreshByIdReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopRefreshByIdReq : public ::google::protobuf::Message {
 public:
  TShopRefreshByIdReq();
  virtual ~TShopRefreshByIdReq();

  TShopRefreshByIdReq(const TShopRefreshByIdReq& from);

  inline TShopRefreshByIdReq& operator=(const TShopRefreshByIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopRefreshByIdReq& default_instance();

  void Swap(TShopRefreshByIdReq* other);

  // implements Message ----------------------------------------------

  TShopRefreshByIdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopRefreshByIdReq& from);
  void MergeFrom(const TShopRefreshByIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopRefreshByIdReq</name>
  	<Function>
  		<name>shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 RefreshNum = 2;
  inline bool has_refreshnum() const;
  inline void clear_refreshnum();
  static const int kRefreshNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TShopRefreshByIdReq</name>
  	<Function>
  		<name>refreshnum</name>
  		<replaceName>RefreshNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_refreshnum</name>
  		<replaceName>RefreshNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_refreshnum</name>
  		<replaceName>RefreshNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 refreshnum() const;
  inline void set_refreshnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TShopRefreshByIdReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_refreshnum();
  inline void clear_has_refreshnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 refreshnum_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopRefreshByIdReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopRefreshByIdRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopRefreshByIdRsp : public ::google::protobuf::Message {
 public:
  TShopRefreshByIdRsp();
  virtual ~TShopRefreshByIdRsp();

  TShopRefreshByIdRsp(const TShopRefreshByIdRsp& from);

  inline TShopRefreshByIdRsp& operator=(const TShopRefreshByIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopRefreshByIdRsp& default_instance();

  void Swap(TShopRefreshByIdRsp* other);

  // implements Message ----------------------------------------------

  TShopRefreshByIdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopRefreshByIdRsp& from);
  void MergeFrom(const TShopRefreshByIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
  inline bool has_singleshopinfo() const;
  inline void clear_singleshopinfo();
  static const int kSingleShopInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopRefreshByIdRsp</name>
  	<Function>
  		<name>singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_singleshopinfo</name>
  		<replaceName>SingleShopInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TShopSingleShopInfo& singleshopinfo() const;
  inline ::pb::TShopSingleShopInfo* mutable_singleshopinfo();
  inline ::pb::TShopSingleShopInfo* release_singleshopinfo();
  inline void set_allocated_singleshopinfo(::pb::TShopSingleShopInfo* singleshopinfo);

  // @@protoc_insertion_point(class_scope:pb.TShopRefreshByIdRsp)
 private:
  inline void set_has_singleshopinfo();
  inline void clear_has_singleshopinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TShopSingleShopInfo* singleshopinfo_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopRefreshByIdRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopBuyGoodsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopBuyGoodsReq : public ::google::protobuf::Message {
 public:
  TShopBuyGoodsReq();
  virtual ~TShopBuyGoodsReq();

  TShopBuyGoodsReq(const TShopBuyGoodsReq& from);

  inline TShopBuyGoodsReq& operator=(const TShopBuyGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopBuyGoodsReq& default_instance();

  void Swap(TShopBuyGoodsReq* other);

  // implements Message ----------------------------------------------

  TShopBuyGoodsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopBuyGoodsReq& from);
  void MergeFrom(const TShopBuyGoodsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopBuyGoodsReq</name>
  	<Function>
  		<name>shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 GoodsId = 2;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TShopBuyGoodsReq</name>
  	<Function>
  		<name>goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // optional uint32 BuyNum = 3;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TShopBuyGoodsReq</name>
  	<Function>
  		<name>buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TShopBuyGoodsReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 buynum_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopBuyGoodsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopBuyGoodsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopBuyGoodsRsp : public ::google::protobuf::Message {
 public:
  TShopBuyGoodsRsp();
  virtual ~TShopBuyGoodsRsp();

  TShopBuyGoodsRsp(const TShopBuyGoodsRsp& from);

  inline TShopBuyGoodsRsp& operator=(const TShopBuyGoodsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopBuyGoodsRsp& default_instance();

  void Swap(TShopBuyGoodsRsp* other);

  // implements Message ----------------------------------------------

  TShopBuyGoodsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopBuyGoodsRsp& from);
  void MergeFrom(const TShopBuyGoodsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopBuyGoodsRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TShopBuyGoodsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopBuyGoodsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopGetBuyRecordByIdReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopGetBuyRecordByIdReq : public ::google::protobuf::Message {
 public:
  TShopGetBuyRecordByIdReq();
  virtual ~TShopGetBuyRecordByIdReq();

  TShopGetBuyRecordByIdReq(const TShopGetBuyRecordByIdReq& from);

  inline TShopGetBuyRecordByIdReq& operator=(const TShopGetBuyRecordByIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopGetBuyRecordByIdReq& default_instance();

  void Swap(TShopGetBuyRecordByIdReq* other);

  // implements Message ----------------------------------------------

  TShopGetBuyRecordByIdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopGetBuyRecordByIdReq& from);
  void MergeFrom(const TShopGetBuyRecordByIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopGetBuyRecordByIdReq</name>
  	<Function>
  		<name>shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TShopGetBuyRecordByIdReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shopid_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopGetBuyRecordByIdReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TShopGetBuyRecordByIdRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Shop.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TShopGetBuyRecordByIdRsp : public ::google::protobuf::Message {
 public:
  TShopGetBuyRecordByIdRsp();
  virtual ~TShopGetBuyRecordByIdRsp();

  TShopGetBuyRecordByIdRsp(const TShopGetBuyRecordByIdRsp& from);

  inline TShopGetBuyRecordByIdRsp& operator=(const TShopGetBuyRecordByIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TShopGetBuyRecordByIdRsp& default_instance();

  void Swap(TShopGetBuyRecordByIdRsp* other);

  // implements Message ----------------------------------------------

  TShopGetBuyRecordByIdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TShopGetBuyRecordByIdRsp& from);
  void MergeFrom(const TShopGetBuyRecordByIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TShopGoodsInfo BuyGoodsArr = 1;
  inline int buygoodsarr_size() const;
  inline void clear_buygoodsarr();
  static const int kBuyGoodsArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TShopGetBuyRecordByIdRsp</name>
  	<Function>
  		<name>buygoodsarr</name>
  		<replaceName>BuyGoodsArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_buygoodsarr</name>
  		<replaceName>BuyGoodsArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_buygoodsarr</name>
  		<replaceName>BuyGoodsArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buygoodsarr</name>
  		<replaceName>BuyGoodsArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>buygoodsarr_size</name>
  		<replaceName>BuyGoodsArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TShopGoodsInfo& buygoodsarr(int index) const;
  inline ::pb::TShopGoodsInfo* mutable_buygoodsarr(int index);
  inline ::pb::TShopGoodsInfo* add_buygoodsarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >&
      buygoodsarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >*
      mutable_buygoodsarr();

  // @@protoc_insertion_point(class_scope:pb.TShopGetBuyRecordByIdRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo > buygoodsarr_;
  friend void  protobuf_AddDesc_net_2fShop_2eproto();
  friend void protobuf_AssignDesc_net_2fShop_2eproto();
  friend void protobuf_ShutdownFile_net_2fShop_2eproto();

  void InitAsDefaultInstance();
  static TShopGetBuyRecordByIdRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TShopGoodsInfo

// optional uint32 GoodsId = 1;
inline bool TShopGoodsInfo::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopGoodsInfo::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopGoodsInfo::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopGoodsInfo::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 TShopGoodsInfo::goodsid() const {
  // @@protoc_insertion_point(field_get:pb.TShopGoodsInfo.GoodsId)
  return goodsid_;
}
inline void TShopGoodsInfo::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopGoodsInfo.GoodsId)
}

// optional uint32 BoughtNum = 2;
inline bool TShopGoodsInfo::has_boughtnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TShopGoodsInfo::set_has_boughtnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TShopGoodsInfo::clear_has_boughtnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TShopGoodsInfo::clear_boughtnum() {
  boughtnum_ = 0u;
  clear_has_boughtnum();
}
inline ::google::protobuf::uint32 TShopGoodsInfo::boughtnum() const {
  // @@protoc_insertion_point(field_get:pb.TShopGoodsInfo.BoughtNum)
  return boughtnum_;
}
inline void TShopGoodsInfo::set_boughtnum(::google::protobuf::uint32 value) {
  set_has_boughtnum();
  boughtnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopGoodsInfo.BoughtNum)
}

// -------------------------------------------------------------------

// TShopSingleShopInfo

// optional uint32 ShopId = 1;
inline bool TShopSingleShopInfo::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopSingleShopInfo::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopSingleShopInfo::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopSingleShopInfo::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 TShopSingleShopInfo::shopid() const {
  // @@protoc_insertion_point(field_get:pb.TShopSingleShopInfo.ShopId)
  return shopid_;
}
inline void TShopSingleShopInfo::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopSingleShopInfo.ShopId)
}

// optional uint64 RefreshTime = 2;
inline bool TShopSingleShopInfo::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TShopSingleShopInfo::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TShopSingleShopInfo::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TShopSingleShopInfo::clear_refreshtime() {
  refreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_refreshtime();
}
inline ::google::protobuf::uint64 TShopSingleShopInfo::refreshtime() const {
  // @@protoc_insertion_point(field_get:pb.TShopSingleShopInfo.RefreshTime)
  return refreshtime_;
}
inline void TShopSingleShopInfo::set_refreshtime(::google::protobuf::uint64 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopSingleShopInfo.RefreshTime)
}

// optional uint32 RefreshNum = 3;
inline bool TShopSingleShopInfo::has_refreshnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TShopSingleShopInfo::set_has_refreshnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TShopSingleShopInfo::clear_has_refreshnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TShopSingleShopInfo::clear_refreshnum() {
  refreshnum_ = 0u;
  clear_has_refreshnum();
}
inline ::google::protobuf::uint32 TShopSingleShopInfo::refreshnum() const {
  // @@protoc_insertion_point(field_get:pb.TShopSingleShopInfo.RefreshNum)
  return refreshnum_;
}
inline void TShopSingleShopInfo::set_refreshnum(::google::protobuf::uint32 value) {
  set_has_refreshnum();
  refreshnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopSingleShopInfo.RefreshNum)
}

// repeated .pb.TShopGoodsInfo GoodsArray = 4;
inline int TShopSingleShopInfo::goodsarray_size() const {
  return goodsarray_.size();
}
inline void TShopSingleShopInfo::clear_goodsarray() {
  goodsarray_.Clear();
}
inline const ::pb::TShopGoodsInfo& TShopSingleShopInfo::goodsarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TShopSingleShopInfo.GoodsArray)
  return goodsarray_.Get(index);
}
inline ::pb::TShopGoodsInfo* TShopSingleShopInfo::mutable_goodsarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TShopSingleShopInfo.GoodsArray)
  return goodsarray_.Mutable(index);
}
inline ::pb::TShopGoodsInfo* TShopSingleShopInfo::add_goodsarray() {
  // @@protoc_insertion_point(field_add:pb.TShopSingleShopInfo.GoodsArray)
  return goodsarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >&
TShopSingleShopInfo::goodsarray() const {
  // @@protoc_insertion_point(field_list:pb.TShopSingleShopInfo.GoodsArray)
  return goodsarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >*
TShopSingleShopInfo::mutable_goodsarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TShopSingleShopInfo.GoodsArray)
  return &goodsarray_;
}

// -------------------------------------------------------------------

// TShopInfoReq

// -------------------------------------------------------------------

// TShopInfoRsp

// repeated .pb.TShopSingleShopInfo SingleShopArray = 1;
inline int TShopInfoRsp::singleshoparray_size() const {
  return singleshoparray_.size();
}
inline void TShopInfoRsp::clear_singleshoparray() {
  singleshoparray_.Clear();
}
inline const ::pb::TShopSingleShopInfo& TShopInfoRsp::singleshoparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TShopInfoRsp.SingleShopArray)
  return singleshoparray_.Get(index);
}
inline ::pb::TShopSingleShopInfo* TShopInfoRsp::mutable_singleshoparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TShopInfoRsp.SingleShopArray)
  return singleshoparray_.Mutable(index);
}
inline ::pb::TShopSingleShopInfo* TShopInfoRsp::add_singleshoparray() {
  // @@protoc_insertion_point(field_add:pb.TShopInfoRsp.SingleShopArray)
  return singleshoparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TShopSingleShopInfo >&
TShopInfoRsp::singleshoparray() const {
  // @@protoc_insertion_point(field_list:pb.TShopInfoRsp.SingleShopArray)
  return singleshoparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TShopSingleShopInfo >*
TShopInfoRsp::mutable_singleshoparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TShopInfoRsp.SingleShopArray)
  return &singleshoparray_;
}

// -------------------------------------------------------------------

// TShopInfoByIdReq

// optional uint32 ShopId = 1;
inline bool TShopInfoByIdReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopInfoByIdReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopInfoByIdReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopInfoByIdReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 TShopInfoByIdReq::shopid() const {
  // @@protoc_insertion_point(field_get:pb.TShopInfoByIdReq.ShopId)
  return shopid_;
}
inline void TShopInfoByIdReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopInfoByIdReq.ShopId)
}

// -------------------------------------------------------------------

// TShopInfoByIdRsp

// optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
inline bool TShopInfoByIdRsp::has_singleshopinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopInfoByIdRsp::set_has_singleshopinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopInfoByIdRsp::clear_has_singleshopinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopInfoByIdRsp::clear_singleshopinfo() {
  if (singleshopinfo_ != NULL) singleshopinfo_->::pb::TShopSingleShopInfo::Clear();
  clear_has_singleshopinfo();
}
inline const ::pb::TShopSingleShopInfo& TShopInfoByIdRsp::singleshopinfo() const {
  // @@protoc_insertion_point(field_get:pb.TShopInfoByIdRsp.SingleShopInfo)
  return singleshopinfo_ != NULL ? *singleshopinfo_ : *default_instance_->singleshopinfo_;
}
inline ::pb::TShopSingleShopInfo* TShopInfoByIdRsp::mutable_singleshopinfo() {
  set_has_singleshopinfo();
  if (singleshopinfo_ == NULL) singleshopinfo_ = new ::pb::TShopSingleShopInfo;
  // @@protoc_insertion_point(field_mutable:pb.TShopInfoByIdRsp.SingleShopInfo)
  return singleshopinfo_;
}
inline ::pb::TShopSingleShopInfo* TShopInfoByIdRsp::release_singleshopinfo() {
  clear_has_singleshopinfo();
  ::pb::TShopSingleShopInfo* temp = singleshopinfo_;
  singleshopinfo_ = NULL;
  return temp;
}
inline void TShopInfoByIdRsp::set_allocated_singleshopinfo(::pb::TShopSingleShopInfo* singleshopinfo) {
  delete singleshopinfo_;
  singleshopinfo_ = singleshopinfo;
  if (singleshopinfo) {
    set_has_singleshopinfo();
  } else {
    clear_has_singleshopinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TShopInfoByIdRsp.SingleShopInfo)
}

// -------------------------------------------------------------------

// TShopRefreshByIdReq

// optional uint32 ShopId = 1;
inline bool TShopRefreshByIdReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopRefreshByIdReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopRefreshByIdReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopRefreshByIdReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 TShopRefreshByIdReq::shopid() const {
  // @@protoc_insertion_point(field_get:pb.TShopRefreshByIdReq.ShopId)
  return shopid_;
}
inline void TShopRefreshByIdReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopRefreshByIdReq.ShopId)
}

// optional uint32 RefreshNum = 2;
inline bool TShopRefreshByIdReq::has_refreshnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TShopRefreshByIdReq::set_has_refreshnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TShopRefreshByIdReq::clear_has_refreshnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TShopRefreshByIdReq::clear_refreshnum() {
  refreshnum_ = 0u;
  clear_has_refreshnum();
}
inline ::google::protobuf::uint32 TShopRefreshByIdReq::refreshnum() const {
  // @@protoc_insertion_point(field_get:pb.TShopRefreshByIdReq.RefreshNum)
  return refreshnum_;
}
inline void TShopRefreshByIdReq::set_refreshnum(::google::protobuf::uint32 value) {
  set_has_refreshnum();
  refreshnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopRefreshByIdReq.RefreshNum)
}

// -------------------------------------------------------------------

// TShopRefreshByIdRsp

// optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
inline bool TShopRefreshByIdRsp::has_singleshopinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopRefreshByIdRsp::set_has_singleshopinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopRefreshByIdRsp::clear_has_singleshopinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopRefreshByIdRsp::clear_singleshopinfo() {
  if (singleshopinfo_ != NULL) singleshopinfo_->::pb::TShopSingleShopInfo::Clear();
  clear_has_singleshopinfo();
}
inline const ::pb::TShopSingleShopInfo& TShopRefreshByIdRsp::singleshopinfo() const {
  // @@protoc_insertion_point(field_get:pb.TShopRefreshByIdRsp.SingleShopInfo)
  return singleshopinfo_ != NULL ? *singleshopinfo_ : *default_instance_->singleshopinfo_;
}
inline ::pb::TShopSingleShopInfo* TShopRefreshByIdRsp::mutable_singleshopinfo() {
  set_has_singleshopinfo();
  if (singleshopinfo_ == NULL) singleshopinfo_ = new ::pb::TShopSingleShopInfo;
  // @@protoc_insertion_point(field_mutable:pb.TShopRefreshByIdRsp.SingleShopInfo)
  return singleshopinfo_;
}
inline ::pb::TShopSingleShopInfo* TShopRefreshByIdRsp::release_singleshopinfo() {
  clear_has_singleshopinfo();
  ::pb::TShopSingleShopInfo* temp = singleshopinfo_;
  singleshopinfo_ = NULL;
  return temp;
}
inline void TShopRefreshByIdRsp::set_allocated_singleshopinfo(::pb::TShopSingleShopInfo* singleshopinfo) {
  delete singleshopinfo_;
  singleshopinfo_ = singleshopinfo;
  if (singleshopinfo) {
    set_has_singleshopinfo();
  } else {
    clear_has_singleshopinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TShopRefreshByIdRsp.SingleShopInfo)
}

// -------------------------------------------------------------------

// TShopBuyGoodsReq

// optional uint32 ShopId = 1;
inline bool TShopBuyGoodsReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopBuyGoodsReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopBuyGoodsReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopBuyGoodsReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 TShopBuyGoodsReq::shopid() const {
  // @@protoc_insertion_point(field_get:pb.TShopBuyGoodsReq.ShopId)
  return shopid_;
}
inline void TShopBuyGoodsReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopBuyGoodsReq.ShopId)
}

// optional uint32 GoodsId = 2;
inline bool TShopBuyGoodsReq::has_goodsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TShopBuyGoodsReq::set_has_goodsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TShopBuyGoodsReq::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TShopBuyGoodsReq::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 TShopBuyGoodsReq::goodsid() const {
  // @@protoc_insertion_point(field_get:pb.TShopBuyGoodsReq.GoodsId)
  return goodsid_;
}
inline void TShopBuyGoodsReq::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopBuyGoodsReq.GoodsId)
}

// optional uint32 BuyNum = 3;
inline bool TShopBuyGoodsReq::has_buynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TShopBuyGoodsReq::set_has_buynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TShopBuyGoodsReq::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TShopBuyGoodsReq::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 TShopBuyGoodsReq::buynum() const {
  // @@protoc_insertion_point(field_get:pb.TShopBuyGoodsReq.BuyNum)
  return buynum_;
}
inline void TShopBuyGoodsReq::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopBuyGoodsReq.BuyNum)
}

// -------------------------------------------------------------------

// TShopBuyGoodsRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TShopBuyGoodsRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TShopBuyGoodsRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TShopBuyGoodsRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TShopBuyGoodsRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TShopBuyGoodsRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TShopBuyGoodsRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TShopBuyGoodsRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TShopBuyGoodsRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TShopBuyGoodsRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TShopBuyGoodsRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TShopBuyGoodsRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TShopBuyGoodsRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TShopGetBuyRecordByIdReq

// optional uint32 ShopId = 1;
inline bool TShopGetBuyRecordByIdReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TShopGetBuyRecordByIdReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TShopGetBuyRecordByIdReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TShopGetBuyRecordByIdReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 TShopGetBuyRecordByIdReq::shopid() const {
  // @@protoc_insertion_point(field_get:pb.TShopGetBuyRecordByIdReq.ShopId)
  return shopid_;
}
inline void TShopGetBuyRecordByIdReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:pb.TShopGetBuyRecordByIdReq.ShopId)
}

// -------------------------------------------------------------------

// TShopGetBuyRecordByIdRsp

// repeated .pb.TShopGoodsInfo BuyGoodsArr = 1;
inline int TShopGetBuyRecordByIdRsp::buygoodsarr_size() const {
  return buygoodsarr_.size();
}
inline void TShopGetBuyRecordByIdRsp::clear_buygoodsarr() {
  buygoodsarr_.Clear();
}
inline const ::pb::TShopGoodsInfo& TShopGetBuyRecordByIdRsp::buygoodsarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TShopGetBuyRecordByIdRsp.BuyGoodsArr)
  return buygoodsarr_.Get(index);
}
inline ::pb::TShopGoodsInfo* TShopGetBuyRecordByIdRsp::mutable_buygoodsarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TShopGetBuyRecordByIdRsp.BuyGoodsArr)
  return buygoodsarr_.Mutable(index);
}
inline ::pb::TShopGoodsInfo* TShopGetBuyRecordByIdRsp::add_buygoodsarr() {
  // @@protoc_insertion_point(field_add:pb.TShopGetBuyRecordByIdRsp.BuyGoodsArr)
  return buygoodsarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >&
TShopGetBuyRecordByIdRsp::buygoodsarr() const {
  // @@protoc_insertion_point(field_list:pb.TShopGetBuyRecordByIdRsp.BuyGoodsArr)
  return buygoodsarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TShopGoodsInfo >*
TShopGetBuyRecordByIdRsp::mutable_buygoodsarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TShopGetBuyRecordByIdRsp.BuyGoodsArr)
  return &buygoodsarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fShop_2eproto__INCLUDED
