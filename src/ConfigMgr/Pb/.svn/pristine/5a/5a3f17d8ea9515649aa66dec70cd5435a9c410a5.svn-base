// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/OfficialPosition.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/OfficialPosition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TOfficialPositionTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOfficialPositionGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOfficialPositionGetTaskRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionGetTaskRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOfficialPositionGetTaskRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionGetTaskRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOfficialPositionGetAllTaskRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionGetAllTaskRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOfficialPositionGetAllTaskRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionGetAllTaskRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOfficialPositionNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOfficialPositionNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fOfficialPosition_2eproto() {
  protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/OfficialPosition.proto");
  GOOGLE_CHECK(file != NULL);
  TOfficialPositionTaskInfo_descriptor_ = file->message_type(0);
  static const int TOfficialPositionTaskInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionTaskInfo, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionTaskInfo, num_),
  };
  TOfficialPositionTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionTaskInfo_descriptor_,
      TOfficialPositionTaskInfo::default_instance_,
      TOfficialPositionTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionTaskInfo));
  TOfficialPositionGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TOfficialPositionGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetInfoRsp, positionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetInfoRsp, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetInfoRsp, arrtaskrewardinfo_),
  };
  TOfficialPositionGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionGetInfoRsp_descriptor_,
      TOfficialPositionGetInfoRsp::default_instance_,
      TOfficialPositionGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionGetInfoRsp));
  TOfficialPositionGetTaskRewardReq_descriptor_ = file->message_type(2);
  static const int TOfficialPositionGetTaskRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetTaskRewardReq, taskid_),
  };
  TOfficialPositionGetTaskRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionGetTaskRewardReq_descriptor_,
      TOfficialPositionGetTaskRewardReq::default_instance_,
      TOfficialPositionGetTaskRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetTaskRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetTaskRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionGetTaskRewardReq));
  TOfficialPositionGetTaskRewardRsp_descriptor_ = file->message_type(3);
  static const int TOfficialPositionGetTaskRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetTaskRewardRsp, arrreward_),
  };
  TOfficialPositionGetTaskRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionGetTaskRewardRsp_descriptor_,
      TOfficialPositionGetTaskRewardRsp::default_instance_,
      TOfficialPositionGetTaskRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetTaskRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetTaskRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionGetTaskRewardRsp));
  TOfficialPositionGetAllTaskRewardReq_descriptor_ = file->message_type(4);
  static const int TOfficialPositionGetAllTaskRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetAllTaskRewardReq, type_),
  };
  TOfficialPositionGetAllTaskRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionGetAllTaskRewardReq_descriptor_,
      TOfficialPositionGetAllTaskRewardReq::default_instance_,
      TOfficialPositionGetAllTaskRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetAllTaskRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetAllTaskRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionGetAllTaskRewardReq));
  TOfficialPositionGetAllTaskRewardRsp_descriptor_ = file->message_type(5);
  static const int TOfficialPositionGetAllTaskRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetAllTaskRewardRsp, arrreward_),
  };
  TOfficialPositionGetAllTaskRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionGetAllTaskRewardRsp_descriptor_,
      TOfficialPositionGetAllTaskRewardRsp::default_instance_,
      TOfficialPositionGetAllTaskRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetAllTaskRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionGetAllTaskRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionGetAllTaskRewardRsp));
  TOfficialPositionNotify_descriptor_ = file->message_type(6);
  static const int TOfficialPositionNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionNotify, arrtaskinfo_),
  };
  TOfficialPositionNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOfficialPositionNotify_descriptor_,
      TOfficialPositionNotify::default_instance_,
      TOfficialPositionNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOfficialPositionNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOfficialPositionNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fOfficialPosition_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionTaskInfo_descriptor_, &TOfficialPositionTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionGetInfoRsp_descriptor_, &TOfficialPositionGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionGetTaskRewardReq_descriptor_, &TOfficialPositionGetTaskRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionGetTaskRewardRsp_descriptor_, &TOfficialPositionGetTaskRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionGetAllTaskRewardReq_descriptor_, &TOfficialPositionGetAllTaskRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionGetAllTaskRewardRsp_descriptor_, &TOfficialPositionGetAllTaskRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOfficialPositionNotify_descriptor_, &TOfficialPositionNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fOfficialPosition_2eproto() {
  delete TOfficialPositionTaskInfo::default_instance_;
  delete TOfficialPositionTaskInfo_reflection_;
  delete TOfficialPositionGetInfoRsp::default_instance_;
  delete TOfficialPositionGetInfoRsp_reflection_;
  delete TOfficialPositionGetTaskRewardReq::default_instance_;
  delete TOfficialPositionGetTaskRewardReq_reflection_;
  delete TOfficialPositionGetTaskRewardRsp::default_instance_;
  delete TOfficialPositionGetTaskRewardRsp_reflection_;
  delete TOfficialPositionGetAllTaskRewardReq::default_instance_;
  delete TOfficialPositionGetAllTaskRewardReq_reflection_;
  delete TOfficialPositionGetAllTaskRewardRsp::default_instance_;
  delete TOfficialPositionGetAllTaskRewardRsp_reflection_;
  delete TOfficialPositionNotify::default_instance_;
  delete TOfficialPositionNotify_reflection_;
}

void protobuf_AddDesc_net_2fOfficialPosition_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fOpenActivity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032net/OfficialPosition.proto\022\002pb\032\026net/Co"
    "mmonReward.proto\032\026net/OpenActivity.proto"
    "\":\n\031TOfficialPositionTaskInfo\022\020\n\010TaskTyp"
    "e\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"\231\001\n\033TOfficialPositi"
    "onGetInfoRsp\022\022\n\nPositionId\030\001 \001(\r\0222\n\013ArrT"
    "askInfo\030\002 \003(\0132\035.pb.TOfficialPositionTask"
    "Info\0222\n\021ArrTaskRewardInfo\030\003 \003(\0132\027.pb.TAc"
    "tivityRewardInfo\"3\n!TOfficialPositionGet"
    "TaskRewardReq\022\016\n\006TaskId\030\001 \001(\r\"I\n!TOffici"
    "alPositionGetTaskRewardRsp\022$\n\tArrReward\030"
    "\001 \003(\0132\021.pb.TCommonReward\"4\n$TOfficialPos"
    "itionGetAllTaskRewardReq\022\014\n\004Type\030\001 \001(\r\"L"
    "\n$TOfficialPositionGetAllTaskRewardRsp\022$"
    "\n\tArrReward\030\001 \003(\0132\021.pb.TCommonReward\"M\n\027"
    "TOfficialPositionNotify\0222\n\013ArrTaskInfo\030\001"
    " \003(\0132\035.pb.TOfficialPositionTaskInfo", 635);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/OfficialPosition.proto", &protobuf_RegisterTypes);
  TOfficialPositionTaskInfo::default_instance_ = new TOfficialPositionTaskInfo();
  TOfficialPositionGetInfoRsp::default_instance_ = new TOfficialPositionGetInfoRsp();
  TOfficialPositionGetTaskRewardReq::default_instance_ = new TOfficialPositionGetTaskRewardReq();
  TOfficialPositionGetTaskRewardRsp::default_instance_ = new TOfficialPositionGetTaskRewardRsp();
  TOfficialPositionGetAllTaskRewardReq::default_instance_ = new TOfficialPositionGetAllTaskRewardReq();
  TOfficialPositionGetAllTaskRewardRsp::default_instance_ = new TOfficialPositionGetAllTaskRewardRsp();
  TOfficialPositionNotify::default_instance_ = new TOfficialPositionNotify();
  TOfficialPositionTaskInfo::default_instance_->InitAsDefaultInstance();
  TOfficialPositionGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOfficialPositionGetTaskRewardReq::default_instance_->InitAsDefaultInstance();
  TOfficialPositionGetTaskRewardRsp::default_instance_->InitAsDefaultInstance();
  TOfficialPositionGetAllTaskRewardReq::default_instance_->InitAsDefaultInstance();
  TOfficialPositionGetAllTaskRewardRsp::default_instance_->InitAsDefaultInstance();
  TOfficialPositionNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fOfficialPosition_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fOfficialPosition_2eproto {
  StaticDescriptorInitializer_net_2fOfficialPosition_2eproto() {
    protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  }
} static_descriptor_initializer_net_2fOfficialPosition_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionTaskInfo::kTaskTypeFieldNumber;
const int TOfficialPositionTaskInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionTaskInfo::TOfficialPositionTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionTaskInfo)
}

void TOfficialPositionTaskInfo::InitAsDefaultInstance() {
}

TOfficialPositionTaskInfo::TOfficialPositionTaskInfo(const TOfficialPositionTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionTaskInfo)
}

void TOfficialPositionTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  tasktype_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionTaskInfo::~TOfficialPositionTaskInfo() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionTaskInfo)
  SharedDtor();
}

void TOfficialPositionTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionTaskInfo_descriptor_;
}

const TOfficialPositionTaskInfo& TOfficialPositionTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionTaskInfo* TOfficialPositionTaskInfo::default_instance_ = NULL;

TOfficialPositionTaskInfo* TOfficialPositionTaskInfo::New() const {
  return new TOfficialPositionTaskInfo;
}

void TOfficialPositionTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOfficialPositionTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tasktype_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tasktype_)));
          set_has_tasktype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionTaskInfo)
  return false;
#undef DO_
}

void TOfficialPositionTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionTaskInfo)
  // optional uint32 TaskType = 1;
  if (has_tasktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tasktype(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionTaskInfo)
}

::google::protobuf::uint8* TOfficialPositionTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionTaskInfo)
  // optional uint32 TaskType = 1;
  if (has_tasktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tasktype(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionTaskInfo)
  return target;
}

int TOfficialPositionTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskType = 1;
    if (has_tasktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tasktype());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionTaskInfo::MergeFrom(const TOfficialPositionTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tasktype()) {
      set_tasktype(from.tasktype());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionTaskInfo::CopyFrom(const TOfficialPositionTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionTaskInfo::IsInitialized() const {

  return true;
}

void TOfficialPositionTaskInfo::Swap(TOfficialPositionTaskInfo* other) {
  if (other != this) {
    std::swap(tasktype_, other->tasktype_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionTaskInfo_descriptor_;
  metadata.reflection = TOfficialPositionTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionGetInfoRsp::kPositionIdFieldNumber;
const int TOfficialPositionGetInfoRsp::kArrTaskInfoFieldNumber;
const int TOfficialPositionGetInfoRsp::kArrTaskRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionGetInfoRsp::TOfficialPositionGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionGetInfoRsp)
}

void TOfficialPositionGetInfoRsp::InitAsDefaultInstance() {
}

TOfficialPositionGetInfoRsp::TOfficialPositionGetInfoRsp(const TOfficialPositionGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionGetInfoRsp)
}

void TOfficialPositionGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  positionid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionGetInfoRsp::~TOfficialPositionGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionGetInfoRsp)
  SharedDtor();
}

void TOfficialPositionGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionGetInfoRsp_descriptor_;
}

const TOfficialPositionGetInfoRsp& TOfficialPositionGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionGetInfoRsp* TOfficialPositionGetInfoRsp::default_instance_ = NULL;

TOfficialPositionGetInfoRsp* TOfficialPositionGetInfoRsp::New() const {
  return new TOfficialPositionGetInfoRsp;
}

void TOfficialPositionGetInfoRsp::Clear() {
  positionid_ = 0u;
  arrtaskinfo_.Clear();
  arrtaskrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PositionId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &positionid_)));
          set_has_positionid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(26)) goto parse_ArrTaskRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrTaskRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrTaskRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionGetInfoRsp)
  return false;
#undef DO_
}

void TOfficialPositionGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionGetInfoRsp)
  // optional uint32 PositionId = 1;
  if (has_positionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->positionid(), output);
  }

  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 2;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrtaskinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrtaskrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionGetInfoRsp)
}

::google::protobuf::uint8* TOfficialPositionGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionGetInfoRsp)
  // optional uint32 PositionId = 1;
  if (has_positionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->positionid(), target);
  }

  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 2;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrtaskinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrtaskrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionGetInfoRsp)
  return target;
}

int TOfficialPositionGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PositionId = 1;
    if (has_positionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->positionid());
    }

  }
  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 2;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
  total_size += 1 * this->arrtaskrewardinfo_size();
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionGetInfoRsp::MergeFrom(const TOfficialPositionGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  arrtaskrewardinfo_.MergeFrom(from.arrtaskrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_positionid()) {
      set_positionid(from.positionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionGetInfoRsp::CopyFrom(const TOfficialPositionGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionGetInfoRsp::IsInitialized() const {

  return true;
}

void TOfficialPositionGetInfoRsp::Swap(TOfficialPositionGetInfoRsp* other) {
  if (other != this) {
    std::swap(positionid_, other->positionid_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    arrtaskrewardinfo_.Swap(&other->arrtaskrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionGetInfoRsp_descriptor_;
  metadata.reflection = TOfficialPositionGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionGetTaskRewardReq::kTaskIdFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionGetTaskRewardReq::TOfficialPositionGetTaskRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionGetTaskRewardReq)
}

void TOfficialPositionGetTaskRewardReq::InitAsDefaultInstance() {
}

TOfficialPositionGetTaskRewardReq::TOfficialPositionGetTaskRewardReq(const TOfficialPositionGetTaskRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionGetTaskRewardReq)
}

void TOfficialPositionGetTaskRewardReq::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionGetTaskRewardReq::~TOfficialPositionGetTaskRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionGetTaskRewardReq)
  SharedDtor();
}

void TOfficialPositionGetTaskRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionGetTaskRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionGetTaskRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionGetTaskRewardReq_descriptor_;
}

const TOfficialPositionGetTaskRewardReq& TOfficialPositionGetTaskRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionGetTaskRewardReq* TOfficialPositionGetTaskRewardReq::default_instance_ = NULL;

TOfficialPositionGetTaskRewardReq* TOfficialPositionGetTaskRewardReq::New() const {
  return new TOfficialPositionGetTaskRewardReq;
}

void TOfficialPositionGetTaskRewardReq::Clear() {
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionGetTaskRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionGetTaskRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionGetTaskRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionGetTaskRewardReq)
  return false;
#undef DO_
}

void TOfficialPositionGetTaskRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionGetTaskRewardReq)
  // optional uint32 TaskId = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionGetTaskRewardReq)
}

::google::protobuf::uint8* TOfficialPositionGetTaskRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionGetTaskRewardReq)
  // optional uint32 TaskId = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionGetTaskRewardReq)
  return target;
}

int TOfficialPositionGetTaskRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskId = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionGetTaskRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionGetTaskRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionGetTaskRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionGetTaskRewardReq::MergeFrom(const TOfficialPositionGetTaskRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionGetTaskRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionGetTaskRewardReq::CopyFrom(const TOfficialPositionGetTaskRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionGetTaskRewardReq::IsInitialized() const {

  return true;
}

void TOfficialPositionGetTaskRewardReq::Swap(TOfficialPositionGetTaskRewardReq* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionGetTaskRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionGetTaskRewardReq_descriptor_;
  metadata.reflection = TOfficialPositionGetTaskRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionGetTaskRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionGetTaskRewardRsp::TOfficialPositionGetTaskRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionGetTaskRewardRsp)
}

void TOfficialPositionGetTaskRewardRsp::InitAsDefaultInstance() {
}

TOfficialPositionGetTaskRewardRsp::TOfficialPositionGetTaskRewardRsp(const TOfficialPositionGetTaskRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionGetTaskRewardRsp)
}

void TOfficialPositionGetTaskRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionGetTaskRewardRsp::~TOfficialPositionGetTaskRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionGetTaskRewardRsp)
  SharedDtor();
}

void TOfficialPositionGetTaskRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionGetTaskRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionGetTaskRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionGetTaskRewardRsp_descriptor_;
}

const TOfficialPositionGetTaskRewardRsp& TOfficialPositionGetTaskRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionGetTaskRewardRsp* TOfficialPositionGetTaskRewardRsp::default_instance_ = NULL;

TOfficialPositionGetTaskRewardRsp* TOfficialPositionGetTaskRewardRsp::New() const {
  return new TOfficialPositionGetTaskRewardRsp;
}

void TOfficialPositionGetTaskRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionGetTaskRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionGetTaskRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionGetTaskRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionGetTaskRewardRsp)
  return false;
#undef DO_
}

void TOfficialPositionGetTaskRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionGetTaskRewardRsp)
}

::google::protobuf::uint8* TOfficialPositionGetTaskRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionGetTaskRewardRsp)
  return target;
}

int TOfficialPositionGetTaskRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionGetTaskRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionGetTaskRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionGetTaskRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionGetTaskRewardRsp::MergeFrom(const TOfficialPositionGetTaskRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionGetTaskRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionGetTaskRewardRsp::CopyFrom(const TOfficialPositionGetTaskRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionGetTaskRewardRsp::IsInitialized() const {

  return true;
}

void TOfficialPositionGetTaskRewardRsp::Swap(TOfficialPositionGetTaskRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionGetTaskRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionGetTaskRewardRsp_descriptor_;
  metadata.reflection = TOfficialPositionGetTaskRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionGetAllTaskRewardReq::kTypeFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionGetAllTaskRewardReq::TOfficialPositionGetAllTaskRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionGetAllTaskRewardReq)
}

void TOfficialPositionGetAllTaskRewardReq::InitAsDefaultInstance() {
}

TOfficialPositionGetAllTaskRewardReq::TOfficialPositionGetAllTaskRewardReq(const TOfficialPositionGetAllTaskRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionGetAllTaskRewardReq)
}

void TOfficialPositionGetAllTaskRewardReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionGetAllTaskRewardReq::~TOfficialPositionGetAllTaskRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionGetAllTaskRewardReq)
  SharedDtor();
}

void TOfficialPositionGetAllTaskRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionGetAllTaskRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionGetAllTaskRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionGetAllTaskRewardReq_descriptor_;
}

const TOfficialPositionGetAllTaskRewardReq& TOfficialPositionGetAllTaskRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionGetAllTaskRewardReq* TOfficialPositionGetAllTaskRewardReq::default_instance_ = NULL;

TOfficialPositionGetAllTaskRewardReq* TOfficialPositionGetAllTaskRewardReq::New() const {
  return new TOfficialPositionGetAllTaskRewardReq;
}

void TOfficialPositionGetAllTaskRewardReq::Clear() {
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionGetAllTaskRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionGetAllTaskRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionGetAllTaskRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionGetAllTaskRewardReq)
  return false;
#undef DO_
}

void TOfficialPositionGetAllTaskRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionGetAllTaskRewardReq)
  // optional uint32 Type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionGetAllTaskRewardReq)
}

::google::protobuf::uint8* TOfficialPositionGetAllTaskRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionGetAllTaskRewardReq)
  // optional uint32 Type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionGetAllTaskRewardReq)
  return target;
}

int TOfficialPositionGetAllTaskRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionGetAllTaskRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionGetAllTaskRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionGetAllTaskRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionGetAllTaskRewardReq::MergeFrom(const TOfficialPositionGetAllTaskRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionGetAllTaskRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionGetAllTaskRewardReq::CopyFrom(const TOfficialPositionGetAllTaskRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionGetAllTaskRewardReq::IsInitialized() const {

  return true;
}

void TOfficialPositionGetAllTaskRewardReq::Swap(TOfficialPositionGetAllTaskRewardReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionGetAllTaskRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionGetAllTaskRewardReq_descriptor_;
  metadata.reflection = TOfficialPositionGetAllTaskRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionGetAllTaskRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionGetAllTaskRewardRsp::TOfficialPositionGetAllTaskRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionGetAllTaskRewardRsp)
}

void TOfficialPositionGetAllTaskRewardRsp::InitAsDefaultInstance() {
}

TOfficialPositionGetAllTaskRewardRsp::TOfficialPositionGetAllTaskRewardRsp(const TOfficialPositionGetAllTaskRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionGetAllTaskRewardRsp)
}

void TOfficialPositionGetAllTaskRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionGetAllTaskRewardRsp::~TOfficialPositionGetAllTaskRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionGetAllTaskRewardRsp)
  SharedDtor();
}

void TOfficialPositionGetAllTaskRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionGetAllTaskRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionGetAllTaskRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionGetAllTaskRewardRsp_descriptor_;
}

const TOfficialPositionGetAllTaskRewardRsp& TOfficialPositionGetAllTaskRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionGetAllTaskRewardRsp* TOfficialPositionGetAllTaskRewardRsp::default_instance_ = NULL;

TOfficialPositionGetAllTaskRewardRsp* TOfficialPositionGetAllTaskRewardRsp::New() const {
  return new TOfficialPositionGetAllTaskRewardRsp;
}

void TOfficialPositionGetAllTaskRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionGetAllTaskRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionGetAllTaskRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionGetAllTaskRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionGetAllTaskRewardRsp)
  return false;
#undef DO_
}

void TOfficialPositionGetAllTaskRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionGetAllTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionGetAllTaskRewardRsp)
}

::google::protobuf::uint8* TOfficialPositionGetAllTaskRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionGetAllTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionGetAllTaskRewardRsp)
  return target;
}

int TOfficialPositionGetAllTaskRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionGetAllTaskRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionGetAllTaskRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionGetAllTaskRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionGetAllTaskRewardRsp::MergeFrom(const TOfficialPositionGetAllTaskRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionGetAllTaskRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionGetAllTaskRewardRsp::CopyFrom(const TOfficialPositionGetAllTaskRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionGetAllTaskRewardRsp::IsInitialized() const {

  return true;
}

void TOfficialPositionGetAllTaskRewardRsp::Swap(TOfficialPositionGetAllTaskRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionGetAllTaskRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionGetAllTaskRewardRsp_descriptor_;
  metadata.reflection = TOfficialPositionGetAllTaskRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOfficialPositionNotify::kArrTaskInfoFieldNumber;
#endif  // !_MSC_VER

TOfficialPositionNotify::TOfficialPositionNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOfficialPositionNotify)
}

void TOfficialPositionNotify::InitAsDefaultInstance() {
}

TOfficialPositionNotify::TOfficialPositionNotify(const TOfficialPositionNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOfficialPositionNotify)
}

void TOfficialPositionNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOfficialPositionNotify::~TOfficialPositionNotify() {
  // @@protoc_insertion_point(destructor:pb.TOfficialPositionNotify)
  SharedDtor();
}

void TOfficialPositionNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOfficialPositionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOfficialPositionNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOfficialPositionNotify_descriptor_;
}

const TOfficialPositionNotify& TOfficialPositionNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOfficialPosition_2eproto();
  return *default_instance_;
}

TOfficialPositionNotify* TOfficialPositionNotify::default_instance_ = NULL;

TOfficialPositionNotify* TOfficialPositionNotify::New() const {
  return new TOfficialPositionNotify;
}

void TOfficialPositionNotify::Clear() {
  arrtaskinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOfficialPositionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOfficialPositionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrTaskInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOfficialPositionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOfficialPositionNotify)
  return false;
#undef DO_
}

void TOfficialPositionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOfficialPositionNotify)
  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 1;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrtaskinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOfficialPositionNotify)
}

::google::protobuf::uint8* TOfficialPositionNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOfficialPositionNotify)
  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 1;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrtaskinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOfficialPositionNotify)
  return target;
}

int TOfficialPositionNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TOfficialPositionTaskInfo ArrTaskInfo = 1;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOfficialPositionNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOfficialPositionNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOfficialPositionNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOfficialPositionNotify::MergeFrom(const TOfficialPositionNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOfficialPositionNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOfficialPositionNotify::CopyFrom(const TOfficialPositionNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOfficialPositionNotify::IsInitialized() const {

  return true;
}

void TOfficialPositionNotify::Swap(TOfficialPositionNotify* other) {
  if (other != this) {
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOfficialPositionNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOfficialPositionNotify_descriptor_;
  metadata.reflection = TOfficialPositionNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
