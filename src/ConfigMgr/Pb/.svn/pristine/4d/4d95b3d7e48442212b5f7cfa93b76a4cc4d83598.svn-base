// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Fashion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Fashion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TFashionSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionDecompose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionDecompose_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionGetFashionDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionGetFashionDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionUpdateFashionDataPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionUpdateFashionDataPush_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionSetViewFashionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionSetViewFashionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionSetViewFashionRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionSetViewFashionRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionSetAttributeFashionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionSetAttributeFashionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionEnhanceLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionEnhanceLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionAutoEnhanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionAutoEnhanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionRebornReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionRebornReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionActivateHandbookReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionActivateHandbookReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFashionCombineFashionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFashionCombineFashionReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fFashion_2eproto() {
  protobuf_AddDesc_net_2fFashion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Fashion.proto");
  GOOGLE_CHECK(file != NULL);
  TFashionSingle_descriptor_ = file->message_type(0);
  static const int TFashionSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSingle, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSingle, enhancelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSingle, expiretime_),
  };
  TFashionSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionSingle_descriptor_,
      TFashionSingle::default_instance_,
      TFashionSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionSingle));
  TFashionDecompose_descriptor_ = file->message_type(1);
  static const int TFashionDecompose_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionDecompose, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionDecompose, num_),
  };
  TFashionDecompose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionDecompose_descriptor_,
      TFashionDecompose::default_instance_,
      TFashionDecompose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionDecompose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionDecompose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionDecompose));
  TFashionGetFashionDataRsp_descriptor_ = file->message_type(2);
  static const int TFashionGetFashionDataRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionGetFashionDataRsp, fashionarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionGetFashionDataRsp, viewtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionGetFashionDataRsp, attributetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionGetFashionDataRsp, activatedhandbookarr_),
  };
  TFashionGetFashionDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionGetFashionDataRsp_descriptor_,
      TFashionGetFashionDataRsp::default_instance_,
      TFashionGetFashionDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionGetFashionDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionGetFashionDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionGetFashionDataRsp));
  TFashionUpdateFashionDataPush_descriptor_ = file->message_type(3);
  static const int TFashionUpdateFashionDataPush_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionUpdateFashionDataPush, fashionarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionUpdateFashionDataPush, decomposearr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionUpdateFashionDataPush, activatedhandbookarr_),
  };
  TFashionUpdateFashionDataPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionUpdateFashionDataPush_descriptor_,
      TFashionUpdateFashionDataPush::default_instance_,
      TFashionUpdateFashionDataPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionUpdateFashionDataPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionUpdateFashionDataPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionUpdateFashionDataPush));
  TFashionSetViewFashionReq_descriptor_ = file->message_type(4);
  static const int TFashionSetViewFashionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetViewFashionReq, fashiontid_),
  };
  TFashionSetViewFashionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionSetViewFashionReq_descriptor_,
      TFashionSetViewFashionReq::default_instance_,
      TFashionSetViewFashionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetViewFashionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetViewFashionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionSetViewFashionReq));
  TFashionSetViewFashionRsp_descriptor_ = file->message_type(5);
  static const int TFashionSetViewFashionRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetViewFashionRsp, rewardarray_),
  };
  TFashionSetViewFashionRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionSetViewFashionRsp_descriptor_,
      TFashionSetViewFashionRsp::default_instance_,
      TFashionSetViewFashionRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetViewFashionRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetViewFashionRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionSetViewFashionRsp));
  TFashionSetAttributeFashionReq_descriptor_ = file->message_type(6);
  static const int TFashionSetAttributeFashionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetAttributeFashionReq, fashiontid_),
  };
  TFashionSetAttributeFashionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionSetAttributeFashionReq_descriptor_,
      TFashionSetAttributeFashionReq::default_instance_,
      TFashionSetAttributeFashionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetAttributeFashionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionSetAttributeFashionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionSetAttributeFashionReq));
  TFashionEnhanceLevelUpReq_descriptor_ = file->message_type(7);
  static const int TFashionEnhanceLevelUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionEnhanceLevelUpReq, fashiontid_),
  };
  TFashionEnhanceLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionEnhanceLevelUpReq_descriptor_,
      TFashionEnhanceLevelUpReq::default_instance_,
      TFashionEnhanceLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionEnhanceLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionEnhanceLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionEnhanceLevelUpReq));
  TFashionAutoEnhanceReq_descriptor_ = file->message_type(8);
  static const int TFashionAutoEnhanceReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionAutoEnhanceReq, fashiontid_),
  };
  TFashionAutoEnhanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionAutoEnhanceReq_descriptor_,
      TFashionAutoEnhanceReq::default_instance_,
      TFashionAutoEnhanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionAutoEnhanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionAutoEnhanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionAutoEnhanceReq));
  TFashionRebornReq_descriptor_ = file->message_type(9);
  static const int TFashionRebornReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionRebornReq, fashiontidarr_),
  };
  TFashionRebornReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionRebornReq_descriptor_,
      TFashionRebornReq::default_instance_,
      TFashionRebornReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionRebornReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionRebornReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionRebornReq));
  TFashionActivateHandbookReq_descriptor_ = file->message_type(10);
  static const int TFashionActivateHandbookReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionActivateHandbookReq, handbooktid_),
  };
  TFashionActivateHandbookReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionActivateHandbookReq_descriptor_,
      TFashionActivateHandbookReq::default_instance_,
      TFashionActivateHandbookReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionActivateHandbookReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionActivateHandbookReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionActivateHandbookReq));
  TFashionCombineFashionReq_descriptor_ = file->message_type(11);
  static const int TFashionCombineFashionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionCombineFashionReq, tid_),
  };
  TFashionCombineFashionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFashionCombineFashionReq_descriptor_,
      TFashionCombineFashionReq::default_instance_,
      TFashionCombineFashionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionCombineFashionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFashionCombineFashionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFashionCombineFashionReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fFashion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionSingle_descriptor_, &TFashionSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionDecompose_descriptor_, &TFashionDecompose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionGetFashionDataRsp_descriptor_, &TFashionGetFashionDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionUpdateFashionDataPush_descriptor_, &TFashionUpdateFashionDataPush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionSetViewFashionReq_descriptor_, &TFashionSetViewFashionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionSetViewFashionRsp_descriptor_, &TFashionSetViewFashionRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionSetAttributeFashionReq_descriptor_, &TFashionSetAttributeFashionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionEnhanceLevelUpReq_descriptor_, &TFashionEnhanceLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionAutoEnhanceReq_descriptor_, &TFashionAutoEnhanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionRebornReq_descriptor_, &TFashionRebornReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionActivateHandbookReq_descriptor_, &TFashionActivateHandbookReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFashionCombineFashionReq_descriptor_, &TFashionCombineFashionReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fFashion_2eproto() {
  delete TFashionSingle::default_instance_;
  delete TFashionSingle_reflection_;
  delete TFashionDecompose::default_instance_;
  delete TFashionDecompose_reflection_;
  delete TFashionGetFashionDataRsp::default_instance_;
  delete TFashionGetFashionDataRsp_reflection_;
  delete TFashionUpdateFashionDataPush::default_instance_;
  delete TFashionUpdateFashionDataPush_reflection_;
  delete TFashionSetViewFashionReq::default_instance_;
  delete TFashionSetViewFashionReq_reflection_;
  delete TFashionSetViewFashionRsp::default_instance_;
  delete TFashionSetViewFashionRsp_reflection_;
  delete TFashionSetAttributeFashionReq::default_instance_;
  delete TFashionSetAttributeFashionReq_reflection_;
  delete TFashionEnhanceLevelUpReq::default_instance_;
  delete TFashionEnhanceLevelUpReq_reflection_;
  delete TFashionAutoEnhanceReq::default_instance_;
  delete TFashionAutoEnhanceReq_reflection_;
  delete TFashionRebornReq::default_instance_;
  delete TFashionRebornReq_reflection_;
  delete TFashionActivateHandbookReq::default_instance_;
  delete TFashionActivateHandbookReq_reflection_;
  delete TFashionCombineFashionReq::default_instance_;
  delete TFashionCombineFashionReq_reflection_;
}

void protobuf_AddDesc_net_2fFashion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021net/Fashion.proto\022\002pb\032\026net/CommonRewar"
    "d.proto\"D\n\016TFashionSingle\022\013\n\003Tid\030\001 \001(\r\022\021"
    "\n\tEnhanceLv\030\002 \001(\r\022\022\n\nExpireTime\030\003 \001(\004\"-\n"
    "\021TFashionDecompose\022\013\n\003Tid\030\001 \001(\r\022\013\n\003Num\030\002"
    " \001(\r\"\210\001\n\031TFashionGetFashionDataRsp\022&\n\nFa"
    "shionArr\030\001 \003(\0132\022.pb.TFashionSingle\022\017\n\007Vi"
    "ewTid\030\002 \001(\r\022\024\n\014AttributeTid\030\003 \001(\r\022\034\n\024Act"
    "ivatedHandbookArr\030\004 \003(\r\"\222\001\n\035TFashionUpda"
    "teFashionDataPush\022&\n\nFashionArr\030\001 \003(\0132\022."
    "pb.TFashionSingle\022+\n\014DecomposeArr\030\002 \003(\0132"
    "\025.pb.TFashionDecompose\022\034\n\024ActivatedHandb"
    "ookArr\030\003 \003(\r\"/\n\031TFashionSetViewFashionRe"
    "q\022\022\n\nFashionTid\030\001 \001(\r\"C\n\031TFashionSetView"
    "FashionRsp\022&\n\013RewardArray\030\001 \003(\0132\021.pb.TCo"
    "mmonReward\"4\n\036TFashionSetAttributeFashio"
    "nReq\022\022\n\nFashionTid\030\001 \001(\r\"/\n\031TFashionEnha"
    "nceLevelUpReq\022\022\n\nFashionTid\030\001 \001(\r\",\n\026TFa"
    "shionAutoEnhanceReq\022\022\n\nFashionTid\030\001 \001(\r\""
    "*\n\021TFashionRebornReq\022\025\n\rFashionTidArr\030\001 "
    "\003(\r\"2\n\033TFashionActivateHandbookReq\022\023\n\013Ha"
    "ndbookTid\030\001 \001(\r\"(\n\031TFashionCombineFashio"
    "nReq\022\013\n\003Tid\030\001 \001(\r", 857);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Fashion.proto", &protobuf_RegisterTypes);
  TFashionSingle::default_instance_ = new TFashionSingle();
  TFashionDecompose::default_instance_ = new TFashionDecompose();
  TFashionGetFashionDataRsp::default_instance_ = new TFashionGetFashionDataRsp();
  TFashionUpdateFashionDataPush::default_instance_ = new TFashionUpdateFashionDataPush();
  TFashionSetViewFashionReq::default_instance_ = new TFashionSetViewFashionReq();
  TFashionSetViewFashionRsp::default_instance_ = new TFashionSetViewFashionRsp();
  TFashionSetAttributeFashionReq::default_instance_ = new TFashionSetAttributeFashionReq();
  TFashionEnhanceLevelUpReq::default_instance_ = new TFashionEnhanceLevelUpReq();
  TFashionAutoEnhanceReq::default_instance_ = new TFashionAutoEnhanceReq();
  TFashionRebornReq::default_instance_ = new TFashionRebornReq();
  TFashionActivateHandbookReq::default_instance_ = new TFashionActivateHandbookReq();
  TFashionCombineFashionReq::default_instance_ = new TFashionCombineFashionReq();
  TFashionSingle::default_instance_->InitAsDefaultInstance();
  TFashionDecompose::default_instance_->InitAsDefaultInstance();
  TFashionGetFashionDataRsp::default_instance_->InitAsDefaultInstance();
  TFashionUpdateFashionDataPush::default_instance_->InitAsDefaultInstance();
  TFashionSetViewFashionReq::default_instance_->InitAsDefaultInstance();
  TFashionSetViewFashionRsp::default_instance_->InitAsDefaultInstance();
  TFashionSetAttributeFashionReq::default_instance_->InitAsDefaultInstance();
  TFashionEnhanceLevelUpReq::default_instance_->InitAsDefaultInstance();
  TFashionAutoEnhanceReq::default_instance_->InitAsDefaultInstance();
  TFashionRebornReq::default_instance_->InitAsDefaultInstance();
  TFashionActivateHandbookReq::default_instance_->InitAsDefaultInstance();
  TFashionCombineFashionReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fFashion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fFashion_2eproto {
  StaticDescriptorInitializer_net_2fFashion_2eproto() {
    protobuf_AddDesc_net_2fFashion_2eproto();
  }
} static_descriptor_initializer_net_2fFashion_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TFashionSingle::kTidFieldNumber;
const int TFashionSingle::kEnhanceLvFieldNumber;
const int TFashionSingle::kExpireTimeFieldNumber;
#endif  // !_MSC_VER

TFashionSingle::TFashionSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionSingle)
}

void TFashionSingle::InitAsDefaultInstance() {
}

TFashionSingle::TFashionSingle(const TFashionSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionSingle)
}

void TFashionSingle::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  enhancelv_ = 0u;
  expiretime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionSingle::~TFashionSingle() {
  // @@protoc_insertion_point(destructor:pb.TFashionSingle)
  SharedDtor();
}

void TFashionSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionSingle_descriptor_;
}

const TFashionSingle& TFashionSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionSingle* TFashionSingle::default_instance_ = NULL;

TFashionSingle* TFashionSingle::New() const {
  return new TFashionSingle;
}

void TFashionSingle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFashionSingle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, expiretime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EnhanceLv;
        break;
      }

      // optional uint32 EnhanceLv = 2;
      case 2: {
        if (tag == 16) {
         parse_EnhanceLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enhancelv_)));
          set_has_enhancelv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ExpireTime;
        break;
      }

      // optional uint64 ExpireTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ExpireTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiretime_)));
          set_has_expiretime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionSingle)
  return false;
#undef DO_
}

void TFashionSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionSingle)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 EnhanceLv = 2;
  if (has_enhancelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->enhancelv(), output);
  }

  // optional uint64 ExpireTime = 3;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expiretime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionSingle)
}

::google::protobuf::uint8* TFashionSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionSingle)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 EnhanceLv = 2;
  if (has_enhancelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->enhancelv(), target);
  }

  // optional uint64 ExpireTime = 3;
  if (has_expiretime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expiretime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionSingle)
  return target;
}

int TFashionSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 EnhanceLv = 2;
    if (has_enhancelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enhancelv());
    }

    // optional uint64 ExpireTime = 3;
    if (has_expiretime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiretime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionSingle::MergeFrom(const TFashionSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_enhancelv()) {
      set_enhancelv(from.enhancelv());
    }
    if (from.has_expiretime()) {
      set_expiretime(from.expiretime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionSingle::CopyFrom(const TFashionSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionSingle::IsInitialized() const {

  return true;
}

void TFashionSingle::Swap(TFashionSingle* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(enhancelv_, other->enhancelv_);
    std::swap(expiretime_, other->expiretime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionSingle_descriptor_;
  metadata.reflection = TFashionSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionDecompose::kTidFieldNumber;
const int TFashionDecompose::kNumFieldNumber;
#endif  // !_MSC_VER

TFashionDecompose::TFashionDecompose()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionDecompose)
}

void TFashionDecompose::InitAsDefaultInstance() {
}

TFashionDecompose::TFashionDecompose(const TFashionDecompose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionDecompose)
}

void TFashionDecompose::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionDecompose::~TFashionDecompose() {
  // @@protoc_insertion_point(destructor:pb.TFashionDecompose)
  SharedDtor();
}

void TFashionDecompose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionDecompose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionDecompose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionDecompose_descriptor_;
}

const TFashionDecompose& TFashionDecompose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionDecompose* TFashionDecompose::default_instance_ = NULL;

TFashionDecompose* TFashionDecompose::New() const {
  return new TFashionDecompose;
}

void TFashionDecompose::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFashionDecompose*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionDecompose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionDecompose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionDecompose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionDecompose)
  return false;
#undef DO_
}

void TFashionDecompose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionDecompose)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionDecompose)
}

::google::protobuf::uint8* TFashionDecompose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionDecompose)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionDecompose)
  return target;
}

int TFashionDecompose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionDecompose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionDecompose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionDecompose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionDecompose::MergeFrom(const TFashionDecompose& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionDecompose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionDecompose::CopyFrom(const TFashionDecompose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionDecompose::IsInitialized() const {

  return true;
}

void TFashionDecompose::Swap(TFashionDecompose* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionDecompose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionDecompose_descriptor_;
  metadata.reflection = TFashionDecompose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionGetFashionDataRsp::kFashionArrFieldNumber;
const int TFashionGetFashionDataRsp::kViewTidFieldNumber;
const int TFashionGetFashionDataRsp::kAttributeTidFieldNumber;
const int TFashionGetFashionDataRsp::kActivatedHandbookArrFieldNumber;
#endif  // !_MSC_VER

TFashionGetFashionDataRsp::TFashionGetFashionDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionGetFashionDataRsp)
}

void TFashionGetFashionDataRsp::InitAsDefaultInstance() {
}

TFashionGetFashionDataRsp::TFashionGetFashionDataRsp(const TFashionGetFashionDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionGetFashionDataRsp)
}

void TFashionGetFashionDataRsp::SharedCtor() {
  _cached_size_ = 0;
  viewtid_ = 0u;
  attributetid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionGetFashionDataRsp::~TFashionGetFashionDataRsp() {
  // @@protoc_insertion_point(destructor:pb.TFashionGetFashionDataRsp)
  SharedDtor();
}

void TFashionGetFashionDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionGetFashionDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionGetFashionDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionGetFashionDataRsp_descriptor_;
}

const TFashionGetFashionDataRsp& TFashionGetFashionDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionGetFashionDataRsp* TFashionGetFashionDataRsp::default_instance_ = NULL;

TFashionGetFashionDataRsp* TFashionGetFashionDataRsp::New() const {
  return new TFashionGetFashionDataRsp;
}

void TFashionGetFashionDataRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFashionGetFashionDataRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(viewtid_, attributetid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  fashionarr_.Clear();
  activatedhandbookarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionGetFashionDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionGetFashionDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFashionSingle FashionArr = 1;
      case 1: {
        if (tag == 10) {
         parse_FashionArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashionarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_FashionArr;
        if (input->ExpectTag(16)) goto parse_ViewTid;
        break;
      }

      // optional uint32 ViewTid = 2;
      case 2: {
        if (tag == 16) {
         parse_ViewTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewtid_)));
          set_has_viewtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AttributeTid;
        break;
      }

      // optional uint32 AttributeTid = 3;
      case 3: {
        if (tag == 24) {
         parse_AttributeTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attributetid_)));
          set_has_attributetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ActivatedHandbookArr;
        break;
      }

      // repeated uint32 ActivatedHandbookArr = 4;
      case 4: {
        if (tag == 32) {
         parse_ActivatedHandbookArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_activatedhandbookarr())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_activatedhandbookarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ActivatedHandbookArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionGetFashionDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionGetFashionDataRsp)
  return false;
#undef DO_
}

void TFashionGetFashionDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionGetFashionDataRsp)
  // repeated .pb.TFashionSingle FashionArr = 1;
  for (int i = 0; i < this->fashionarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fashionarr(i), output);
  }

  // optional uint32 ViewTid = 2;
  if (has_viewtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->viewtid(), output);
  }

  // optional uint32 AttributeTid = 3;
  if (has_attributetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->attributetid(), output);
  }

  // repeated uint32 ActivatedHandbookArr = 4;
  for (int i = 0; i < this->activatedhandbookarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->activatedhandbookarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionGetFashionDataRsp)
}

::google::protobuf::uint8* TFashionGetFashionDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionGetFashionDataRsp)
  // repeated .pb.TFashionSingle FashionArr = 1;
  for (int i = 0; i < this->fashionarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fashionarr(i), target);
  }

  // optional uint32 ViewTid = 2;
  if (has_viewtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->viewtid(), target);
  }

  // optional uint32 AttributeTid = 3;
  if (has_attributetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->attributetid(), target);
  }

  // repeated uint32 ActivatedHandbookArr = 4;
  for (int i = 0; i < this->activatedhandbookarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->activatedhandbookarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionGetFashionDataRsp)
  return target;
}

int TFashionGetFashionDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ViewTid = 2;
    if (has_viewtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viewtid());
    }

    // optional uint32 AttributeTid = 3;
    if (has_attributetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attributetid());
    }

  }
  // repeated .pb.TFashionSingle FashionArr = 1;
  total_size += 1 * this->fashionarr_size();
  for (int i = 0; i < this->fashionarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashionarr(i));
  }

  // repeated uint32 ActivatedHandbookArr = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->activatedhandbookarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->activatedhandbookarr(i));
    }
    total_size += 1 * this->activatedhandbookarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionGetFashionDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionGetFashionDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionGetFashionDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionGetFashionDataRsp::MergeFrom(const TFashionGetFashionDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashionarr_.MergeFrom(from.fashionarr_);
  activatedhandbookarr_.MergeFrom(from.activatedhandbookarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_viewtid()) {
      set_viewtid(from.viewtid());
    }
    if (from.has_attributetid()) {
      set_attributetid(from.attributetid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionGetFashionDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionGetFashionDataRsp::CopyFrom(const TFashionGetFashionDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionGetFashionDataRsp::IsInitialized() const {

  return true;
}

void TFashionGetFashionDataRsp::Swap(TFashionGetFashionDataRsp* other) {
  if (other != this) {
    fashionarr_.Swap(&other->fashionarr_);
    std::swap(viewtid_, other->viewtid_);
    std::swap(attributetid_, other->attributetid_);
    activatedhandbookarr_.Swap(&other->activatedhandbookarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionGetFashionDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionGetFashionDataRsp_descriptor_;
  metadata.reflection = TFashionGetFashionDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionUpdateFashionDataPush::kFashionArrFieldNumber;
const int TFashionUpdateFashionDataPush::kDecomposeArrFieldNumber;
const int TFashionUpdateFashionDataPush::kActivatedHandbookArrFieldNumber;
#endif  // !_MSC_VER

TFashionUpdateFashionDataPush::TFashionUpdateFashionDataPush()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionUpdateFashionDataPush)
}

void TFashionUpdateFashionDataPush::InitAsDefaultInstance() {
}

TFashionUpdateFashionDataPush::TFashionUpdateFashionDataPush(const TFashionUpdateFashionDataPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionUpdateFashionDataPush)
}

void TFashionUpdateFashionDataPush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionUpdateFashionDataPush::~TFashionUpdateFashionDataPush() {
  // @@protoc_insertion_point(destructor:pb.TFashionUpdateFashionDataPush)
  SharedDtor();
}

void TFashionUpdateFashionDataPush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionUpdateFashionDataPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionUpdateFashionDataPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionUpdateFashionDataPush_descriptor_;
}

const TFashionUpdateFashionDataPush& TFashionUpdateFashionDataPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionUpdateFashionDataPush* TFashionUpdateFashionDataPush::default_instance_ = NULL;

TFashionUpdateFashionDataPush* TFashionUpdateFashionDataPush::New() const {
  return new TFashionUpdateFashionDataPush;
}

void TFashionUpdateFashionDataPush::Clear() {
  fashionarr_.Clear();
  decomposearr_.Clear();
  activatedhandbookarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionUpdateFashionDataPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionUpdateFashionDataPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFashionSingle FashionArr = 1;
      case 1: {
        if (tag == 10) {
         parse_FashionArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashionarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_FashionArr;
        if (input->ExpectTag(18)) goto parse_DecomposeArr;
        break;
      }

      // repeated .pb.TFashionDecompose DecomposeArr = 2;
      case 2: {
        if (tag == 18) {
         parse_DecomposeArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_decomposearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DecomposeArr;
        if (input->ExpectTag(24)) goto parse_ActivatedHandbookArr;
        break;
      }

      // repeated uint32 ActivatedHandbookArr = 3;
      case 3: {
        if (tag == 24) {
         parse_ActivatedHandbookArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_activatedhandbookarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_activatedhandbookarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActivatedHandbookArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionUpdateFashionDataPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionUpdateFashionDataPush)
  return false;
#undef DO_
}

void TFashionUpdateFashionDataPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionUpdateFashionDataPush)
  // repeated .pb.TFashionSingle FashionArr = 1;
  for (int i = 0; i < this->fashionarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fashionarr(i), output);
  }

  // repeated .pb.TFashionDecompose DecomposeArr = 2;
  for (int i = 0; i < this->decomposearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->decomposearr(i), output);
  }

  // repeated uint32 ActivatedHandbookArr = 3;
  for (int i = 0; i < this->activatedhandbookarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->activatedhandbookarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionUpdateFashionDataPush)
}

::google::protobuf::uint8* TFashionUpdateFashionDataPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionUpdateFashionDataPush)
  // repeated .pb.TFashionSingle FashionArr = 1;
  for (int i = 0; i < this->fashionarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fashionarr(i), target);
  }

  // repeated .pb.TFashionDecompose DecomposeArr = 2;
  for (int i = 0; i < this->decomposearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->decomposearr(i), target);
  }

  // repeated uint32 ActivatedHandbookArr = 3;
  for (int i = 0; i < this->activatedhandbookarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->activatedhandbookarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionUpdateFashionDataPush)
  return target;
}

int TFashionUpdateFashionDataPush::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TFashionSingle FashionArr = 1;
  total_size += 1 * this->fashionarr_size();
  for (int i = 0; i < this->fashionarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashionarr(i));
  }

  // repeated .pb.TFashionDecompose DecomposeArr = 2;
  total_size += 1 * this->decomposearr_size();
  for (int i = 0; i < this->decomposearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->decomposearr(i));
  }

  // repeated uint32 ActivatedHandbookArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->activatedhandbookarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->activatedhandbookarr(i));
    }
    total_size += 1 * this->activatedhandbookarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionUpdateFashionDataPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionUpdateFashionDataPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionUpdateFashionDataPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionUpdateFashionDataPush::MergeFrom(const TFashionUpdateFashionDataPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashionarr_.MergeFrom(from.fashionarr_);
  decomposearr_.MergeFrom(from.decomposearr_);
  activatedhandbookarr_.MergeFrom(from.activatedhandbookarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionUpdateFashionDataPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionUpdateFashionDataPush::CopyFrom(const TFashionUpdateFashionDataPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionUpdateFashionDataPush::IsInitialized() const {

  return true;
}

void TFashionUpdateFashionDataPush::Swap(TFashionUpdateFashionDataPush* other) {
  if (other != this) {
    fashionarr_.Swap(&other->fashionarr_);
    decomposearr_.Swap(&other->decomposearr_);
    activatedhandbookarr_.Swap(&other->activatedhandbookarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionUpdateFashionDataPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionUpdateFashionDataPush_descriptor_;
  metadata.reflection = TFashionUpdateFashionDataPush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionSetViewFashionReq::kFashionTidFieldNumber;
#endif  // !_MSC_VER

TFashionSetViewFashionReq::TFashionSetViewFashionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionSetViewFashionReq)
}

void TFashionSetViewFashionReq::InitAsDefaultInstance() {
}

TFashionSetViewFashionReq::TFashionSetViewFashionReq(const TFashionSetViewFashionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionSetViewFashionReq)
}

void TFashionSetViewFashionReq::SharedCtor() {
  _cached_size_ = 0;
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionSetViewFashionReq::~TFashionSetViewFashionReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionSetViewFashionReq)
  SharedDtor();
}

void TFashionSetViewFashionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionSetViewFashionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionSetViewFashionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionSetViewFashionReq_descriptor_;
}

const TFashionSetViewFashionReq& TFashionSetViewFashionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionSetViewFashionReq* TFashionSetViewFashionReq::default_instance_ = NULL;

TFashionSetViewFashionReq* TFashionSetViewFashionReq::New() const {
  return new TFashionSetViewFashionReq;
}

void TFashionSetViewFashionReq::Clear() {
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionSetViewFashionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionSetViewFashionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FashionTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fashiontid_)));
          set_has_fashiontid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionSetViewFashionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionSetViewFashionReq)
  return false;
#undef DO_
}

void TFashionSetViewFashionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionSetViewFashionReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fashiontid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionSetViewFashionReq)
}

::google::protobuf::uint8* TFashionSetViewFashionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionSetViewFashionReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fashiontid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionSetViewFashionReq)
  return target;
}

int TFashionSetViewFashionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FashionTid = 1;
    if (has_fashiontid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fashiontid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionSetViewFashionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionSetViewFashionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionSetViewFashionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionSetViewFashionReq::MergeFrom(const TFashionSetViewFashionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashiontid()) {
      set_fashiontid(from.fashiontid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionSetViewFashionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionSetViewFashionReq::CopyFrom(const TFashionSetViewFashionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionSetViewFashionReq::IsInitialized() const {

  return true;
}

void TFashionSetViewFashionReq::Swap(TFashionSetViewFashionReq* other) {
  if (other != this) {
    std::swap(fashiontid_, other->fashiontid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionSetViewFashionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionSetViewFashionReq_descriptor_;
  metadata.reflection = TFashionSetViewFashionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionSetViewFashionRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TFashionSetViewFashionRsp::TFashionSetViewFashionRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionSetViewFashionRsp)
}

void TFashionSetViewFashionRsp::InitAsDefaultInstance() {
}

TFashionSetViewFashionRsp::TFashionSetViewFashionRsp(const TFashionSetViewFashionRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionSetViewFashionRsp)
}

void TFashionSetViewFashionRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionSetViewFashionRsp::~TFashionSetViewFashionRsp() {
  // @@protoc_insertion_point(destructor:pb.TFashionSetViewFashionRsp)
  SharedDtor();
}

void TFashionSetViewFashionRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionSetViewFashionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionSetViewFashionRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionSetViewFashionRsp_descriptor_;
}

const TFashionSetViewFashionRsp& TFashionSetViewFashionRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionSetViewFashionRsp* TFashionSetViewFashionRsp::default_instance_ = NULL;

TFashionSetViewFashionRsp* TFashionSetViewFashionRsp::New() const {
  return new TFashionSetViewFashionRsp;
}

void TFashionSetViewFashionRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionSetViewFashionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionSetViewFashionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionSetViewFashionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionSetViewFashionRsp)
  return false;
#undef DO_
}

void TFashionSetViewFashionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionSetViewFashionRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionSetViewFashionRsp)
}

::google::protobuf::uint8* TFashionSetViewFashionRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionSetViewFashionRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionSetViewFashionRsp)
  return target;
}

int TFashionSetViewFashionRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionSetViewFashionRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionSetViewFashionRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionSetViewFashionRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionSetViewFashionRsp::MergeFrom(const TFashionSetViewFashionRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionSetViewFashionRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionSetViewFashionRsp::CopyFrom(const TFashionSetViewFashionRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionSetViewFashionRsp::IsInitialized() const {

  return true;
}

void TFashionSetViewFashionRsp::Swap(TFashionSetViewFashionRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionSetViewFashionRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionSetViewFashionRsp_descriptor_;
  metadata.reflection = TFashionSetViewFashionRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionSetAttributeFashionReq::kFashionTidFieldNumber;
#endif  // !_MSC_VER

TFashionSetAttributeFashionReq::TFashionSetAttributeFashionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionSetAttributeFashionReq)
}

void TFashionSetAttributeFashionReq::InitAsDefaultInstance() {
}

TFashionSetAttributeFashionReq::TFashionSetAttributeFashionReq(const TFashionSetAttributeFashionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionSetAttributeFashionReq)
}

void TFashionSetAttributeFashionReq::SharedCtor() {
  _cached_size_ = 0;
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionSetAttributeFashionReq::~TFashionSetAttributeFashionReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionSetAttributeFashionReq)
  SharedDtor();
}

void TFashionSetAttributeFashionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionSetAttributeFashionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionSetAttributeFashionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionSetAttributeFashionReq_descriptor_;
}

const TFashionSetAttributeFashionReq& TFashionSetAttributeFashionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionSetAttributeFashionReq* TFashionSetAttributeFashionReq::default_instance_ = NULL;

TFashionSetAttributeFashionReq* TFashionSetAttributeFashionReq::New() const {
  return new TFashionSetAttributeFashionReq;
}

void TFashionSetAttributeFashionReq::Clear() {
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionSetAttributeFashionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionSetAttributeFashionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FashionTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fashiontid_)));
          set_has_fashiontid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionSetAttributeFashionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionSetAttributeFashionReq)
  return false;
#undef DO_
}

void TFashionSetAttributeFashionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionSetAttributeFashionReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fashiontid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionSetAttributeFashionReq)
}

::google::protobuf::uint8* TFashionSetAttributeFashionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionSetAttributeFashionReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fashiontid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionSetAttributeFashionReq)
  return target;
}

int TFashionSetAttributeFashionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FashionTid = 1;
    if (has_fashiontid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fashiontid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionSetAttributeFashionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionSetAttributeFashionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionSetAttributeFashionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionSetAttributeFashionReq::MergeFrom(const TFashionSetAttributeFashionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashiontid()) {
      set_fashiontid(from.fashiontid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionSetAttributeFashionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionSetAttributeFashionReq::CopyFrom(const TFashionSetAttributeFashionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionSetAttributeFashionReq::IsInitialized() const {

  return true;
}

void TFashionSetAttributeFashionReq::Swap(TFashionSetAttributeFashionReq* other) {
  if (other != this) {
    std::swap(fashiontid_, other->fashiontid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionSetAttributeFashionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionSetAttributeFashionReq_descriptor_;
  metadata.reflection = TFashionSetAttributeFashionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionEnhanceLevelUpReq::kFashionTidFieldNumber;
#endif  // !_MSC_VER

TFashionEnhanceLevelUpReq::TFashionEnhanceLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionEnhanceLevelUpReq)
}

void TFashionEnhanceLevelUpReq::InitAsDefaultInstance() {
}

TFashionEnhanceLevelUpReq::TFashionEnhanceLevelUpReq(const TFashionEnhanceLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionEnhanceLevelUpReq)
}

void TFashionEnhanceLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionEnhanceLevelUpReq::~TFashionEnhanceLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionEnhanceLevelUpReq)
  SharedDtor();
}

void TFashionEnhanceLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionEnhanceLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionEnhanceLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionEnhanceLevelUpReq_descriptor_;
}

const TFashionEnhanceLevelUpReq& TFashionEnhanceLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionEnhanceLevelUpReq* TFashionEnhanceLevelUpReq::default_instance_ = NULL;

TFashionEnhanceLevelUpReq* TFashionEnhanceLevelUpReq::New() const {
  return new TFashionEnhanceLevelUpReq;
}

void TFashionEnhanceLevelUpReq::Clear() {
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionEnhanceLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionEnhanceLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FashionTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fashiontid_)));
          set_has_fashiontid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionEnhanceLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionEnhanceLevelUpReq)
  return false;
#undef DO_
}

void TFashionEnhanceLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionEnhanceLevelUpReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fashiontid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionEnhanceLevelUpReq)
}

::google::protobuf::uint8* TFashionEnhanceLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionEnhanceLevelUpReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fashiontid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionEnhanceLevelUpReq)
  return target;
}

int TFashionEnhanceLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FashionTid = 1;
    if (has_fashiontid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fashiontid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionEnhanceLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionEnhanceLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionEnhanceLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionEnhanceLevelUpReq::MergeFrom(const TFashionEnhanceLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashiontid()) {
      set_fashiontid(from.fashiontid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionEnhanceLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionEnhanceLevelUpReq::CopyFrom(const TFashionEnhanceLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionEnhanceLevelUpReq::IsInitialized() const {

  return true;
}

void TFashionEnhanceLevelUpReq::Swap(TFashionEnhanceLevelUpReq* other) {
  if (other != this) {
    std::swap(fashiontid_, other->fashiontid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionEnhanceLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionEnhanceLevelUpReq_descriptor_;
  metadata.reflection = TFashionEnhanceLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionAutoEnhanceReq::kFashionTidFieldNumber;
#endif  // !_MSC_VER

TFashionAutoEnhanceReq::TFashionAutoEnhanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionAutoEnhanceReq)
}

void TFashionAutoEnhanceReq::InitAsDefaultInstance() {
}

TFashionAutoEnhanceReq::TFashionAutoEnhanceReq(const TFashionAutoEnhanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionAutoEnhanceReq)
}

void TFashionAutoEnhanceReq::SharedCtor() {
  _cached_size_ = 0;
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionAutoEnhanceReq::~TFashionAutoEnhanceReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionAutoEnhanceReq)
  SharedDtor();
}

void TFashionAutoEnhanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionAutoEnhanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionAutoEnhanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionAutoEnhanceReq_descriptor_;
}

const TFashionAutoEnhanceReq& TFashionAutoEnhanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionAutoEnhanceReq* TFashionAutoEnhanceReq::default_instance_ = NULL;

TFashionAutoEnhanceReq* TFashionAutoEnhanceReq::New() const {
  return new TFashionAutoEnhanceReq;
}

void TFashionAutoEnhanceReq::Clear() {
  fashiontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionAutoEnhanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionAutoEnhanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FashionTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fashiontid_)));
          set_has_fashiontid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionAutoEnhanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionAutoEnhanceReq)
  return false;
#undef DO_
}

void TFashionAutoEnhanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionAutoEnhanceReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fashiontid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionAutoEnhanceReq)
}

::google::protobuf::uint8* TFashionAutoEnhanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionAutoEnhanceReq)
  // optional uint32 FashionTid = 1;
  if (has_fashiontid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fashiontid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionAutoEnhanceReq)
  return target;
}

int TFashionAutoEnhanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FashionTid = 1;
    if (has_fashiontid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fashiontid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionAutoEnhanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionAutoEnhanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionAutoEnhanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionAutoEnhanceReq::MergeFrom(const TFashionAutoEnhanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashiontid()) {
      set_fashiontid(from.fashiontid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionAutoEnhanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionAutoEnhanceReq::CopyFrom(const TFashionAutoEnhanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionAutoEnhanceReq::IsInitialized() const {

  return true;
}

void TFashionAutoEnhanceReq::Swap(TFashionAutoEnhanceReq* other) {
  if (other != this) {
    std::swap(fashiontid_, other->fashiontid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionAutoEnhanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionAutoEnhanceReq_descriptor_;
  metadata.reflection = TFashionAutoEnhanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionRebornReq::kFashionTidArrFieldNumber;
#endif  // !_MSC_VER

TFashionRebornReq::TFashionRebornReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionRebornReq)
}

void TFashionRebornReq::InitAsDefaultInstance() {
}

TFashionRebornReq::TFashionRebornReq(const TFashionRebornReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionRebornReq)
}

void TFashionRebornReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionRebornReq::~TFashionRebornReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionRebornReq)
  SharedDtor();
}

void TFashionRebornReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionRebornReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionRebornReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionRebornReq_descriptor_;
}

const TFashionRebornReq& TFashionRebornReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionRebornReq* TFashionRebornReq::default_instance_ = NULL;

TFashionRebornReq* TFashionRebornReq::New() const {
  return new TFashionRebornReq;
}

void TFashionRebornReq::Clear() {
  fashiontidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionRebornReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionRebornReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 FashionTidArr = 1;
      case 1: {
        if (tag == 8) {
         parse_FashionTidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_fashiontidarr())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fashiontidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_FashionTidArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionRebornReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionRebornReq)
  return false;
#undef DO_
}

void TFashionRebornReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionRebornReq)
  // repeated uint32 FashionTidArr = 1;
  for (int i = 0; i < this->fashiontidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->fashiontidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionRebornReq)
}

::google::protobuf::uint8* TFashionRebornReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionRebornReq)
  // repeated uint32 FashionTidArr = 1;
  for (int i = 0; i < this->fashiontidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->fashiontidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionRebornReq)
  return target;
}

int TFashionRebornReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 FashionTidArr = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->fashiontidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->fashiontidarr(i));
    }
    total_size += 1 * this->fashiontidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionRebornReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionRebornReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionRebornReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionRebornReq::MergeFrom(const TFashionRebornReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashiontidarr_.MergeFrom(from.fashiontidarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionRebornReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionRebornReq::CopyFrom(const TFashionRebornReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionRebornReq::IsInitialized() const {

  return true;
}

void TFashionRebornReq::Swap(TFashionRebornReq* other) {
  if (other != this) {
    fashiontidarr_.Swap(&other->fashiontidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionRebornReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionRebornReq_descriptor_;
  metadata.reflection = TFashionRebornReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionActivateHandbookReq::kHandbookTidFieldNumber;
#endif  // !_MSC_VER

TFashionActivateHandbookReq::TFashionActivateHandbookReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionActivateHandbookReq)
}

void TFashionActivateHandbookReq::InitAsDefaultInstance() {
}

TFashionActivateHandbookReq::TFashionActivateHandbookReq(const TFashionActivateHandbookReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionActivateHandbookReq)
}

void TFashionActivateHandbookReq::SharedCtor() {
  _cached_size_ = 0;
  handbooktid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionActivateHandbookReq::~TFashionActivateHandbookReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionActivateHandbookReq)
  SharedDtor();
}

void TFashionActivateHandbookReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionActivateHandbookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionActivateHandbookReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionActivateHandbookReq_descriptor_;
}

const TFashionActivateHandbookReq& TFashionActivateHandbookReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionActivateHandbookReq* TFashionActivateHandbookReq::default_instance_ = NULL;

TFashionActivateHandbookReq* TFashionActivateHandbookReq::New() const {
  return new TFashionActivateHandbookReq;
}

void TFashionActivateHandbookReq::Clear() {
  handbooktid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionActivateHandbookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionActivateHandbookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HandbookTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handbooktid_)));
          set_has_handbooktid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionActivateHandbookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionActivateHandbookReq)
  return false;
#undef DO_
}

void TFashionActivateHandbookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionActivateHandbookReq)
  // optional uint32 HandbookTid = 1;
  if (has_handbooktid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->handbooktid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionActivateHandbookReq)
}

::google::protobuf::uint8* TFashionActivateHandbookReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionActivateHandbookReq)
  // optional uint32 HandbookTid = 1;
  if (has_handbooktid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->handbooktid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionActivateHandbookReq)
  return target;
}

int TFashionActivateHandbookReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HandbookTid = 1;
    if (has_handbooktid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handbooktid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionActivateHandbookReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionActivateHandbookReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionActivateHandbookReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionActivateHandbookReq::MergeFrom(const TFashionActivateHandbookReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_handbooktid()) {
      set_handbooktid(from.handbooktid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionActivateHandbookReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionActivateHandbookReq::CopyFrom(const TFashionActivateHandbookReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionActivateHandbookReq::IsInitialized() const {

  return true;
}

void TFashionActivateHandbookReq::Swap(TFashionActivateHandbookReq* other) {
  if (other != this) {
    std::swap(handbooktid_, other->handbooktid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionActivateHandbookReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionActivateHandbookReq_descriptor_;
  metadata.reflection = TFashionActivateHandbookReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFashionCombineFashionReq::kTidFieldNumber;
#endif  // !_MSC_VER

TFashionCombineFashionReq::TFashionCombineFashionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFashionCombineFashionReq)
}

void TFashionCombineFashionReq::InitAsDefaultInstance() {
}

TFashionCombineFashionReq::TFashionCombineFashionReq(const TFashionCombineFashionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFashionCombineFashionReq)
}

void TFashionCombineFashionReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFashionCombineFashionReq::~TFashionCombineFashionReq() {
  // @@protoc_insertion_point(destructor:pb.TFashionCombineFashionReq)
  SharedDtor();
}

void TFashionCombineFashionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFashionCombineFashionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFashionCombineFashionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFashionCombineFashionReq_descriptor_;
}

const TFashionCombineFashionReq& TFashionCombineFashionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFashion_2eproto();
  return *default_instance_;
}

TFashionCombineFashionReq* TFashionCombineFashionReq::default_instance_ = NULL;

TFashionCombineFashionReq* TFashionCombineFashionReq::New() const {
  return new TFashionCombineFashionReq;
}

void TFashionCombineFashionReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFashionCombineFashionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFashionCombineFashionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFashionCombineFashionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFashionCombineFashionReq)
  return false;
#undef DO_
}

void TFashionCombineFashionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFashionCombineFashionReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFashionCombineFashionReq)
}

::google::protobuf::uint8* TFashionCombineFashionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFashionCombineFashionReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFashionCombineFashionReq)
  return target;
}

int TFashionCombineFashionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFashionCombineFashionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFashionCombineFashionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFashionCombineFashionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFashionCombineFashionReq::MergeFrom(const TFashionCombineFashionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFashionCombineFashionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFashionCombineFashionReq::CopyFrom(const TFashionCombineFashionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFashionCombineFashionReq::IsInitialized() const {

  return true;
}

void TFashionCombineFashionReq::Swap(TFashionCombineFashionReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFashionCombineFashionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFashionCombineFashionReq_descriptor_;
  metadata.reflection = TFashionCombineFashionReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
