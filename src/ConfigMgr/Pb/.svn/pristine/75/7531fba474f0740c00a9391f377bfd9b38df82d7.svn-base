// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Pub.proto

#ifndef PROTOBUF_net_2fPub_2eproto__INCLUDED
#define PROTOBUF_net_2fPub_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fPub_2eproto();
void protobuf_AssignDesc_net_2fPub_2eproto();
void protobuf_ShutdownFile_net_2fPub_2eproto();

class TPubCommonRecruitInfo;
class TPubNationWishList;
class TPubHotSpotHeroRectNumInfo;
class TPubGetInfoRsp;
class TPubHotSpotRecruitInfo;
class TPubHotSpotRecruitReq;
class TPubHotSpotRecruitRsp;
class TPubOpenHotSpotLuckyBoxReq;
class TPubRecruitReq;
class TPubRecruitRsp;
class TPubRecruitReward;
class TPubReceiveScoreRewardReq;
class TPubReceiveScoreRewardRsp;
class TPubBuyRecruitItemReq;
class TPubSetWishListReq;
class TPubSetWishListStatusReq;
class TPubReceiveHotSpotRecruitRewardReq;

enum ERecruitType {
  JUNIOR = 1,
  SENIOR = 2,
  CAMP = 3,
  HOTSPOT = 100
};
bool ERecruitType_IsValid(int value);
const ERecruitType ERecruitType_MIN = JUNIOR;
const ERecruitType ERecruitType_MAX = HOTSPOT;
const int ERecruitType_ARRAYSIZE = ERecruitType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERecruitType_descriptor();
inline const ::std::string& ERecruitType_Name(ERecruitType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERecruitType_descriptor(), value);
}
inline bool ERecruitType_Parse(
    const ::std::string& name, ERecruitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERecruitType>(
    ERecruitType_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TPubCommonRecruitInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubCommonRecruitInfo : public ::google::protobuf::Message {
 public:
  TPubCommonRecruitInfo();
  virtual ~TPubCommonRecruitInfo();

  TPubCommonRecruitInfo(const TPubCommonRecruitInfo& from);

  inline TPubCommonRecruitInfo& operator=(const TPubCommonRecruitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubCommonRecruitInfo& default_instance();

  void Swap(TPubCommonRecruitInfo* other);

  // implements Message ----------------------------------------------

  TPubCommonRecruitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubCommonRecruitInfo& from);
  void MergeFrom(const TPubCommonRecruitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ERecruitType RecruitType = 1;
  inline bool has_recruittype() const;
  inline void clear_recruittype();
  static const int kRecruitTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ERecruitType recruittype() const;
  inline void set_recruittype(::pb::ERecruitType value);

  // optional uint32 UserFreeNum = 2;
  inline bool has_userfreenum() const;
  inline void clear_userfreenum();
  static const int kUserFreeNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>userfreenum</name>
  		<replaceName>UserFreeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userfreenum</name>
  		<replaceName>UserFreeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userfreenum</name>
  		<replaceName>UserFreeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 userfreenum() const;
  inline void set_userfreenum(::google::protobuf::uint32 value);

  // optional uint64 FreeTime = 3;
  inline bool has_freetime() const;
  inline void clear_freetime();
  static const int kFreeTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>freetime</name>
  		<replaceName>FreeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freetime</name>
  		<replaceName>FreeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freetime</name>
  		<replaceName>FreeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 freetime() const;
  inline void set_freetime(::google::protobuf::uint64 value);

  // optional uint32 RecruitNum = 4;
  inline bool has_recruitnum() const;
  inline void clear_recruitnum();
  static const int kRecruitNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitnum() const;
  inline void set_recruitnum(::google::protobuf::uint32 value);

  // optional uint32 UserGoldNum = 5;
  inline bool has_usergoldnum() const;
  inline void clear_usergoldnum();
  static const int kUserGoldNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>usergoldnum</name>
  		<replaceName>UserGoldNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usergoldnum</name>
  		<replaceName>UserGoldNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usergoldnum</name>
  		<replaceName>UserGoldNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usergoldnum() const;
  inline void set_usergoldnum(::google::protobuf::uint32 value);

  // optional uint32 RecruitScore = 6;
  inline bool has_recruitscore() const;
  inline void clear_recruitscore();
  static const int kRecruitScoreFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitscore() const;
  inline void set_recruitscore(::google::protobuf::uint32 value);

  // repeated uint32 ReceiveArray = 7;
  inline int receivearray_size() const;
  inline void clear_receivearray();
  static const int kReceiveArrayFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receivearray_size</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivearray(int index) const;
  inline void set_receivearray(int index, ::google::protobuf::uint32 value);
  inline void add_receivearray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receivearray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receivearray();

  // optional uint32 CampId = 8;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);

  // optional uint32 BuyRecItemNum = 9;
  inline bool has_buyrecitemnum() const;
  inline void clear_buyrecitemnum();
  static const int kBuyRecItemNumFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TPubCommonRecruitInfo</name>
  	<Function>
  		<name>buyrecitemnum</name>
  		<replaceName>BuyRecItemNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buyrecitemnum</name>
  		<replaceName>BuyRecItemNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buyrecitemnum</name>
  		<replaceName>BuyRecItemNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buyrecitemnum() const;
  inline void set_buyrecitemnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubCommonRecruitInfo)
 private:
  inline void set_has_recruittype();
  inline void clear_has_recruittype();
  inline void set_has_userfreenum();
  inline void clear_has_userfreenum();
  inline void set_has_freetime();
  inline void clear_has_freetime();
  inline void set_has_recruitnum();
  inline void clear_has_recruitnum();
  inline void set_has_usergoldnum();
  inline void clear_has_usergoldnum();
  inline void set_has_recruitscore();
  inline void clear_has_recruitscore();
  inline void set_has_campid();
  inline void clear_has_campid();
  inline void set_has_buyrecitemnum();
  inline void clear_has_buyrecitemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int recruittype_;
  ::google::protobuf::uint32 userfreenum_;
  ::google::protobuf::uint64 freetime_;
  ::google::protobuf::uint32 recruitnum_;
  ::google::protobuf::uint32 usergoldnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receivearray_;
  ::google::protobuf::uint32 recruitscore_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 buyrecitemnum_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubCommonRecruitInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubNationWishList</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubNationWishList : public ::google::protobuf::Message {
 public:
  TPubNationWishList();
  virtual ~TPubNationWishList();

  TPubNationWishList(const TPubNationWishList& from);

  inline TPubNationWishList& operator=(const TPubNationWishList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubNationWishList& default_instance();

  void Swap(TPubNationWishList* other);

  // implements Message ----------------------------------------------

  TPubNationWishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubNationWishList& from);
  void MergeFrom(const TPubNationWishList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 CampId = 1;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubNationWishList</name>
  	<Function>
  		<name>campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);

  // repeated uint32 HeroTid = 2;
  inline int herotid_size() const;
  inline void clear_herotid();
  static const int kHeroTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubNationWishList</name>
  	<Function>
  		<name>herotid</name>
  		<replaceName>HeroTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_herotid</name>
  		<replaceName>HeroTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_herotid</name>
  		<replaceName>HeroTid</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herotid</name>
  		<replaceName>HeroTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>herotid_size</name>
  		<replaceName>HeroTid</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 herotid(int index) const;
  inline void set_herotid(int index, ::google::protobuf::uint32 value);
  inline void add_herotid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      herotid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_herotid();

  // @@protoc_insertion_point(class_scope:pb.TPubNationWishList)
 private:
  inline void set_has_campid();
  inline void clear_has_campid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > herotid_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubNationWishList* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubHotSpotHeroRectNumInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubHotSpotHeroRectNumInfo : public ::google::protobuf::Message {
 public:
  TPubHotSpotHeroRectNumInfo();
  virtual ~TPubHotSpotHeroRectNumInfo();

  TPubHotSpotHeroRectNumInfo(const TPubHotSpotHeroRectNumInfo& from);

  inline TPubHotSpotHeroRectNumInfo& operator=(const TPubHotSpotHeroRectNumInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubHotSpotHeroRectNumInfo& default_instance();

  void Swap(TPubHotSpotHeroRectNumInfo* other);

  // implements Message ----------------------------------------------

  TPubHotSpotHeroRectNumInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubHotSpotHeroRectNumInfo& from);
  void MergeFrom(const TPubHotSpotHeroRectNumInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HotSpotHeroId = 1;
  inline bool has_hotspotheroid() const;
  inline void clear_hotspotheroid();
  static const int kHotSpotHeroIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotHeroRectNumInfo</name>
  	<Function>
  		<name>hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hotspotheroid() const;
  inline void set_hotspotheroid(::google::protobuf::uint32 value);

  // optional uint32 RecruitNum = 2;
  inline bool has_recruitnum() const;
  inline void clear_recruitnum();
  static const int kRecruitNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotHeroRectNumInfo</name>
  	<Function>
  		<name>recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitnum() const;
  inline void set_recruitnum(::google::protobuf::uint32 value);

  // repeated uint32 RewardIndexArr = 3;
  inline int rewardindexarr_size() const;
  inline void clear_rewardindexarr();
  static const int kRewardIndexArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotHeroRectNumInfo</name>
  	<Function>
  		<name>rewardindexarr</name>
  		<replaceName>RewardIndexArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardindexarr</name>
  		<replaceName>RewardIndexArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardindexarr</name>
  		<replaceName>RewardIndexArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardindexarr</name>
  		<replaceName>RewardIndexArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardindexarr_size</name>
  		<replaceName>RewardIndexArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardindexarr(int index) const;
  inline void set_rewardindexarr(int index, ::google::protobuf::uint32 value);
  inline void add_rewardindexarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardindexarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardindexarr();

  // @@protoc_insertion_point(class_scope:pb.TPubHotSpotHeroRectNumInfo)
 private:
  inline void set_has_hotspotheroid();
  inline void clear_has_hotspotheroid();
  inline void set_has_recruitnum();
  inline void clear_has_recruitnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hotspotheroid_;
  ::google::protobuf::uint32 recruitnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardindexarr_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubHotSpotHeroRectNumInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubGetInfoRsp : public ::google::protobuf::Message {
 public:
  TPubGetInfoRsp();
  virtual ~TPubGetInfoRsp();

  TPubGetInfoRsp(const TPubGetInfoRsp& from);

  inline TPubGetInfoRsp& operator=(const TPubGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubGetInfoRsp& default_instance();

  void Swap(TPubGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TPubGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubGetInfoRsp& from);
  void MergeFrom(const TPubGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TPubCommonRecruitInfo RecruitInfoArray = 1;
  inline int recruitinfoarray_size() const;
  inline void clear_recruitinfoarray();
  static const int kRecruitInfoArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>recruitinfoarray</name>
  		<replaceName>RecruitInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_recruitinfoarray</name>
  		<replaceName>RecruitInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_recruitinfoarray</name>
  		<replaceName>RecruitInfoArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitinfoarray</name>
  		<replaceName>RecruitInfoArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>recruitinfoarray_size</name>
  		<replaceName>RecruitInfoArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPubCommonRecruitInfo& recruitinfoarray(int index) const;
  inline ::pb::TPubCommonRecruitInfo* mutable_recruitinfoarray(int index);
  inline ::pb::TPubCommonRecruitInfo* add_recruitinfoarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubCommonRecruitInfo >&
      recruitinfoarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPubCommonRecruitInfo >*
      mutable_recruitinfoarray();

  // optional uint32 SeniorHalfGoldNum = 2;
  inline bool has_seniorhalfgoldnum() const;
  inline void clear_seniorhalfgoldnum();
  static const int kSeniorHalfGoldNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>seniorhalfgoldnum</name>
  		<replaceName>SeniorHalfGoldNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_seniorhalfgoldnum</name>
  		<replaceName>SeniorHalfGoldNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_seniorhalfgoldnum</name>
  		<replaceName>SeniorHalfGoldNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 seniorhalfgoldnum() const;
  inline void set_seniorhalfgoldnum(::google::protobuf::uint32 value);

  // optional .pb.TPubHotSpotRecruitInfo HotSpotRecruitInfo = 3;
  inline bool has_hotspotrecruitinfo() const;
  inline void clear_hotspotrecruitinfo();
  static const int kHotSpotRecruitInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>hotspotrecruitinfo</name>
  		<replaceName>HotSpotRecruitInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hotspotrecruitinfo</name>
  		<replaceName>HotSpotRecruitInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_hotspotrecruitinfo</name>
  		<replaceName>HotSpotRecruitInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hotspotrecruitinfo</name>
  		<replaceName>HotSpotRecruitInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPubHotSpotRecruitInfo& hotspotrecruitinfo() const;
  inline ::pb::TPubHotSpotRecruitInfo* mutable_hotspotrecruitinfo();
  inline ::pb::TPubHotSpotRecruitInfo* release_hotspotrecruitinfo();
  inline void set_allocated_hotspotrecruitinfo(::pb::TPubHotSpotRecruitInfo* hotspotrecruitinfo);

  // optional uint64 NoviceRewardTime = 4;
  inline bool has_novicerewardtime() const;
  inline void clear_novicerewardtime();
  static const int kNoviceRewardTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>novicerewardtime</name>
  		<replaceName>NoviceRewardTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_novicerewardtime</name>
  		<replaceName>NoviceRewardTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_novicerewardtime</name>
  		<replaceName>NoviceRewardTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 novicerewardtime() const;
  inline void set_novicerewardtime(::google::protobuf::uint64 value);

  // repeated .pb.TPubNationWishList WishListArr = 5;
  inline int wishlistarr_size() const;
  inline void clear_wishlistarr();
  static const int kWishListArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>wishlistarr</name>
  		<replaceName>WishListArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_wishlistarr</name>
  		<replaceName>WishListArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_wishlistarr</name>
  		<replaceName>WishListArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_wishlistarr</name>
  		<replaceName>WishListArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>wishlistarr_size</name>
  		<replaceName>WishListArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPubNationWishList& wishlistarr(int index) const;
  inline ::pb::TPubNationWishList* mutable_wishlistarr(int index);
  inline ::pb::TPubNationWishList* add_wishlistarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubNationWishList >&
      wishlistarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPubNationWishList >*
      mutable_wishlistarr();

  // optional bool WishListIsOpen = 6;
  inline bool has_wishlistisopen() const;
  inline void clear_wishlistisopen();
  static const int kWishListIsOpenFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>wishlistisopen</name>
  		<replaceName>WishListIsOpen</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_wishlistisopen</name>
  		<replaceName>WishListIsOpen</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_wishlistisopen</name>
  		<replaceName>WishListIsOpen</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool wishlistisopen() const;
  inline void set_wishlistisopen(bool value);

  // repeated .pb.TPubHotSpotHeroRectNumInfo HotSpotHeroRectNumArr = 7;
  inline int hotspotherorectnumarr_size() const;
  inline void clear_hotspotherorectnumarr();
  static const int kHotSpotHeroRectNumArrFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>hotspotherorectnumarr</name>
  		<replaceName>HotSpotHeroRectNumArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_hotspotherorectnumarr</name>
  		<replaceName>HotSpotHeroRectNumArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_hotspotherorectnumarr</name>
  		<replaceName>HotSpotHeroRectNumArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hotspotherorectnumarr</name>
  		<replaceName>HotSpotHeroRectNumArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>hotspotherorectnumarr_size</name>
  		<replaceName>HotSpotHeroRectNumArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPubHotSpotHeroRectNumInfo& hotspotherorectnumarr(int index) const;
  inline ::pb::TPubHotSpotHeroRectNumInfo* mutable_hotspotherorectnumarr(int index);
  inline ::pb::TPubHotSpotHeroRectNumInfo* add_hotspotherorectnumarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubHotSpotHeroRectNumInfo >&
      hotspotherorectnumarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPubHotSpotHeroRectNumInfo >*
      mutable_hotspotherorectnumarr();

  // optional uint32 CanBuyHotSpotRecNum = 8;
  inline bool has_canbuyhotspotrecnum() const;
  inline void clear_canbuyhotspotrecnum();
  static const int kCanBuyHotSpotRecNumFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TPubGetInfoRsp</name>
  	<Function>
  		<name>canbuyhotspotrecnum</name>
  		<replaceName>CanBuyHotSpotRecNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_canbuyhotspotrecnum</name>
  		<replaceName>CanBuyHotSpotRecNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_canbuyhotspotrecnum</name>
  		<replaceName>CanBuyHotSpotRecNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 canbuyhotspotrecnum() const;
  inline void set_canbuyhotspotrecnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubGetInfoRsp)
 private:
  inline void set_has_seniorhalfgoldnum();
  inline void clear_has_seniorhalfgoldnum();
  inline void set_has_hotspotrecruitinfo();
  inline void clear_has_hotspotrecruitinfo();
  inline void set_has_novicerewardtime();
  inline void clear_has_novicerewardtime();
  inline void set_has_wishlistisopen();
  inline void clear_has_wishlistisopen();
  inline void set_has_canbuyhotspotrecnum();
  inline void clear_has_canbuyhotspotrecnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPubCommonRecruitInfo > recruitinfoarray_;
  ::pb::TPubHotSpotRecruitInfo* hotspotrecruitinfo_;
  ::google::protobuf::uint64 novicerewardtime_;
  ::google::protobuf::uint32 seniorhalfgoldnum_;
  bool wishlistisopen_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPubNationWishList > wishlistarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPubHotSpotHeroRectNumInfo > hotspotherorectnumarr_;
  ::google::protobuf::uint32 canbuyhotspotrecnum_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubHotSpotRecruitInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubHotSpotRecruitInfo : public ::google::protobuf::Message {
 public:
  TPubHotSpotRecruitInfo();
  virtual ~TPubHotSpotRecruitInfo();

  TPubHotSpotRecruitInfo(const TPubHotSpotRecruitInfo& from);

  inline TPubHotSpotRecruitInfo& operator=(const TPubHotSpotRecruitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubHotSpotRecruitInfo& default_instance();

  void Swap(TPubHotSpotRecruitInfo* other);

  // implements Message ----------------------------------------------

  TPubHotSpotRecruitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubHotSpotRecruitInfo& from);
  void MergeFrom(const TPubHotSpotRecruitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ReplaceId = 1;
  inline bool has_replaceid() const;
  inline void clear_replaceid();
  static const int kReplaceIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitInfo</name>
  	<Function>
  		<name>replaceid</name>
  		<replaceName>ReplaceId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_replaceid</name>
  		<replaceName>ReplaceId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_replaceid</name>
  		<replaceName>ReplaceId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 replaceid() const;
  inline void set_replaceid(::google::protobuf::uint32 value);

  // optional bool IsOnce = 2;
  inline bool has_isonce() const;
  inline void clear_isonce();
  static const int kIsOnceFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitInfo</name>
  	<Function>
  		<name>isonce</name>
  		<replaceName>IsOnce</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isonce</name>
  		<replaceName>IsOnce</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isonce</name>
  		<replaceName>IsOnce</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool isonce() const;
  inline void set_isonce(bool value);

  // optional uint32 RoundIndex = 3;
  inline bool has_roundindex() const;
  inline void clear_roundindex();
  static const int kRoundIndexFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitInfo</name>
  	<Function>
  		<name>roundindex</name>
  		<replaceName>RoundIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roundindex</name>
  		<replaceName>RoundIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roundindex</name>
  		<replaceName>RoundIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 roundindex() const;
  inline void set_roundindex(::google::protobuf::uint32 value);

  // optional uint64 RoundStartTime = 4;
  inline bool has_roundstarttime() const;
  inline void clear_roundstarttime();
  static const int kRoundStartTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitInfo</name>
  	<Function>
  		<name>roundstarttime</name>
  		<replaceName>RoundStartTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roundstarttime</name>
  		<replaceName>RoundStartTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roundstarttime</name>
  		<replaceName>RoundStartTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roundstarttime() const;
  inline void set_roundstarttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TPubHotSpotRecruitInfo)
 private:
  inline void set_has_replaceid();
  inline void clear_has_replaceid();
  inline void set_has_isonce();
  inline void clear_has_isonce();
  inline void set_has_roundindex();
  inline void clear_has_roundindex();
  inline void set_has_roundstarttime();
  inline void clear_has_roundstarttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 replaceid_;
  bool isonce_;
  ::google::protobuf::uint64 roundstarttime_;
  ::google::protobuf::uint32 roundindex_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubHotSpotRecruitInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubHotSpotRecruitReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubHotSpotRecruitReq : public ::google::protobuf::Message {
 public:
  TPubHotSpotRecruitReq();
  virtual ~TPubHotSpotRecruitReq();

  TPubHotSpotRecruitReq(const TPubHotSpotRecruitReq& from);

  inline TPubHotSpotRecruitReq& operator=(const TPubHotSpotRecruitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubHotSpotRecruitReq& default_instance();

  void Swap(TPubHotSpotRecruitReq* other);

  // implements Message ----------------------------------------------

  TPubHotSpotRecruitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubHotSpotRecruitReq& from);
  void MergeFrom(const TPubHotSpotRecruitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HotSpotHeroId = 1;
  inline bool has_hotspotheroid() const;
  inline void clear_hotspotheroid();
  static const int kHotSpotHeroIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitReq</name>
  	<Function>
  		<name>hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hotspotheroid() const;
  inline void set_hotspotheroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubHotSpotRecruitReq)
 private:
  inline void set_has_hotspotheroid();
  inline void clear_has_hotspotheroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hotspotheroid_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubHotSpotRecruitReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubHotSpotRecruitRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubHotSpotRecruitRsp : public ::google::protobuf::Message {
 public:
  TPubHotSpotRecruitRsp();
  virtual ~TPubHotSpotRecruitRsp();

  TPubHotSpotRecruitRsp(const TPubHotSpotRecruitRsp& from);

  inline TPubHotSpotRecruitRsp& operator=(const TPubHotSpotRecruitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubHotSpotRecruitRsp& default_instance();

  void Swap(TPubHotSpotRecruitRsp* other);

  // implements Message ----------------------------------------------

  TPubHotSpotRecruitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubHotSpotRecruitRsp& from);
  void MergeFrom(const TPubHotSpotRecruitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TPubRecruitReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPubRecruitReward& rewardarr(int index) const;
  inline ::pb::TPubRecruitReward* mutable_rewardarr(int index);
  inline ::pb::TPubRecruitReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >*
      mutable_rewardarr();

  // optional uint32 ArtifactLeftNum = 2;
  inline bool has_artifactleftnum() const;
  inline void clear_artifactleftnum();
  static const int kArtifactLeftNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubHotSpotRecruitRsp</name>
  	<Function>
  		<name>artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactleftnum() const;
  inline void set_artifactleftnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubHotSpotRecruitRsp)
 private:
  inline void set_has_artifactleftnum();
  inline void clear_has_artifactleftnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward > rewardarr_;
  ::google::protobuf::uint32 artifactleftnum_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubHotSpotRecruitRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubOpenHotSpotLuckyBoxReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubOpenHotSpotLuckyBoxReq : public ::google::protobuf::Message {
 public:
  TPubOpenHotSpotLuckyBoxReq();
  virtual ~TPubOpenHotSpotLuckyBoxReq();

  TPubOpenHotSpotLuckyBoxReq(const TPubOpenHotSpotLuckyBoxReq& from);

  inline TPubOpenHotSpotLuckyBoxReq& operator=(const TPubOpenHotSpotLuckyBoxReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubOpenHotSpotLuckyBoxReq& default_instance();

  void Swap(TPubOpenHotSpotLuckyBoxReq* other);

  // implements Message ----------------------------------------------

  TPubOpenHotSpotLuckyBoxReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubOpenHotSpotLuckyBoxReq& from);
  void MergeFrom(const TPubOpenHotSpotLuckyBoxReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HotSpotHeroId = 1;
  inline bool has_hotspotheroid() const;
  inline void clear_hotspotheroid();
  static const int kHotSpotHeroIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubOpenHotSpotLuckyBoxReq</name>
  	<Function>
  		<name>hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hotspotheroid() const;
  inline void set_hotspotheroid(::google::protobuf::uint32 value);

  // optional uint32 BoxIndex = 2;
  inline bool has_boxindex() const;
  inline void clear_boxindex();
  static const int kBoxIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubOpenHotSpotLuckyBoxReq</name>
  	<Function>
  		<name>boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxindex</name>
  		<replaceName>BoxIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxindex() const;
  inline void set_boxindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubOpenHotSpotLuckyBoxReq)
 private:
  inline void set_has_hotspotheroid();
  inline void clear_has_hotspotheroid();
  inline void set_has_boxindex();
  inline void clear_has_boxindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hotspotheroid_;
  ::google::protobuf::uint32 boxindex_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubOpenHotSpotLuckyBoxReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubRecruitReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubRecruitReq : public ::google::protobuf::Message {
 public:
  TPubRecruitReq();
  virtual ~TPubRecruitReq();

  TPubRecruitReq(const TPubRecruitReq& from);

  inline TPubRecruitReq& operator=(const TPubRecruitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubRecruitReq& default_instance();

  void Swap(TPubRecruitReq* other);

  // implements Message ----------------------------------------------

  TPubRecruitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubRecruitReq& from);
  void MergeFrom(const TPubRecruitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ERecruitType RecruitType = 1;
  inline bool has_recruittype() const;
  inline void clear_recruittype();
  static const int kRecruitTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitReq</name>
  	<Function>
  		<name>recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ERecruitType recruittype() const;
  inline void set_recruittype(::pb::ERecruitType value);

  // optional uint32 CampId = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitReq</name>
  	<Function>
  		<name>campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubRecruitReq)
 private:
  inline void set_has_recruittype();
  inline void clear_has_recruittype();
  inline void set_has_campid();
  inline void clear_has_campid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int recruittype_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubRecruitReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubRecruitRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubRecruitRsp : public ::google::protobuf::Message {
 public:
  TPubRecruitRsp();
  virtual ~TPubRecruitRsp();

  TPubRecruitRsp(const TPubRecruitRsp& from);

  inline TPubRecruitRsp& operator=(const TPubRecruitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubRecruitRsp& default_instance();

  void Swap(TPubRecruitRsp* other);

  // implements Message ----------------------------------------------

  TPubRecruitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubRecruitRsp& from);
  void MergeFrom(const TPubRecruitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitRsp</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 BoomNum = 2;
  inline bool has_boomnum() const;
  inline void clear_boomnum();
  static const int kBoomNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitRsp</name>
  	<Function>
  		<name>boomnum</name>
  		<replaceName>BoomNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boomnum</name>
  		<replaceName>BoomNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boomnum</name>
  		<replaceName>BoomNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boomnum() const;
  inline void set_boomnum(::google::protobuf::uint32 value);

  // repeated .pb.TPubRecruitReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPubRecruitReward& rewardarr(int index) const;
  inline ::pb::TPubRecruitReward* mutable_rewardarr(int index);
  inline ::pb::TPubRecruitReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >*
      mutable_rewardarr();

  // optional uint32 UseGoldNum = 4;
  inline bool has_usegoldnum() const;
  inline void clear_usegoldnum();
  static const int kUseGoldNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitRsp</name>
  	<Function>
  		<name>usegoldnum</name>
  		<replaceName>UseGoldNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usegoldnum</name>
  		<replaceName>UseGoldNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usegoldnum</name>
  		<replaceName>UseGoldNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usegoldnum() const;
  inline void set_usegoldnum(::google::protobuf::uint32 value);

  // optional uint32 ArtifactLeftNum = 5;
  inline bool has_artifactleftnum() const;
  inline void clear_artifactleftnum();
  static const int kArtifactLeftNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitRsp</name>
  	<Function>
  		<name>artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactleftnum() const;
  inline void set_artifactleftnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubRecruitRsp)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_boomnum();
  inline void clear_has_boomnum();
  inline void set_has_usegoldnum();
  inline void clear_has_usegoldnum();
  inline void set_has_artifactleftnum();
  inline void clear_has_artifactleftnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 boomnum_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward > rewardarr_;
  ::google::protobuf::uint32 usegoldnum_;
  ::google::protobuf::uint32 artifactleftnum_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubRecruitRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubRecruitReward</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubRecruitReward : public ::google::protobuf::Message {
 public:
  TPubRecruitReward();
  virtual ~TPubRecruitReward();

  TPubRecruitReward(const TPubRecruitReward& from);

  inline TPubRecruitReward& operator=(const TPubRecruitReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubRecruitReward& default_instance();

  void Swap(TPubRecruitReward* other);

  // implements Message ----------------------------------------------

  TPubRecruitReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubRecruitReward& from);
  void MergeFrom(const TPubRecruitReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TCommonReward Reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitReward</name>
  	<Function>
  		<name>reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& reward() const;
  inline ::pb::TCommonReward* mutable_reward();
  inline ::pb::TCommonReward* release_reward();
  inline void set_allocated_reward(::pb::TCommonReward* reward);

  // optional uint32 CritRatio = 2;
  inline bool has_critratio() const;
  inline void clear_critratio();
  static const int kCritRatioFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubRecruitReward</name>
  	<Function>
  		<name>critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 critratio() const;
  inline void set_critratio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubRecruitReward)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_critratio();
  inline void clear_has_critratio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TCommonReward* reward_;
  ::google::protobuf::uint32 critratio_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubRecruitReward* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubReceiveScoreRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubReceiveScoreRewardReq : public ::google::protobuf::Message {
 public:
  TPubReceiveScoreRewardReq();
  virtual ~TPubReceiveScoreRewardReq();

  TPubReceiveScoreRewardReq(const TPubReceiveScoreRewardReq& from);

  inline TPubReceiveScoreRewardReq& operator=(const TPubReceiveScoreRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubReceiveScoreRewardReq& default_instance();

  void Swap(TPubReceiveScoreRewardReq* other);

  // implements Message ----------------------------------------------

  TPubReceiveScoreRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubReceiveScoreRewardReq& from);
  void MergeFrom(const TPubReceiveScoreRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ScoreIndex = 1;
  inline bool has_scoreindex() const;
  inline void clear_scoreindex();
  static const int kScoreIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardReq</name>
  	<Function>
  		<name>scoreindex</name>
  		<replaceName>ScoreIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_scoreindex</name>
  		<replaceName>ScoreIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_scoreindex</name>
  		<replaceName>ScoreIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 scoreindex() const;
  inline void set_scoreindex(::google::protobuf::uint32 value);

  // optional .pb.ERecruitType RecruitType = 2;
  inline bool has_recruittype() const;
  inline void clear_recruittype();
  static const int kRecruitTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardReq</name>
  	<Function>
  		<name>recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ERecruitType recruittype() const;
  inline void set_recruittype(::pb::ERecruitType value);

  // optional uint32 CampId = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardReq</name>
  	<Function>
  		<name>campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);

  // optional uint32 HeroFragId = 4;
  inline bool has_herofragid() const;
  inline void clear_herofragid();
  static const int kHeroFragIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardReq</name>
  	<Function>
  		<name>herofragid</name>
  		<replaceName>HeroFragId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_herofragid</name>
  		<replaceName>HeroFragId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herofragid</name>
  		<replaceName>HeroFragId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 herofragid() const;
  inline void set_herofragid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubReceiveScoreRewardReq)
 private:
  inline void set_has_scoreindex();
  inline void clear_has_scoreindex();
  inline void set_has_recruittype();
  inline void clear_has_recruittype();
  inline void set_has_campid();
  inline void clear_has_campid();
  inline void set_has_herofragid();
  inline void clear_has_herofragid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 scoreindex_;
  int recruittype_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 herofragid_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubReceiveScoreRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubReceiveScoreRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubReceiveScoreRewardRsp : public ::google::protobuf::Message {
 public:
  TPubReceiveScoreRewardRsp();
  virtual ~TPubReceiveScoreRewardRsp();

  TPubReceiveScoreRewardRsp(const TPubReceiveScoreRewardRsp& from);

  inline TPubReceiveScoreRewardRsp& operator=(const TPubReceiveScoreRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubReceiveScoreRewardRsp& default_instance();

  void Swap(TPubReceiveScoreRewardRsp* other);

  // implements Message ----------------------------------------------

  TPubReceiveScoreRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubReceiveScoreRewardRsp& from);
  void MergeFrom(const TPubReceiveScoreRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardRsp</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // repeated .pb.TCommonReward RewardArray = 2;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // repeated uint32 ReceiveArray = 3;
  inline int receivearray_size() const;
  inline void clear_receivearray();
  static const int kReceiveArrayFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveScoreRewardRsp</name>
  	<Function>
  		<name>receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivearray</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receivearray_size</name>
  		<replaceName>ReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivearray(int index) const;
  inline void set_receivearray(int index, ::google::protobuf::uint32 value);
  inline void add_receivearray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receivearray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receivearray();

  // @@protoc_insertion_point(class_scope:pb.TPubReceiveScoreRewardRsp)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receivearray_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubReceiveScoreRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubBuyRecruitItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubBuyRecruitItemReq : public ::google::protobuf::Message {
 public:
  TPubBuyRecruitItemReq();
  virtual ~TPubBuyRecruitItemReq();

  TPubBuyRecruitItemReq(const TPubBuyRecruitItemReq& from);

  inline TPubBuyRecruitItemReq& operator=(const TPubBuyRecruitItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubBuyRecruitItemReq& default_instance();

  void Swap(TPubBuyRecruitItemReq* other);

  // implements Message ----------------------------------------------

  TPubBuyRecruitItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubBuyRecruitItemReq& from);
  void MergeFrom(const TPubBuyRecruitItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BuyNum = 1;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubBuyRecruitItemReq</name>
  	<Function>
  		<name>buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // optional .pb.ERecruitType RecruitType = 2;
  inline bool has_recruittype() const;
  inline void clear_recruittype();
  static const int kRecruitTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubBuyRecruitItemReq</name>
  	<Function>
  		<name>recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruittype</name>
  		<replaceName>RecruitType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ERecruitType recruittype() const;
  inline void set_recruittype(::pb::ERecruitType value);

  // optional uint32 CampId = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPubBuyRecruitItemReq</name>
  	<Function>
  		<name>campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubBuyRecruitItemReq)
 private:
  inline void set_has_buynum();
  inline void clear_has_buynum();
  inline void set_has_recruittype();
  inline void clear_has_recruittype();
  inline void set_has_campid();
  inline void clear_has_campid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 buynum_;
  int recruittype_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubBuyRecruitItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubSetWishListReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubSetWishListReq : public ::google::protobuf::Message {
 public:
  TPubSetWishListReq();
  virtual ~TPubSetWishListReq();

  TPubSetWishListReq(const TPubSetWishListReq& from);

  inline TPubSetWishListReq& operator=(const TPubSetWishListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubSetWishListReq& default_instance();

  void Swap(TPubSetWishListReq* other);

  // implements Message ----------------------------------------------

  TPubSetWishListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubSetWishListReq& from);
  void MergeFrom(const TPubSetWishListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PreHeroTid = 1;
  inline bool has_preherotid() const;
  inline void clear_preherotid();
  static const int kPreHeroTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubSetWishListReq</name>
  	<Function>
  		<name>preherotid</name>
  		<replaceName>PreHeroTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_preherotid</name>
  		<replaceName>PreHeroTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_preherotid</name>
  		<replaceName>PreHeroTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 preherotid() const;
  inline void set_preherotid(::google::protobuf::uint32 value);

  // optional uint32 SetHeroTid = 2;
  inline bool has_setherotid() const;
  inline void clear_setherotid();
  static const int kSetHeroTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubSetWishListReq</name>
  	<Function>
  		<name>setherotid</name>
  		<replaceName>SetHeroTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_setherotid</name>
  		<replaceName>SetHeroTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_setherotid</name>
  		<replaceName>SetHeroTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 setherotid() const;
  inline void set_setherotid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubSetWishListReq)
 private:
  inline void set_has_preherotid();
  inline void clear_has_preherotid();
  inline void set_has_setherotid();
  inline void clear_has_setherotid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 preherotid_;
  ::google::protobuf::uint32 setherotid_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubSetWishListReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubSetWishListStatusReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubSetWishListStatusReq : public ::google::protobuf::Message {
 public:
  TPubSetWishListStatusReq();
  virtual ~TPubSetWishListStatusReq();

  TPubSetWishListStatusReq(const TPubSetWishListStatusReq& from);

  inline TPubSetWishListStatusReq& operator=(const TPubSetWishListStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubSetWishListStatusReq& default_instance();

  void Swap(TPubSetWishListStatusReq* other);

  // implements Message ----------------------------------------------

  TPubSetWishListStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubSetWishListStatusReq& from);
  void MergeFrom(const TPubSetWishListStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsOPen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOPenFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubSetWishListStatusReq</name>
  	<Function>
  		<name>isopen</name>
  		<replaceName>IsOPen</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isopen</name>
  		<replaceName>IsOPen</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isopen</name>
  		<replaceName>IsOPen</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // @@protoc_insertion_point(class_scope:pb.TPubSetWishListStatusReq)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool isopen_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubSetWishListStatusReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPubReceiveHotSpotRecruitRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Pub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPubReceiveHotSpotRecruitRewardReq : public ::google::protobuf::Message {
 public:
  TPubReceiveHotSpotRecruitRewardReq();
  virtual ~TPubReceiveHotSpotRecruitRewardReq();

  TPubReceiveHotSpotRecruitRewardReq(const TPubReceiveHotSpotRecruitRewardReq& from);

  inline TPubReceiveHotSpotRecruitRewardReq& operator=(const TPubReceiveHotSpotRecruitRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPubReceiveHotSpotRecruitRewardReq& default_instance();

  void Swap(TPubReceiveHotSpotRecruitRewardReq* other);

  // implements Message ----------------------------------------------

  TPubReceiveHotSpotRecruitRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPubReceiveHotSpotRecruitRewardReq& from);
  void MergeFrom(const TPubReceiveHotSpotRecruitRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HotSpotHeroId = 1;
  inline bool has_hotspotheroid() const;
  inline void clear_hotspotheroid();
  static const int kHotSpotHeroIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveHotSpotRecruitRewardReq</name>
  	<Function>
  		<name>hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hotspotheroid</name>
  		<replaceName>HotSpotHeroId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hotspotheroid() const;
  inline void set_hotspotheroid(::google::protobuf::uint32 value);

  // optional uint32 RewardIndex = 2;
  inline bool has_rewardindex() const;
  inline void clear_rewardindex();
  static const int kRewardIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPubReceiveHotSpotRecruitRewardReq</name>
  	<Function>
  		<name>rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardindex() const;
  inline void set_rewardindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPubReceiveHotSpotRecruitRewardReq)
 private:
  inline void set_has_hotspotheroid();
  inline void clear_has_hotspotheroid();
  inline void set_has_rewardindex();
  inline void clear_has_rewardindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hotspotheroid_;
  ::google::protobuf::uint32 rewardindex_;
  friend void  protobuf_AddDesc_net_2fPub_2eproto();
  friend void protobuf_AssignDesc_net_2fPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fPub_2eproto();

  void InitAsDefaultInstance();
  static TPubReceiveHotSpotRecruitRewardReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TPubCommonRecruitInfo

// optional .pb.ERecruitType RecruitType = 1;
inline bool TPubCommonRecruitInfo::has_recruittype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_recruittype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubCommonRecruitInfo::clear_has_recruittype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubCommonRecruitInfo::clear_recruittype() {
  recruittype_ = 1;
  clear_has_recruittype();
}
inline ::pb::ERecruitType TPubCommonRecruitInfo::recruittype() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.RecruitType)
  return static_cast< ::pb::ERecruitType >(recruittype_);
}
inline void TPubCommonRecruitInfo::set_recruittype(::pb::ERecruitType value) {
  assert(::pb::ERecruitType_IsValid(value));
  set_has_recruittype();
  recruittype_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.RecruitType)
}

// optional uint32 UserFreeNum = 2;
inline bool TPubCommonRecruitInfo::has_userfreenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_userfreenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubCommonRecruitInfo::clear_has_userfreenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubCommonRecruitInfo::clear_userfreenum() {
  userfreenum_ = 0u;
  clear_has_userfreenum();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::userfreenum() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.UserFreeNum)
  return userfreenum_;
}
inline void TPubCommonRecruitInfo::set_userfreenum(::google::protobuf::uint32 value) {
  set_has_userfreenum();
  userfreenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.UserFreeNum)
}

// optional uint64 FreeTime = 3;
inline bool TPubCommonRecruitInfo::has_freetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_freetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPubCommonRecruitInfo::clear_has_freetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPubCommonRecruitInfo::clear_freetime() {
  freetime_ = GOOGLE_ULONGLONG(0);
  clear_has_freetime();
}
inline ::google::protobuf::uint64 TPubCommonRecruitInfo::freetime() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.FreeTime)
  return freetime_;
}
inline void TPubCommonRecruitInfo::set_freetime(::google::protobuf::uint64 value) {
  set_has_freetime();
  freetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.FreeTime)
}

// optional uint32 RecruitNum = 4;
inline bool TPubCommonRecruitInfo::has_recruitnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_recruitnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TPubCommonRecruitInfo::clear_has_recruitnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TPubCommonRecruitInfo::clear_recruitnum() {
  recruitnum_ = 0u;
  clear_has_recruitnum();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::recruitnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.RecruitNum)
  return recruitnum_;
}
inline void TPubCommonRecruitInfo::set_recruitnum(::google::protobuf::uint32 value) {
  set_has_recruitnum();
  recruitnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.RecruitNum)
}

// optional uint32 UserGoldNum = 5;
inline bool TPubCommonRecruitInfo::has_usergoldnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_usergoldnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TPubCommonRecruitInfo::clear_has_usergoldnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TPubCommonRecruitInfo::clear_usergoldnum() {
  usergoldnum_ = 0u;
  clear_has_usergoldnum();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::usergoldnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.UserGoldNum)
  return usergoldnum_;
}
inline void TPubCommonRecruitInfo::set_usergoldnum(::google::protobuf::uint32 value) {
  set_has_usergoldnum();
  usergoldnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.UserGoldNum)
}

// optional uint32 RecruitScore = 6;
inline bool TPubCommonRecruitInfo::has_recruitscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_recruitscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TPubCommonRecruitInfo::clear_has_recruitscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TPubCommonRecruitInfo::clear_recruitscore() {
  recruitscore_ = 0u;
  clear_has_recruitscore();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::recruitscore() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.RecruitScore)
  return recruitscore_;
}
inline void TPubCommonRecruitInfo::set_recruitscore(::google::protobuf::uint32 value) {
  set_has_recruitscore();
  recruitscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.RecruitScore)
}

// repeated uint32 ReceiveArray = 7;
inline int TPubCommonRecruitInfo::receivearray_size() const {
  return receivearray_.size();
}
inline void TPubCommonRecruitInfo::clear_receivearray() {
  receivearray_.Clear();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::receivearray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.ReceiveArray)
  return receivearray_.Get(index);
}
inline void TPubCommonRecruitInfo::set_receivearray(int index, ::google::protobuf::uint32 value) {
  receivearray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.ReceiveArray)
}
inline void TPubCommonRecruitInfo::add_receivearray(::google::protobuf::uint32 value) {
  receivearray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TPubCommonRecruitInfo.ReceiveArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TPubCommonRecruitInfo::receivearray() const {
  // @@protoc_insertion_point(field_list:pb.TPubCommonRecruitInfo.ReceiveArray)
  return receivearray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TPubCommonRecruitInfo::mutable_receivearray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubCommonRecruitInfo.ReceiveArray)
  return &receivearray_;
}

// optional uint32 CampId = 8;
inline bool TPubCommonRecruitInfo::has_campid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_campid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TPubCommonRecruitInfo::clear_has_campid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TPubCommonRecruitInfo::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::campid() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.CampId)
  return campid_;
}
inline void TPubCommonRecruitInfo::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.CampId)
}

// optional uint32 BuyRecItemNum = 9;
inline bool TPubCommonRecruitInfo::has_buyrecitemnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TPubCommonRecruitInfo::set_has_buyrecitemnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TPubCommonRecruitInfo::clear_has_buyrecitemnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TPubCommonRecruitInfo::clear_buyrecitemnum() {
  buyrecitemnum_ = 0u;
  clear_has_buyrecitemnum();
}
inline ::google::protobuf::uint32 TPubCommonRecruitInfo::buyrecitemnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubCommonRecruitInfo.BuyRecItemNum)
  return buyrecitemnum_;
}
inline void TPubCommonRecruitInfo::set_buyrecitemnum(::google::protobuf::uint32 value) {
  set_has_buyrecitemnum();
  buyrecitemnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubCommonRecruitInfo.BuyRecItemNum)
}

// -------------------------------------------------------------------

// TPubNationWishList

// optional uint32 CampId = 1;
inline bool TPubNationWishList::has_campid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubNationWishList::set_has_campid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubNationWishList::clear_has_campid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubNationWishList::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 TPubNationWishList::campid() const {
  // @@protoc_insertion_point(field_get:pb.TPubNationWishList.CampId)
  return campid_;
}
inline void TPubNationWishList::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubNationWishList.CampId)
}

// repeated uint32 HeroTid = 2;
inline int TPubNationWishList::herotid_size() const {
  return herotid_.size();
}
inline void TPubNationWishList::clear_herotid() {
  herotid_.Clear();
}
inline ::google::protobuf::uint32 TPubNationWishList::herotid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubNationWishList.HeroTid)
  return herotid_.Get(index);
}
inline void TPubNationWishList::set_herotid(int index, ::google::protobuf::uint32 value) {
  herotid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TPubNationWishList.HeroTid)
}
inline void TPubNationWishList::add_herotid(::google::protobuf::uint32 value) {
  herotid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TPubNationWishList.HeroTid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TPubNationWishList::herotid() const {
  // @@protoc_insertion_point(field_list:pb.TPubNationWishList.HeroTid)
  return herotid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TPubNationWishList::mutable_herotid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubNationWishList.HeroTid)
  return &herotid_;
}

// -------------------------------------------------------------------

// TPubHotSpotHeroRectNumInfo

// optional uint32 HotSpotHeroId = 1;
inline bool TPubHotSpotHeroRectNumInfo::has_hotspotheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubHotSpotHeroRectNumInfo::set_has_hotspotheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubHotSpotHeroRectNumInfo::clear_has_hotspotheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubHotSpotHeroRectNumInfo::clear_hotspotheroid() {
  hotspotheroid_ = 0u;
  clear_has_hotspotheroid();
}
inline ::google::protobuf::uint32 TPubHotSpotHeroRectNumInfo::hotspotheroid() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotHeroRectNumInfo.HotSpotHeroId)
  return hotspotheroid_;
}
inline void TPubHotSpotHeroRectNumInfo::set_hotspotheroid(::google::protobuf::uint32 value) {
  set_has_hotspotheroid();
  hotspotheroid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotHeroRectNumInfo.HotSpotHeroId)
}

// optional uint32 RecruitNum = 2;
inline bool TPubHotSpotHeroRectNumInfo::has_recruitnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubHotSpotHeroRectNumInfo::set_has_recruitnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubHotSpotHeroRectNumInfo::clear_has_recruitnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubHotSpotHeroRectNumInfo::clear_recruitnum() {
  recruitnum_ = 0u;
  clear_has_recruitnum();
}
inline ::google::protobuf::uint32 TPubHotSpotHeroRectNumInfo::recruitnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotHeroRectNumInfo.RecruitNum)
  return recruitnum_;
}
inline void TPubHotSpotHeroRectNumInfo::set_recruitnum(::google::protobuf::uint32 value) {
  set_has_recruitnum();
  recruitnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotHeroRectNumInfo.RecruitNum)
}

// repeated uint32 RewardIndexArr = 3;
inline int TPubHotSpotHeroRectNumInfo::rewardindexarr_size() const {
  return rewardindexarr_.size();
}
inline void TPubHotSpotHeroRectNumInfo::clear_rewardindexarr() {
  rewardindexarr_.Clear();
}
inline ::google::protobuf::uint32 TPubHotSpotHeroRectNumInfo::rewardindexarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotHeroRectNumInfo.RewardIndexArr)
  return rewardindexarr_.Get(index);
}
inline void TPubHotSpotHeroRectNumInfo::set_rewardindexarr(int index, ::google::protobuf::uint32 value) {
  rewardindexarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotHeroRectNumInfo.RewardIndexArr)
}
inline void TPubHotSpotHeroRectNumInfo::add_rewardindexarr(::google::protobuf::uint32 value) {
  rewardindexarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TPubHotSpotHeroRectNumInfo.RewardIndexArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TPubHotSpotHeroRectNumInfo::rewardindexarr() const {
  // @@protoc_insertion_point(field_list:pb.TPubHotSpotHeroRectNumInfo.RewardIndexArr)
  return rewardindexarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TPubHotSpotHeroRectNumInfo::mutable_rewardindexarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubHotSpotHeroRectNumInfo.RewardIndexArr)
  return &rewardindexarr_;
}

// -------------------------------------------------------------------

// TPubGetInfoRsp

// repeated .pb.TPubCommonRecruitInfo RecruitInfoArray = 1;
inline int TPubGetInfoRsp::recruitinfoarray_size() const {
  return recruitinfoarray_.size();
}
inline void TPubGetInfoRsp::clear_recruitinfoarray() {
  recruitinfoarray_.Clear();
}
inline const ::pb::TPubCommonRecruitInfo& TPubGetInfoRsp::recruitinfoarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.RecruitInfoArray)
  return recruitinfoarray_.Get(index);
}
inline ::pb::TPubCommonRecruitInfo* TPubGetInfoRsp::mutable_recruitinfoarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPubGetInfoRsp.RecruitInfoArray)
  return recruitinfoarray_.Mutable(index);
}
inline ::pb::TPubCommonRecruitInfo* TPubGetInfoRsp::add_recruitinfoarray() {
  // @@protoc_insertion_point(field_add:pb.TPubGetInfoRsp.RecruitInfoArray)
  return recruitinfoarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubCommonRecruitInfo >&
TPubGetInfoRsp::recruitinfoarray() const {
  // @@protoc_insertion_point(field_list:pb.TPubGetInfoRsp.RecruitInfoArray)
  return recruitinfoarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPubCommonRecruitInfo >*
TPubGetInfoRsp::mutable_recruitinfoarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubGetInfoRsp.RecruitInfoArray)
  return &recruitinfoarray_;
}

// optional uint32 SeniorHalfGoldNum = 2;
inline bool TPubGetInfoRsp::has_seniorhalfgoldnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubGetInfoRsp::set_has_seniorhalfgoldnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubGetInfoRsp::clear_has_seniorhalfgoldnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubGetInfoRsp::clear_seniorhalfgoldnum() {
  seniorhalfgoldnum_ = 0u;
  clear_has_seniorhalfgoldnum();
}
inline ::google::protobuf::uint32 TPubGetInfoRsp::seniorhalfgoldnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.SeniorHalfGoldNum)
  return seniorhalfgoldnum_;
}
inline void TPubGetInfoRsp::set_seniorhalfgoldnum(::google::protobuf::uint32 value) {
  set_has_seniorhalfgoldnum();
  seniorhalfgoldnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubGetInfoRsp.SeniorHalfGoldNum)
}

// optional .pb.TPubHotSpotRecruitInfo HotSpotRecruitInfo = 3;
inline bool TPubGetInfoRsp::has_hotspotrecruitinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPubGetInfoRsp::set_has_hotspotrecruitinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPubGetInfoRsp::clear_has_hotspotrecruitinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPubGetInfoRsp::clear_hotspotrecruitinfo() {
  if (hotspotrecruitinfo_ != NULL) hotspotrecruitinfo_->::pb::TPubHotSpotRecruitInfo::Clear();
  clear_has_hotspotrecruitinfo();
}
inline const ::pb::TPubHotSpotRecruitInfo& TPubGetInfoRsp::hotspotrecruitinfo() const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.HotSpotRecruitInfo)
  return hotspotrecruitinfo_ != NULL ? *hotspotrecruitinfo_ : *default_instance_->hotspotrecruitinfo_;
}
inline ::pb::TPubHotSpotRecruitInfo* TPubGetInfoRsp::mutable_hotspotrecruitinfo() {
  set_has_hotspotrecruitinfo();
  if (hotspotrecruitinfo_ == NULL) hotspotrecruitinfo_ = new ::pb::TPubHotSpotRecruitInfo;
  // @@protoc_insertion_point(field_mutable:pb.TPubGetInfoRsp.HotSpotRecruitInfo)
  return hotspotrecruitinfo_;
}
inline ::pb::TPubHotSpotRecruitInfo* TPubGetInfoRsp::release_hotspotrecruitinfo() {
  clear_has_hotspotrecruitinfo();
  ::pb::TPubHotSpotRecruitInfo* temp = hotspotrecruitinfo_;
  hotspotrecruitinfo_ = NULL;
  return temp;
}
inline void TPubGetInfoRsp::set_allocated_hotspotrecruitinfo(::pb::TPubHotSpotRecruitInfo* hotspotrecruitinfo) {
  delete hotspotrecruitinfo_;
  hotspotrecruitinfo_ = hotspotrecruitinfo;
  if (hotspotrecruitinfo) {
    set_has_hotspotrecruitinfo();
  } else {
    clear_has_hotspotrecruitinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TPubGetInfoRsp.HotSpotRecruitInfo)
}

// optional uint64 NoviceRewardTime = 4;
inline bool TPubGetInfoRsp::has_novicerewardtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TPubGetInfoRsp::set_has_novicerewardtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TPubGetInfoRsp::clear_has_novicerewardtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TPubGetInfoRsp::clear_novicerewardtime() {
  novicerewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_novicerewardtime();
}
inline ::google::protobuf::uint64 TPubGetInfoRsp::novicerewardtime() const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.NoviceRewardTime)
  return novicerewardtime_;
}
inline void TPubGetInfoRsp::set_novicerewardtime(::google::protobuf::uint64 value) {
  set_has_novicerewardtime();
  novicerewardtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubGetInfoRsp.NoviceRewardTime)
}

// repeated .pb.TPubNationWishList WishListArr = 5;
inline int TPubGetInfoRsp::wishlistarr_size() const {
  return wishlistarr_.size();
}
inline void TPubGetInfoRsp::clear_wishlistarr() {
  wishlistarr_.Clear();
}
inline const ::pb::TPubNationWishList& TPubGetInfoRsp::wishlistarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.WishListArr)
  return wishlistarr_.Get(index);
}
inline ::pb::TPubNationWishList* TPubGetInfoRsp::mutable_wishlistarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPubGetInfoRsp.WishListArr)
  return wishlistarr_.Mutable(index);
}
inline ::pb::TPubNationWishList* TPubGetInfoRsp::add_wishlistarr() {
  // @@protoc_insertion_point(field_add:pb.TPubGetInfoRsp.WishListArr)
  return wishlistarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubNationWishList >&
TPubGetInfoRsp::wishlistarr() const {
  // @@protoc_insertion_point(field_list:pb.TPubGetInfoRsp.WishListArr)
  return wishlistarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPubNationWishList >*
TPubGetInfoRsp::mutable_wishlistarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubGetInfoRsp.WishListArr)
  return &wishlistarr_;
}

// optional bool WishListIsOpen = 6;
inline bool TPubGetInfoRsp::has_wishlistisopen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TPubGetInfoRsp::set_has_wishlistisopen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TPubGetInfoRsp::clear_has_wishlistisopen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TPubGetInfoRsp::clear_wishlistisopen() {
  wishlistisopen_ = false;
  clear_has_wishlistisopen();
}
inline bool TPubGetInfoRsp::wishlistisopen() const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.WishListIsOpen)
  return wishlistisopen_;
}
inline void TPubGetInfoRsp::set_wishlistisopen(bool value) {
  set_has_wishlistisopen();
  wishlistisopen_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubGetInfoRsp.WishListIsOpen)
}

// repeated .pb.TPubHotSpotHeroRectNumInfo HotSpotHeroRectNumArr = 7;
inline int TPubGetInfoRsp::hotspotherorectnumarr_size() const {
  return hotspotherorectnumarr_.size();
}
inline void TPubGetInfoRsp::clear_hotspotherorectnumarr() {
  hotspotherorectnumarr_.Clear();
}
inline const ::pb::TPubHotSpotHeroRectNumInfo& TPubGetInfoRsp::hotspotherorectnumarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.HotSpotHeroRectNumArr)
  return hotspotherorectnumarr_.Get(index);
}
inline ::pb::TPubHotSpotHeroRectNumInfo* TPubGetInfoRsp::mutable_hotspotherorectnumarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPubGetInfoRsp.HotSpotHeroRectNumArr)
  return hotspotherorectnumarr_.Mutable(index);
}
inline ::pb::TPubHotSpotHeroRectNumInfo* TPubGetInfoRsp::add_hotspotherorectnumarr() {
  // @@protoc_insertion_point(field_add:pb.TPubGetInfoRsp.HotSpotHeroRectNumArr)
  return hotspotherorectnumarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubHotSpotHeroRectNumInfo >&
TPubGetInfoRsp::hotspotherorectnumarr() const {
  // @@protoc_insertion_point(field_list:pb.TPubGetInfoRsp.HotSpotHeroRectNumArr)
  return hotspotherorectnumarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPubHotSpotHeroRectNumInfo >*
TPubGetInfoRsp::mutable_hotspotherorectnumarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubGetInfoRsp.HotSpotHeroRectNumArr)
  return &hotspotherorectnumarr_;
}

// optional uint32 CanBuyHotSpotRecNum = 8;
inline bool TPubGetInfoRsp::has_canbuyhotspotrecnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TPubGetInfoRsp::set_has_canbuyhotspotrecnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TPubGetInfoRsp::clear_has_canbuyhotspotrecnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TPubGetInfoRsp::clear_canbuyhotspotrecnum() {
  canbuyhotspotrecnum_ = 0u;
  clear_has_canbuyhotspotrecnum();
}
inline ::google::protobuf::uint32 TPubGetInfoRsp::canbuyhotspotrecnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubGetInfoRsp.CanBuyHotSpotRecNum)
  return canbuyhotspotrecnum_;
}
inline void TPubGetInfoRsp::set_canbuyhotspotrecnum(::google::protobuf::uint32 value) {
  set_has_canbuyhotspotrecnum();
  canbuyhotspotrecnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubGetInfoRsp.CanBuyHotSpotRecNum)
}

// -------------------------------------------------------------------

// TPubHotSpotRecruitInfo

// optional uint32 ReplaceId = 1;
inline bool TPubHotSpotRecruitInfo::has_replaceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubHotSpotRecruitInfo::set_has_replaceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubHotSpotRecruitInfo::clear_has_replaceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubHotSpotRecruitInfo::clear_replaceid() {
  replaceid_ = 0u;
  clear_has_replaceid();
}
inline ::google::protobuf::uint32 TPubHotSpotRecruitInfo::replaceid() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitInfo.ReplaceId)
  return replaceid_;
}
inline void TPubHotSpotRecruitInfo::set_replaceid(::google::protobuf::uint32 value) {
  set_has_replaceid();
  replaceid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotRecruitInfo.ReplaceId)
}

// optional bool IsOnce = 2;
inline bool TPubHotSpotRecruitInfo::has_isonce() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubHotSpotRecruitInfo::set_has_isonce() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubHotSpotRecruitInfo::clear_has_isonce() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubHotSpotRecruitInfo::clear_isonce() {
  isonce_ = false;
  clear_has_isonce();
}
inline bool TPubHotSpotRecruitInfo::isonce() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitInfo.IsOnce)
  return isonce_;
}
inline void TPubHotSpotRecruitInfo::set_isonce(bool value) {
  set_has_isonce();
  isonce_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotRecruitInfo.IsOnce)
}

// optional uint32 RoundIndex = 3;
inline bool TPubHotSpotRecruitInfo::has_roundindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPubHotSpotRecruitInfo::set_has_roundindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPubHotSpotRecruitInfo::clear_has_roundindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPubHotSpotRecruitInfo::clear_roundindex() {
  roundindex_ = 0u;
  clear_has_roundindex();
}
inline ::google::protobuf::uint32 TPubHotSpotRecruitInfo::roundindex() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitInfo.RoundIndex)
  return roundindex_;
}
inline void TPubHotSpotRecruitInfo::set_roundindex(::google::protobuf::uint32 value) {
  set_has_roundindex();
  roundindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotRecruitInfo.RoundIndex)
}

// optional uint64 RoundStartTime = 4;
inline bool TPubHotSpotRecruitInfo::has_roundstarttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TPubHotSpotRecruitInfo::set_has_roundstarttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TPubHotSpotRecruitInfo::clear_has_roundstarttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TPubHotSpotRecruitInfo::clear_roundstarttime() {
  roundstarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_roundstarttime();
}
inline ::google::protobuf::uint64 TPubHotSpotRecruitInfo::roundstarttime() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitInfo.RoundStartTime)
  return roundstarttime_;
}
inline void TPubHotSpotRecruitInfo::set_roundstarttime(::google::protobuf::uint64 value) {
  set_has_roundstarttime();
  roundstarttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotRecruitInfo.RoundStartTime)
}

// -------------------------------------------------------------------

// TPubHotSpotRecruitReq

// optional uint32 HotSpotHeroId = 1;
inline bool TPubHotSpotRecruitReq::has_hotspotheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubHotSpotRecruitReq::set_has_hotspotheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubHotSpotRecruitReq::clear_has_hotspotheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubHotSpotRecruitReq::clear_hotspotheroid() {
  hotspotheroid_ = 0u;
  clear_has_hotspotheroid();
}
inline ::google::protobuf::uint32 TPubHotSpotRecruitReq::hotspotheroid() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitReq.HotSpotHeroId)
  return hotspotheroid_;
}
inline void TPubHotSpotRecruitReq::set_hotspotheroid(::google::protobuf::uint32 value) {
  set_has_hotspotheroid();
  hotspotheroid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotRecruitReq.HotSpotHeroId)
}

// -------------------------------------------------------------------

// TPubHotSpotRecruitRsp

// repeated .pb.TPubRecruitReward RewardArr = 1;
inline int TPubHotSpotRecruitRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TPubHotSpotRecruitRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TPubRecruitReward& TPubHotSpotRecruitRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TPubRecruitReward* TPubHotSpotRecruitRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPubHotSpotRecruitRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TPubRecruitReward* TPubHotSpotRecruitRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TPubHotSpotRecruitRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >&
TPubHotSpotRecruitRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TPubHotSpotRecruitRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >*
TPubHotSpotRecruitRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubHotSpotRecruitRsp.RewardArr)
  return &rewardarr_;
}

// optional uint32 ArtifactLeftNum = 2;
inline bool TPubHotSpotRecruitRsp::has_artifactleftnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubHotSpotRecruitRsp::set_has_artifactleftnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubHotSpotRecruitRsp::clear_has_artifactleftnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubHotSpotRecruitRsp::clear_artifactleftnum() {
  artifactleftnum_ = 0u;
  clear_has_artifactleftnum();
}
inline ::google::protobuf::uint32 TPubHotSpotRecruitRsp::artifactleftnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubHotSpotRecruitRsp.ArtifactLeftNum)
  return artifactleftnum_;
}
inline void TPubHotSpotRecruitRsp::set_artifactleftnum(::google::protobuf::uint32 value) {
  set_has_artifactleftnum();
  artifactleftnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubHotSpotRecruitRsp.ArtifactLeftNum)
}

// -------------------------------------------------------------------

// TPubOpenHotSpotLuckyBoxReq

// optional uint32 HotSpotHeroId = 1;
inline bool TPubOpenHotSpotLuckyBoxReq::has_hotspotheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubOpenHotSpotLuckyBoxReq::set_has_hotspotheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubOpenHotSpotLuckyBoxReq::clear_has_hotspotheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubOpenHotSpotLuckyBoxReq::clear_hotspotheroid() {
  hotspotheroid_ = 0u;
  clear_has_hotspotheroid();
}
inline ::google::protobuf::uint32 TPubOpenHotSpotLuckyBoxReq::hotspotheroid() const {
  // @@protoc_insertion_point(field_get:pb.TPubOpenHotSpotLuckyBoxReq.HotSpotHeroId)
  return hotspotheroid_;
}
inline void TPubOpenHotSpotLuckyBoxReq::set_hotspotheroid(::google::protobuf::uint32 value) {
  set_has_hotspotheroid();
  hotspotheroid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubOpenHotSpotLuckyBoxReq.HotSpotHeroId)
}

// optional uint32 BoxIndex = 2;
inline bool TPubOpenHotSpotLuckyBoxReq::has_boxindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubOpenHotSpotLuckyBoxReq::set_has_boxindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubOpenHotSpotLuckyBoxReq::clear_has_boxindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubOpenHotSpotLuckyBoxReq::clear_boxindex() {
  boxindex_ = 0u;
  clear_has_boxindex();
}
inline ::google::protobuf::uint32 TPubOpenHotSpotLuckyBoxReq::boxindex() const {
  // @@protoc_insertion_point(field_get:pb.TPubOpenHotSpotLuckyBoxReq.BoxIndex)
  return boxindex_;
}
inline void TPubOpenHotSpotLuckyBoxReq::set_boxindex(::google::protobuf::uint32 value) {
  set_has_boxindex();
  boxindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubOpenHotSpotLuckyBoxReq.BoxIndex)
}

// -------------------------------------------------------------------

// TPubRecruitReq

// optional .pb.ERecruitType RecruitType = 1;
inline bool TPubRecruitReq::has_recruittype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubRecruitReq::set_has_recruittype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubRecruitReq::clear_has_recruittype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubRecruitReq::clear_recruittype() {
  recruittype_ = 1;
  clear_has_recruittype();
}
inline ::pb::ERecruitType TPubRecruitReq::recruittype() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitReq.RecruitType)
  return static_cast< ::pb::ERecruitType >(recruittype_);
}
inline void TPubRecruitReq::set_recruittype(::pb::ERecruitType value) {
  assert(::pb::ERecruitType_IsValid(value));
  set_has_recruittype();
  recruittype_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitReq.RecruitType)
}

// optional uint32 CampId = 2;
inline bool TPubRecruitReq::has_campid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubRecruitReq::set_has_campid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubRecruitReq::clear_has_campid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubRecruitReq::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 TPubRecruitReq::campid() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitReq.CampId)
  return campid_;
}
inline void TPubRecruitReq::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitReq.CampId)
}

// -------------------------------------------------------------------

// TPubRecruitRsp

// optional uint32 Score = 1;
inline bool TPubRecruitRsp::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubRecruitRsp::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubRecruitRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubRecruitRsp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TPubRecruitRsp::score() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitRsp.Score)
  return score_;
}
inline void TPubRecruitRsp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitRsp.Score)
}

// optional uint32 BoomNum = 2;
inline bool TPubRecruitRsp::has_boomnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubRecruitRsp::set_has_boomnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubRecruitRsp::clear_has_boomnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubRecruitRsp::clear_boomnum() {
  boomnum_ = 0u;
  clear_has_boomnum();
}
inline ::google::protobuf::uint32 TPubRecruitRsp::boomnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitRsp.BoomNum)
  return boomnum_;
}
inline void TPubRecruitRsp::set_boomnum(::google::protobuf::uint32 value) {
  set_has_boomnum();
  boomnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitRsp.BoomNum)
}

// repeated .pb.TPubRecruitReward RewardArr = 3;
inline int TPubRecruitRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TPubRecruitRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TPubRecruitReward& TPubRecruitRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TPubRecruitReward* TPubRecruitRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPubRecruitRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TPubRecruitReward* TPubRecruitRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TPubRecruitRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >&
TPubRecruitRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TPubRecruitRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPubRecruitReward >*
TPubRecruitRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubRecruitRsp.RewardArr)
  return &rewardarr_;
}

// optional uint32 UseGoldNum = 4;
inline bool TPubRecruitRsp::has_usegoldnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TPubRecruitRsp::set_has_usegoldnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TPubRecruitRsp::clear_has_usegoldnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TPubRecruitRsp::clear_usegoldnum() {
  usegoldnum_ = 0u;
  clear_has_usegoldnum();
}
inline ::google::protobuf::uint32 TPubRecruitRsp::usegoldnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitRsp.UseGoldNum)
  return usegoldnum_;
}
inline void TPubRecruitRsp::set_usegoldnum(::google::protobuf::uint32 value) {
  set_has_usegoldnum();
  usegoldnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitRsp.UseGoldNum)
}

// optional uint32 ArtifactLeftNum = 5;
inline bool TPubRecruitRsp::has_artifactleftnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TPubRecruitRsp::set_has_artifactleftnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TPubRecruitRsp::clear_has_artifactleftnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TPubRecruitRsp::clear_artifactleftnum() {
  artifactleftnum_ = 0u;
  clear_has_artifactleftnum();
}
inline ::google::protobuf::uint32 TPubRecruitRsp::artifactleftnum() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitRsp.ArtifactLeftNum)
  return artifactleftnum_;
}
inline void TPubRecruitRsp::set_artifactleftnum(::google::protobuf::uint32 value) {
  set_has_artifactleftnum();
  artifactleftnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitRsp.ArtifactLeftNum)
}

// -------------------------------------------------------------------

// TPubRecruitReward

// optional .pb.TCommonReward Reward = 1;
inline bool TPubRecruitReward::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubRecruitReward::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubRecruitReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubRecruitReward::clear_reward() {
  if (reward_ != NULL) reward_->::pb::TCommonReward::Clear();
  clear_has_reward();
}
inline const ::pb::TCommonReward& TPubRecruitReward::reward() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitReward.Reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::pb::TCommonReward* TPubRecruitReward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::pb::TCommonReward;
  // @@protoc_insertion_point(field_mutable:pb.TPubRecruitReward.Reward)
  return reward_;
}
inline ::pb::TCommonReward* TPubRecruitReward::release_reward() {
  clear_has_reward();
  ::pb::TCommonReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void TPubRecruitReward::set_allocated_reward(::pb::TCommonReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TPubRecruitReward.Reward)
}

// optional uint32 CritRatio = 2;
inline bool TPubRecruitReward::has_critratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubRecruitReward::set_has_critratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubRecruitReward::clear_has_critratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubRecruitReward::clear_critratio() {
  critratio_ = 0u;
  clear_has_critratio();
}
inline ::google::protobuf::uint32 TPubRecruitReward::critratio() const {
  // @@protoc_insertion_point(field_get:pb.TPubRecruitReward.CritRatio)
  return critratio_;
}
inline void TPubRecruitReward::set_critratio(::google::protobuf::uint32 value) {
  set_has_critratio();
  critratio_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubRecruitReward.CritRatio)
}

// -------------------------------------------------------------------

// TPubReceiveScoreRewardReq

// optional uint32 ScoreIndex = 1;
inline bool TPubReceiveScoreRewardReq::has_scoreindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubReceiveScoreRewardReq::set_has_scoreindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubReceiveScoreRewardReq::clear_has_scoreindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubReceiveScoreRewardReq::clear_scoreindex() {
  scoreindex_ = 0u;
  clear_has_scoreindex();
}
inline ::google::protobuf::uint32 TPubReceiveScoreRewardReq::scoreindex() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardReq.ScoreIndex)
  return scoreindex_;
}
inline void TPubReceiveScoreRewardReq::set_scoreindex(::google::protobuf::uint32 value) {
  set_has_scoreindex();
  scoreindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveScoreRewardReq.ScoreIndex)
}

// optional .pb.ERecruitType RecruitType = 2;
inline bool TPubReceiveScoreRewardReq::has_recruittype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubReceiveScoreRewardReq::set_has_recruittype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubReceiveScoreRewardReq::clear_has_recruittype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubReceiveScoreRewardReq::clear_recruittype() {
  recruittype_ = 1;
  clear_has_recruittype();
}
inline ::pb::ERecruitType TPubReceiveScoreRewardReq::recruittype() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardReq.RecruitType)
  return static_cast< ::pb::ERecruitType >(recruittype_);
}
inline void TPubReceiveScoreRewardReq::set_recruittype(::pb::ERecruitType value) {
  assert(::pb::ERecruitType_IsValid(value));
  set_has_recruittype();
  recruittype_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveScoreRewardReq.RecruitType)
}

// optional uint32 CampId = 3;
inline bool TPubReceiveScoreRewardReq::has_campid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPubReceiveScoreRewardReq::set_has_campid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPubReceiveScoreRewardReq::clear_has_campid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPubReceiveScoreRewardReq::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 TPubReceiveScoreRewardReq::campid() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardReq.CampId)
  return campid_;
}
inline void TPubReceiveScoreRewardReq::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveScoreRewardReq.CampId)
}

// optional uint32 HeroFragId = 4;
inline bool TPubReceiveScoreRewardReq::has_herofragid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TPubReceiveScoreRewardReq::set_has_herofragid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TPubReceiveScoreRewardReq::clear_has_herofragid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TPubReceiveScoreRewardReq::clear_herofragid() {
  herofragid_ = 0u;
  clear_has_herofragid();
}
inline ::google::protobuf::uint32 TPubReceiveScoreRewardReq::herofragid() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardReq.HeroFragId)
  return herofragid_;
}
inline void TPubReceiveScoreRewardReq::set_herofragid(::google::protobuf::uint32 value) {
  set_has_herofragid();
  herofragid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveScoreRewardReq.HeroFragId)
}

// -------------------------------------------------------------------

// TPubReceiveScoreRewardRsp

// optional uint32 Score = 1;
inline bool TPubReceiveScoreRewardRsp::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubReceiveScoreRewardRsp::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubReceiveScoreRewardRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubReceiveScoreRewardRsp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TPubReceiveScoreRewardRsp::score() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardRsp.Score)
  return score_;
}
inline void TPubReceiveScoreRewardRsp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveScoreRewardRsp.Score)
}

// repeated .pb.TCommonReward RewardArray = 2;
inline int TPubReceiveScoreRewardRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TPubReceiveScoreRewardRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TPubReceiveScoreRewardRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TPubReceiveScoreRewardRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TPubReceiveScoreRewardRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TPubReceiveScoreRewardRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TPubReceiveScoreRewardRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TPubReceiveScoreRewardRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TPubReceiveScoreRewardRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TPubReceiveScoreRewardRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubReceiveScoreRewardRsp.RewardArray)
  return &rewardarray_;
}

// repeated uint32 ReceiveArray = 3;
inline int TPubReceiveScoreRewardRsp::receivearray_size() const {
  return receivearray_.size();
}
inline void TPubReceiveScoreRewardRsp::clear_receivearray() {
  receivearray_.Clear();
}
inline ::google::protobuf::uint32 TPubReceiveScoreRewardRsp::receivearray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveScoreRewardRsp.ReceiveArray)
  return receivearray_.Get(index);
}
inline void TPubReceiveScoreRewardRsp::set_receivearray(int index, ::google::protobuf::uint32 value) {
  receivearray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TPubReceiveScoreRewardRsp.ReceiveArray)
}
inline void TPubReceiveScoreRewardRsp::add_receivearray(::google::protobuf::uint32 value) {
  receivearray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TPubReceiveScoreRewardRsp.ReceiveArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TPubReceiveScoreRewardRsp::receivearray() const {
  // @@protoc_insertion_point(field_list:pb.TPubReceiveScoreRewardRsp.ReceiveArray)
  return receivearray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TPubReceiveScoreRewardRsp::mutable_receivearray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TPubReceiveScoreRewardRsp.ReceiveArray)
  return &receivearray_;
}

// -------------------------------------------------------------------

// TPubBuyRecruitItemReq

// optional uint32 BuyNum = 1;
inline bool TPubBuyRecruitItemReq::has_buynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubBuyRecruitItemReq::set_has_buynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubBuyRecruitItemReq::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubBuyRecruitItemReq::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 TPubBuyRecruitItemReq::buynum() const {
  // @@protoc_insertion_point(field_get:pb.TPubBuyRecruitItemReq.BuyNum)
  return buynum_;
}
inline void TPubBuyRecruitItemReq::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubBuyRecruitItemReq.BuyNum)
}

// optional .pb.ERecruitType RecruitType = 2;
inline bool TPubBuyRecruitItemReq::has_recruittype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubBuyRecruitItemReq::set_has_recruittype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubBuyRecruitItemReq::clear_has_recruittype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubBuyRecruitItemReq::clear_recruittype() {
  recruittype_ = 1;
  clear_has_recruittype();
}
inline ::pb::ERecruitType TPubBuyRecruitItemReq::recruittype() const {
  // @@protoc_insertion_point(field_get:pb.TPubBuyRecruitItemReq.RecruitType)
  return static_cast< ::pb::ERecruitType >(recruittype_);
}
inline void TPubBuyRecruitItemReq::set_recruittype(::pb::ERecruitType value) {
  assert(::pb::ERecruitType_IsValid(value));
  set_has_recruittype();
  recruittype_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubBuyRecruitItemReq.RecruitType)
}

// optional uint32 CampId = 3;
inline bool TPubBuyRecruitItemReq::has_campid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPubBuyRecruitItemReq::set_has_campid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPubBuyRecruitItemReq::clear_has_campid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPubBuyRecruitItemReq::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 TPubBuyRecruitItemReq::campid() const {
  // @@protoc_insertion_point(field_get:pb.TPubBuyRecruitItemReq.CampId)
  return campid_;
}
inline void TPubBuyRecruitItemReq::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubBuyRecruitItemReq.CampId)
}

// -------------------------------------------------------------------

// TPubSetWishListReq

// optional uint32 PreHeroTid = 1;
inline bool TPubSetWishListReq::has_preherotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubSetWishListReq::set_has_preherotid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubSetWishListReq::clear_has_preherotid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubSetWishListReq::clear_preherotid() {
  preherotid_ = 0u;
  clear_has_preherotid();
}
inline ::google::protobuf::uint32 TPubSetWishListReq::preherotid() const {
  // @@protoc_insertion_point(field_get:pb.TPubSetWishListReq.PreHeroTid)
  return preherotid_;
}
inline void TPubSetWishListReq::set_preherotid(::google::protobuf::uint32 value) {
  set_has_preherotid();
  preherotid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubSetWishListReq.PreHeroTid)
}

// optional uint32 SetHeroTid = 2;
inline bool TPubSetWishListReq::has_setherotid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubSetWishListReq::set_has_setherotid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubSetWishListReq::clear_has_setherotid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubSetWishListReq::clear_setherotid() {
  setherotid_ = 0u;
  clear_has_setherotid();
}
inline ::google::protobuf::uint32 TPubSetWishListReq::setherotid() const {
  // @@protoc_insertion_point(field_get:pb.TPubSetWishListReq.SetHeroTid)
  return setherotid_;
}
inline void TPubSetWishListReq::set_setherotid(::google::protobuf::uint32 value) {
  set_has_setherotid();
  setherotid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubSetWishListReq.SetHeroTid)
}

// -------------------------------------------------------------------

// TPubSetWishListStatusReq

// optional bool IsOPen = 1;
inline bool TPubSetWishListStatusReq::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubSetWishListStatusReq::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubSetWishListStatusReq::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubSetWishListStatusReq::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool TPubSetWishListStatusReq::isopen() const {
  // @@protoc_insertion_point(field_get:pb.TPubSetWishListStatusReq.IsOPen)
  return isopen_;
}
inline void TPubSetWishListStatusReq::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubSetWishListStatusReq.IsOPen)
}

// -------------------------------------------------------------------

// TPubReceiveHotSpotRecruitRewardReq

// optional uint32 HotSpotHeroId = 1;
inline bool TPubReceiveHotSpotRecruitRewardReq::has_hotspotheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPubReceiveHotSpotRecruitRewardReq::set_has_hotspotheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPubReceiveHotSpotRecruitRewardReq::clear_has_hotspotheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPubReceiveHotSpotRecruitRewardReq::clear_hotspotheroid() {
  hotspotheroid_ = 0u;
  clear_has_hotspotheroid();
}
inline ::google::protobuf::uint32 TPubReceiveHotSpotRecruitRewardReq::hotspotheroid() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveHotSpotRecruitRewardReq.HotSpotHeroId)
  return hotspotheroid_;
}
inline void TPubReceiveHotSpotRecruitRewardReq::set_hotspotheroid(::google::protobuf::uint32 value) {
  set_has_hotspotheroid();
  hotspotheroid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveHotSpotRecruitRewardReq.HotSpotHeroId)
}

// optional uint32 RewardIndex = 2;
inline bool TPubReceiveHotSpotRecruitRewardReq::has_rewardindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPubReceiveHotSpotRecruitRewardReq::set_has_rewardindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPubReceiveHotSpotRecruitRewardReq::clear_has_rewardindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPubReceiveHotSpotRecruitRewardReq::clear_rewardindex() {
  rewardindex_ = 0u;
  clear_has_rewardindex();
}
inline ::google::protobuf::uint32 TPubReceiveHotSpotRecruitRewardReq::rewardindex() const {
  // @@protoc_insertion_point(field_get:pb.TPubReceiveHotSpotRecruitRewardReq.RewardIndex)
  return rewardindex_;
}
inline void TPubReceiveHotSpotRecruitRewardReq::set_rewardindex(::google::protobuf::uint32 value) {
  set_has_rewardindex();
  rewardindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TPubReceiveHotSpotRecruitRewardReq.RewardIndex)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ERecruitType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ERecruitType>() {
  return ::pb::ERecruitType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fPub_2eproto__INCLUDED
