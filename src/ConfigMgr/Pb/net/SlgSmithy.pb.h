// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgSmithy.proto

#ifndef PROTOBUF_net_2fSlgSmithy_2eproto__INCLUDED
#define PROTOBUF_net_2fSlgSmithy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fSlgSmithy_2eproto();
void protobuf_AssignDesc_net_2fSlgSmithy_2eproto();
void protobuf_ShutdownFile_net_2fSlgSmithy_2eproto();

class TSlgSmithySmithReq;
class TSlgSmithySynthesisReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TSlgSmithySmithReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgSmithy.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgSmithySmithReq : public ::google::protobuf::Message {
 public:
  TSlgSmithySmithReq();
  virtual ~TSlgSmithySmithReq();

  TSlgSmithySmithReq(const TSlgSmithySmithReq& from);

  inline TSlgSmithySmithReq& operator=(const TSlgSmithySmithReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgSmithySmithReq& default_instance();

  void Swap(TSlgSmithySmithReq* other);

  // implements Message ----------------------------------------------

  TSlgSmithySmithReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgSmithySmithReq& from);
  void MergeFrom(const TSlgSmithySmithReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TargetArmTid = 1;
  inline bool has_targetarmtid() const;
  inline void clear_targetarmtid();
  static const int kTargetArmTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgSmithySmithReq</name>
  	<Function>
  		<name>targetarmtid</name>
  		<replaceName>TargetArmTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_targetarmtid</name>
  		<replaceName>TargetArmTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_targetarmtid</name>
  		<replaceName>TargetArmTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 targetarmtid() const;
  inline void set_targetarmtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgSmithySmithReq)
 private:
  inline void set_has_targetarmtid();
  inline void clear_has_targetarmtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 targetarmtid_;
  friend void  protobuf_AddDesc_net_2fSlgSmithy_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgSmithy_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgSmithy_2eproto();

  void InitAsDefaultInstance();
  static TSlgSmithySmithReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgSmithySynthesisReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgSmithy.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgSmithySynthesisReq : public ::google::protobuf::Message {
 public:
  TSlgSmithySynthesisReq();
  virtual ~TSlgSmithySynthesisReq();

  TSlgSmithySynthesisReq(const TSlgSmithySynthesisReq& from);

  inline TSlgSmithySynthesisReq& operator=(const TSlgSmithySynthesisReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgSmithySynthesisReq& default_instance();

  void Swap(TSlgSmithySynthesisReq* other);

  // implements Message ----------------------------------------------

  TSlgSmithySynthesisReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgSmithySynthesisReq& from);
  void MergeFrom(const TSlgSmithySynthesisReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TargetArmTid = 1;
  inline bool has_targetarmtid() const;
  inline void clear_targetarmtid();
  static const int kTargetArmTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgSmithySynthesisReq</name>
  	<Function>
  		<name>targetarmtid</name>
  		<replaceName>TargetArmTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_targetarmtid</name>
  		<replaceName>TargetArmTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_targetarmtid</name>
  		<replaceName>TargetArmTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 targetarmtid() const;
  inline void set_targetarmtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgSmithySynthesisReq)
 private:
  inline void set_has_targetarmtid();
  inline void clear_has_targetarmtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 targetarmtid_;
  friend void  protobuf_AddDesc_net_2fSlgSmithy_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgSmithy_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgSmithy_2eproto();

  void InitAsDefaultInstance();
  static TSlgSmithySynthesisReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TSlgSmithySmithReq

// optional uint32 TargetArmTid = 1;
inline bool TSlgSmithySmithReq::has_targetarmtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgSmithySmithReq::set_has_targetarmtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgSmithySmithReq::clear_has_targetarmtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgSmithySmithReq::clear_targetarmtid() {
  targetarmtid_ = 0u;
  clear_has_targetarmtid();
}
inline ::google::protobuf::uint32 TSlgSmithySmithReq::targetarmtid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgSmithySmithReq.TargetArmTid)
  return targetarmtid_;
}
inline void TSlgSmithySmithReq::set_targetarmtid(::google::protobuf::uint32 value) {
  set_has_targetarmtid();
  targetarmtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgSmithySmithReq.TargetArmTid)
}

// -------------------------------------------------------------------

// TSlgSmithySynthesisReq

// optional uint32 TargetArmTid = 1;
inline bool TSlgSmithySynthesisReq::has_targetarmtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgSmithySynthesisReq::set_has_targetarmtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgSmithySynthesisReq::clear_has_targetarmtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgSmithySynthesisReq::clear_targetarmtid() {
  targetarmtid_ = 0u;
  clear_has_targetarmtid();
}
inline ::google::protobuf::uint32 TSlgSmithySynthesisReq::targetarmtid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgSmithySynthesisReq.TargetArmTid)
  return targetarmtid_;
}
inline void TSlgSmithySynthesisReq::set_targetarmtid(::google::protobuf::uint32 value) {
  set_has_targetarmtid();
  targetarmtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgSmithySynthesisReq.TargetArmTid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fSlgSmithy_2eproto__INCLUDED
