// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActUnionRechargeBack.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActUnionRechargeBack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActUnionRechargeBackUserReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackUserReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackAllyReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackAllyReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackGetUserInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackGetUserInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackReceiveRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackReceiveRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackGetAllyInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackGetAllyInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackRank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackRank_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackGetRankInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackGetRankInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnionRechargeBackScoreChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnionRechargeBackScoreChangeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto() {
  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActUnionRechargeBack.proto");
  GOOGLE_CHECK(file != NULL);
  TActUnionRechargeBackUserReward_descriptor_ = file->message_type(0);
  static const int TActUnionRechargeBackUserReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackUserReward, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackUserReward, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackUserReward, cannum_),
  };
  TActUnionRechargeBackUserReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackUserReward_descriptor_,
      TActUnionRechargeBackUserReward::default_instance_,
      TActUnionRechargeBackUserReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackUserReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackUserReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackUserReward));
  TActUnionRechargeBackAllyReward_descriptor_ = file->message_type(1);
  static const int TActUnionRechargeBackAllyReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackAllyReward, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackAllyReward, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackAllyReward, cannum_),
  };
  TActUnionRechargeBackAllyReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackAllyReward_descriptor_,
      TActUnionRechargeBackAllyReward::default_instance_,
      TActUnionRechargeBackAllyReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackAllyReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackAllyReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackAllyReward));
  TActUnionRechargeBackGetUserInfoRsp_descriptor_ = file->message_type(2);
  static const int TActUnionRechargeBackGetUserInfoRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetUserInfoRsp, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetUserInfoRsp, userrewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetUserInfoRsp, allyrewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetUserInfoRsp, userallyscore_),
  };
  TActUnionRechargeBackGetUserInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackGetUserInfoRsp_descriptor_,
      TActUnionRechargeBackGetUserInfoRsp::default_instance_,
      TActUnionRechargeBackGetUserInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetUserInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetUserInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackGetUserInfoRsp));
  TActUnionRechargeBackReceiveRewardReq_descriptor_ = file->message_type(3);
  static const int TActUnionRechargeBackReceiveRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackReceiveRewardReq, id_),
  };
  TActUnionRechargeBackReceiveRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackReceiveRewardReq_descriptor_,
      TActUnionRechargeBackReceiveRewardReq::default_instance_,
      TActUnionRechargeBackReceiveRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackReceiveRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackReceiveRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackReceiveRewardReq));
  TActUnionRechargeBackGetAllyInfoRsp_descriptor_ = file->message_type(4);
  static const int TActUnionRechargeBackGetAllyInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetAllyInfoRsp, score_),
  };
  TActUnionRechargeBackGetAllyInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackGetAllyInfoRsp_descriptor_,
      TActUnionRechargeBackGetAllyInfoRsp::default_instance_,
      TActUnionRechargeBackGetAllyInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetAllyInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetAllyInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackGetAllyInfoRsp));
  TActUnionRechargeBackRank_descriptor_ = file->message_type(5);
  static const int TActUnionRechargeBackRank_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackRank, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackRank, score_),
  };
  TActUnionRechargeBackRank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackRank_descriptor_,
      TActUnionRechargeBackRank::default_instance_,
      TActUnionRechargeBackRank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackRank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackRank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackRank));
  TActUnionRechargeBackGetRankInfoRsp_descriptor_ = file->message_type(6);
  static const int TActUnionRechargeBackGetRankInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetRankInfoRsp, rankarr_),
  };
  TActUnionRechargeBackGetRankInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackGetRankInfoRsp_descriptor_,
      TActUnionRechargeBackGetRankInfoRsp::default_instance_,
      TActUnionRechargeBackGetRankInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetRankInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackGetRankInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackGetRankInfoRsp));
  TActUnionRechargeBackScoreChangeNotify_descriptor_ = file->message_type(7);
  static const int TActUnionRechargeBackScoreChangeNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackScoreChangeNotify, userscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackScoreChangeNotify, allyscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackScoreChangeNotify, userallyscore_),
  };
  TActUnionRechargeBackScoreChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnionRechargeBackScoreChangeNotify_descriptor_,
      TActUnionRechargeBackScoreChangeNotify::default_instance_,
      TActUnionRechargeBackScoreChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackScoreChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnionRechargeBackScoreChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnionRechargeBackScoreChangeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackUserReward_descriptor_, &TActUnionRechargeBackUserReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackAllyReward_descriptor_, &TActUnionRechargeBackAllyReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackGetUserInfoRsp_descriptor_, &TActUnionRechargeBackGetUserInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackReceiveRewardReq_descriptor_, &TActUnionRechargeBackReceiveRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackGetAllyInfoRsp_descriptor_, &TActUnionRechargeBackGetAllyInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackRank_descriptor_, &TActUnionRechargeBackRank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackGetRankInfoRsp_descriptor_, &TActUnionRechargeBackGetRankInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnionRechargeBackScoreChangeNotify_descriptor_, &TActUnionRechargeBackScoreChangeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto() {
  delete TActUnionRechargeBackUserReward::default_instance_;
  delete TActUnionRechargeBackUserReward_reflection_;
  delete TActUnionRechargeBackAllyReward::default_instance_;
  delete TActUnionRechargeBackAllyReward_reflection_;
  delete TActUnionRechargeBackGetUserInfoRsp::default_instance_;
  delete TActUnionRechargeBackGetUserInfoRsp_reflection_;
  delete TActUnionRechargeBackReceiveRewardReq::default_instance_;
  delete TActUnionRechargeBackReceiveRewardReq_reflection_;
  delete TActUnionRechargeBackGetAllyInfoRsp::default_instance_;
  delete TActUnionRechargeBackGetAllyInfoRsp_reflection_;
  delete TActUnionRechargeBackRank::default_instance_;
  delete TActUnionRechargeBackRank_reflection_;
  delete TActUnionRechargeBackGetRankInfoRsp::default_instance_;
  delete TActUnionRechargeBackGetRankInfoRsp_reflection_;
  delete TActUnionRechargeBackScoreChangeNotify::default_instance_;
  delete TActUnionRechargeBackScoreChangeNotify_reflection_;
}

void protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036net/ActUnionRechargeBack.proto\022\002pb\032\016ne"
    "t/User.proto\"J\n\037TActUnionRechargeBackUse"
    "rReward\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\022\016\n\006CanN"
    "um\030\003 \001(\r\"J\n\037TActUnionRechargeBackAllyRew"
    "ard\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\022\016\n\006CanNum\030\003"
    " \001(\r\"\303\001\n#TActUnionRechargeBackGetUserInf"
    "oRsp\022\r\n\005Score\030\001 \001(\r\022:\n\rUserRewardArr\030\002 \003"
    "(\0132#.pb.TActUnionRechargeBackUserReward\022"
    ":\n\rAllyRewardArr\030\003 \003(\0132#.pb.TActUnionRec"
    "hargeBackAllyReward\022\025\n\rUserAllyScore\030\004 \001"
    "(\r\"3\n%TActUnionRechargeBackReceiveReward"
    "Req\022\n\n\002Id\030\001 \001(\r\"4\n#TActUnionRechargeBack"
    "GetAllyInfoRsp\022\r\n\005Score\030\001 \001(\r\"Q\n\031TActUni"
    "onRechargeBackRank\022%\n\010UserInfo\030\001 \001(\0132\023.p"
    "b.TUserSimpleInfo\022\r\n\005Score\030\002 \001(\r\"U\n#TAct"
    "UnionRechargeBackGetRankInfoRsp\022.\n\007RankA"
    "rr\030\001 \003(\0132\035.pb.TActUnionRechargeBackRank\""
    "e\n&TActUnionRechargeBackScoreChangeNotif"
    "y\022\021\n\tUserScore\030\001 \001(\r\022\021\n\tAllyScore\030\002 \001(\r\022"
    "\025\n\rUserAllyScore\030\003 \001(\r", 782);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActUnionRechargeBack.proto", &protobuf_RegisterTypes);
  TActUnionRechargeBackUserReward::default_instance_ = new TActUnionRechargeBackUserReward();
  TActUnionRechargeBackAllyReward::default_instance_ = new TActUnionRechargeBackAllyReward();
  TActUnionRechargeBackGetUserInfoRsp::default_instance_ = new TActUnionRechargeBackGetUserInfoRsp();
  TActUnionRechargeBackReceiveRewardReq::default_instance_ = new TActUnionRechargeBackReceiveRewardReq();
  TActUnionRechargeBackGetAllyInfoRsp::default_instance_ = new TActUnionRechargeBackGetAllyInfoRsp();
  TActUnionRechargeBackRank::default_instance_ = new TActUnionRechargeBackRank();
  TActUnionRechargeBackGetRankInfoRsp::default_instance_ = new TActUnionRechargeBackGetRankInfoRsp();
  TActUnionRechargeBackScoreChangeNotify::default_instance_ = new TActUnionRechargeBackScoreChangeNotify();
  TActUnionRechargeBackUserReward::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackAllyReward::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackGetUserInfoRsp::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackReceiveRewardReq::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackGetAllyInfoRsp::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackRank::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackGetRankInfoRsp::default_instance_->InitAsDefaultInstance();
  TActUnionRechargeBackScoreChangeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActUnionRechargeBack_2eproto {
  StaticDescriptorInitializer_net_2fActUnionRechargeBack_2eproto() {
    protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  }
} static_descriptor_initializer_net_2fActUnionRechargeBack_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackUserReward::kIdFieldNumber;
const int TActUnionRechargeBackUserReward::kNumFieldNumber;
const int TActUnionRechargeBackUserReward::kCanNumFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackUserReward::TActUnionRechargeBackUserReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackUserReward)
}

void TActUnionRechargeBackUserReward::InitAsDefaultInstance() {
}

TActUnionRechargeBackUserReward::TActUnionRechargeBackUserReward(const TActUnionRechargeBackUserReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackUserReward)
}

void TActUnionRechargeBackUserReward::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  cannum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackUserReward::~TActUnionRechargeBackUserReward() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackUserReward)
  SharedDtor();
}

void TActUnionRechargeBackUserReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackUserReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackUserReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackUserReward_descriptor_;
}

const TActUnionRechargeBackUserReward& TActUnionRechargeBackUserReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackUserReward* TActUnionRechargeBackUserReward::default_instance_ = NULL;

TActUnionRechargeBackUserReward* TActUnionRechargeBackUserReward::New() const {
  return new TActUnionRechargeBackUserReward;
}

void TActUnionRechargeBackUserReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnionRechargeBackUserReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, cannum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackUserReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackUserReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CanNum;
        break;
      }

      // optional uint32 CanNum = 3;
      case 3: {
        if (tag == 24) {
         parse_CanNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cannum_)));
          set_has_cannum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackUserReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackUserReward)
  return false;
#undef DO_
}

void TActUnionRechargeBackUserReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackUserReward)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint32 CanNum = 3;
  if (has_cannum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cannum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackUserReward)
}

::google::protobuf::uint8* TActUnionRechargeBackUserReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackUserReward)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint32 CanNum = 3;
  if (has_cannum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cannum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackUserReward)
  return target;
}

int TActUnionRechargeBackUserReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint32 CanNum = 3;
    if (has_cannum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cannum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackUserReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackUserReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackUserReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackUserReward::MergeFrom(const TActUnionRechargeBackUserReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_cannum()) {
      set_cannum(from.cannum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackUserReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackUserReward::CopyFrom(const TActUnionRechargeBackUserReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackUserReward::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackUserReward::Swap(TActUnionRechargeBackUserReward* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(cannum_, other->cannum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackUserReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackUserReward_descriptor_;
  metadata.reflection = TActUnionRechargeBackUserReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackAllyReward::kIdFieldNumber;
const int TActUnionRechargeBackAllyReward::kNumFieldNumber;
const int TActUnionRechargeBackAllyReward::kCanNumFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackAllyReward::TActUnionRechargeBackAllyReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackAllyReward)
}

void TActUnionRechargeBackAllyReward::InitAsDefaultInstance() {
}

TActUnionRechargeBackAllyReward::TActUnionRechargeBackAllyReward(const TActUnionRechargeBackAllyReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackAllyReward)
}

void TActUnionRechargeBackAllyReward::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  cannum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackAllyReward::~TActUnionRechargeBackAllyReward() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackAllyReward)
  SharedDtor();
}

void TActUnionRechargeBackAllyReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackAllyReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackAllyReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackAllyReward_descriptor_;
}

const TActUnionRechargeBackAllyReward& TActUnionRechargeBackAllyReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackAllyReward* TActUnionRechargeBackAllyReward::default_instance_ = NULL;

TActUnionRechargeBackAllyReward* TActUnionRechargeBackAllyReward::New() const {
  return new TActUnionRechargeBackAllyReward;
}

void TActUnionRechargeBackAllyReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnionRechargeBackAllyReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, cannum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackAllyReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackAllyReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CanNum;
        break;
      }

      // optional uint32 CanNum = 3;
      case 3: {
        if (tag == 24) {
         parse_CanNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cannum_)));
          set_has_cannum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackAllyReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackAllyReward)
  return false;
#undef DO_
}

void TActUnionRechargeBackAllyReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackAllyReward)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint32 CanNum = 3;
  if (has_cannum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cannum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackAllyReward)
}

::google::protobuf::uint8* TActUnionRechargeBackAllyReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackAllyReward)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint32 CanNum = 3;
  if (has_cannum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cannum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackAllyReward)
  return target;
}

int TActUnionRechargeBackAllyReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint32 CanNum = 3;
    if (has_cannum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cannum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackAllyReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackAllyReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackAllyReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackAllyReward::MergeFrom(const TActUnionRechargeBackAllyReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_cannum()) {
      set_cannum(from.cannum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackAllyReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackAllyReward::CopyFrom(const TActUnionRechargeBackAllyReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackAllyReward::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackAllyReward::Swap(TActUnionRechargeBackAllyReward* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(cannum_, other->cannum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackAllyReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackAllyReward_descriptor_;
  metadata.reflection = TActUnionRechargeBackAllyReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackGetUserInfoRsp::kScoreFieldNumber;
const int TActUnionRechargeBackGetUserInfoRsp::kUserRewardArrFieldNumber;
const int TActUnionRechargeBackGetUserInfoRsp::kAllyRewardArrFieldNumber;
const int TActUnionRechargeBackGetUserInfoRsp::kUserAllyScoreFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackGetUserInfoRsp::TActUnionRechargeBackGetUserInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackGetUserInfoRsp)
}

void TActUnionRechargeBackGetUserInfoRsp::InitAsDefaultInstance() {
}

TActUnionRechargeBackGetUserInfoRsp::TActUnionRechargeBackGetUserInfoRsp(const TActUnionRechargeBackGetUserInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackGetUserInfoRsp)
}

void TActUnionRechargeBackGetUserInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  score_ = 0u;
  userallyscore_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackGetUserInfoRsp::~TActUnionRechargeBackGetUserInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackGetUserInfoRsp)
  SharedDtor();
}

void TActUnionRechargeBackGetUserInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackGetUserInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackGetUserInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackGetUserInfoRsp_descriptor_;
}

const TActUnionRechargeBackGetUserInfoRsp& TActUnionRechargeBackGetUserInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackGetUserInfoRsp* TActUnionRechargeBackGetUserInfoRsp::default_instance_ = NULL;

TActUnionRechargeBackGetUserInfoRsp* TActUnionRechargeBackGetUserInfoRsp::New() const {
  return new TActUnionRechargeBackGetUserInfoRsp;
}

void TActUnionRechargeBackGetUserInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnionRechargeBackGetUserInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(score_, userallyscore_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  userrewardarr_.Clear();
  allyrewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackGetUserInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackGetUserInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Score = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UserRewardArr;
        break;
      }

      // repeated .pb.TActUnionRechargeBackUserReward UserRewardArr = 2;
      case 2: {
        if (tag == 18) {
         parse_UserRewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userrewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UserRewardArr;
        if (input->ExpectTag(26)) goto parse_AllyRewardArr;
        break;
      }

      // repeated .pb.TActUnionRechargeBackAllyReward AllyRewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_AllyRewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_allyrewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AllyRewardArr;
        if (input->ExpectTag(32)) goto parse_UserAllyScore;
        break;
      }

      // optional uint32 UserAllyScore = 4;
      case 4: {
        if (tag == 32) {
         parse_UserAllyScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userallyscore_)));
          set_has_userallyscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackGetUserInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackGetUserInfoRsp)
  return false;
#undef DO_
}

void TActUnionRechargeBackGetUserInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackGetUserInfoRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->score(), output);
  }

  // repeated .pb.TActUnionRechargeBackUserReward UserRewardArr = 2;
  for (int i = 0; i < this->userrewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userrewardarr(i), output);
  }

  // repeated .pb.TActUnionRechargeBackAllyReward AllyRewardArr = 3;
  for (int i = 0; i < this->allyrewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->allyrewardarr(i), output);
  }

  // optional uint32 UserAllyScore = 4;
  if (has_userallyscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->userallyscore(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackGetUserInfoRsp)
}

::google::protobuf::uint8* TActUnionRechargeBackGetUserInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackGetUserInfoRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->score(), target);
  }

  // repeated .pb.TActUnionRechargeBackUserReward UserRewardArr = 2;
  for (int i = 0; i < this->userrewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->userrewardarr(i), target);
  }

  // repeated .pb.TActUnionRechargeBackAllyReward AllyRewardArr = 3;
  for (int i = 0; i < this->allyrewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->allyrewardarr(i), target);
  }

  // optional uint32 UserAllyScore = 4;
  if (has_userallyscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->userallyscore(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackGetUserInfoRsp)
  return target;
}

int TActUnionRechargeBackGetUserInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Score = 1;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

    // optional uint32 UserAllyScore = 4;
    if (has_userallyscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userallyscore());
    }

  }
  // repeated .pb.TActUnionRechargeBackUserReward UserRewardArr = 2;
  total_size += 1 * this->userrewardarr_size();
  for (int i = 0; i < this->userrewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userrewardarr(i));
  }

  // repeated .pb.TActUnionRechargeBackAllyReward AllyRewardArr = 3;
  total_size += 1 * this->allyrewardarr_size();
  for (int i = 0; i < this->allyrewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->allyrewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackGetUserInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackGetUserInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackGetUserInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackGetUserInfoRsp::MergeFrom(const TActUnionRechargeBackGetUserInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  userrewardarr_.MergeFrom(from.userrewardarr_);
  allyrewardarr_.MergeFrom(from.allyrewardarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_userallyscore()) {
      set_userallyscore(from.userallyscore());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackGetUserInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackGetUserInfoRsp::CopyFrom(const TActUnionRechargeBackGetUserInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackGetUserInfoRsp::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackGetUserInfoRsp::Swap(TActUnionRechargeBackGetUserInfoRsp* other) {
  if (other != this) {
    std::swap(score_, other->score_);
    userrewardarr_.Swap(&other->userrewardarr_);
    allyrewardarr_.Swap(&other->allyrewardarr_);
    std::swap(userallyscore_, other->userallyscore_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackGetUserInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackGetUserInfoRsp_descriptor_;
  metadata.reflection = TActUnionRechargeBackGetUserInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackReceiveRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackReceiveRewardReq::TActUnionRechargeBackReceiveRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackReceiveRewardReq)
}

void TActUnionRechargeBackReceiveRewardReq::InitAsDefaultInstance() {
}

TActUnionRechargeBackReceiveRewardReq::TActUnionRechargeBackReceiveRewardReq(const TActUnionRechargeBackReceiveRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackReceiveRewardReq)
}

void TActUnionRechargeBackReceiveRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackReceiveRewardReq::~TActUnionRechargeBackReceiveRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackReceiveRewardReq)
  SharedDtor();
}

void TActUnionRechargeBackReceiveRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackReceiveRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackReceiveRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackReceiveRewardReq_descriptor_;
}

const TActUnionRechargeBackReceiveRewardReq& TActUnionRechargeBackReceiveRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackReceiveRewardReq* TActUnionRechargeBackReceiveRewardReq::default_instance_ = NULL;

TActUnionRechargeBackReceiveRewardReq* TActUnionRechargeBackReceiveRewardReq::New() const {
  return new TActUnionRechargeBackReceiveRewardReq;
}

void TActUnionRechargeBackReceiveRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackReceiveRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackReceiveRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackReceiveRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackReceiveRewardReq)
  return false;
#undef DO_
}

void TActUnionRechargeBackReceiveRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackReceiveRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackReceiveRewardReq)
}

::google::protobuf::uint8* TActUnionRechargeBackReceiveRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackReceiveRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackReceiveRewardReq)
  return target;
}

int TActUnionRechargeBackReceiveRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackReceiveRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackReceiveRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackReceiveRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackReceiveRewardReq::MergeFrom(const TActUnionRechargeBackReceiveRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackReceiveRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackReceiveRewardReq::CopyFrom(const TActUnionRechargeBackReceiveRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackReceiveRewardReq::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackReceiveRewardReq::Swap(TActUnionRechargeBackReceiveRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackReceiveRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackReceiveRewardReq_descriptor_;
  metadata.reflection = TActUnionRechargeBackReceiveRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackGetAllyInfoRsp::kScoreFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackGetAllyInfoRsp::TActUnionRechargeBackGetAllyInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackGetAllyInfoRsp)
}

void TActUnionRechargeBackGetAllyInfoRsp::InitAsDefaultInstance() {
}

TActUnionRechargeBackGetAllyInfoRsp::TActUnionRechargeBackGetAllyInfoRsp(const TActUnionRechargeBackGetAllyInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackGetAllyInfoRsp)
}

void TActUnionRechargeBackGetAllyInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackGetAllyInfoRsp::~TActUnionRechargeBackGetAllyInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackGetAllyInfoRsp)
  SharedDtor();
}

void TActUnionRechargeBackGetAllyInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackGetAllyInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackGetAllyInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackGetAllyInfoRsp_descriptor_;
}

const TActUnionRechargeBackGetAllyInfoRsp& TActUnionRechargeBackGetAllyInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackGetAllyInfoRsp* TActUnionRechargeBackGetAllyInfoRsp::default_instance_ = NULL;

TActUnionRechargeBackGetAllyInfoRsp* TActUnionRechargeBackGetAllyInfoRsp::New() const {
  return new TActUnionRechargeBackGetAllyInfoRsp;
}

void TActUnionRechargeBackGetAllyInfoRsp::Clear() {
  score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackGetAllyInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackGetAllyInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Score = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackGetAllyInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackGetAllyInfoRsp)
  return false;
#undef DO_
}

void TActUnionRechargeBackGetAllyInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackGetAllyInfoRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackGetAllyInfoRsp)
}

::google::protobuf::uint8* TActUnionRechargeBackGetAllyInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackGetAllyInfoRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackGetAllyInfoRsp)
  return target;
}

int TActUnionRechargeBackGetAllyInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Score = 1;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackGetAllyInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackGetAllyInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackGetAllyInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackGetAllyInfoRsp::MergeFrom(const TActUnionRechargeBackGetAllyInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackGetAllyInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackGetAllyInfoRsp::CopyFrom(const TActUnionRechargeBackGetAllyInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackGetAllyInfoRsp::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackGetAllyInfoRsp::Swap(TActUnionRechargeBackGetAllyInfoRsp* other) {
  if (other != this) {
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackGetAllyInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackGetAllyInfoRsp_descriptor_;
  metadata.reflection = TActUnionRechargeBackGetAllyInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackRank::kUserInfoFieldNumber;
const int TActUnionRechargeBackRank::kScoreFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackRank::TActUnionRechargeBackRank()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackRank)
}

void TActUnionRechargeBackRank::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TActUnionRechargeBackRank::TActUnionRechargeBackRank(const TActUnionRechargeBackRank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackRank)
}

void TActUnionRechargeBackRank::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackRank::~TActUnionRechargeBackRank() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackRank)
  SharedDtor();
}

void TActUnionRechargeBackRank::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TActUnionRechargeBackRank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackRank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackRank_descriptor_;
}

const TActUnionRechargeBackRank& TActUnionRechargeBackRank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackRank* TActUnionRechargeBackRank::default_instance_ = NULL;

TActUnionRechargeBackRank* TActUnionRechargeBackRank::New() const {
  return new TActUnionRechargeBackRank;
}

void TActUnionRechargeBackRank::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
    score_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackRank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint32 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackRank)
  return false;
#undef DO_
}

void TActUnionRechargeBackRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackRank)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 Score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackRank)
}

::google::protobuf::uint8* TActUnionRechargeBackRank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackRank)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 Score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackRank)
  return target;
}

int TActUnionRechargeBackRank::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackRank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackRank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackRank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackRank::MergeFrom(const TActUnionRechargeBackRank& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackRank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackRank::CopyFrom(const TActUnionRechargeBackRank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackRank::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackRank::Swap(TActUnionRechargeBackRank* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackRank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackRank_descriptor_;
  metadata.reflection = TActUnionRechargeBackRank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackGetRankInfoRsp::kRankArrFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackGetRankInfoRsp::TActUnionRechargeBackGetRankInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackGetRankInfoRsp)
}

void TActUnionRechargeBackGetRankInfoRsp::InitAsDefaultInstance() {
}

TActUnionRechargeBackGetRankInfoRsp::TActUnionRechargeBackGetRankInfoRsp(const TActUnionRechargeBackGetRankInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackGetRankInfoRsp)
}

void TActUnionRechargeBackGetRankInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackGetRankInfoRsp::~TActUnionRechargeBackGetRankInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackGetRankInfoRsp)
  SharedDtor();
}

void TActUnionRechargeBackGetRankInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackGetRankInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackGetRankInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackGetRankInfoRsp_descriptor_;
}

const TActUnionRechargeBackGetRankInfoRsp& TActUnionRechargeBackGetRankInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackGetRankInfoRsp* TActUnionRechargeBackGetRankInfoRsp::default_instance_ = NULL;

TActUnionRechargeBackGetRankInfoRsp* TActUnionRechargeBackGetRankInfoRsp::New() const {
  return new TActUnionRechargeBackGetRankInfoRsp;
}

void TActUnionRechargeBackGetRankInfoRsp::Clear() {
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackGetRankInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackGetRankInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActUnionRechargeBackRank RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackGetRankInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackGetRankInfoRsp)
  return false;
#undef DO_
}

void TActUnionRechargeBackGetRankInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackGetRankInfoRsp)
  // repeated .pb.TActUnionRechargeBackRank RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackGetRankInfoRsp)
}

::google::protobuf::uint8* TActUnionRechargeBackGetRankInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackGetRankInfoRsp)
  // repeated .pb.TActUnionRechargeBackRank RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackGetRankInfoRsp)
  return target;
}

int TActUnionRechargeBackGetRankInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActUnionRechargeBackRank RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackGetRankInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackGetRankInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackGetRankInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackGetRankInfoRsp::MergeFrom(const TActUnionRechargeBackGetRankInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackGetRankInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackGetRankInfoRsp::CopyFrom(const TActUnionRechargeBackGetRankInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackGetRankInfoRsp::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackGetRankInfoRsp::Swap(TActUnionRechargeBackGetRankInfoRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackGetRankInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackGetRankInfoRsp_descriptor_;
  metadata.reflection = TActUnionRechargeBackGetRankInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnionRechargeBackScoreChangeNotify::kUserScoreFieldNumber;
const int TActUnionRechargeBackScoreChangeNotify::kAllyScoreFieldNumber;
const int TActUnionRechargeBackScoreChangeNotify::kUserAllyScoreFieldNumber;
#endif  // !_MSC_VER

TActUnionRechargeBackScoreChangeNotify::TActUnionRechargeBackScoreChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnionRechargeBackScoreChangeNotify)
}

void TActUnionRechargeBackScoreChangeNotify::InitAsDefaultInstance() {
}

TActUnionRechargeBackScoreChangeNotify::TActUnionRechargeBackScoreChangeNotify(const TActUnionRechargeBackScoreChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnionRechargeBackScoreChangeNotify)
}

void TActUnionRechargeBackScoreChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  userscore_ = 0u;
  allyscore_ = 0u;
  userallyscore_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnionRechargeBackScoreChangeNotify::~TActUnionRechargeBackScoreChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TActUnionRechargeBackScoreChangeNotify)
  SharedDtor();
}

void TActUnionRechargeBackScoreChangeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnionRechargeBackScoreChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnionRechargeBackScoreChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnionRechargeBackScoreChangeNotify_descriptor_;
}

const TActUnionRechargeBackScoreChangeNotify& TActUnionRechargeBackScoreChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  return *default_instance_;
}

TActUnionRechargeBackScoreChangeNotify* TActUnionRechargeBackScoreChangeNotify::default_instance_ = NULL;

TActUnionRechargeBackScoreChangeNotify* TActUnionRechargeBackScoreChangeNotify::New() const {
  return new TActUnionRechargeBackScoreChangeNotify;
}

void TActUnionRechargeBackScoreChangeNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnionRechargeBackScoreChangeNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(userscore_, userallyscore_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnionRechargeBackScoreChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnionRechargeBackScoreChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 UserScore = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userscore_)));
          set_has_userscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AllyScore;
        break;
      }

      // optional uint32 AllyScore = 2;
      case 2: {
        if (tag == 16) {
         parse_AllyScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &allyscore_)));
          set_has_allyscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_UserAllyScore;
        break;
      }

      // optional uint32 UserAllyScore = 3;
      case 3: {
        if (tag == 24) {
         parse_UserAllyScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userallyscore_)));
          set_has_userallyscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnionRechargeBackScoreChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnionRechargeBackScoreChangeNotify)
  return false;
#undef DO_
}

void TActUnionRechargeBackScoreChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnionRechargeBackScoreChangeNotify)
  // optional uint32 UserScore = 1;
  if (has_userscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userscore(), output);
  }

  // optional uint32 AllyScore = 2;
  if (has_allyscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->allyscore(), output);
  }

  // optional uint32 UserAllyScore = 3;
  if (has_userallyscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userallyscore(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnionRechargeBackScoreChangeNotify)
}

::google::protobuf::uint8* TActUnionRechargeBackScoreChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnionRechargeBackScoreChangeNotify)
  // optional uint32 UserScore = 1;
  if (has_userscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userscore(), target);
  }

  // optional uint32 AllyScore = 2;
  if (has_allyscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->allyscore(), target);
  }

  // optional uint32 UserAllyScore = 3;
  if (has_userallyscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userallyscore(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnionRechargeBackScoreChangeNotify)
  return target;
}

int TActUnionRechargeBackScoreChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 UserScore = 1;
    if (has_userscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userscore());
    }

    // optional uint32 AllyScore = 2;
    if (has_allyscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->allyscore());
    }

    // optional uint32 UserAllyScore = 3;
    if (has_userallyscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userallyscore());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnionRechargeBackScoreChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnionRechargeBackScoreChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnionRechargeBackScoreChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnionRechargeBackScoreChangeNotify::MergeFrom(const TActUnionRechargeBackScoreChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userscore()) {
      set_userscore(from.userscore());
    }
    if (from.has_allyscore()) {
      set_allyscore(from.allyscore());
    }
    if (from.has_userallyscore()) {
      set_userallyscore(from.userallyscore());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnionRechargeBackScoreChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnionRechargeBackScoreChangeNotify::CopyFrom(const TActUnionRechargeBackScoreChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnionRechargeBackScoreChangeNotify::IsInitialized() const {

  return true;
}

void TActUnionRechargeBackScoreChangeNotify::Swap(TActUnionRechargeBackScoreChangeNotify* other) {
  if (other != this) {
    std::swap(userscore_, other->userscore_);
    std::swap(allyscore_, other->allyscore_);
    std::swap(userallyscore_, other->userallyscore_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnionRechargeBackScoreChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnionRechargeBackScoreChangeNotify_descriptor_;
  metadata.reflection = TActUnionRechargeBackScoreChangeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
