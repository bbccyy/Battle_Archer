// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActRechargeBack.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActRechargeBack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActRechargeBackGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRechargeBackGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRechargeBackReceiveGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRechargeBackReceiveGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRechargeBackRechargeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRechargeBackRechargeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActRechargeBack_2eproto() {
  protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActRechargeBack.proto");
  GOOGLE_CHECK(file != NULL);
  TActRechargeBackGetInfoRsp_descriptor_ = file->message_type(0);
  static const int TActRechargeBackGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackGetInfoRsp, rechargenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackGetInfoRsp, receiveinfoarr_),
  };
  TActRechargeBackGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRechargeBackGetInfoRsp_descriptor_,
      TActRechargeBackGetInfoRsp::default_instance_,
      TActRechargeBackGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRechargeBackGetInfoRsp));
  TActRechargeBackReceiveGiftReq_descriptor_ = file->message_type(1);
  static const int TActRechargeBackReceiveGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackReceiveGiftReq, giftid_),
  };
  TActRechargeBackReceiveGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRechargeBackReceiveGiftReq_descriptor_,
      TActRechargeBackReceiveGiftReq::default_instance_,
      TActRechargeBackReceiveGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackReceiveGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackReceiveGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRechargeBackReceiveGiftReq));
  TActRechargeBackRechargeNotify_descriptor_ = file->message_type(2);
  static const int TActRechargeBackRechargeNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackRechargeNotify, rechargenum_),
  };
  TActRechargeBackRechargeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRechargeBackRechargeNotify_descriptor_,
      TActRechargeBackRechargeNotify::default_instance_,
      TActRechargeBackRechargeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackRechargeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRechargeBackRechargeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRechargeBackRechargeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActRechargeBack_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRechargeBackGetInfoRsp_descriptor_, &TActRechargeBackGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRechargeBackReceiveGiftReq_descriptor_, &TActRechargeBackReceiveGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRechargeBackRechargeNotify_descriptor_, &TActRechargeBackRechargeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActRechargeBack_2eproto() {
  delete TActRechargeBackGetInfoRsp::default_instance_;
  delete TActRechargeBackGetInfoRsp_reflection_;
  delete TActRechargeBackReceiveGiftReq::default_instance_;
  delete TActRechargeBackReceiveGiftReq_reflection_;
  delete TActRechargeBackRechargeNotify::default_instance_;
  delete TActRechargeBackRechargeNotify_reflection_;
}

void protobuf_AddDesc_net_2fActRechargeBack_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031net/ActRechargeBack.proto\022\002pb\"I\n\032TActR"
    "echargeBackGetInfoRsp\022\023\n\013RechargeNum\030\001 \001"
    "(\r\022\026\n\016ReceiveInfoArr\030\002 \003(\r\"0\n\036TActRechar"
    "geBackReceiveGiftReq\022\016\n\006GiftId\030\001 \001(\r\"5\n\036"
    "TActRechargeBackRechargeNotify\022\023\n\013Rechar"
    "geNum\030\001 \001(\r", 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActRechargeBack.proto", &protobuf_RegisterTypes);
  TActRechargeBackGetInfoRsp::default_instance_ = new TActRechargeBackGetInfoRsp();
  TActRechargeBackReceiveGiftReq::default_instance_ = new TActRechargeBackReceiveGiftReq();
  TActRechargeBackRechargeNotify::default_instance_ = new TActRechargeBackRechargeNotify();
  TActRechargeBackGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActRechargeBackReceiveGiftReq::default_instance_->InitAsDefaultInstance();
  TActRechargeBackRechargeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActRechargeBack_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActRechargeBack_2eproto {
  StaticDescriptorInitializer_net_2fActRechargeBack_2eproto() {
    protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  }
} static_descriptor_initializer_net_2fActRechargeBack_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActRechargeBackGetInfoRsp::kRechargeNumFieldNumber;
const int TActRechargeBackGetInfoRsp::kReceiveInfoArrFieldNumber;
#endif  // !_MSC_VER

TActRechargeBackGetInfoRsp::TActRechargeBackGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRechargeBackGetInfoRsp)
}

void TActRechargeBackGetInfoRsp::InitAsDefaultInstance() {
}

TActRechargeBackGetInfoRsp::TActRechargeBackGetInfoRsp(const TActRechargeBackGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRechargeBackGetInfoRsp)
}

void TActRechargeBackGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  rechargenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRechargeBackGetInfoRsp::~TActRechargeBackGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActRechargeBackGetInfoRsp)
  SharedDtor();
}

void TActRechargeBackGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRechargeBackGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRechargeBackGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRechargeBackGetInfoRsp_descriptor_;
}

const TActRechargeBackGetInfoRsp& TActRechargeBackGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  return *default_instance_;
}

TActRechargeBackGetInfoRsp* TActRechargeBackGetInfoRsp::default_instance_ = NULL;

TActRechargeBackGetInfoRsp* TActRechargeBackGetInfoRsp::New() const {
  return new TActRechargeBackGetInfoRsp;
}

void TActRechargeBackGetInfoRsp::Clear() {
  rechargenum_ = 0u;
  receiveinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRechargeBackGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRechargeBackGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RechargeNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rechargenum_)));
          set_has_rechargenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReceiveInfoArr;
        break;
      }

      // repeated uint32 ReceiveInfoArr = 2;
      case 2: {
        if (tag == 16) {
         parse_ReceiveInfoArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_receiveinfoarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_receiveinfoarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReceiveInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRechargeBackGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRechargeBackGetInfoRsp)
  return false;
#undef DO_
}

void TActRechargeBackGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRechargeBackGetInfoRsp)
  // optional uint32 RechargeNum = 1;
  if (has_rechargenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rechargenum(), output);
  }

  // repeated uint32 ReceiveInfoArr = 2;
  for (int i = 0; i < this->receiveinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->receiveinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRechargeBackGetInfoRsp)
}

::google::protobuf::uint8* TActRechargeBackGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRechargeBackGetInfoRsp)
  // optional uint32 RechargeNum = 1;
  if (has_rechargenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rechargenum(), target);
  }

  // repeated uint32 ReceiveInfoArr = 2;
  for (int i = 0; i < this->receiveinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->receiveinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRechargeBackGetInfoRsp)
  return target;
}

int TActRechargeBackGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RechargeNum = 1;
    if (has_rechargenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rechargenum());
    }

  }
  // repeated uint32 ReceiveInfoArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->receiveinfoarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->receiveinfoarr(i));
    }
    total_size += 1 * this->receiveinfoarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRechargeBackGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRechargeBackGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRechargeBackGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRechargeBackGetInfoRsp::MergeFrom(const TActRechargeBackGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  receiveinfoarr_.MergeFrom(from.receiveinfoarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rechargenum()) {
      set_rechargenum(from.rechargenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRechargeBackGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRechargeBackGetInfoRsp::CopyFrom(const TActRechargeBackGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRechargeBackGetInfoRsp::IsInitialized() const {

  return true;
}

void TActRechargeBackGetInfoRsp::Swap(TActRechargeBackGetInfoRsp* other) {
  if (other != this) {
    std::swap(rechargenum_, other->rechargenum_);
    receiveinfoarr_.Swap(&other->receiveinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRechargeBackGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRechargeBackGetInfoRsp_descriptor_;
  metadata.reflection = TActRechargeBackGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRechargeBackReceiveGiftReq::kGiftIdFieldNumber;
#endif  // !_MSC_VER

TActRechargeBackReceiveGiftReq::TActRechargeBackReceiveGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRechargeBackReceiveGiftReq)
}

void TActRechargeBackReceiveGiftReq::InitAsDefaultInstance() {
}

TActRechargeBackReceiveGiftReq::TActRechargeBackReceiveGiftReq(const TActRechargeBackReceiveGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRechargeBackReceiveGiftReq)
}

void TActRechargeBackReceiveGiftReq::SharedCtor() {
  _cached_size_ = 0;
  giftid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRechargeBackReceiveGiftReq::~TActRechargeBackReceiveGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TActRechargeBackReceiveGiftReq)
  SharedDtor();
}

void TActRechargeBackReceiveGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRechargeBackReceiveGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRechargeBackReceiveGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRechargeBackReceiveGiftReq_descriptor_;
}

const TActRechargeBackReceiveGiftReq& TActRechargeBackReceiveGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  return *default_instance_;
}

TActRechargeBackReceiveGiftReq* TActRechargeBackReceiveGiftReq::default_instance_ = NULL;

TActRechargeBackReceiveGiftReq* TActRechargeBackReceiveGiftReq::New() const {
  return new TActRechargeBackReceiveGiftReq;
}

void TActRechargeBackReceiveGiftReq::Clear() {
  giftid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRechargeBackReceiveGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRechargeBackReceiveGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GiftId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRechargeBackReceiveGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRechargeBackReceiveGiftReq)
  return false;
#undef DO_
}

void TActRechargeBackReceiveGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRechargeBackReceiveGiftReq)
  // optional uint32 GiftId = 1;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giftid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRechargeBackReceiveGiftReq)
}

::google::protobuf::uint8* TActRechargeBackReceiveGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRechargeBackReceiveGiftReq)
  // optional uint32 GiftId = 1;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giftid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRechargeBackReceiveGiftReq)
  return target;
}

int TActRechargeBackReceiveGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GiftId = 1;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRechargeBackReceiveGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRechargeBackReceiveGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRechargeBackReceiveGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRechargeBackReceiveGiftReq::MergeFrom(const TActRechargeBackReceiveGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRechargeBackReceiveGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRechargeBackReceiveGiftReq::CopyFrom(const TActRechargeBackReceiveGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRechargeBackReceiveGiftReq::IsInitialized() const {

  return true;
}

void TActRechargeBackReceiveGiftReq::Swap(TActRechargeBackReceiveGiftReq* other) {
  if (other != this) {
    std::swap(giftid_, other->giftid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRechargeBackReceiveGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRechargeBackReceiveGiftReq_descriptor_;
  metadata.reflection = TActRechargeBackReceiveGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRechargeBackRechargeNotify::kRechargeNumFieldNumber;
#endif  // !_MSC_VER

TActRechargeBackRechargeNotify::TActRechargeBackRechargeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRechargeBackRechargeNotify)
}

void TActRechargeBackRechargeNotify::InitAsDefaultInstance() {
}

TActRechargeBackRechargeNotify::TActRechargeBackRechargeNotify(const TActRechargeBackRechargeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRechargeBackRechargeNotify)
}

void TActRechargeBackRechargeNotify::SharedCtor() {
  _cached_size_ = 0;
  rechargenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRechargeBackRechargeNotify::~TActRechargeBackRechargeNotify() {
  // @@protoc_insertion_point(destructor:pb.TActRechargeBackRechargeNotify)
  SharedDtor();
}

void TActRechargeBackRechargeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRechargeBackRechargeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRechargeBackRechargeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRechargeBackRechargeNotify_descriptor_;
}

const TActRechargeBackRechargeNotify& TActRechargeBackRechargeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  return *default_instance_;
}

TActRechargeBackRechargeNotify* TActRechargeBackRechargeNotify::default_instance_ = NULL;

TActRechargeBackRechargeNotify* TActRechargeBackRechargeNotify::New() const {
  return new TActRechargeBackRechargeNotify;
}

void TActRechargeBackRechargeNotify::Clear() {
  rechargenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRechargeBackRechargeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRechargeBackRechargeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RechargeNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rechargenum_)));
          set_has_rechargenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRechargeBackRechargeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRechargeBackRechargeNotify)
  return false;
#undef DO_
}

void TActRechargeBackRechargeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRechargeBackRechargeNotify)
  // optional uint32 RechargeNum = 1;
  if (has_rechargenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rechargenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRechargeBackRechargeNotify)
}

::google::protobuf::uint8* TActRechargeBackRechargeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRechargeBackRechargeNotify)
  // optional uint32 RechargeNum = 1;
  if (has_rechargenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rechargenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRechargeBackRechargeNotify)
  return target;
}

int TActRechargeBackRechargeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RechargeNum = 1;
    if (has_rechargenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rechargenum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRechargeBackRechargeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRechargeBackRechargeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRechargeBackRechargeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRechargeBackRechargeNotify::MergeFrom(const TActRechargeBackRechargeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rechargenum()) {
      set_rechargenum(from.rechargenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRechargeBackRechargeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRechargeBackRechargeNotify::CopyFrom(const TActRechargeBackRechargeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRechargeBackRechargeNotify::IsInitialized() const {

  return true;
}

void TActRechargeBackRechargeNotify::Swap(TActRechargeBackRechargeNotify* other) {
  if (other != this) {
    std::swap(rechargenum_, other->rechargenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRechargeBackRechargeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRechargeBackRechargeNotify_descriptor_;
  metadata.reflection = TActRechargeBackRechargeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
