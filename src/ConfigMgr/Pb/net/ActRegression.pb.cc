// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActRegression.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActRegression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActRegressionGetActInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionGetActInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionTaskStateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionTaskStateInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionGoodInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionGoodInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionRmbGoodsNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionRmbGoodsNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionExchangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionExchangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionBuyGoldGoodsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionBuyGoldGoodsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionFinishTaskReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionFinishTaskReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionFinishTaskNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionFinishTaskNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionRetrieveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionRetrieveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActRegressionExchangeRetrieveNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActRegressionExchangeRetrieveNumReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ETaskState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActRegression_2eproto() {
  protobuf_AddDesc_net_2fActRegression_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActRegression.proto");
  GOOGLE_CHECK(file != NULL);
  TActRegressionGetActInfoRsp_descriptor_ = file->message_type(0);
  static const int TActRegressionGetActInfoRsp_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, rmbgoodarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, exchangegoodarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, goldgoodarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, taskarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, offlinedays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, receivedreturngift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, returntime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, avaretrievenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, paidpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, freepoints_),
  };
  TActRegressionGetActInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionGetActInfoRsp_descriptor_,
      TActRegressionGetActInfoRsp::default_instance_,
      TActRegressionGetActInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGetActInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionGetActInfoRsp));
  TActRegressionTaskInfo_descriptor_ = file->message_type(1);
  static const int TActRegressionTaskInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskInfo, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskInfo, finishnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskInfo, taskstatearr_),
  };
  TActRegressionTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionTaskInfo_descriptor_,
      TActRegressionTaskInfo::default_instance_,
      TActRegressionTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionTaskInfo));
  TActRegressionTaskStateInfo_descriptor_ = file->message_type(2);
  static const int TActRegressionTaskStateInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskStateInfo, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskStateInfo, taskstate_),
  };
  TActRegressionTaskStateInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionTaskStateInfo_descriptor_,
      TActRegressionTaskStateInfo::default_instance_,
      TActRegressionTaskStateInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskStateInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionTaskStateInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionTaskStateInfo));
  TActRegressionGoodInfo_descriptor_ = file->message_type(3);
  static const int TActRegressionGoodInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGoodInfo, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGoodInfo, boughtnum_),
  };
  TActRegressionGoodInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionGoodInfo_descriptor_,
      TActRegressionGoodInfo::default_instance_,
      TActRegressionGoodInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGoodInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionGoodInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionGoodInfo));
  TActRegressionRmbGoodsNotify_descriptor_ = file->message_type(4);
  static const int TActRegressionRmbGoodsNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionRmbGoodsNotify, goodsarr_),
  };
  TActRegressionRmbGoodsNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionRmbGoodsNotify_descriptor_,
      TActRegressionRmbGoodsNotify::default_instance_,
      TActRegressionRmbGoodsNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionRmbGoodsNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionRmbGoodsNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionRmbGoodsNotify));
  TActRegressionExchangeReq_descriptor_ = file->message_type(5);
  static const int TActRegressionExchangeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeReq, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeReq, num_),
  };
  TActRegressionExchangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionExchangeReq_descriptor_,
      TActRegressionExchangeReq::default_instance_,
      TActRegressionExchangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionExchangeReq));
  TActRegressionBuyGoldGoodsReq_descriptor_ = file->message_type(6);
  static const int TActRegressionBuyGoldGoodsReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionBuyGoldGoodsReq, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionBuyGoldGoodsReq, num_),
  };
  TActRegressionBuyGoldGoodsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionBuyGoldGoodsReq_descriptor_,
      TActRegressionBuyGoldGoodsReq::default_instance_,
      TActRegressionBuyGoldGoodsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionBuyGoldGoodsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionBuyGoldGoodsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionBuyGoldGoodsReq));
  TActRegressionFinishTaskReq_descriptor_ = file->message_type(7);
  static const int TActRegressionFinishTaskReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionFinishTaskReq, taskidarr_),
  };
  TActRegressionFinishTaskReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionFinishTaskReq_descriptor_,
      TActRegressionFinishTaskReq::default_instance_,
      TActRegressionFinishTaskReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionFinishTaskReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionFinishTaskReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionFinishTaskReq));
  TActRegressionFinishTaskNotify_descriptor_ = file->message_type(8);
  static const int TActRegressionFinishTaskNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionFinishTaskNotify, taskinfo_),
  };
  TActRegressionFinishTaskNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionFinishTaskNotify_descriptor_,
      TActRegressionFinishTaskNotify::default_instance_,
      TActRegressionFinishTaskNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionFinishTaskNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionFinishTaskNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionFinishTaskNotify));
  TActRegressionRetrieveReq_descriptor_ = file->message_type(9);
  static const int TActRegressionRetrieveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionRetrieveReq, num_),
  };
  TActRegressionRetrieveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionRetrieveReq_descriptor_,
      TActRegressionRetrieveReq::default_instance_,
      TActRegressionRetrieveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionRetrieveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionRetrieveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionRetrieveReq));
  TActRegressionExchangeRetrieveNumReq_descriptor_ = file->message_type(10);
  static const int TActRegressionExchangeRetrieveNumReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeRetrieveNumReq, num_),
  };
  TActRegressionExchangeRetrieveNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActRegressionExchangeRetrieveNumReq_descriptor_,
      TActRegressionExchangeRetrieveNumReq::default_instance_,
      TActRegressionExchangeRetrieveNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeRetrieveNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActRegressionExchangeRetrieveNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActRegressionExchangeRetrieveNumReq));
  ETaskState_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActRegression_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionGetActInfoRsp_descriptor_, &TActRegressionGetActInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionTaskInfo_descriptor_, &TActRegressionTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionTaskStateInfo_descriptor_, &TActRegressionTaskStateInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionGoodInfo_descriptor_, &TActRegressionGoodInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionRmbGoodsNotify_descriptor_, &TActRegressionRmbGoodsNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionExchangeReq_descriptor_, &TActRegressionExchangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionBuyGoldGoodsReq_descriptor_, &TActRegressionBuyGoldGoodsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionFinishTaskReq_descriptor_, &TActRegressionFinishTaskReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionFinishTaskNotify_descriptor_, &TActRegressionFinishTaskNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionRetrieveReq_descriptor_, &TActRegressionRetrieveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActRegressionExchangeRetrieveNumReq_descriptor_, &TActRegressionExchangeRetrieveNumReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActRegression_2eproto() {
  delete TActRegressionGetActInfoRsp::default_instance_;
  delete TActRegressionGetActInfoRsp_reflection_;
  delete TActRegressionTaskInfo::default_instance_;
  delete TActRegressionTaskInfo_reflection_;
  delete TActRegressionTaskStateInfo::default_instance_;
  delete TActRegressionTaskStateInfo_reflection_;
  delete TActRegressionGoodInfo::default_instance_;
  delete TActRegressionGoodInfo_reflection_;
  delete TActRegressionRmbGoodsNotify::default_instance_;
  delete TActRegressionRmbGoodsNotify_reflection_;
  delete TActRegressionExchangeReq::default_instance_;
  delete TActRegressionExchangeReq_reflection_;
  delete TActRegressionBuyGoldGoodsReq::default_instance_;
  delete TActRegressionBuyGoldGoodsReq_reflection_;
  delete TActRegressionFinishTaskReq::default_instance_;
  delete TActRegressionFinishTaskReq_reflection_;
  delete TActRegressionFinishTaskNotify::default_instance_;
  delete TActRegressionFinishTaskNotify_reflection_;
  delete TActRegressionRetrieveReq::default_instance_;
  delete TActRegressionRetrieveReq_reflection_;
  delete TActRegressionExchangeRetrieveNumReq::default_instance_;
  delete TActRegressionExchangeRetrieveNumReq_reflection_;
}

void protobuf_AddDesc_net_2fActRegression_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027net/ActRegression.proto\022\002pb\"\203\003\n\033TActRe"
    "gressionGetActInfoRsp\022\r\n\005Level\030\001 \001(\r\022\r\n\005"
    "Score\030\002 \001(\r\022.\n\nRmbGoodArr\030\003 \003(\0132\032.pb.TAc"
    "tRegressionGoodInfo\0223\n\017ExchangeGoodArr\030\004"
    " \003(\0132\032.pb.TActRegressionGoodInfo\022/\n\013Gold"
    "GoodArr\030\t \003(\0132\032.pb.TActRegressionGoodInf"
    "o\022+\n\007TaskArr\030\005 \003(\0132\032.pb.TActRegressionTa"
    "skInfo\022\023\n\013OfflineDays\030\006 \001(\r\022\032\n\022ReceivedR"
    "eturnGift\030\007 \001(\r\022\022\n\nReturnTime\030\010 \001(\004\022\026\n\016A"
    "vaRetrieveNum\030\n \001(\r\022\022\n\nPaidPoints\030\013 \001(\r\022"
    "\022\n\nFreePoints\030\014 \001(\r\"t\n\026TActRegressionTas"
    "kInfo\022\020\n\010TaskType\030\001 \001(\r\022\021\n\tFinishNum\030\002 \001"
    "(\r\0225\n\014TaskStateArr\030\003 \003(\0132\037.pb.TActRegres"
    "sionTaskStateInfo\"P\n\033TActRegressionTaskS"
    "tateInfo\022\016\n\006TaskId\030\001 \001(\r\022!\n\tTaskState\030\002 "
    "\001(\0162\016.pb.ETaskState\";\n\026TActRegressionGoo"
    "dInfo\022\016\n\006GoodId\030\001 \001(\r\022\021\n\tBoughtNum\030\002 \001(\r"
    "\"L\n\034TActRegressionRmbGoodsNotify\022,\n\010Good"
    "sArr\030\001 \003(\0132\032.pb.TActRegressionGoodInfo\"8"
    "\n\031TActRegressionExchangeReq\022\016\n\006GoodId\030\001 "
    "\001(\r\022\013\n\003Num\030\002 \001(\r\"<\n\035TActRegressionBuyGol"
    "dGoodsReq\022\016\n\006GoodId\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"0"
    "\n\033TActRegressionFinishTaskReq\022\021\n\tTaskIdA"
    "rr\030\001 \003(\r\"N\n\036TActRegressionFinishTaskNoti"
    "fy\022,\n\010TaskInfo\030\001 \001(\0132\032.pb.TActRegression"
    "TaskInfo\"(\n\031TActRegressionRetrieveReq\022\013\n"
    "\003Num\030\001 \001(\r\"3\n$TActRegressionExchangeRetr"
    "ieveNumReq\022\013\n\003Num\030\001 \001(\r*W\n\nETaskState\022\030\n"
    "\024ETaskStateNotReceive\020\001\022\026\n\022ETaskStateRec"
    "eived\020\002\022\027\n\023ETaskStateNotFinish\020\003", 1192);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActRegression.proto", &protobuf_RegisterTypes);
  TActRegressionGetActInfoRsp::default_instance_ = new TActRegressionGetActInfoRsp();
  TActRegressionTaskInfo::default_instance_ = new TActRegressionTaskInfo();
  TActRegressionTaskStateInfo::default_instance_ = new TActRegressionTaskStateInfo();
  TActRegressionGoodInfo::default_instance_ = new TActRegressionGoodInfo();
  TActRegressionRmbGoodsNotify::default_instance_ = new TActRegressionRmbGoodsNotify();
  TActRegressionExchangeReq::default_instance_ = new TActRegressionExchangeReq();
  TActRegressionBuyGoldGoodsReq::default_instance_ = new TActRegressionBuyGoldGoodsReq();
  TActRegressionFinishTaskReq::default_instance_ = new TActRegressionFinishTaskReq();
  TActRegressionFinishTaskNotify::default_instance_ = new TActRegressionFinishTaskNotify();
  TActRegressionRetrieveReq::default_instance_ = new TActRegressionRetrieveReq();
  TActRegressionExchangeRetrieveNumReq::default_instance_ = new TActRegressionExchangeRetrieveNumReq();
  TActRegressionGetActInfoRsp::default_instance_->InitAsDefaultInstance();
  TActRegressionTaskInfo::default_instance_->InitAsDefaultInstance();
  TActRegressionTaskStateInfo::default_instance_->InitAsDefaultInstance();
  TActRegressionGoodInfo::default_instance_->InitAsDefaultInstance();
  TActRegressionRmbGoodsNotify::default_instance_->InitAsDefaultInstance();
  TActRegressionExchangeReq::default_instance_->InitAsDefaultInstance();
  TActRegressionBuyGoldGoodsReq::default_instance_->InitAsDefaultInstance();
  TActRegressionFinishTaskReq::default_instance_->InitAsDefaultInstance();
  TActRegressionFinishTaskNotify::default_instance_->InitAsDefaultInstance();
  TActRegressionRetrieveReq::default_instance_->InitAsDefaultInstance();
  TActRegressionExchangeRetrieveNumReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActRegression_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActRegression_2eproto {
  StaticDescriptorInitializer_net_2fActRegression_2eproto() {
    protobuf_AddDesc_net_2fActRegression_2eproto();
  }
} static_descriptor_initializer_net_2fActRegression_2eproto_;
const ::google::protobuf::EnumDescriptor* ETaskState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETaskState_descriptor_;
}
bool ETaskState_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionGetActInfoRsp::kLevelFieldNumber;
const int TActRegressionGetActInfoRsp::kScoreFieldNumber;
const int TActRegressionGetActInfoRsp::kRmbGoodArrFieldNumber;
const int TActRegressionGetActInfoRsp::kExchangeGoodArrFieldNumber;
const int TActRegressionGetActInfoRsp::kGoldGoodArrFieldNumber;
const int TActRegressionGetActInfoRsp::kTaskArrFieldNumber;
const int TActRegressionGetActInfoRsp::kOfflineDaysFieldNumber;
const int TActRegressionGetActInfoRsp::kReceivedReturnGiftFieldNumber;
const int TActRegressionGetActInfoRsp::kReturnTimeFieldNumber;
const int TActRegressionGetActInfoRsp::kAvaRetrieveNumFieldNumber;
const int TActRegressionGetActInfoRsp::kPaidPointsFieldNumber;
const int TActRegressionGetActInfoRsp::kFreePointsFieldNumber;
#endif  // !_MSC_VER

TActRegressionGetActInfoRsp::TActRegressionGetActInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionGetActInfoRsp)
}

void TActRegressionGetActInfoRsp::InitAsDefaultInstance() {
}

TActRegressionGetActInfoRsp::TActRegressionGetActInfoRsp(const TActRegressionGetActInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionGetActInfoRsp)
}

void TActRegressionGetActInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  score_ = 0u;
  offlinedays_ = 0u;
  receivedreturngift_ = 0u;
  returntime_ = GOOGLE_ULONGLONG(0);
  avaretrievenum_ = 0u;
  paidpoints_ = 0u;
  freepoints_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionGetActInfoRsp::~TActRegressionGetActInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionGetActInfoRsp)
  SharedDtor();
}

void TActRegressionGetActInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionGetActInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionGetActInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionGetActInfoRsp_descriptor_;
}

const TActRegressionGetActInfoRsp& TActRegressionGetActInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionGetActInfoRsp* TActRegressionGetActInfoRsp::default_instance_ = NULL;

TActRegressionGetActInfoRsp* TActRegressionGetActInfoRsp::New() const {
  return new TActRegressionGetActInfoRsp;
}

void TActRegressionGetActInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActRegressionGetActInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(level_, score_);
  ZR_(offlinedays_, receivedreturngift_);
  ZR_(returntime_, freepoints_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rmbgoodarr_.Clear();
  exchangegoodarr_.Clear();
  goldgoodarr_.Clear();
  taskarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionGetActInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionGetActInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint32 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RmbGoodArr;
        break;
      }

      // repeated .pb.TActRegressionGoodInfo RmbGoodArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RmbGoodArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rmbgoodarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RmbGoodArr;
        if (input->ExpectTag(34)) goto parse_ExchangeGoodArr;
        break;
      }

      // repeated .pb.TActRegressionGoodInfo ExchangeGoodArr = 4;
      case 4: {
        if (tag == 34) {
         parse_ExchangeGoodArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_exchangegoodarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ExchangeGoodArr;
        if (input->ExpectTag(42)) goto parse_TaskArr;
        break;
      }

      // repeated .pb.TActRegressionTaskInfo TaskArr = 5;
      case 5: {
        if (tag == 42) {
         parse_TaskArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TaskArr;
        if (input->ExpectTag(48)) goto parse_OfflineDays;
        break;
      }

      // optional uint32 OfflineDays = 6;
      case 6: {
        if (tag == 48) {
         parse_OfflineDays:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offlinedays_)));
          set_has_offlinedays();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ReceivedReturnGift;
        break;
      }

      // optional uint32 ReceivedReturnGift = 7;
      case 7: {
        if (tag == 56) {
         parse_ReceivedReturnGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receivedreturngift_)));
          set_has_receivedreturngift();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ReturnTime;
        break;
      }

      // optional uint64 ReturnTime = 8;
      case 8: {
        if (tag == 64) {
         parse_ReturnTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &returntime_)));
          set_has_returntime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_GoldGoodArr;
        break;
      }

      // repeated .pb.TActRegressionGoodInfo GoldGoodArr = 9;
      case 9: {
        if (tag == 74) {
         parse_GoldGoodArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goldgoodarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_GoldGoodArr;
        if (input->ExpectTag(80)) goto parse_AvaRetrieveNum;
        break;
      }

      // optional uint32 AvaRetrieveNum = 10;
      case 10: {
        if (tag == 80) {
         parse_AvaRetrieveNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avaretrievenum_)));
          set_has_avaretrievenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_PaidPoints;
        break;
      }

      // optional uint32 PaidPoints = 11;
      case 11: {
        if (tag == 88) {
         parse_PaidPoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &paidpoints_)));
          set_has_paidpoints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_FreePoints;
        break;
      }

      // optional uint32 FreePoints = 12;
      case 12: {
        if (tag == 96) {
         parse_FreePoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freepoints_)));
          set_has_freepoints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionGetActInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionGetActInfoRsp)
  return false;
#undef DO_
}

void TActRegressionGetActInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionGetActInfoRsp)
  // optional uint32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  // repeated .pb.TActRegressionGoodInfo RmbGoodArr = 3;
  for (int i = 0; i < this->rmbgoodarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rmbgoodarr(i), output);
  }

  // repeated .pb.TActRegressionGoodInfo ExchangeGoodArr = 4;
  for (int i = 0; i < this->exchangegoodarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->exchangegoodarr(i), output);
  }

  // repeated .pb.TActRegressionTaskInfo TaskArr = 5;
  for (int i = 0; i < this->taskarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->taskarr(i), output);
  }

  // optional uint32 OfflineDays = 6;
  if (has_offlinedays()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offlinedays(), output);
  }

  // optional uint32 ReceivedReturnGift = 7;
  if (has_receivedreturngift()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->receivedreturngift(), output);
  }

  // optional uint64 ReturnTime = 8;
  if (has_returntime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->returntime(), output);
  }

  // repeated .pb.TActRegressionGoodInfo GoldGoodArr = 9;
  for (int i = 0; i < this->goldgoodarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->goldgoodarr(i), output);
  }

  // optional uint32 AvaRetrieveNum = 10;
  if (has_avaretrievenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->avaretrievenum(), output);
  }

  // optional uint32 PaidPoints = 11;
  if (has_paidpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->paidpoints(), output);
  }

  // optional uint32 FreePoints = 12;
  if (has_freepoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->freepoints(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionGetActInfoRsp)
}

::google::protobuf::uint8* TActRegressionGetActInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionGetActInfoRsp)
  // optional uint32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  // repeated .pb.TActRegressionGoodInfo RmbGoodArr = 3;
  for (int i = 0; i < this->rmbgoodarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rmbgoodarr(i), target);
  }

  // repeated .pb.TActRegressionGoodInfo ExchangeGoodArr = 4;
  for (int i = 0; i < this->exchangegoodarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->exchangegoodarr(i), target);
  }

  // repeated .pb.TActRegressionTaskInfo TaskArr = 5;
  for (int i = 0; i < this->taskarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->taskarr(i), target);
  }

  // optional uint32 OfflineDays = 6;
  if (has_offlinedays()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offlinedays(), target);
  }

  // optional uint32 ReceivedReturnGift = 7;
  if (has_receivedreturngift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->receivedreturngift(), target);
  }

  // optional uint64 ReturnTime = 8;
  if (has_returntime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->returntime(), target);
  }

  // repeated .pb.TActRegressionGoodInfo GoldGoodArr = 9;
  for (int i = 0; i < this->goldgoodarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->goldgoodarr(i), target);
  }

  // optional uint32 AvaRetrieveNum = 10;
  if (has_avaretrievenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->avaretrievenum(), target);
  }

  // optional uint32 PaidPoints = 11;
  if (has_paidpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->paidpoints(), target);
  }

  // optional uint32 FreePoints = 12;
  if (has_freepoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->freepoints(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionGetActInfoRsp)
  return target;
}

int TActRegressionGetActInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

    // optional uint32 OfflineDays = 6;
    if (has_offlinedays()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offlinedays());
    }

    // optional uint32 ReceivedReturnGift = 7;
    if (has_receivedreturngift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receivedreturngift());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 ReturnTime = 8;
    if (has_returntime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->returntime());
    }

    // optional uint32 AvaRetrieveNum = 10;
    if (has_avaretrievenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->avaretrievenum());
    }

    // optional uint32 PaidPoints = 11;
    if (has_paidpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->paidpoints());
    }

    // optional uint32 FreePoints = 12;
    if (has_freepoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freepoints());
    }

  }
  // repeated .pb.TActRegressionGoodInfo RmbGoodArr = 3;
  total_size += 1 * this->rmbgoodarr_size();
  for (int i = 0; i < this->rmbgoodarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rmbgoodarr(i));
  }

  // repeated .pb.TActRegressionGoodInfo ExchangeGoodArr = 4;
  total_size += 1 * this->exchangegoodarr_size();
  for (int i = 0; i < this->exchangegoodarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->exchangegoodarr(i));
  }

  // repeated .pb.TActRegressionGoodInfo GoldGoodArr = 9;
  total_size += 1 * this->goldgoodarr_size();
  for (int i = 0; i < this->goldgoodarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goldgoodarr(i));
  }

  // repeated .pb.TActRegressionTaskInfo TaskArr = 5;
  total_size += 1 * this->taskarr_size();
  for (int i = 0; i < this->taskarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionGetActInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionGetActInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionGetActInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionGetActInfoRsp::MergeFrom(const TActRegressionGetActInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rmbgoodarr_.MergeFrom(from.rmbgoodarr_);
  exchangegoodarr_.MergeFrom(from.exchangegoodarr_);
  goldgoodarr_.MergeFrom(from.goldgoodarr_);
  taskarr_.MergeFrom(from.taskarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_offlinedays()) {
      set_offlinedays(from.offlinedays());
    }
    if (from.has_receivedreturngift()) {
      set_receivedreturngift(from.receivedreturngift());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_returntime()) {
      set_returntime(from.returntime());
    }
    if (from.has_avaretrievenum()) {
      set_avaretrievenum(from.avaretrievenum());
    }
    if (from.has_paidpoints()) {
      set_paidpoints(from.paidpoints());
    }
    if (from.has_freepoints()) {
      set_freepoints(from.freepoints());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionGetActInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionGetActInfoRsp::CopyFrom(const TActRegressionGetActInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionGetActInfoRsp::IsInitialized() const {

  return true;
}

void TActRegressionGetActInfoRsp::Swap(TActRegressionGetActInfoRsp* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(score_, other->score_);
    rmbgoodarr_.Swap(&other->rmbgoodarr_);
    exchangegoodarr_.Swap(&other->exchangegoodarr_);
    goldgoodarr_.Swap(&other->goldgoodarr_);
    taskarr_.Swap(&other->taskarr_);
    std::swap(offlinedays_, other->offlinedays_);
    std::swap(receivedreturngift_, other->receivedreturngift_);
    std::swap(returntime_, other->returntime_);
    std::swap(avaretrievenum_, other->avaretrievenum_);
    std::swap(paidpoints_, other->paidpoints_);
    std::swap(freepoints_, other->freepoints_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionGetActInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionGetActInfoRsp_descriptor_;
  metadata.reflection = TActRegressionGetActInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionTaskInfo::kTaskTypeFieldNumber;
const int TActRegressionTaskInfo::kFinishNumFieldNumber;
const int TActRegressionTaskInfo::kTaskStateArrFieldNumber;
#endif  // !_MSC_VER

TActRegressionTaskInfo::TActRegressionTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionTaskInfo)
}

void TActRegressionTaskInfo::InitAsDefaultInstance() {
}

TActRegressionTaskInfo::TActRegressionTaskInfo(const TActRegressionTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionTaskInfo)
}

void TActRegressionTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  tasktype_ = 0u;
  finishnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionTaskInfo::~TActRegressionTaskInfo() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionTaskInfo)
  SharedDtor();
}

void TActRegressionTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionTaskInfo_descriptor_;
}

const TActRegressionTaskInfo& TActRegressionTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionTaskInfo* TActRegressionTaskInfo::default_instance_ = NULL;

TActRegressionTaskInfo* TActRegressionTaskInfo::New() const {
  return new TActRegressionTaskInfo;
}

void TActRegressionTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActRegressionTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tasktype_, finishnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  taskstatearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tasktype_)));
          set_has_tasktype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FinishNum;
        break;
      }

      // optional uint32 FinishNum = 2;
      case 2: {
        if (tag == 16) {
         parse_FinishNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finishnum_)));
          set_has_finishnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TaskStateArr;
        break;
      }

      // repeated .pb.TActRegressionTaskStateInfo TaskStateArr = 3;
      case 3: {
        if (tag == 26) {
         parse_TaskStateArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskstatearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TaskStateArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionTaskInfo)
  return false;
#undef DO_
}

void TActRegressionTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionTaskInfo)
  // optional uint32 TaskType = 1;
  if (has_tasktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tasktype(), output);
  }

  // optional uint32 FinishNum = 2;
  if (has_finishnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->finishnum(), output);
  }

  // repeated .pb.TActRegressionTaskStateInfo TaskStateArr = 3;
  for (int i = 0; i < this->taskstatearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->taskstatearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionTaskInfo)
}

::google::protobuf::uint8* TActRegressionTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionTaskInfo)
  // optional uint32 TaskType = 1;
  if (has_tasktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tasktype(), target);
  }

  // optional uint32 FinishNum = 2;
  if (has_finishnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->finishnum(), target);
  }

  // repeated .pb.TActRegressionTaskStateInfo TaskStateArr = 3;
  for (int i = 0; i < this->taskstatearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->taskstatearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionTaskInfo)
  return target;
}

int TActRegressionTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskType = 1;
    if (has_tasktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tasktype());
    }

    // optional uint32 FinishNum = 2;
    if (has_finishnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->finishnum());
    }

  }
  // repeated .pb.TActRegressionTaskStateInfo TaskStateArr = 3;
  total_size += 1 * this->taskstatearr_size();
  for (int i = 0; i < this->taskstatearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskstatearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionTaskInfo::MergeFrom(const TActRegressionTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskstatearr_.MergeFrom(from.taskstatearr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tasktype()) {
      set_tasktype(from.tasktype());
    }
    if (from.has_finishnum()) {
      set_finishnum(from.finishnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionTaskInfo::CopyFrom(const TActRegressionTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionTaskInfo::IsInitialized() const {

  return true;
}

void TActRegressionTaskInfo::Swap(TActRegressionTaskInfo* other) {
  if (other != this) {
    std::swap(tasktype_, other->tasktype_);
    std::swap(finishnum_, other->finishnum_);
    taskstatearr_.Swap(&other->taskstatearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionTaskInfo_descriptor_;
  metadata.reflection = TActRegressionTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionTaskStateInfo::kTaskIdFieldNumber;
const int TActRegressionTaskStateInfo::kTaskStateFieldNumber;
#endif  // !_MSC_VER

TActRegressionTaskStateInfo::TActRegressionTaskStateInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionTaskStateInfo)
}

void TActRegressionTaskStateInfo::InitAsDefaultInstance() {
}

TActRegressionTaskStateInfo::TActRegressionTaskStateInfo(const TActRegressionTaskStateInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionTaskStateInfo)
}

void TActRegressionTaskStateInfo::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  taskstate_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionTaskStateInfo::~TActRegressionTaskStateInfo() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionTaskStateInfo)
  SharedDtor();
}

void TActRegressionTaskStateInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionTaskStateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionTaskStateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionTaskStateInfo_descriptor_;
}

const TActRegressionTaskStateInfo& TActRegressionTaskStateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionTaskStateInfo* TActRegressionTaskStateInfo::default_instance_ = NULL;

TActRegressionTaskStateInfo* TActRegressionTaskStateInfo::New() const {
  return new TActRegressionTaskStateInfo;
}

void TActRegressionTaskStateInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    taskid_ = 0u;
    taskstate_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionTaskStateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionTaskStateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TaskState;
        break;
      }

      // optional .pb.ETaskState TaskState = 2;
      case 2: {
        if (tag == 16) {
         parse_TaskState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ETaskState_IsValid(value)) {
            set_taskstate(static_cast< ::pb::ETaskState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionTaskStateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionTaskStateInfo)
  return false;
#undef DO_
}

void TActRegressionTaskStateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionTaskStateInfo)
  // optional uint32 TaskId = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // optional .pb.ETaskState TaskState = 2;
  if (has_taskstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->taskstate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionTaskStateInfo)
}

::google::protobuf::uint8* TActRegressionTaskStateInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionTaskStateInfo)
  // optional uint32 TaskId = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // optional .pb.ETaskState TaskState = 2;
  if (has_taskstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->taskstate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionTaskStateInfo)
  return target;
}

int TActRegressionTaskStateInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskId = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

    // optional .pb.ETaskState TaskState = 2;
    if (has_taskstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->taskstate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionTaskStateInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionTaskStateInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionTaskStateInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionTaskStateInfo::MergeFrom(const TActRegressionTaskStateInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_taskstate()) {
      set_taskstate(from.taskstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionTaskStateInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionTaskStateInfo::CopyFrom(const TActRegressionTaskStateInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionTaskStateInfo::IsInitialized() const {

  return true;
}

void TActRegressionTaskStateInfo::Swap(TActRegressionTaskStateInfo* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(taskstate_, other->taskstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionTaskStateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionTaskStateInfo_descriptor_;
  metadata.reflection = TActRegressionTaskStateInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionGoodInfo::kGoodIdFieldNumber;
const int TActRegressionGoodInfo::kBoughtNumFieldNumber;
#endif  // !_MSC_VER

TActRegressionGoodInfo::TActRegressionGoodInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionGoodInfo)
}

void TActRegressionGoodInfo::InitAsDefaultInstance() {
}

TActRegressionGoodInfo::TActRegressionGoodInfo(const TActRegressionGoodInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionGoodInfo)
}

void TActRegressionGoodInfo::SharedCtor() {
  _cached_size_ = 0;
  goodid_ = 0u;
  boughtnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionGoodInfo::~TActRegressionGoodInfo() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionGoodInfo)
  SharedDtor();
}

void TActRegressionGoodInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionGoodInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionGoodInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionGoodInfo_descriptor_;
}

const TActRegressionGoodInfo& TActRegressionGoodInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionGoodInfo* TActRegressionGoodInfo::default_instance_ = NULL;

TActRegressionGoodInfo* TActRegressionGoodInfo::New() const {
  return new TActRegressionGoodInfo;
}

void TActRegressionGoodInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActRegressionGoodInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodid_, boughtnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionGoodInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionGoodInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GoodId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoughtNum;
        break;
      }

      // optional uint32 BoughtNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BoughtNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boughtnum_)));
          set_has_boughtnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionGoodInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionGoodInfo)
  return false;
#undef DO_
}

void TActRegressionGoodInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionGoodInfo)
  // optional uint32 GoodId = 1;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodid(), output);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boughtnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionGoodInfo)
}

::google::protobuf::uint8* TActRegressionGoodInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionGoodInfo)
  // optional uint32 GoodId = 1;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodid(), target);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boughtnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionGoodInfo)
  return target;
}

int TActRegressionGoodInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodId = 1;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // optional uint32 BoughtNum = 2;
    if (has_boughtnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boughtnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionGoodInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionGoodInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionGoodInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionGoodInfo::MergeFrom(const TActRegressionGoodInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_boughtnum()) {
      set_boughtnum(from.boughtnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionGoodInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionGoodInfo::CopyFrom(const TActRegressionGoodInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionGoodInfo::IsInitialized() const {

  return true;
}

void TActRegressionGoodInfo::Swap(TActRegressionGoodInfo* other) {
  if (other != this) {
    std::swap(goodid_, other->goodid_);
    std::swap(boughtnum_, other->boughtnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionGoodInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionGoodInfo_descriptor_;
  metadata.reflection = TActRegressionGoodInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionRmbGoodsNotify::kGoodsArrFieldNumber;
#endif  // !_MSC_VER

TActRegressionRmbGoodsNotify::TActRegressionRmbGoodsNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionRmbGoodsNotify)
}

void TActRegressionRmbGoodsNotify::InitAsDefaultInstance() {
}

TActRegressionRmbGoodsNotify::TActRegressionRmbGoodsNotify(const TActRegressionRmbGoodsNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionRmbGoodsNotify)
}

void TActRegressionRmbGoodsNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionRmbGoodsNotify::~TActRegressionRmbGoodsNotify() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionRmbGoodsNotify)
  SharedDtor();
}

void TActRegressionRmbGoodsNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionRmbGoodsNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionRmbGoodsNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionRmbGoodsNotify_descriptor_;
}

const TActRegressionRmbGoodsNotify& TActRegressionRmbGoodsNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionRmbGoodsNotify* TActRegressionRmbGoodsNotify::default_instance_ = NULL;

TActRegressionRmbGoodsNotify* TActRegressionRmbGoodsNotify::New() const {
  return new TActRegressionRmbGoodsNotify;
}

void TActRegressionRmbGoodsNotify::Clear() {
  goodsarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionRmbGoodsNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionRmbGoodsNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActRegressionGoodInfo GoodsArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GoodsArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GoodsArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionRmbGoodsNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionRmbGoodsNotify)
  return false;
#undef DO_
}

void TActRegressionRmbGoodsNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionRmbGoodsNotify)
  // repeated .pb.TActRegressionGoodInfo GoodsArr = 1;
  for (int i = 0; i < this->goodsarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodsarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionRmbGoodsNotify)
}

::google::protobuf::uint8* TActRegressionRmbGoodsNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionRmbGoodsNotify)
  // repeated .pb.TActRegressionGoodInfo GoodsArr = 1;
  for (int i = 0; i < this->goodsarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goodsarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionRmbGoodsNotify)
  return target;
}

int TActRegressionRmbGoodsNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActRegressionGoodInfo GoodsArr = 1;
  total_size += 1 * this->goodsarr_size();
  for (int i = 0; i < this->goodsarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goodsarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionRmbGoodsNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionRmbGoodsNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionRmbGoodsNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionRmbGoodsNotify::MergeFrom(const TActRegressionRmbGoodsNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsarr_.MergeFrom(from.goodsarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionRmbGoodsNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionRmbGoodsNotify::CopyFrom(const TActRegressionRmbGoodsNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionRmbGoodsNotify::IsInitialized() const {

  return true;
}

void TActRegressionRmbGoodsNotify::Swap(TActRegressionRmbGoodsNotify* other) {
  if (other != this) {
    goodsarr_.Swap(&other->goodsarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionRmbGoodsNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionRmbGoodsNotify_descriptor_;
  metadata.reflection = TActRegressionRmbGoodsNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionExchangeReq::kGoodIdFieldNumber;
const int TActRegressionExchangeReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActRegressionExchangeReq::TActRegressionExchangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionExchangeReq)
}

void TActRegressionExchangeReq::InitAsDefaultInstance() {
}

TActRegressionExchangeReq::TActRegressionExchangeReq(const TActRegressionExchangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionExchangeReq)
}

void TActRegressionExchangeReq::SharedCtor() {
  _cached_size_ = 0;
  goodid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionExchangeReq::~TActRegressionExchangeReq() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionExchangeReq)
  SharedDtor();
}

void TActRegressionExchangeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionExchangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionExchangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionExchangeReq_descriptor_;
}

const TActRegressionExchangeReq& TActRegressionExchangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionExchangeReq* TActRegressionExchangeReq::default_instance_ = NULL;

TActRegressionExchangeReq* TActRegressionExchangeReq::New() const {
  return new TActRegressionExchangeReq;
}

void TActRegressionExchangeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActRegressionExchangeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionExchangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionExchangeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GoodId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionExchangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionExchangeReq)
  return false;
#undef DO_
}

void TActRegressionExchangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionExchangeReq)
  // optional uint32 GoodId = 1;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionExchangeReq)
}

::google::protobuf::uint8* TActRegressionExchangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionExchangeReq)
  // optional uint32 GoodId = 1;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionExchangeReq)
  return target;
}

int TActRegressionExchangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodId = 1;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionExchangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionExchangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionExchangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionExchangeReq::MergeFrom(const TActRegressionExchangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionExchangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionExchangeReq::CopyFrom(const TActRegressionExchangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionExchangeReq::IsInitialized() const {

  return true;
}

void TActRegressionExchangeReq::Swap(TActRegressionExchangeReq* other) {
  if (other != this) {
    std::swap(goodid_, other->goodid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionExchangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionExchangeReq_descriptor_;
  metadata.reflection = TActRegressionExchangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionBuyGoldGoodsReq::kGoodIdFieldNumber;
const int TActRegressionBuyGoldGoodsReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActRegressionBuyGoldGoodsReq::TActRegressionBuyGoldGoodsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionBuyGoldGoodsReq)
}

void TActRegressionBuyGoldGoodsReq::InitAsDefaultInstance() {
}

TActRegressionBuyGoldGoodsReq::TActRegressionBuyGoldGoodsReq(const TActRegressionBuyGoldGoodsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionBuyGoldGoodsReq)
}

void TActRegressionBuyGoldGoodsReq::SharedCtor() {
  _cached_size_ = 0;
  goodid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionBuyGoldGoodsReq::~TActRegressionBuyGoldGoodsReq() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionBuyGoldGoodsReq)
  SharedDtor();
}

void TActRegressionBuyGoldGoodsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionBuyGoldGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionBuyGoldGoodsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionBuyGoldGoodsReq_descriptor_;
}

const TActRegressionBuyGoldGoodsReq& TActRegressionBuyGoldGoodsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionBuyGoldGoodsReq* TActRegressionBuyGoldGoodsReq::default_instance_ = NULL;

TActRegressionBuyGoldGoodsReq* TActRegressionBuyGoldGoodsReq::New() const {
  return new TActRegressionBuyGoldGoodsReq;
}

void TActRegressionBuyGoldGoodsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActRegressionBuyGoldGoodsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionBuyGoldGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionBuyGoldGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GoodId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionBuyGoldGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionBuyGoldGoodsReq)
  return false;
#undef DO_
}

void TActRegressionBuyGoldGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionBuyGoldGoodsReq)
  // optional uint32 GoodId = 1;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionBuyGoldGoodsReq)
}

::google::protobuf::uint8* TActRegressionBuyGoldGoodsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionBuyGoldGoodsReq)
  // optional uint32 GoodId = 1;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionBuyGoldGoodsReq)
  return target;
}

int TActRegressionBuyGoldGoodsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodId = 1;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionBuyGoldGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionBuyGoldGoodsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionBuyGoldGoodsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionBuyGoldGoodsReq::MergeFrom(const TActRegressionBuyGoldGoodsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionBuyGoldGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionBuyGoldGoodsReq::CopyFrom(const TActRegressionBuyGoldGoodsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionBuyGoldGoodsReq::IsInitialized() const {

  return true;
}

void TActRegressionBuyGoldGoodsReq::Swap(TActRegressionBuyGoldGoodsReq* other) {
  if (other != this) {
    std::swap(goodid_, other->goodid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionBuyGoldGoodsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionBuyGoldGoodsReq_descriptor_;
  metadata.reflection = TActRegressionBuyGoldGoodsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionFinishTaskReq::kTaskIdArrFieldNumber;
#endif  // !_MSC_VER

TActRegressionFinishTaskReq::TActRegressionFinishTaskReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionFinishTaskReq)
}

void TActRegressionFinishTaskReq::InitAsDefaultInstance() {
}

TActRegressionFinishTaskReq::TActRegressionFinishTaskReq(const TActRegressionFinishTaskReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionFinishTaskReq)
}

void TActRegressionFinishTaskReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionFinishTaskReq::~TActRegressionFinishTaskReq() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionFinishTaskReq)
  SharedDtor();
}

void TActRegressionFinishTaskReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionFinishTaskReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionFinishTaskReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionFinishTaskReq_descriptor_;
}

const TActRegressionFinishTaskReq& TActRegressionFinishTaskReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionFinishTaskReq* TActRegressionFinishTaskReq::default_instance_ = NULL;

TActRegressionFinishTaskReq* TActRegressionFinishTaskReq::New() const {
  return new TActRegressionFinishTaskReq;
}

void TActRegressionFinishTaskReq::Clear() {
  taskidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionFinishTaskReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionFinishTaskReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 TaskIdArr = 1;
      case 1: {
        if (tag == 8) {
         parse_TaskIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_taskidarr())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_taskidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_TaskIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionFinishTaskReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionFinishTaskReq)
  return false;
#undef DO_
}

void TActRegressionFinishTaskReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionFinishTaskReq)
  // repeated uint32 TaskIdArr = 1;
  for (int i = 0; i < this->taskidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->taskidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionFinishTaskReq)
}

::google::protobuf::uint8* TActRegressionFinishTaskReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionFinishTaskReq)
  // repeated uint32 TaskIdArr = 1;
  for (int i = 0; i < this->taskidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->taskidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionFinishTaskReq)
  return target;
}

int TActRegressionFinishTaskReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 TaskIdArr = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->taskidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->taskidarr(i));
    }
    total_size += 1 * this->taskidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionFinishTaskReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionFinishTaskReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionFinishTaskReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionFinishTaskReq::MergeFrom(const TActRegressionFinishTaskReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskidarr_.MergeFrom(from.taskidarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionFinishTaskReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionFinishTaskReq::CopyFrom(const TActRegressionFinishTaskReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionFinishTaskReq::IsInitialized() const {

  return true;
}

void TActRegressionFinishTaskReq::Swap(TActRegressionFinishTaskReq* other) {
  if (other != this) {
    taskidarr_.Swap(&other->taskidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionFinishTaskReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionFinishTaskReq_descriptor_;
  metadata.reflection = TActRegressionFinishTaskReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionFinishTaskNotify::kTaskInfoFieldNumber;
#endif  // !_MSC_VER

TActRegressionFinishTaskNotify::TActRegressionFinishTaskNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionFinishTaskNotify)
}

void TActRegressionFinishTaskNotify::InitAsDefaultInstance() {
  taskinfo_ = const_cast< ::pb::TActRegressionTaskInfo*>(&::pb::TActRegressionTaskInfo::default_instance());
}

TActRegressionFinishTaskNotify::TActRegressionFinishTaskNotify(const TActRegressionFinishTaskNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionFinishTaskNotify)
}

void TActRegressionFinishTaskNotify::SharedCtor() {
  _cached_size_ = 0;
  taskinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionFinishTaskNotify::~TActRegressionFinishTaskNotify() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionFinishTaskNotify)
  SharedDtor();
}

void TActRegressionFinishTaskNotify::SharedDtor() {
  if (this != default_instance_) {
    delete taskinfo_;
  }
}

void TActRegressionFinishTaskNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionFinishTaskNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionFinishTaskNotify_descriptor_;
}

const TActRegressionFinishTaskNotify& TActRegressionFinishTaskNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionFinishTaskNotify* TActRegressionFinishTaskNotify::default_instance_ = NULL;

TActRegressionFinishTaskNotify* TActRegressionFinishTaskNotify::New() const {
  return new TActRegressionFinishTaskNotify;
}

void TActRegressionFinishTaskNotify::Clear() {
  if (has_taskinfo()) {
    if (taskinfo_ != NULL) taskinfo_->::pb::TActRegressionTaskInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionFinishTaskNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionFinishTaskNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TActRegressionTaskInfo TaskInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionFinishTaskNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionFinishTaskNotify)
  return false;
#undef DO_
}

void TActRegressionFinishTaskNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionFinishTaskNotify)
  // optional .pb.TActRegressionTaskInfo TaskInfo = 1;
  if (has_taskinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->taskinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionFinishTaskNotify)
}

::google::protobuf::uint8* TActRegressionFinishTaskNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionFinishTaskNotify)
  // optional .pb.TActRegressionTaskInfo TaskInfo = 1;
  if (has_taskinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->taskinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionFinishTaskNotify)
  return target;
}

int TActRegressionFinishTaskNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TActRegressionTaskInfo TaskInfo = 1;
    if (has_taskinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->taskinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionFinishTaskNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionFinishTaskNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionFinishTaskNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionFinishTaskNotify::MergeFrom(const TActRegressionFinishTaskNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskinfo()) {
      mutable_taskinfo()->::pb::TActRegressionTaskInfo::MergeFrom(from.taskinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionFinishTaskNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionFinishTaskNotify::CopyFrom(const TActRegressionFinishTaskNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionFinishTaskNotify::IsInitialized() const {

  return true;
}

void TActRegressionFinishTaskNotify::Swap(TActRegressionFinishTaskNotify* other) {
  if (other != this) {
    std::swap(taskinfo_, other->taskinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionFinishTaskNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionFinishTaskNotify_descriptor_;
  metadata.reflection = TActRegressionFinishTaskNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionRetrieveReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActRegressionRetrieveReq::TActRegressionRetrieveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionRetrieveReq)
}

void TActRegressionRetrieveReq::InitAsDefaultInstance() {
}

TActRegressionRetrieveReq::TActRegressionRetrieveReq(const TActRegressionRetrieveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionRetrieveReq)
}

void TActRegressionRetrieveReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionRetrieveReq::~TActRegressionRetrieveReq() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionRetrieveReq)
  SharedDtor();
}

void TActRegressionRetrieveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionRetrieveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionRetrieveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionRetrieveReq_descriptor_;
}

const TActRegressionRetrieveReq& TActRegressionRetrieveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionRetrieveReq* TActRegressionRetrieveReq::default_instance_ = NULL;

TActRegressionRetrieveReq* TActRegressionRetrieveReq::New() const {
  return new TActRegressionRetrieveReq;
}

void TActRegressionRetrieveReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionRetrieveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionRetrieveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionRetrieveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionRetrieveReq)
  return false;
#undef DO_
}

void TActRegressionRetrieveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionRetrieveReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionRetrieveReq)
}

::google::protobuf::uint8* TActRegressionRetrieveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionRetrieveReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionRetrieveReq)
  return target;
}

int TActRegressionRetrieveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionRetrieveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionRetrieveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionRetrieveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionRetrieveReq::MergeFrom(const TActRegressionRetrieveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionRetrieveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionRetrieveReq::CopyFrom(const TActRegressionRetrieveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionRetrieveReq::IsInitialized() const {

  return true;
}

void TActRegressionRetrieveReq::Swap(TActRegressionRetrieveReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionRetrieveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionRetrieveReq_descriptor_;
  metadata.reflection = TActRegressionRetrieveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActRegressionExchangeRetrieveNumReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActRegressionExchangeRetrieveNumReq::TActRegressionExchangeRetrieveNumReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActRegressionExchangeRetrieveNumReq)
}

void TActRegressionExchangeRetrieveNumReq::InitAsDefaultInstance() {
}

TActRegressionExchangeRetrieveNumReq::TActRegressionExchangeRetrieveNumReq(const TActRegressionExchangeRetrieveNumReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActRegressionExchangeRetrieveNumReq)
}

void TActRegressionExchangeRetrieveNumReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActRegressionExchangeRetrieveNumReq::~TActRegressionExchangeRetrieveNumReq() {
  // @@protoc_insertion_point(destructor:pb.TActRegressionExchangeRetrieveNumReq)
  SharedDtor();
}

void TActRegressionExchangeRetrieveNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActRegressionExchangeRetrieveNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActRegressionExchangeRetrieveNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActRegressionExchangeRetrieveNumReq_descriptor_;
}

const TActRegressionExchangeRetrieveNumReq& TActRegressionExchangeRetrieveNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActRegression_2eproto();
  return *default_instance_;
}

TActRegressionExchangeRetrieveNumReq* TActRegressionExchangeRetrieveNumReq::default_instance_ = NULL;

TActRegressionExchangeRetrieveNumReq* TActRegressionExchangeRetrieveNumReq::New() const {
  return new TActRegressionExchangeRetrieveNumReq;
}

void TActRegressionExchangeRetrieveNumReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActRegressionExchangeRetrieveNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActRegressionExchangeRetrieveNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActRegressionExchangeRetrieveNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActRegressionExchangeRetrieveNumReq)
  return false;
#undef DO_
}

void TActRegressionExchangeRetrieveNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActRegressionExchangeRetrieveNumReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActRegressionExchangeRetrieveNumReq)
}

::google::protobuf::uint8* TActRegressionExchangeRetrieveNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActRegressionExchangeRetrieveNumReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActRegressionExchangeRetrieveNumReq)
  return target;
}

int TActRegressionExchangeRetrieveNumReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActRegressionExchangeRetrieveNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActRegressionExchangeRetrieveNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActRegressionExchangeRetrieveNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActRegressionExchangeRetrieveNumReq::MergeFrom(const TActRegressionExchangeRetrieveNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActRegressionExchangeRetrieveNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActRegressionExchangeRetrieveNumReq::CopyFrom(const TActRegressionExchangeRetrieveNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActRegressionExchangeRetrieveNumReq::IsInitialized() const {

  return true;
}

void TActRegressionExchangeRetrieveNumReq::Swap(TActRegressionExchangeRetrieveNumReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActRegressionExchangeRetrieveNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActRegressionExchangeRetrieveNumReq_descriptor_;
  metadata.reflection = TActRegressionExchangeRetrieveNumReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
