// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Mix.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Mix.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TMixGetOnlineFriendUidListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TMixGetOnlineFriendUidListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TMixGetOnlineGuildUidListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TMixGetOnlineGuildUidListRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fMix_2eproto() {
  protobuf_AddDesc_net_2fMix_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Mix.proto");
  GOOGLE_CHECK(file != NULL);
  TMixGetOnlineFriendUidListRsp_descriptor_ = file->message_type(0);
  static const int TMixGetOnlineFriendUidListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMixGetOnlineFriendUidListRsp, uidlist_),
  };
  TMixGetOnlineFriendUidListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TMixGetOnlineFriendUidListRsp_descriptor_,
      TMixGetOnlineFriendUidListRsp::default_instance_,
      TMixGetOnlineFriendUidListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMixGetOnlineFriendUidListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMixGetOnlineFriendUidListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TMixGetOnlineFriendUidListRsp));
  TMixGetOnlineGuildUidListRsp_descriptor_ = file->message_type(1);
  static const int TMixGetOnlineGuildUidListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMixGetOnlineGuildUidListRsp, uidlist_),
  };
  TMixGetOnlineGuildUidListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TMixGetOnlineGuildUidListRsp_descriptor_,
      TMixGetOnlineGuildUidListRsp::default_instance_,
      TMixGetOnlineGuildUidListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMixGetOnlineGuildUidListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMixGetOnlineGuildUidListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TMixGetOnlineGuildUidListRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fMix_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TMixGetOnlineFriendUidListRsp_descriptor_, &TMixGetOnlineFriendUidListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TMixGetOnlineGuildUidListRsp_descriptor_, &TMixGetOnlineGuildUidListRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fMix_2eproto() {
  delete TMixGetOnlineFriendUidListRsp::default_instance_;
  delete TMixGetOnlineFriendUidListRsp_reflection_;
  delete TMixGetOnlineGuildUidListRsp::default_instance_;
  delete TMixGetOnlineGuildUidListRsp_reflection_;
}

void protobuf_AddDesc_net_2fMix_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnet/Mix.proto\022\002pb\"0\n\035TMixGetOnlineFrie"
    "ndUidListRsp\022\017\n\007UidList\030\001 \003(\004\"/\n\034TMixGet"
    "OnlineGuildUidListRsp\022\017\n\007UidList\030\001 \003(\004", 118);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Mix.proto", &protobuf_RegisterTypes);
  TMixGetOnlineFriendUidListRsp::default_instance_ = new TMixGetOnlineFriendUidListRsp();
  TMixGetOnlineGuildUidListRsp::default_instance_ = new TMixGetOnlineGuildUidListRsp();
  TMixGetOnlineFriendUidListRsp::default_instance_->InitAsDefaultInstance();
  TMixGetOnlineGuildUidListRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fMix_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fMix_2eproto {
  StaticDescriptorInitializer_net_2fMix_2eproto() {
    protobuf_AddDesc_net_2fMix_2eproto();
  }
} static_descriptor_initializer_net_2fMix_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TMixGetOnlineFriendUidListRsp::kUidListFieldNumber;
#endif  // !_MSC_VER

TMixGetOnlineFriendUidListRsp::TMixGetOnlineFriendUidListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TMixGetOnlineFriendUidListRsp)
}

void TMixGetOnlineFriendUidListRsp::InitAsDefaultInstance() {
}

TMixGetOnlineFriendUidListRsp::TMixGetOnlineFriendUidListRsp(const TMixGetOnlineFriendUidListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TMixGetOnlineFriendUidListRsp)
}

void TMixGetOnlineFriendUidListRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TMixGetOnlineFriendUidListRsp::~TMixGetOnlineFriendUidListRsp() {
  // @@protoc_insertion_point(destructor:pb.TMixGetOnlineFriendUidListRsp)
  SharedDtor();
}

void TMixGetOnlineFriendUidListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TMixGetOnlineFriendUidListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMixGetOnlineFriendUidListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TMixGetOnlineFriendUidListRsp_descriptor_;
}

const TMixGetOnlineFriendUidListRsp& TMixGetOnlineFriendUidListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fMix_2eproto();
  return *default_instance_;
}

TMixGetOnlineFriendUidListRsp* TMixGetOnlineFriendUidListRsp::default_instance_ = NULL;

TMixGetOnlineFriendUidListRsp* TMixGetOnlineFriendUidListRsp::New() const {
  return new TMixGetOnlineFriendUidListRsp;
}

void TMixGetOnlineFriendUidListRsp::Clear() {
  uidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TMixGetOnlineFriendUidListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TMixGetOnlineFriendUidListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 UidList = 1;
      case 1: {
        if (tag == 8) {
         parse_UidList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_uidlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_UidList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TMixGetOnlineFriendUidListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TMixGetOnlineFriendUidListRsp)
  return false;
#undef DO_
}

void TMixGetOnlineFriendUidListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TMixGetOnlineFriendUidListRsp)
  // repeated uint64 UidList = 1;
  for (int i = 0; i < this->uidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->uidlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TMixGetOnlineFriendUidListRsp)
}

::google::protobuf::uint8* TMixGetOnlineFriendUidListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TMixGetOnlineFriendUidListRsp)
  // repeated uint64 UidList = 1;
  for (int i = 0; i < this->uidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->uidlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TMixGetOnlineFriendUidListRsp)
  return target;
}

int TMixGetOnlineFriendUidListRsp::ByteSize() const {
  int total_size = 0;

  // repeated uint64 UidList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->uidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->uidlist(i));
    }
    total_size += 1 * this->uidlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMixGetOnlineFriendUidListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TMixGetOnlineFriendUidListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TMixGetOnlineFriendUidListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TMixGetOnlineFriendUidListRsp::MergeFrom(const TMixGetOnlineFriendUidListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  uidlist_.MergeFrom(from.uidlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TMixGetOnlineFriendUidListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMixGetOnlineFriendUidListRsp::CopyFrom(const TMixGetOnlineFriendUidListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMixGetOnlineFriendUidListRsp::IsInitialized() const {

  return true;
}

void TMixGetOnlineFriendUidListRsp::Swap(TMixGetOnlineFriendUidListRsp* other) {
  if (other != this) {
    uidlist_.Swap(&other->uidlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TMixGetOnlineFriendUidListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TMixGetOnlineFriendUidListRsp_descriptor_;
  metadata.reflection = TMixGetOnlineFriendUidListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TMixGetOnlineGuildUidListRsp::kUidListFieldNumber;
#endif  // !_MSC_VER

TMixGetOnlineGuildUidListRsp::TMixGetOnlineGuildUidListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TMixGetOnlineGuildUidListRsp)
}

void TMixGetOnlineGuildUidListRsp::InitAsDefaultInstance() {
}

TMixGetOnlineGuildUidListRsp::TMixGetOnlineGuildUidListRsp(const TMixGetOnlineGuildUidListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TMixGetOnlineGuildUidListRsp)
}

void TMixGetOnlineGuildUidListRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TMixGetOnlineGuildUidListRsp::~TMixGetOnlineGuildUidListRsp() {
  // @@protoc_insertion_point(destructor:pb.TMixGetOnlineGuildUidListRsp)
  SharedDtor();
}

void TMixGetOnlineGuildUidListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TMixGetOnlineGuildUidListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMixGetOnlineGuildUidListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TMixGetOnlineGuildUidListRsp_descriptor_;
}

const TMixGetOnlineGuildUidListRsp& TMixGetOnlineGuildUidListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fMix_2eproto();
  return *default_instance_;
}

TMixGetOnlineGuildUidListRsp* TMixGetOnlineGuildUidListRsp::default_instance_ = NULL;

TMixGetOnlineGuildUidListRsp* TMixGetOnlineGuildUidListRsp::New() const {
  return new TMixGetOnlineGuildUidListRsp;
}

void TMixGetOnlineGuildUidListRsp::Clear() {
  uidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TMixGetOnlineGuildUidListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TMixGetOnlineGuildUidListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 UidList = 1;
      case 1: {
        if (tag == 8) {
         parse_UidList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_uidlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_UidList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TMixGetOnlineGuildUidListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TMixGetOnlineGuildUidListRsp)
  return false;
#undef DO_
}

void TMixGetOnlineGuildUidListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TMixGetOnlineGuildUidListRsp)
  // repeated uint64 UidList = 1;
  for (int i = 0; i < this->uidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->uidlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TMixGetOnlineGuildUidListRsp)
}

::google::protobuf::uint8* TMixGetOnlineGuildUidListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TMixGetOnlineGuildUidListRsp)
  // repeated uint64 UidList = 1;
  for (int i = 0; i < this->uidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->uidlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TMixGetOnlineGuildUidListRsp)
  return target;
}

int TMixGetOnlineGuildUidListRsp::ByteSize() const {
  int total_size = 0;

  // repeated uint64 UidList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->uidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->uidlist(i));
    }
    total_size += 1 * this->uidlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMixGetOnlineGuildUidListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TMixGetOnlineGuildUidListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TMixGetOnlineGuildUidListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TMixGetOnlineGuildUidListRsp::MergeFrom(const TMixGetOnlineGuildUidListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  uidlist_.MergeFrom(from.uidlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TMixGetOnlineGuildUidListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMixGetOnlineGuildUidListRsp::CopyFrom(const TMixGetOnlineGuildUidListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMixGetOnlineGuildUidListRsp::IsInitialized() const {

  return true;
}

void TMixGetOnlineGuildUidListRsp::Swap(TMixGetOnlineGuildUidListRsp* other) {
  if (other != this) {
    uidlist_.Swap(&other->uidlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TMixGetOnlineGuildUidListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TMixGetOnlineGuildUidListRsp_descriptor_;
  metadata.reflection = TMixGetOnlineGuildUidListRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
