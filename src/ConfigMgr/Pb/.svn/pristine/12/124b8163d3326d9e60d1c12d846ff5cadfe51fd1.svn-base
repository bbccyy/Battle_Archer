// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ViewServer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ViewServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TViewServerObjectInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewServerObjectInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewServerNotifyObjectEnter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewServerNotifyObjectEnter_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewServerNotifyObjectLeave_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewServerNotifyObjectLeave_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewServerNotifyObjectChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewServerNotifyObjectChange_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fViewServer_2eproto() {
  protobuf_AddDesc_net_2fViewServer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ViewServer.proto");
  GOOGLE_CHECK(file != NULL);
  TViewServerObjectInfo_descriptor_ = file->message_type(0);
  static const int TViewServerObjectInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, infodata_),
  };
  TViewServerObjectInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewServerObjectInfo_descriptor_,
      TViewServerObjectInfo::default_instance_,
      TViewServerObjectInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerObjectInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewServerObjectInfo));
  TViewServerNotifyObjectEnter_descriptor_ = file->message_type(1);
  static const int TViewServerNotifyObjectEnter_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, viewname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, scenename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, viewscenetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, viewsceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, objectarr_),
  };
  TViewServerNotifyObjectEnter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewServerNotifyObjectEnter_descriptor_,
      TViewServerNotifyObjectEnter::default_instance_,
      TViewServerNotifyObjectEnter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectEnter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewServerNotifyObjectEnter));
  TViewServerNotifyObjectLeave_descriptor_ = file->message_type(2);
  static const int TViewServerNotifyObjectLeave_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, viewname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, scenename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, viewscenetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, viewsceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, arrid_),
  };
  TViewServerNotifyObjectLeave_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewServerNotifyObjectLeave_descriptor_,
      TViewServerNotifyObjectLeave::default_instance_,
      TViewServerNotifyObjectLeave_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectLeave, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewServerNotifyObjectLeave));
  TViewServerNotifyObjectChange_descriptor_ = file->message_type(3);
  static const int TViewServerNotifyObjectChange_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, viewname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, scenename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, viewscenetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, viewsceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, infodata_),
  };
  TViewServerNotifyObjectChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewServerNotifyObjectChange_descriptor_,
      TViewServerNotifyObjectChange::default_instance_,
      TViewServerNotifyObjectChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewServerNotifyObjectChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewServerNotifyObjectChange));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fViewServer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewServerObjectInfo_descriptor_, &TViewServerObjectInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewServerNotifyObjectEnter_descriptor_, &TViewServerNotifyObjectEnter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewServerNotifyObjectLeave_descriptor_, &TViewServerNotifyObjectLeave::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewServerNotifyObjectChange_descriptor_, &TViewServerNotifyObjectChange::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fViewServer_2eproto() {
  delete TViewServerObjectInfo::default_instance_;
  delete TViewServerObjectInfo_reflection_;
  delete TViewServerNotifyObjectEnter::default_instance_;
  delete TViewServerNotifyObjectEnter_reflection_;
  delete TViewServerNotifyObjectLeave::default_instance_;
  delete TViewServerNotifyObjectLeave_reflection_;
  delete TViewServerNotifyObjectChange::default_instance_;
  delete TViewServerNotifyObjectChange_reflection_;
}

void protobuf_AddDesc_net_2fViewServer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fViewScene_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024net/ViewServer.proto\022\002pb\032\023net/ViewScen"
    "e.proto\"~\n\025TViewServerObjectInfo\022\n\n\002Id\030\001"
    " \001(\004\022\020\n\010ServerId\030\002 \001(\t\022\013\n\003Pos\030\003 \001(\r\022(\n\006S"
    "tatus\030\004 \001(\0162\030.pb.EViewSceneUserStatus\022\020\n"
    "\010InfoData\030\005 \001(\014\"\261\001\n\034TViewServerNotifyObj"
    "ectEnter\022\020\n\010ViewName\030\001 \001(\t\022\021\n\tSceneName\030"
    "\002 \001(\t\022)\n\rViewSceneType\030\003 \001(\0162\022.pb.EViewS"
    "ceneType\022\023\n\013ViewSceneId\030\004 \001(\004\022,\n\tObjectA"
    "rr\030\005 \003(\0132\031.pb.TViewServerObjectInfo\"\222\001\n\034"
    "TViewServerNotifyObjectLeave\022\020\n\010ViewName"
    "\030\001 \001(\t\022\021\n\tSceneName\030\002 \001(\t\022)\n\rViewSceneTy"
    "pe\030\003 \001(\0162\022.pb.EViewSceneType\022\023\n\013ViewScen"
    "eId\030\004 \001(\004\022\r\n\005ArrId\030\005 \003(\004\"\331\001\n\035TViewServer"
    "NotifyObjectChange\022\020\n\010ViewName\030\001 \001(\t\022\021\n\t"
    "SceneName\030\002 \001(\t\022)\n\rViewSceneType\030\003 \001(\0162\022"
    ".pb.EViewSceneType\022\023\n\013ViewSceneId\030\004 \001(\004\022"
    "\n\n\002Id\030\005 \001(\004\022\013\n\003Pos\030\006 \001(\r\022(\n\006Status\030\007 \001(\016"
    "2\030.pb.EViewSceneUserStatus\022\020\n\010InfoData\030\010"
    " \001(\014", 724);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ViewServer.proto", &protobuf_RegisterTypes);
  TViewServerObjectInfo::default_instance_ = new TViewServerObjectInfo();
  TViewServerNotifyObjectEnter::default_instance_ = new TViewServerNotifyObjectEnter();
  TViewServerNotifyObjectLeave::default_instance_ = new TViewServerNotifyObjectLeave();
  TViewServerNotifyObjectChange::default_instance_ = new TViewServerNotifyObjectChange();
  TViewServerObjectInfo::default_instance_->InitAsDefaultInstance();
  TViewServerNotifyObjectEnter::default_instance_->InitAsDefaultInstance();
  TViewServerNotifyObjectLeave::default_instance_->InitAsDefaultInstance();
  TViewServerNotifyObjectChange::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fViewServer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fViewServer_2eproto {
  StaticDescriptorInitializer_net_2fViewServer_2eproto() {
    protobuf_AddDesc_net_2fViewServer_2eproto();
  }
} static_descriptor_initializer_net_2fViewServer_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TViewServerObjectInfo::kIdFieldNumber;
const int TViewServerObjectInfo::kServerIdFieldNumber;
const int TViewServerObjectInfo::kPosFieldNumber;
const int TViewServerObjectInfo::kStatusFieldNumber;
const int TViewServerObjectInfo::kInfoDataFieldNumber;
#endif  // !_MSC_VER

TViewServerObjectInfo::TViewServerObjectInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewServerObjectInfo)
}

void TViewServerObjectInfo::InitAsDefaultInstance() {
}

TViewServerObjectInfo::TViewServerObjectInfo(const TViewServerObjectInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewServerObjectInfo)
}

void TViewServerObjectInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = 0u;
  status_ = 0;
  infodata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewServerObjectInfo::~TViewServerObjectInfo() {
  // @@protoc_insertion_point(destructor:pb.TViewServerObjectInfo)
  SharedDtor();
}

void TViewServerObjectInfo::SharedDtor() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (infodata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete infodata_;
  }
  if (this != default_instance_) {
  }
}

void TViewServerObjectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewServerObjectInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewServerObjectInfo_descriptor_;
}

const TViewServerObjectInfo& TViewServerObjectInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewServer_2eproto();
  return *default_instance_;
}

TViewServerObjectInfo* TViewServerObjectInfo::default_instance_ = NULL;

TViewServerObjectInfo* TViewServerObjectInfo::New() const {
  return new TViewServerObjectInfo;
}

void TViewServerObjectInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TViewServerObjectInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(pos_, status_);
    id_ = GOOGLE_ULONGLONG(0);
    if (has_serverid()) {
      if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverid_->clear();
      }
    }
    if (has_infodata()) {
      if (infodata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        infodata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewServerObjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewServerObjectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerId;
        break;
      }

      // optional string ServerId = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverid().data(), this->serverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 3;
      case 3: {
        if (tag == 24) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Status;
        break;
      }

      // optional .pb.EViewSceneUserStatus Status = 4;
      case 4: {
        if (tag == 32) {
         parse_Status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EViewSceneUserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_InfoData;
        break;
      }

      // optional bytes InfoData = 5;
      case 5: {
        if (tag == 42) {
         parse_InfoData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_infodata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewServerObjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewServerObjectInfo)
  return false;
#undef DO_
}

void TViewServerObjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewServerObjectInfo)
  // optional uint64 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serverid(), output);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  // optional .pb.EViewSceneUserStatus Status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // optional bytes InfoData = 5;
  if (has_infodata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->infodata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewServerObjectInfo)
}

::google::protobuf::uint8* TViewServerObjectInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewServerObjectInfo)
  // optional uint64 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serverid(), target);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  // optional .pb.EViewSceneUserStatus Status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // optional bytes InfoData = 5;
  if (has_infodata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->infodata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewServerObjectInfo)
  return target;
}

int TViewServerObjectInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string ServerId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverid());
    }

    // optional uint32 Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.EViewSceneUserStatus Status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional bytes InfoData = 5;
    if (has_infodata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->infodata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewServerObjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewServerObjectInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewServerObjectInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewServerObjectInfo::MergeFrom(const TViewServerObjectInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_infodata()) {
      set_infodata(from.infodata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewServerObjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewServerObjectInfo::CopyFrom(const TViewServerObjectInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewServerObjectInfo::IsInitialized() const {

  return true;
}

void TViewServerObjectInfo::Swap(TViewServerObjectInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(serverid_, other->serverid_);
    std::swap(pos_, other->pos_);
    std::swap(status_, other->status_);
    std::swap(infodata_, other->infodata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewServerObjectInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewServerObjectInfo_descriptor_;
  metadata.reflection = TViewServerObjectInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewServerNotifyObjectEnter::kViewNameFieldNumber;
const int TViewServerNotifyObjectEnter::kSceneNameFieldNumber;
const int TViewServerNotifyObjectEnter::kViewSceneTypeFieldNumber;
const int TViewServerNotifyObjectEnter::kViewSceneIdFieldNumber;
const int TViewServerNotifyObjectEnter::kObjectArrFieldNumber;
#endif  // !_MSC_VER

TViewServerNotifyObjectEnter::TViewServerNotifyObjectEnter()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewServerNotifyObjectEnter)
}

void TViewServerNotifyObjectEnter::InitAsDefaultInstance() {
}

TViewServerNotifyObjectEnter::TViewServerNotifyObjectEnter(const TViewServerNotifyObjectEnter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewServerNotifyObjectEnter)
}

void TViewServerNotifyObjectEnter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  viewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewscenetype_ = 1;
  viewsceneid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewServerNotifyObjectEnter::~TViewServerNotifyObjectEnter() {
  // @@protoc_insertion_point(destructor:pb.TViewServerNotifyObjectEnter)
  SharedDtor();
}

void TViewServerNotifyObjectEnter::SharedDtor() {
  if (viewname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete viewname_;
  }
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scenename_;
  }
  if (this != default_instance_) {
  }
}

void TViewServerNotifyObjectEnter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewServerNotifyObjectEnter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewServerNotifyObjectEnter_descriptor_;
}

const TViewServerNotifyObjectEnter& TViewServerNotifyObjectEnter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewServer_2eproto();
  return *default_instance_;
}

TViewServerNotifyObjectEnter* TViewServerNotifyObjectEnter::default_instance_ = NULL;

TViewServerNotifyObjectEnter* TViewServerNotifyObjectEnter::New() const {
  return new TViewServerNotifyObjectEnter;
}

void TViewServerNotifyObjectEnter::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_viewname()) {
      if (viewname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        viewname_->clear();
      }
    }
    if (has_scenename()) {
      if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scenename_->clear();
      }
    }
    viewscenetype_ = 1;
    viewsceneid_ = GOOGLE_ULONGLONG(0);
  }
  objectarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewServerNotifyObjectEnter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewServerNotifyObjectEnter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ViewName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_viewname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->viewname().data(), this->viewname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "viewname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SceneName;
        break;
      }

      // optional string SceneName = 2;
      case 2: {
        if (tag == 18) {
         parse_SceneName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scenename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scenename().data(), this->scenename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scenename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ViewSceneType;
        break;
      }

      // optional .pb.EViewSceneType ViewSceneType = 3;
      case 3: {
        if (tag == 24) {
         parse_ViewSceneType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneType_IsValid(value)) {
            set_viewscenetype(static_cast< ::pb::EViewSceneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ViewSceneId;
        break;
      }

      // optional uint64 ViewSceneId = 4;
      case 4: {
        if (tag == 32) {
         parse_ViewSceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &viewsceneid_)));
          set_has_viewsceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ObjectArr;
        break;
      }

      // repeated .pb.TViewServerObjectInfo ObjectArr = 5;
      case 5: {
        if (tag == 42) {
         parse_ObjectArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objectarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ObjectArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewServerNotifyObjectEnter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewServerNotifyObjectEnter)
  return false;
#undef DO_
}

void TViewServerNotifyObjectEnter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewServerNotifyObjectEnter)
  // optional string ViewName = 1;
  if (has_viewname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewname().data(), this->viewname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->viewname(), output);
  }

  // optional string SceneName = 2;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scenename(), output);
  }

  // optional .pb.EViewSceneType ViewSceneType = 3;
  if (has_viewscenetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->viewscenetype(), output);
  }

  // optional uint64 ViewSceneId = 4;
  if (has_viewsceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->viewsceneid(), output);
  }

  // repeated .pb.TViewServerObjectInfo ObjectArr = 5;
  for (int i = 0; i < this->objectarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->objectarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewServerNotifyObjectEnter)
}

::google::protobuf::uint8* TViewServerNotifyObjectEnter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewServerNotifyObjectEnter)
  // optional string ViewName = 1;
  if (has_viewname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewname().data(), this->viewname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->viewname(), target);
  }

  // optional string SceneName = 2;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scenename(), target);
  }

  // optional .pb.EViewSceneType ViewSceneType = 3;
  if (has_viewscenetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->viewscenetype(), target);
  }

  // optional uint64 ViewSceneId = 4;
  if (has_viewsceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->viewsceneid(), target);
  }

  // repeated .pb.TViewServerObjectInfo ObjectArr = 5;
  for (int i = 0; i < this->objectarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->objectarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewServerNotifyObjectEnter)
  return target;
}

int TViewServerNotifyObjectEnter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ViewName = 1;
    if (has_viewname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->viewname());
    }

    // optional string SceneName = 2;
    if (has_scenename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scenename());
    }

    // optional .pb.EViewSceneType ViewSceneType = 3;
    if (has_viewscenetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewscenetype());
    }

    // optional uint64 ViewSceneId = 4;
    if (has_viewsceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->viewsceneid());
    }

  }
  // repeated .pb.TViewServerObjectInfo ObjectArr = 5;
  total_size += 1 * this->objectarr_size();
  for (int i = 0; i < this->objectarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objectarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewServerNotifyObjectEnter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewServerNotifyObjectEnter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewServerNotifyObjectEnter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewServerNotifyObjectEnter::MergeFrom(const TViewServerNotifyObjectEnter& from) {
  GOOGLE_CHECK_NE(&from, this);
  objectarr_.MergeFrom(from.objectarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewname()) {
      set_viewname(from.viewname());
    }
    if (from.has_scenename()) {
      set_scenename(from.scenename());
    }
    if (from.has_viewscenetype()) {
      set_viewscenetype(from.viewscenetype());
    }
    if (from.has_viewsceneid()) {
      set_viewsceneid(from.viewsceneid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewServerNotifyObjectEnter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewServerNotifyObjectEnter::CopyFrom(const TViewServerNotifyObjectEnter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewServerNotifyObjectEnter::IsInitialized() const {

  return true;
}

void TViewServerNotifyObjectEnter::Swap(TViewServerNotifyObjectEnter* other) {
  if (other != this) {
    std::swap(viewname_, other->viewname_);
    std::swap(scenename_, other->scenename_);
    std::swap(viewscenetype_, other->viewscenetype_);
    std::swap(viewsceneid_, other->viewsceneid_);
    objectarr_.Swap(&other->objectarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewServerNotifyObjectEnter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewServerNotifyObjectEnter_descriptor_;
  metadata.reflection = TViewServerNotifyObjectEnter_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewServerNotifyObjectLeave::kViewNameFieldNumber;
const int TViewServerNotifyObjectLeave::kSceneNameFieldNumber;
const int TViewServerNotifyObjectLeave::kViewSceneTypeFieldNumber;
const int TViewServerNotifyObjectLeave::kViewSceneIdFieldNumber;
const int TViewServerNotifyObjectLeave::kArrIdFieldNumber;
#endif  // !_MSC_VER

TViewServerNotifyObjectLeave::TViewServerNotifyObjectLeave()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewServerNotifyObjectLeave)
}

void TViewServerNotifyObjectLeave::InitAsDefaultInstance() {
}

TViewServerNotifyObjectLeave::TViewServerNotifyObjectLeave(const TViewServerNotifyObjectLeave& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewServerNotifyObjectLeave)
}

void TViewServerNotifyObjectLeave::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  viewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewscenetype_ = 1;
  viewsceneid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewServerNotifyObjectLeave::~TViewServerNotifyObjectLeave() {
  // @@protoc_insertion_point(destructor:pb.TViewServerNotifyObjectLeave)
  SharedDtor();
}

void TViewServerNotifyObjectLeave::SharedDtor() {
  if (viewname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete viewname_;
  }
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scenename_;
  }
  if (this != default_instance_) {
  }
}

void TViewServerNotifyObjectLeave::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewServerNotifyObjectLeave::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewServerNotifyObjectLeave_descriptor_;
}

const TViewServerNotifyObjectLeave& TViewServerNotifyObjectLeave::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewServer_2eproto();
  return *default_instance_;
}

TViewServerNotifyObjectLeave* TViewServerNotifyObjectLeave::default_instance_ = NULL;

TViewServerNotifyObjectLeave* TViewServerNotifyObjectLeave::New() const {
  return new TViewServerNotifyObjectLeave;
}

void TViewServerNotifyObjectLeave::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_viewname()) {
      if (viewname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        viewname_->clear();
      }
    }
    if (has_scenename()) {
      if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scenename_->clear();
      }
    }
    viewscenetype_ = 1;
    viewsceneid_ = GOOGLE_ULONGLONG(0);
  }
  arrid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewServerNotifyObjectLeave::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewServerNotifyObjectLeave)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ViewName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_viewname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->viewname().data(), this->viewname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "viewname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SceneName;
        break;
      }

      // optional string SceneName = 2;
      case 2: {
        if (tag == 18) {
         parse_SceneName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scenename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scenename().data(), this->scenename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scenename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ViewSceneType;
        break;
      }

      // optional .pb.EViewSceneType ViewSceneType = 3;
      case 3: {
        if (tag == 24) {
         parse_ViewSceneType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneType_IsValid(value)) {
            set_viewscenetype(static_cast< ::pb::EViewSceneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ViewSceneId;
        break;
      }

      // optional uint64 ViewSceneId = 4;
      case 4: {
        if (tag == 32) {
         parse_ViewSceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &viewsceneid_)));
          set_has_viewsceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ArrId;
        break;
      }

      // repeated uint64 ArrId = 5;
      case 5: {
        if (tag == 40) {
         parse_ArrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 40, input, this->mutable_arrid())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_arrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ArrId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewServerNotifyObjectLeave)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewServerNotifyObjectLeave)
  return false;
#undef DO_
}

void TViewServerNotifyObjectLeave::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewServerNotifyObjectLeave)
  // optional string ViewName = 1;
  if (has_viewname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewname().data(), this->viewname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->viewname(), output);
  }

  // optional string SceneName = 2;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scenename(), output);
  }

  // optional .pb.EViewSceneType ViewSceneType = 3;
  if (has_viewscenetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->viewscenetype(), output);
  }

  // optional uint64 ViewSceneId = 4;
  if (has_viewsceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->viewsceneid(), output);
  }

  // repeated uint64 ArrId = 5;
  for (int i = 0; i < this->arrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      5, this->arrid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewServerNotifyObjectLeave)
}

::google::protobuf::uint8* TViewServerNotifyObjectLeave::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewServerNotifyObjectLeave)
  // optional string ViewName = 1;
  if (has_viewname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewname().data(), this->viewname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->viewname(), target);
  }

  // optional string SceneName = 2;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scenename(), target);
  }

  // optional .pb.EViewSceneType ViewSceneType = 3;
  if (has_viewscenetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->viewscenetype(), target);
  }

  // optional uint64 ViewSceneId = 4;
  if (has_viewsceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->viewsceneid(), target);
  }

  // repeated uint64 ArrId = 5;
  for (int i = 0; i < this->arrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(5, this->arrid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewServerNotifyObjectLeave)
  return target;
}

int TViewServerNotifyObjectLeave::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ViewName = 1;
    if (has_viewname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->viewname());
    }

    // optional string SceneName = 2;
    if (has_scenename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scenename());
    }

    // optional .pb.EViewSceneType ViewSceneType = 3;
    if (has_viewscenetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewscenetype());
    }

    // optional uint64 ViewSceneId = 4;
    if (has_viewsceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->viewsceneid());
    }

  }
  // repeated uint64 ArrId = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->arrid(i));
    }
    total_size += 1 * this->arrid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewServerNotifyObjectLeave::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewServerNotifyObjectLeave* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewServerNotifyObjectLeave*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewServerNotifyObjectLeave::MergeFrom(const TViewServerNotifyObjectLeave& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrid_.MergeFrom(from.arrid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewname()) {
      set_viewname(from.viewname());
    }
    if (from.has_scenename()) {
      set_scenename(from.scenename());
    }
    if (from.has_viewscenetype()) {
      set_viewscenetype(from.viewscenetype());
    }
    if (from.has_viewsceneid()) {
      set_viewsceneid(from.viewsceneid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewServerNotifyObjectLeave::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewServerNotifyObjectLeave::CopyFrom(const TViewServerNotifyObjectLeave& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewServerNotifyObjectLeave::IsInitialized() const {

  return true;
}

void TViewServerNotifyObjectLeave::Swap(TViewServerNotifyObjectLeave* other) {
  if (other != this) {
    std::swap(viewname_, other->viewname_);
    std::swap(scenename_, other->scenename_);
    std::swap(viewscenetype_, other->viewscenetype_);
    std::swap(viewsceneid_, other->viewsceneid_);
    arrid_.Swap(&other->arrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewServerNotifyObjectLeave::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewServerNotifyObjectLeave_descriptor_;
  metadata.reflection = TViewServerNotifyObjectLeave_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewServerNotifyObjectChange::kViewNameFieldNumber;
const int TViewServerNotifyObjectChange::kSceneNameFieldNumber;
const int TViewServerNotifyObjectChange::kViewSceneTypeFieldNumber;
const int TViewServerNotifyObjectChange::kViewSceneIdFieldNumber;
const int TViewServerNotifyObjectChange::kIdFieldNumber;
const int TViewServerNotifyObjectChange::kPosFieldNumber;
const int TViewServerNotifyObjectChange::kStatusFieldNumber;
const int TViewServerNotifyObjectChange::kInfoDataFieldNumber;
#endif  // !_MSC_VER

TViewServerNotifyObjectChange::TViewServerNotifyObjectChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewServerNotifyObjectChange)
}

void TViewServerNotifyObjectChange::InitAsDefaultInstance() {
}

TViewServerNotifyObjectChange::TViewServerNotifyObjectChange(const TViewServerNotifyObjectChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewServerNotifyObjectChange)
}

void TViewServerNotifyObjectChange::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  viewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewscenetype_ = 1;
  viewsceneid_ = GOOGLE_ULONGLONG(0);
  id_ = GOOGLE_ULONGLONG(0);
  pos_ = 0u;
  status_ = 0;
  infodata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewServerNotifyObjectChange::~TViewServerNotifyObjectChange() {
  // @@protoc_insertion_point(destructor:pb.TViewServerNotifyObjectChange)
  SharedDtor();
}

void TViewServerNotifyObjectChange::SharedDtor() {
  if (viewname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete viewname_;
  }
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scenename_;
  }
  if (infodata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete infodata_;
  }
  if (this != default_instance_) {
  }
}

void TViewServerNotifyObjectChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewServerNotifyObjectChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewServerNotifyObjectChange_descriptor_;
}

const TViewServerNotifyObjectChange& TViewServerNotifyObjectChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewServer_2eproto();
  return *default_instance_;
}

TViewServerNotifyObjectChange* TViewServerNotifyObjectChange::default_instance_ = NULL;

TViewServerNotifyObjectChange* TViewServerNotifyObjectChange::New() const {
  return new TViewServerNotifyObjectChange;
}

void TViewServerNotifyObjectChange::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TViewServerNotifyObjectChange*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(pos_, id_);
    if (has_viewname()) {
      if (viewname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        viewname_->clear();
      }
    }
    if (has_scenename()) {
      if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scenename_->clear();
      }
    }
    viewscenetype_ = 1;
    viewsceneid_ = GOOGLE_ULONGLONG(0);
    status_ = 0;
    if (has_infodata()) {
      if (infodata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        infodata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewServerNotifyObjectChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewServerNotifyObjectChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ViewName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_viewname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->viewname().data(), this->viewname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "viewname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SceneName;
        break;
      }

      // optional string SceneName = 2;
      case 2: {
        if (tag == 18) {
         parse_SceneName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scenename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scenename().data(), this->scenename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scenename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ViewSceneType;
        break;
      }

      // optional .pb.EViewSceneType ViewSceneType = 3;
      case 3: {
        if (tag == 24) {
         parse_ViewSceneType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneType_IsValid(value)) {
            set_viewscenetype(static_cast< ::pb::EViewSceneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ViewSceneId;
        break;
      }

      // optional uint64 ViewSceneId = 4;
      case 4: {
        if (tag == 32) {
         parse_ViewSceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &viewsceneid_)));
          set_has_viewsceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Id;
        break;
      }

      // optional uint64 Id = 5;
      case 5: {
        if (tag == 40) {
         parse_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 6;
      case 6: {
        if (tag == 48) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Status;
        break;
      }

      // optional .pb.EViewSceneUserStatus Status = 7;
      case 7: {
        if (tag == 56) {
         parse_Status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EViewSceneUserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_InfoData;
        break;
      }

      // optional bytes InfoData = 8;
      case 8: {
        if (tag == 66) {
         parse_InfoData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_infodata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewServerNotifyObjectChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewServerNotifyObjectChange)
  return false;
#undef DO_
}

void TViewServerNotifyObjectChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewServerNotifyObjectChange)
  // optional string ViewName = 1;
  if (has_viewname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewname().data(), this->viewname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->viewname(), output);
  }

  // optional string SceneName = 2;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scenename(), output);
  }

  // optional .pb.EViewSceneType ViewSceneType = 3;
  if (has_viewscenetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->viewscenetype(), output);
  }

  // optional uint64 ViewSceneId = 4;
  if (has_viewsceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->viewsceneid(), output);
  }

  // optional uint64 Id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->id(), output);
  }

  // optional uint32 Pos = 6;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pos(), output);
  }

  // optional .pb.EViewSceneUserStatus Status = 7;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // optional bytes InfoData = 8;
  if (has_infodata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->infodata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewServerNotifyObjectChange)
}

::google::protobuf::uint8* TViewServerNotifyObjectChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewServerNotifyObjectChange)
  // optional string ViewName = 1;
  if (has_viewname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewname().data(), this->viewname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->viewname(), target);
  }

  // optional string SceneName = 2;
  if (has_scenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scenename().data(), this->scenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scenename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scenename(), target);
  }

  // optional .pb.EViewSceneType ViewSceneType = 3;
  if (has_viewscenetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->viewscenetype(), target);
  }

  // optional uint64 ViewSceneId = 4;
  if (has_viewsceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->viewsceneid(), target);
  }

  // optional uint64 Id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->id(), target);
  }

  // optional uint32 Pos = 6;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pos(), target);
  }

  // optional .pb.EViewSceneUserStatus Status = 7;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // optional bytes InfoData = 8;
  if (has_infodata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->infodata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewServerNotifyObjectChange)
  return target;
}

int TViewServerNotifyObjectChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ViewName = 1;
    if (has_viewname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->viewname());
    }

    // optional string SceneName = 2;
    if (has_scenename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scenename());
    }

    // optional .pb.EViewSceneType ViewSceneType = 3;
    if (has_viewscenetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewscenetype());
    }

    // optional uint64 ViewSceneId = 4;
    if (has_viewsceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->viewsceneid());
    }

    // optional uint64 Id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 Pos = 6;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.EViewSceneUserStatus Status = 7;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional bytes InfoData = 8;
    if (has_infodata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->infodata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewServerNotifyObjectChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewServerNotifyObjectChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewServerNotifyObjectChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewServerNotifyObjectChange::MergeFrom(const TViewServerNotifyObjectChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewname()) {
      set_viewname(from.viewname());
    }
    if (from.has_scenename()) {
      set_scenename(from.scenename());
    }
    if (from.has_viewscenetype()) {
      set_viewscenetype(from.viewscenetype());
    }
    if (from.has_viewsceneid()) {
      set_viewsceneid(from.viewsceneid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_infodata()) {
      set_infodata(from.infodata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewServerNotifyObjectChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewServerNotifyObjectChange::CopyFrom(const TViewServerNotifyObjectChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewServerNotifyObjectChange::IsInitialized() const {

  return true;
}

void TViewServerNotifyObjectChange::Swap(TViewServerNotifyObjectChange* other) {
  if (other != this) {
    std::swap(viewname_, other->viewname_);
    std::swap(scenename_, other->scenename_);
    std::swap(viewscenetype_, other->viewscenetype_);
    std::swap(viewsceneid_, other->viewsceneid_);
    std::swap(id_, other->id_);
    std::swap(pos_, other->pos_);
    std::swap(status_, other->status_);
    std::swap(infodata_, other->infodata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewServerNotifyObjectChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewServerNotifyObjectChange_descriptor_;
  metadata.reflection = TViewServerNotifyObjectChange_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
