// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TravelBook.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/TravelBook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TTravelBookItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTravelBookItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTravelBookGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTravelBookGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTravelBookReceiveItemRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTravelBookReceiveItemRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTravelBookReceiveItemRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTravelBookReceiveItemRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTravelBookNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTravelBookNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fTravelBook_2eproto() {
  protobuf_AddDesc_net_2fTravelBook_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/TravelBook.proto");
  GOOGLE_CHECK(file != NULL);
  TTravelBookItem_descriptor_ = file->message_type(0);
  static const int TTravelBookItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookItem, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookItem, activetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookItem, rewardtime_),
  };
  TTravelBookItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTravelBookItem_descriptor_,
      TTravelBookItem::default_instance_,
      TTravelBookItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTravelBookItem));
  TTravelBookGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TTravelBookGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookGetInfoRsp, arritem_),
  };
  TTravelBookGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTravelBookGetInfoRsp_descriptor_,
      TTravelBookGetInfoRsp::default_instance_,
      TTravelBookGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTravelBookGetInfoRsp));
  TTravelBookReceiveItemRewardReq_descriptor_ = file->message_type(2);
  static const int TTravelBookReceiveItemRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookReceiveItemRewardReq, tid_),
  };
  TTravelBookReceiveItemRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTravelBookReceiveItemRewardReq_descriptor_,
      TTravelBookReceiveItemRewardReq::default_instance_,
      TTravelBookReceiveItemRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookReceiveItemRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookReceiveItemRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTravelBookReceiveItemRewardReq));
  TTravelBookReceiveItemRewardRsp_descriptor_ = file->message_type(3);
  static const int TTravelBookReceiveItemRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookReceiveItemRewardRsp, rewardarray_),
  };
  TTravelBookReceiveItemRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTravelBookReceiveItemRewardRsp_descriptor_,
      TTravelBookReceiveItemRewardRsp::default_instance_,
      TTravelBookReceiveItemRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookReceiveItemRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookReceiveItemRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTravelBookReceiveItemRewardRsp));
  TTravelBookNotify_descriptor_ = file->message_type(4);
  static const int TTravelBookNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookNotify, arritem_),
  };
  TTravelBookNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTravelBookNotify_descriptor_,
      TTravelBookNotify::default_instance_,
      TTravelBookNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTravelBookNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTravelBookNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fTravelBook_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTravelBookItem_descriptor_, &TTravelBookItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTravelBookGetInfoRsp_descriptor_, &TTravelBookGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTravelBookReceiveItemRewardReq_descriptor_, &TTravelBookReceiveItemRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTravelBookReceiveItemRewardRsp_descriptor_, &TTravelBookReceiveItemRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTravelBookNotify_descriptor_, &TTravelBookNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fTravelBook_2eproto() {
  delete TTravelBookItem::default_instance_;
  delete TTravelBookItem_reflection_;
  delete TTravelBookGetInfoRsp::default_instance_;
  delete TTravelBookGetInfoRsp_reflection_;
  delete TTravelBookReceiveItemRewardReq::default_instance_;
  delete TTravelBookReceiveItemRewardReq_reflection_;
  delete TTravelBookReceiveItemRewardRsp::default_instance_;
  delete TTravelBookReceiveItemRewardRsp_reflection_;
  delete TTravelBookNotify::default_instance_;
  delete TTravelBookNotify_reflection_;
}

void protobuf_AddDesc_net_2fTravelBook_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024net/TravelBook.proto\022\002pb\032\026net/CommonRe"
    "ward.proto\"F\n\017TTravelBookItem\022\013\n\003Tid\030\001 \001"
    "(\r\022\022\n\nActiveTime\030\002 \001(\004\022\022\n\nRewardTime\030\003 \001"
    "(\004\"=\n\025TTravelBookGetInfoRsp\022$\n\007ArrItem\030\001"
    " \003(\0132\023.pb.TTravelBookItem\".\n\037TTravelBook"
    "ReceiveItemRewardReq\022\013\n\003Tid\030\001 \001(\r\"I\n\037TTr"
    "avelBookReceiveItemRewardRsp\022&\n\013RewardAr"
    "ray\030\001 \003(\0132\021.pb.TCommonReward\"9\n\021TTravelB"
    "ookNotify\022$\n\007ArrItem\030\001 \003(\0132\023.pb.TTravelB"
    "ookItem", 367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/TravelBook.proto", &protobuf_RegisterTypes);
  TTravelBookItem::default_instance_ = new TTravelBookItem();
  TTravelBookGetInfoRsp::default_instance_ = new TTravelBookGetInfoRsp();
  TTravelBookReceiveItemRewardReq::default_instance_ = new TTravelBookReceiveItemRewardReq();
  TTravelBookReceiveItemRewardRsp::default_instance_ = new TTravelBookReceiveItemRewardRsp();
  TTravelBookNotify::default_instance_ = new TTravelBookNotify();
  TTravelBookItem::default_instance_->InitAsDefaultInstance();
  TTravelBookGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TTravelBookReceiveItemRewardReq::default_instance_->InitAsDefaultInstance();
  TTravelBookReceiveItemRewardRsp::default_instance_->InitAsDefaultInstance();
  TTravelBookNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fTravelBook_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fTravelBook_2eproto {
  StaticDescriptorInitializer_net_2fTravelBook_2eproto() {
    protobuf_AddDesc_net_2fTravelBook_2eproto();
  }
} static_descriptor_initializer_net_2fTravelBook_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TTravelBookItem::kTidFieldNumber;
const int TTravelBookItem::kActiveTimeFieldNumber;
const int TTravelBookItem::kRewardTimeFieldNumber;
#endif  // !_MSC_VER

TTravelBookItem::TTravelBookItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTravelBookItem)
}

void TTravelBookItem::InitAsDefaultInstance() {
}

TTravelBookItem::TTravelBookItem(const TTravelBookItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTravelBookItem)
}

void TTravelBookItem::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  activetime_ = GOOGLE_ULONGLONG(0);
  rewardtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTravelBookItem::~TTravelBookItem() {
  // @@protoc_insertion_point(destructor:pb.TTravelBookItem)
  SharedDtor();
}

void TTravelBookItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTravelBookItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTravelBookItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTravelBookItem_descriptor_;
}

const TTravelBookItem& TTravelBookItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTravelBook_2eproto();
  return *default_instance_;
}

TTravelBookItem* TTravelBookItem::default_instance_ = NULL;

TTravelBookItem* TTravelBookItem::New() const {
  return new TTravelBookItem;
}

void TTravelBookItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTravelBookItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(activetime_, tid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTravelBookItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTravelBookItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActiveTime;
        break;
      }

      // optional uint64 ActiveTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ActiveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &activetime_)));
          set_has_activetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardTime;
        break;
      }

      // optional uint64 RewardTime = 3;
      case 3: {
        if (tag == 24) {
         parse_RewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rewardtime_)));
          set_has_rewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTravelBookItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTravelBookItem)
  return false;
#undef DO_
}

void TTravelBookItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTravelBookItem)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint64 ActiveTime = 2;
  if (has_activetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->activetime(), output);
  }

  // optional uint64 RewardTime = 3;
  if (has_rewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->rewardtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTravelBookItem)
}

::google::protobuf::uint8* TTravelBookItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTravelBookItem)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint64 ActiveTime = 2;
  if (has_activetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->activetime(), target);
  }

  // optional uint64 RewardTime = 3;
  if (has_rewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->rewardtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTravelBookItem)
  return target;
}

int TTravelBookItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint64 ActiveTime = 2;
    if (has_activetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->activetime());
    }

    // optional uint64 RewardTime = 3;
    if (has_rewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rewardtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTravelBookItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTravelBookItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTravelBookItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTravelBookItem::MergeFrom(const TTravelBookItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_activetime()) {
      set_activetime(from.activetime());
    }
    if (from.has_rewardtime()) {
      set_rewardtime(from.rewardtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTravelBookItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTravelBookItem::CopyFrom(const TTravelBookItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTravelBookItem::IsInitialized() const {

  return true;
}

void TTravelBookItem::Swap(TTravelBookItem* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(activetime_, other->activetime_);
    std::swap(rewardtime_, other->rewardtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTravelBookItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTravelBookItem_descriptor_;
  metadata.reflection = TTravelBookItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTravelBookGetInfoRsp::kArrItemFieldNumber;
#endif  // !_MSC_VER

TTravelBookGetInfoRsp::TTravelBookGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTravelBookGetInfoRsp)
}

void TTravelBookGetInfoRsp::InitAsDefaultInstance() {
}

TTravelBookGetInfoRsp::TTravelBookGetInfoRsp(const TTravelBookGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTravelBookGetInfoRsp)
}

void TTravelBookGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTravelBookGetInfoRsp::~TTravelBookGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTravelBookGetInfoRsp)
  SharedDtor();
}

void TTravelBookGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTravelBookGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTravelBookGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTravelBookGetInfoRsp_descriptor_;
}

const TTravelBookGetInfoRsp& TTravelBookGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTravelBook_2eproto();
  return *default_instance_;
}

TTravelBookGetInfoRsp* TTravelBookGetInfoRsp::default_instance_ = NULL;

TTravelBookGetInfoRsp* TTravelBookGetInfoRsp::New() const {
  return new TTravelBookGetInfoRsp;
}

void TTravelBookGetInfoRsp::Clear() {
  arritem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTravelBookGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTravelBookGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTravelBookItem ArrItem = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arritem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrItem;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTravelBookGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTravelBookGetInfoRsp)
  return false;
#undef DO_
}

void TTravelBookGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTravelBookGetInfoRsp)
  // repeated .pb.TTravelBookItem ArrItem = 1;
  for (int i = 0; i < this->arritem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arritem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTravelBookGetInfoRsp)
}

::google::protobuf::uint8* TTravelBookGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTravelBookGetInfoRsp)
  // repeated .pb.TTravelBookItem ArrItem = 1;
  for (int i = 0; i < this->arritem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arritem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTravelBookGetInfoRsp)
  return target;
}

int TTravelBookGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TTravelBookItem ArrItem = 1;
  total_size += 1 * this->arritem_size();
  for (int i = 0; i < this->arritem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arritem(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTravelBookGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTravelBookGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTravelBookGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTravelBookGetInfoRsp::MergeFrom(const TTravelBookGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritem_.MergeFrom(from.arritem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTravelBookGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTravelBookGetInfoRsp::CopyFrom(const TTravelBookGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTravelBookGetInfoRsp::IsInitialized() const {

  return true;
}

void TTravelBookGetInfoRsp::Swap(TTravelBookGetInfoRsp* other) {
  if (other != this) {
    arritem_.Swap(&other->arritem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTravelBookGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTravelBookGetInfoRsp_descriptor_;
  metadata.reflection = TTravelBookGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTravelBookReceiveItemRewardReq::kTidFieldNumber;
#endif  // !_MSC_VER

TTravelBookReceiveItemRewardReq::TTravelBookReceiveItemRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTravelBookReceiveItemRewardReq)
}

void TTravelBookReceiveItemRewardReq::InitAsDefaultInstance() {
}

TTravelBookReceiveItemRewardReq::TTravelBookReceiveItemRewardReq(const TTravelBookReceiveItemRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTravelBookReceiveItemRewardReq)
}

void TTravelBookReceiveItemRewardReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTravelBookReceiveItemRewardReq::~TTravelBookReceiveItemRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TTravelBookReceiveItemRewardReq)
  SharedDtor();
}

void TTravelBookReceiveItemRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTravelBookReceiveItemRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTravelBookReceiveItemRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTravelBookReceiveItemRewardReq_descriptor_;
}

const TTravelBookReceiveItemRewardReq& TTravelBookReceiveItemRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTravelBook_2eproto();
  return *default_instance_;
}

TTravelBookReceiveItemRewardReq* TTravelBookReceiveItemRewardReq::default_instance_ = NULL;

TTravelBookReceiveItemRewardReq* TTravelBookReceiveItemRewardReq::New() const {
  return new TTravelBookReceiveItemRewardReq;
}

void TTravelBookReceiveItemRewardReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTravelBookReceiveItemRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTravelBookReceiveItemRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTravelBookReceiveItemRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTravelBookReceiveItemRewardReq)
  return false;
#undef DO_
}

void TTravelBookReceiveItemRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTravelBookReceiveItemRewardReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTravelBookReceiveItemRewardReq)
}

::google::protobuf::uint8* TTravelBookReceiveItemRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTravelBookReceiveItemRewardReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTravelBookReceiveItemRewardReq)
  return target;
}

int TTravelBookReceiveItemRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTravelBookReceiveItemRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTravelBookReceiveItemRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTravelBookReceiveItemRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTravelBookReceiveItemRewardReq::MergeFrom(const TTravelBookReceiveItemRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTravelBookReceiveItemRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTravelBookReceiveItemRewardReq::CopyFrom(const TTravelBookReceiveItemRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTravelBookReceiveItemRewardReq::IsInitialized() const {

  return true;
}

void TTravelBookReceiveItemRewardReq::Swap(TTravelBookReceiveItemRewardReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTravelBookReceiveItemRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTravelBookReceiveItemRewardReq_descriptor_;
  metadata.reflection = TTravelBookReceiveItemRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTravelBookReceiveItemRewardRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TTravelBookReceiveItemRewardRsp::TTravelBookReceiveItemRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTravelBookReceiveItemRewardRsp)
}

void TTravelBookReceiveItemRewardRsp::InitAsDefaultInstance() {
}

TTravelBookReceiveItemRewardRsp::TTravelBookReceiveItemRewardRsp(const TTravelBookReceiveItemRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTravelBookReceiveItemRewardRsp)
}

void TTravelBookReceiveItemRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTravelBookReceiveItemRewardRsp::~TTravelBookReceiveItemRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TTravelBookReceiveItemRewardRsp)
  SharedDtor();
}

void TTravelBookReceiveItemRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTravelBookReceiveItemRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTravelBookReceiveItemRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTravelBookReceiveItemRewardRsp_descriptor_;
}

const TTravelBookReceiveItemRewardRsp& TTravelBookReceiveItemRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTravelBook_2eproto();
  return *default_instance_;
}

TTravelBookReceiveItemRewardRsp* TTravelBookReceiveItemRewardRsp::default_instance_ = NULL;

TTravelBookReceiveItemRewardRsp* TTravelBookReceiveItemRewardRsp::New() const {
  return new TTravelBookReceiveItemRewardRsp;
}

void TTravelBookReceiveItemRewardRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTravelBookReceiveItemRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTravelBookReceiveItemRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTravelBookReceiveItemRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTravelBookReceiveItemRewardRsp)
  return false;
#undef DO_
}

void TTravelBookReceiveItemRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTravelBookReceiveItemRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTravelBookReceiveItemRewardRsp)
}

::google::protobuf::uint8* TTravelBookReceiveItemRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTravelBookReceiveItemRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTravelBookReceiveItemRewardRsp)
  return target;
}

int TTravelBookReceiveItemRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTravelBookReceiveItemRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTravelBookReceiveItemRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTravelBookReceiveItemRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTravelBookReceiveItemRewardRsp::MergeFrom(const TTravelBookReceiveItemRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTravelBookReceiveItemRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTravelBookReceiveItemRewardRsp::CopyFrom(const TTravelBookReceiveItemRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTravelBookReceiveItemRewardRsp::IsInitialized() const {

  return true;
}

void TTravelBookReceiveItemRewardRsp::Swap(TTravelBookReceiveItemRewardRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTravelBookReceiveItemRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTravelBookReceiveItemRewardRsp_descriptor_;
  metadata.reflection = TTravelBookReceiveItemRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTravelBookNotify::kArrItemFieldNumber;
#endif  // !_MSC_VER

TTravelBookNotify::TTravelBookNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTravelBookNotify)
}

void TTravelBookNotify::InitAsDefaultInstance() {
}

TTravelBookNotify::TTravelBookNotify(const TTravelBookNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTravelBookNotify)
}

void TTravelBookNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTravelBookNotify::~TTravelBookNotify() {
  // @@protoc_insertion_point(destructor:pb.TTravelBookNotify)
  SharedDtor();
}

void TTravelBookNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTravelBookNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTravelBookNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTravelBookNotify_descriptor_;
}

const TTravelBookNotify& TTravelBookNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTravelBook_2eproto();
  return *default_instance_;
}

TTravelBookNotify* TTravelBookNotify::default_instance_ = NULL;

TTravelBookNotify* TTravelBookNotify::New() const {
  return new TTravelBookNotify;
}

void TTravelBookNotify::Clear() {
  arritem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTravelBookNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTravelBookNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTravelBookItem ArrItem = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arritem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrItem;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTravelBookNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTravelBookNotify)
  return false;
#undef DO_
}

void TTravelBookNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTravelBookNotify)
  // repeated .pb.TTravelBookItem ArrItem = 1;
  for (int i = 0; i < this->arritem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arritem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTravelBookNotify)
}

::google::protobuf::uint8* TTravelBookNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTravelBookNotify)
  // repeated .pb.TTravelBookItem ArrItem = 1;
  for (int i = 0; i < this->arritem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arritem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTravelBookNotify)
  return target;
}

int TTravelBookNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TTravelBookItem ArrItem = 1;
  total_size += 1 * this->arritem_size();
  for (int i = 0; i < this->arritem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arritem(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTravelBookNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTravelBookNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTravelBookNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTravelBookNotify::MergeFrom(const TTravelBookNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritem_.MergeFrom(from.arritem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTravelBookNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTravelBookNotify::CopyFrom(const TTravelBookNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTravelBookNotify::IsInitialized() const {

  return true;
}

void TTravelBookNotify::Swap(TTravelBookNotify* other) {
  if (other != this) {
    arritem_.Swap(&other->arritem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTravelBookNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTravelBookNotify_descriptor_;
  metadata.reflection = TTravelBookNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
