// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActTreasureBowl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActTreasureBowl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActTreasureBowlExchangeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlExchangeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlPackageInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlPackageInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlBuyItemInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlBuyItemInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlDrawReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlDrawReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlDrawRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlDrawRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlExchangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlExchangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlRecvRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlRecvRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTreasureBowlPackageNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTreasureBowlPackageNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActTreasureBowl_2eproto() {
  protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActTreasureBowl.proto");
  GOOGLE_CHECK(file != NULL);
  TActTreasureBowlExchangeInfo_descriptor_ = file->message_type(0);
  static const int TActTreasureBowlExchangeInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeInfo, exchangeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeInfo, num_),
  };
  TActTreasureBowlExchangeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlExchangeInfo_descriptor_,
      TActTreasureBowlExchangeInfo::default_instance_,
      TActTreasureBowlExchangeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlExchangeInfo));
  TActTreasureBowlPackageInfo_descriptor_ = file->message_type(1);
  static const int TActTreasureBowlPackageInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageInfo, num_),
  };
  TActTreasureBowlPackageInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlPackageInfo_descriptor_,
      TActTreasureBowlPackageInfo::default_instance_,
      TActTreasureBowlPackageInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlPackageInfo));
  TActTreasureBowlGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TActTreasureBowlGetInfoRsp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, freenumtoday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, buynumtoday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, drawnumtoday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, arrexchangeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, arrpackageinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, drawnumall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, rewardid_),
  };
  TActTreasureBowlGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlGetInfoRsp_descriptor_,
      TActTreasureBowlGetInfoRsp::default_instance_,
      TActTreasureBowlGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlGetInfoRsp));
  TActTreasureBowlBuyItemInfoReq_descriptor_ = file->message_type(3);
  static const int TActTreasureBowlBuyItemInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlBuyItemInfoReq, num_),
  };
  TActTreasureBowlBuyItemInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlBuyItemInfoReq_descriptor_,
      TActTreasureBowlBuyItemInfoReq::default_instance_,
      TActTreasureBowlBuyItemInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlBuyItemInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlBuyItemInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlBuyItemInfoReq));
  TActTreasureBowlDrawReq_descriptor_ = file->message_type(4);
  static const int TActTreasureBowlDrawReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlDrawReq, num_),
  };
  TActTreasureBowlDrawReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlDrawReq_descriptor_,
      TActTreasureBowlDrawReq::default_instance_,
      TActTreasureBowlDrawReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlDrawReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlDrawReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlDrawReq));
  TActTreasureBowlDrawRsp_descriptor_ = file->message_type(5);
  static const int TActTreasureBowlDrawRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlDrawRsp, arrreward_),
  };
  TActTreasureBowlDrawRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlDrawRsp_descriptor_,
      TActTreasureBowlDrawRsp::default_instance_,
      TActTreasureBowlDrawRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlDrawRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlDrawRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlDrawRsp));
  TActTreasureBowlExchangeReq_descriptor_ = file->message_type(6);
  static const int TActTreasureBowlExchangeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeReq, exchangeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeReq, num_),
  };
  TActTreasureBowlExchangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlExchangeReq_descriptor_,
      TActTreasureBowlExchangeReq::default_instance_,
      TActTreasureBowlExchangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlExchangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlExchangeReq));
  TActTreasureBowlRecvRewardReq_descriptor_ = file->message_type(7);
  static const int TActTreasureBowlRecvRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlRecvRewardReq, rewardid_),
  };
  TActTreasureBowlRecvRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlRecvRewardReq_descriptor_,
      TActTreasureBowlRecvRewardReq::default_instance_,
      TActTreasureBowlRecvRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlRecvRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlRecvRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlRecvRewardReq));
  TActTreasureBowlPackageNotify_descriptor_ = file->message_type(8);
  static const int TActTreasureBowlPackageNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageNotify, arrpackageinfo_),
  };
  TActTreasureBowlPackageNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTreasureBowlPackageNotify_descriptor_,
      TActTreasureBowlPackageNotify::default_instance_,
      TActTreasureBowlPackageNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTreasureBowlPackageNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTreasureBowlPackageNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActTreasureBowl_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlExchangeInfo_descriptor_, &TActTreasureBowlExchangeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlPackageInfo_descriptor_, &TActTreasureBowlPackageInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlGetInfoRsp_descriptor_, &TActTreasureBowlGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlBuyItemInfoReq_descriptor_, &TActTreasureBowlBuyItemInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlDrawReq_descriptor_, &TActTreasureBowlDrawReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlDrawRsp_descriptor_, &TActTreasureBowlDrawRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlExchangeReq_descriptor_, &TActTreasureBowlExchangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlRecvRewardReq_descriptor_, &TActTreasureBowlRecvRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTreasureBowlPackageNotify_descriptor_, &TActTreasureBowlPackageNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto() {
  delete TActTreasureBowlExchangeInfo::default_instance_;
  delete TActTreasureBowlExchangeInfo_reflection_;
  delete TActTreasureBowlPackageInfo::default_instance_;
  delete TActTreasureBowlPackageInfo_reflection_;
  delete TActTreasureBowlGetInfoRsp::default_instance_;
  delete TActTreasureBowlGetInfoRsp_reflection_;
  delete TActTreasureBowlBuyItemInfoReq::default_instance_;
  delete TActTreasureBowlBuyItemInfoReq_reflection_;
  delete TActTreasureBowlDrawReq::default_instance_;
  delete TActTreasureBowlDrawReq_reflection_;
  delete TActTreasureBowlDrawRsp::default_instance_;
  delete TActTreasureBowlDrawRsp_reflection_;
  delete TActTreasureBowlExchangeReq::default_instance_;
  delete TActTreasureBowlExchangeReq_reflection_;
  delete TActTreasureBowlRecvRewardReq::default_instance_;
  delete TActTreasureBowlRecvRewardReq_reflection_;
  delete TActTreasureBowlPackageNotify::default_instance_;
  delete TActTreasureBowlPackageNotify_reflection_;
}

void protobuf_AddDesc_net_2fActTreasureBowl_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031net/ActTreasureBowl.proto\022\002pb\032\026net/Com"
    "monReward.proto\"\?\n\034TActTreasureBowlExcha"
    "ngeInfo\022\022\n\nExchangeId\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r"
    "\"6\n\033TActTreasureBowlPackageInfo\022\n\n\002Id\030\001 "
    "\001(\r\022\013\n\003Num\030\002 \001(\r\"\367\001\n\032TActTreasureBowlGet"
    "InfoRsp\022\024\n\014FreeNumToday\030\001 \001(\r\022\023\n\013BuyNumT"
    "oday\030\002 \001(\r\022\024\n\014DrawNumToday\030\003 \001(\r\0229\n\017ArrE"
    "xchangeInfo\030\004 \003(\0132 .pb.TActTreasureBowlE"
    "xchangeInfo\0227\n\016ArrPackageInfo\030\005 \003(\0132\037.pb"
    ".TActTreasureBowlPackageInfo\022\022\n\nDrawNumA"
    "ll\030\006 \001(\r\022\020\n\010RewardId\030\007 \003(\r\"-\n\036TActTreasu"
    "reBowlBuyItemInfoReq\022\013\n\003Num\030\001 \001(\r\"&\n\027TAc"
    "tTreasureBowlDrawReq\022\013\n\003Num\030\001 \001(\r\"\?\n\027TAc"
    "tTreasureBowlDrawRsp\022$\n\tArrReward\030\001 \003(\0132"
    "\021.pb.TCommonReward\">\n\033TActTreasureBowlEx"
    "changeReq\022\022\n\nExchangeId\030\001 \001(\r\022\013\n\003Num\030\002 \001"
    "(\r\"1\n\035TActTreasureBowlRecvRewardReq\022\020\n\010R"
    "ewardId\030\001 \001(\r\"X\n\035TActTreasureBowlPackage"
    "Notify\0227\n\016ArrPackageInfo\030\001 \003(\0132\037.pb.TAct"
    "TreasureBowlPackageInfo", 783);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActTreasureBowl.proto", &protobuf_RegisterTypes);
  TActTreasureBowlExchangeInfo::default_instance_ = new TActTreasureBowlExchangeInfo();
  TActTreasureBowlPackageInfo::default_instance_ = new TActTreasureBowlPackageInfo();
  TActTreasureBowlGetInfoRsp::default_instance_ = new TActTreasureBowlGetInfoRsp();
  TActTreasureBowlBuyItemInfoReq::default_instance_ = new TActTreasureBowlBuyItemInfoReq();
  TActTreasureBowlDrawReq::default_instance_ = new TActTreasureBowlDrawReq();
  TActTreasureBowlDrawRsp::default_instance_ = new TActTreasureBowlDrawRsp();
  TActTreasureBowlExchangeReq::default_instance_ = new TActTreasureBowlExchangeReq();
  TActTreasureBowlRecvRewardReq::default_instance_ = new TActTreasureBowlRecvRewardReq();
  TActTreasureBowlPackageNotify::default_instance_ = new TActTreasureBowlPackageNotify();
  TActTreasureBowlExchangeInfo::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlPackageInfo::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlBuyItemInfoReq::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlDrawReq::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlDrawRsp::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlExchangeReq::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlRecvRewardReq::default_instance_->InitAsDefaultInstance();
  TActTreasureBowlPackageNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActTreasureBowl_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActTreasureBowl_2eproto {
  StaticDescriptorInitializer_net_2fActTreasureBowl_2eproto() {
    protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  }
} static_descriptor_initializer_net_2fActTreasureBowl_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlExchangeInfo::kExchangeIdFieldNumber;
const int TActTreasureBowlExchangeInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlExchangeInfo::TActTreasureBowlExchangeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlExchangeInfo)
}

void TActTreasureBowlExchangeInfo::InitAsDefaultInstance() {
}

TActTreasureBowlExchangeInfo::TActTreasureBowlExchangeInfo(const TActTreasureBowlExchangeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlExchangeInfo)
}

void TActTreasureBowlExchangeInfo::SharedCtor() {
  _cached_size_ = 0;
  exchangeid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlExchangeInfo::~TActTreasureBowlExchangeInfo() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlExchangeInfo)
  SharedDtor();
}

void TActTreasureBowlExchangeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlExchangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlExchangeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlExchangeInfo_descriptor_;
}

const TActTreasureBowlExchangeInfo& TActTreasureBowlExchangeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlExchangeInfo* TActTreasureBowlExchangeInfo::default_instance_ = NULL;

TActTreasureBowlExchangeInfo* TActTreasureBowlExchangeInfo::New() const {
  return new TActTreasureBowlExchangeInfo;
}

void TActTreasureBowlExchangeInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTreasureBowlExchangeInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(exchangeid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlExchangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlExchangeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ExchangeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangeid_)));
          set_has_exchangeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlExchangeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlExchangeInfo)
  return false;
#undef DO_
}

void TActTreasureBowlExchangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlExchangeInfo)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exchangeid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlExchangeInfo)
}

::google::protobuf::uint8* TActTreasureBowlExchangeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlExchangeInfo)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exchangeid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlExchangeInfo)
  return target;
}

int TActTreasureBowlExchangeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ExchangeId = 1;
    if (has_exchangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchangeid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlExchangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlExchangeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlExchangeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlExchangeInfo::MergeFrom(const TActTreasureBowlExchangeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchangeid()) {
      set_exchangeid(from.exchangeid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlExchangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlExchangeInfo::CopyFrom(const TActTreasureBowlExchangeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlExchangeInfo::IsInitialized() const {

  return true;
}

void TActTreasureBowlExchangeInfo::Swap(TActTreasureBowlExchangeInfo* other) {
  if (other != this) {
    std::swap(exchangeid_, other->exchangeid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlExchangeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlExchangeInfo_descriptor_;
  metadata.reflection = TActTreasureBowlExchangeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlPackageInfo::kIdFieldNumber;
const int TActTreasureBowlPackageInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlPackageInfo::TActTreasureBowlPackageInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlPackageInfo)
}

void TActTreasureBowlPackageInfo::InitAsDefaultInstance() {
}

TActTreasureBowlPackageInfo::TActTreasureBowlPackageInfo(const TActTreasureBowlPackageInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlPackageInfo)
}

void TActTreasureBowlPackageInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlPackageInfo::~TActTreasureBowlPackageInfo() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlPackageInfo)
  SharedDtor();
}

void TActTreasureBowlPackageInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlPackageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlPackageInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlPackageInfo_descriptor_;
}

const TActTreasureBowlPackageInfo& TActTreasureBowlPackageInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlPackageInfo* TActTreasureBowlPackageInfo::default_instance_ = NULL;

TActTreasureBowlPackageInfo* TActTreasureBowlPackageInfo::New() const {
  return new TActTreasureBowlPackageInfo;
}

void TActTreasureBowlPackageInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTreasureBowlPackageInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlPackageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlPackageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlPackageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlPackageInfo)
  return false;
#undef DO_
}

void TActTreasureBowlPackageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlPackageInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlPackageInfo)
}

::google::protobuf::uint8* TActTreasureBowlPackageInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlPackageInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlPackageInfo)
  return target;
}

int TActTreasureBowlPackageInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlPackageInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlPackageInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlPackageInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlPackageInfo::MergeFrom(const TActTreasureBowlPackageInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlPackageInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlPackageInfo::CopyFrom(const TActTreasureBowlPackageInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlPackageInfo::IsInitialized() const {

  return true;
}

void TActTreasureBowlPackageInfo::Swap(TActTreasureBowlPackageInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlPackageInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlPackageInfo_descriptor_;
  metadata.reflection = TActTreasureBowlPackageInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlGetInfoRsp::kFreeNumTodayFieldNumber;
const int TActTreasureBowlGetInfoRsp::kBuyNumTodayFieldNumber;
const int TActTreasureBowlGetInfoRsp::kDrawNumTodayFieldNumber;
const int TActTreasureBowlGetInfoRsp::kArrExchangeInfoFieldNumber;
const int TActTreasureBowlGetInfoRsp::kArrPackageInfoFieldNumber;
const int TActTreasureBowlGetInfoRsp::kDrawNumAllFieldNumber;
const int TActTreasureBowlGetInfoRsp::kRewardIdFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlGetInfoRsp::TActTreasureBowlGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlGetInfoRsp)
}

void TActTreasureBowlGetInfoRsp::InitAsDefaultInstance() {
}

TActTreasureBowlGetInfoRsp::TActTreasureBowlGetInfoRsp(const TActTreasureBowlGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlGetInfoRsp)
}

void TActTreasureBowlGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  freenumtoday_ = 0u;
  buynumtoday_ = 0u;
  drawnumtoday_ = 0u;
  drawnumall_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlGetInfoRsp::~TActTreasureBowlGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlGetInfoRsp)
  SharedDtor();
}

void TActTreasureBowlGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlGetInfoRsp_descriptor_;
}

const TActTreasureBowlGetInfoRsp& TActTreasureBowlGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlGetInfoRsp* TActTreasureBowlGetInfoRsp::default_instance_ = NULL;

TActTreasureBowlGetInfoRsp* TActTreasureBowlGetInfoRsp::New() const {
  return new TActTreasureBowlGetInfoRsp;
}

void TActTreasureBowlGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTreasureBowlGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(freenumtoday_, buynumtoday_);
  ZR_(drawnumtoday_, drawnumall_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrexchangeinfo_.Clear();
  arrpackageinfo_.Clear();
  rewardid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FreeNumToday = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freenumtoday_)));
          set_has_freenumtoday();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuyNumToday;
        break;
      }

      // optional uint32 BuyNumToday = 2;
      case 2: {
        if (tag == 16) {
         parse_BuyNumToday:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buynumtoday_)));
          set_has_buynumtoday();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DrawNumToday;
        break;
      }

      // optional uint32 DrawNumToday = 3;
      case 3: {
        if (tag == 24) {
         parse_DrawNumToday:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drawnumtoday_)));
          set_has_drawnumtoday();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrExchangeInfo;
        break;
      }

      // repeated .pb.TActTreasureBowlExchangeInfo ArrExchangeInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrExchangeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrexchangeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrExchangeInfo;
        if (input->ExpectTag(42)) goto parse_ArrPackageInfo;
        break;
      }

      // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrPackageInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrpackageinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrPackageInfo;
        if (input->ExpectTag(48)) goto parse_DrawNumAll;
        break;
      }

      // optional uint32 DrawNumAll = 6;
      case 6: {
        if (tag == 48) {
         parse_DrawNumAll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drawnumall_)));
          set_has_drawnumall();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RewardId;
        break;
      }

      // repeated uint32 RewardId = 7;
      case 7: {
        if (tag == 56) {
         parse_RewardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_rewardid())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RewardId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlGetInfoRsp)
  return false;
#undef DO_
}

void TActTreasureBowlGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlGetInfoRsp)
  // optional uint32 FreeNumToday = 1;
  if (has_freenumtoday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->freenumtoday(), output);
  }

  // optional uint32 BuyNumToday = 2;
  if (has_buynumtoday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buynumtoday(), output);
  }

  // optional uint32 DrawNumToday = 3;
  if (has_drawnumtoday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->drawnumtoday(), output);
  }

  // repeated .pb.TActTreasureBowlExchangeInfo ArrExchangeInfo = 4;
  for (int i = 0; i < this->arrexchangeinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrexchangeinfo(i), output);
  }

  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 5;
  for (int i = 0; i < this->arrpackageinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrpackageinfo(i), output);
  }

  // optional uint32 DrawNumAll = 6;
  if (has_drawnumall()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->drawnumall(), output);
  }

  // repeated uint32 RewardId = 7;
  for (int i = 0; i < this->rewardid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->rewardid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlGetInfoRsp)
}

::google::protobuf::uint8* TActTreasureBowlGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlGetInfoRsp)
  // optional uint32 FreeNumToday = 1;
  if (has_freenumtoday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->freenumtoday(), target);
  }

  // optional uint32 BuyNumToday = 2;
  if (has_buynumtoday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buynumtoday(), target);
  }

  // optional uint32 DrawNumToday = 3;
  if (has_drawnumtoday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->drawnumtoday(), target);
  }

  // repeated .pb.TActTreasureBowlExchangeInfo ArrExchangeInfo = 4;
  for (int i = 0; i < this->arrexchangeinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrexchangeinfo(i), target);
  }

  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 5;
  for (int i = 0; i < this->arrpackageinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrpackageinfo(i), target);
  }

  // optional uint32 DrawNumAll = 6;
  if (has_drawnumall()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->drawnumall(), target);
  }

  // repeated uint32 RewardId = 7;
  for (int i = 0; i < this->rewardid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->rewardid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlGetInfoRsp)
  return target;
}

int TActTreasureBowlGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FreeNumToday = 1;
    if (has_freenumtoday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freenumtoday());
    }

    // optional uint32 BuyNumToday = 2;
    if (has_buynumtoday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buynumtoday());
    }

    // optional uint32 DrawNumToday = 3;
    if (has_drawnumtoday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drawnumtoday());
    }

    // optional uint32 DrawNumAll = 6;
    if (has_drawnumall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drawnumall());
    }

  }
  // repeated .pb.TActTreasureBowlExchangeInfo ArrExchangeInfo = 4;
  total_size += 1 * this->arrexchangeinfo_size();
  for (int i = 0; i < this->arrexchangeinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrexchangeinfo(i));
  }

  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 5;
  total_size += 1 * this->arrpackageinfo_size();
  for (int i = 0; i < this->arrpackageinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrpackageinfo(i));
  }

  // repeated uint32 RewardId = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardid(i));
    }
    total_size += 1 * this->rewardid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlGetInfoRsp::MergeFrom(const TActTreasureBowlGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrexchangeinfo_.MergeFrom(from.arrexchangeinfo_);
  arrpackageinfo_.MergeFrom(from.arrpackageinfo_);
  rewardid_.MergeFrom(from.rewardid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_freenumtoday()) {
      set_freenumtoday(from.freenumtoday());
    }
    if (from.has_buynumtoday()) {
      set_buynumtoday(from.buynumtoday());
    }
    if (from.has_drawnumtoday()) {
      set_drawnumtoday(from.drawnumtoday());
    }
    if (from.has_drawnumall()) {
      set_drawnumall(from.drawnumall());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlGetInfoRsp::CopyFrom(const TActTreasureBowlGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlGetInfoRsp::IsInitialized() const {

  return true;
}

void TActTreasureBowlGetInfoRsp::Swap(TActTreasureBowlGetInfoRsp* other) {
  if (other != this) {
    std::swap(freenumtoday_, other->freenumtoday_);
    std::swap(buynumtoday_, other->buynumtoday_);
    std::swap(drawnumtoday_, other->drawnumtoday_);
    arrexchangeinfo_.Swap(&other->arrexchangeinfo_);
    arrpackageinfo_.Swap(&other->arrpackageinfo_);
    std::swap(drawnumall_, other->drawnumall_);
    rewardid_.Swap(&other->rewardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlGetInfoRsp_descriptor_;
  metadata.reflection = TActTreasureBowlGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlBuyItemInfoReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlBuyItemInfoReq::TActTreasureBowlBuyItemInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlBuyItemInfoReq)
}

void TActTreasureBowlBuyItemInfoReq::InitAsDefaultInstance() {
}

TActTreasureBowlBuyItemInfoReq::TActTreasureBowlBuyItemInfoReq(const TActTreasureBowlBuyItemInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlBuyItemInfoReq)
}

void TActTreasureBowlBuyItemInfoReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlBuyItemInfoReq::~TActTreasureBowlBuyItemInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlBuyItemInfoReq)
  SharedDtor();
}

void TActTreasureBowlBuyItemInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlBuyItemInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlBuyItemInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlBuyItemInfoReq_descriptor_;
}

const TActTreasureBowlBuyItemInfoReq& TActTreasureBowlBuyItemInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlBuyItemInfoReq* TActTreasureBowlBuyItemInfoReq::default_instance_ = NULL;

TActTreasureBowlBuyItemInfoReq* TActTreasureBowlBuyItemInfoReq::New() const {
  return new TActTreasureBowlBuyItemInfoReq;
}

void TActTreasureBowlBuyItemInfoReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlBuyItemInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlBuyItemInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlBuyItemInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlBuyItemInfoReq)
  return false;
#undef DO_
}

void TActTreasureBowlBuyItemInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlBuyItemInfoReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlBuyItemInfoReq)
}

::google::protobuf::uint8* TActTreasureBowlBuyItemInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlBuyItemInfoReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlBuyItemInfoReq)
  return target;
}

int TActTreasureBowlBuyItemInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlBuyItemInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlBuyItemInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlBuyItemInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlBuyItemInfoReq::MergeFrom(const TActTreasureBowlBuyItemInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlBuyItemInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlBuyItemInfoReq::CopyFrom(const TActTreasureBowlBuyItemInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlBuyItemInfoReq::IsInitialized() const {

  return true;
}

void TActTreasureBowlBuyItemInfoReq::Swap(TActTreasureBowlBuyItemInfoReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlBuyItemInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlBuyItemInfoReq_descriptor_;
  metadata.reflection = TActTreasureBowlBuyItemInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlDrawReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlDrawReq::TActTreasureBowlDrawReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlDrawReq)
}

void TActTreasureBowlDrawReq::InitAsDefaultInstance() {
}

TActTreasureBowlDrawReq::TActTreasureBowlDrawReq(const TActTreasureBowlDrawReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlDrawReq)
}

void TActTreasureBowlDrawReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlDrawReq::~TActTreasureBowlDrawReq() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlDrawReq)
  SharedDtor();
}

void TActTreasureBowlDrawReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlDrawReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlDrawReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlDrawReq_descriptor_;
}

const TActTreasureBowlDrawReq& TActTreasureBowlDrawReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlDrawReq* TActTreasureBowlDrawReq::default_instance_ = NULL;

TActTreasureBowlDrawReq* TActTreasureBowlDrawReq::New() const {
  return new TActTreasureBowlDrawReq;
}

void TActTreasureBowlDrawReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlDrawReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlDrawReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlDrawReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlDrawReq)
  return false;
#undef DO_
}

void TActTreasureBowlDrawReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlDrawReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlDrawReq)
}

::google::protobuf::uint8* TActTreasureBowlDrawReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlDrawReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlDrawReq)
  return target;
}

int TActTreasureBowlDrawReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlDrawReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlDrawReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlDrawReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlDrawReq::MergeFrom(const TActTreasureBowlDrawReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlDrawReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlDrawReq::CopyFrom(const TActTreasureBowlDrawReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlDrawReq::IsInitialized() const {

  return true;
}

void TActTreasureBowlDrawReq::Swap(TActTreasureBowlDrawReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlDrawReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlDrawReq_descriptor_;
  metadata.reflection = TActTreasureBowlDrawReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlDrawRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlDrawRsp::TActTreasureBowlDrawRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlDrawRsp)
}

void TActTreasureBowlDrawRsp::InitAsDefaultInstance() {
}

TActTreasureBowlDrawRsp::TActTreasureBowlDrawRsp(const TActTreasureBowlDrawRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlDrawRsp)
}

void TActTreasureBowlDrawRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlDrawRsp::~TActTreasureBowlDrawRsp() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlDrawRsp)
  SharedDtor();
}

void TActTreasureBowlDrawRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlDrawRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlDrawRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlDrawRsp_descriptor_;
}

const TActTreasureBowlDrawRsp& TActTreasureBowlDrawRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlDrawRsp* TActTreasureBowlDrawRsp::default_instance_ = NULL;

TActTreasureBowlDrawRsp* TActTreasureBowlDrawRsp::New() const {
  return new TActTreasureBowlDrawRsp;
}

void TActTreasureBowlDrawRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlDrawRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlDrawRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlDrawRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlDrawRsp)
  return false;
#undef DO_
}

void TActTreasureBowlDrawRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlDrawRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlDrawRsp)
}

::google::protobuf::uint8* TActTreasureBowlDrawRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlDrawRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlDrawRsp)
  return target;
}

int TActTreasureBowlDrawRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlDrawRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlDrawRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlDrawRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlDrawRsp::MergeFrom(const TActTreasureBowlDrawRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlDrawRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlDrawRsp::CopyFrom(const TActTreasureBowlDrawRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlDrawRsp::IsInitialized() const {

  return true;
}

void TActTreasureBowlDrawRsp::Swap(TActTreasureBowlDrawRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlDrawRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlDrawRsp_descriptor_;
  metadata.reflection = TActTreasureBowlDrawRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlExchangeReq::kExchangeIdFieldNumber;
const int TActTreasureBowlExchangeReq::kNumFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlExchangeReq::TActTreasureBowlExchangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlExchangeReq)
}

void TActTreasureBowlExchangeReq::InitAsDefaultInstance() {
}

TActTreasureBowlExchangeReq::TActTreasureBowlExchangeReq(const TActTreasureBowlExchangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlExchangeReq)
}

void TActTreasureBowlExchangeReq::SharedCtor() {
  _cached_size_ = 0;
  exchangeid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlExchangeReq::~TActTreasureBowlExchangeReq() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlExchangeReq)
  SharedDtor();
}

void TActTreasureBowlExchangeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlExchangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlExchangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlExchangeReq_descriptor_;
}

const TActTreasureBowlExchangeReq& TActTreasureBowlExchangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlExchangeReq* TActTreasureBowlExchangeReq::default_instance_ = NULL;

TActTreasureBowlExchangeReq* TActTreasureBowlExchangeReq::New() const {
  return new TActTreasureBowlExchangeReq;
}

void TActTreasureBowlExchangeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTreasureBowlExchangeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(exchangeid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlExchangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlExchangeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ExchangeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangeid_)));
          set_has_exchangeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlExchangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlExchangeReq)
  return false;
#undef DO_
}

void TActTreasureBowlExchangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlExchangeReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exchangeid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlExchangeReq)
}

::google::protobuf::uint8* TActTreasureBowlExchangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlExchangeReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exchangeid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlExchangeReq)
  return target;
}

int TActTreasureBowlExchangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ExchangeId = 1;
    if (has_exchangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchangeid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlExchangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlExchangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlExchangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlExchangeReq::MergeFrom(const TActTreasureBowlExchangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchangeid()) {
      set_exchangeid(from.exchangeid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlExchangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlExchangeReq::CopyFrom(const TActTreasureBowlExchangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlExchangeReq::IsInitialized() const {

  return true;
}

void TActTreasureBowlExchangeReq::Swap(TActTreasureBowlExchangeReq* other) {
  if (other != this) {
    std::swap(exchangeid_, other->exchangeid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlExchangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlExchangeReq_descriptor_;
  metadata.reflection = TActTreasureBowlExchangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlRecvRewardReq::kRewardIdFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlRecvRewardReq::TActTreasureBowlRecvRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlRecvRewardReq)
}

void TActTreasureBowlRecvRewardReq::InitAsDefaultInstance() {
}

TActTreasureBowlRecvRewardReq::TActTreasureBowlRecvRewardReq(const TActTreasureBowlRecvRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlRecvRewardReq)
}

void TActTreasureBowlRecvRewardReq::SharedCtor() {
  _cached_size_ = 0;
  rewardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlRecvRewardReq::~TActTreasureBowlRecvRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlRecvRewardReq)
  SharedDtor();
}

void TActTreasureBowlRecvRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlRecvRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlRecvRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlRecvRewardReq_descriptor_;
}

const TActTreasureBowlRecvRewardReq& TActTreasureBowlRecvRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlRecvRewardReq* TActTreasureBowlRecvRewardReq::default_instance_ = NULL;

TActTreasureBowlRecvRewardReq* TActTreasureBowlRecvRewardReq::New() const {
  return new TActTreasureBowlRecvRewardReq;
}

void TActTreasureBowlRecvRewardReq::Clear() {
  rewardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlRecvRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlRecvRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RewardId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlRecvRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlRecvRewardReq)
  return false;
#undef DO_
}

void TActTreasureBowlRecvRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlRecvRewardReq)
  // optional uint32 RewardId = 1;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rewardid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlRecvRewardReq)
}

::google::protobuf::uint8* TActTreasureBowlRecvRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlRecvRewardReq)
  // optional uint32 RewardId = 1;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rewardid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlRecvRewardReq)
  return target;
}

int TActTreasureBowlRecvRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RewardId = 1;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlRecvRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlRecvRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlRecvRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlRecvRewardReq::MergeFrom(const TActTreasureBowlRecvRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlRecvRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlRecvRewardReq::CopyFrom(const TActTreasureBowlRecvRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlRecvRewardReq::IsInitialized() const {

  return true;
}

void TActTreasureBowlRecvRewardReq::Swap(TActTreasureBowlRecvRewardReq* other) {
  if (other != this) {
    std::swap(rewardid_, other->rewardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlRecvRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlRecvRewardReq_descriptor_;
  metadata.reflection = TActTreasureBowlRecvRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTreasureBowlPackageNotify::kArrPackageInfoFieldNumber;
#endif  // !_MSC_VER

TActTreasureBowlPackageNotify::TActTreasureBowlPackageNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTreasureBowlPackageNotify)
}

void TActTreasureBowlPackageNotify::InitAsDefaultInstance() {
}

TActTreasureBowlPackageNotify::TActTreasureBowlPackageNotify(const TActTreasureBowlPackageNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTreasureBowlPackageNotify)
}

void TActTreasureBowlPackageNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTreasureBowlPackageNotify::~TActTreasureBowlPackageNotify() {
  // @@protoc_insertion_point(destructor:pb.TActTreasureBowlPackageNotify)
  SharedDtor();
}

void TActTreasureBowlPackageNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTreasureBowlPackageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTreasureBowlPackageNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTreasureBowlPackageNotify_descriptor_;
}

const TActTreasureBowlPackageNotify& TActTreasureBowlPackageNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTreasureBowl_2eproto();
  return *default_instance_;
}

TActTreasureBowlPackageNotify* TActTreasureBowlPackageNotify::default_instance_ = NULL;

TActTreasureBowlPackageNotify* TActTreasureBowlPackageNotify::New() const {
  return new TActTreasureBowlPackageNotify;
}

void TActTreasureBowlPackageNotify::Clear() {
  arrpackageinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTreasureBowlPackageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTreasureBowlPackageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrPackageInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrpackageinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrPackageInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTreasureBowlPackageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTreasureBowlPackageNotify)
  return false;
#undef DO_
}

void TActTreasureBowlPackageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTreasureBowlPackageNotify)
  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 1;
  for (int i = 0; i < this->arrpackageinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrpackageinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTreasureBowlPackageNotify)
}

::google::protobuf::uint8* TActTreasureBowlPackageNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTreasureBowlPackageNotify)
  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 1;
  for (int i = 0; i < this->arrpackageinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrpackageinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTreasureBowlPackageNotify)
  return target;
}

int TActTreasureBowlPackageNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActTreasureBowlPackageInfo ArrPackageInfo = 1;
  total_size += 1 * this->arrpackageinfo_size();
  for (int i = 0; i < this->arrpackageinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrpackageinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTreasureBowlPackageNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTreasureBowlPackageNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTreasureBowlPackageNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTreasureBowlPackageNotify::MergeFrom(const TActTreasureBowlPackageNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrpackageinfo_.MergeFrom(from.arrpackageinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTreasureBowlPackageNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTreasureBowlPackageNotify::CopyFrom(const TActTreasureBowlPackageNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTreasureBowlPackageNotify::IsInitialized() const {

  return true;
}

void TActTreasureBowlPackageNotify::Swap(TActTreasureBowlPackageNotify* other) {
  if (other != this) {
    arrpackageinfo_.Swap(&other->arrpackageinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTreasureBowlPackageNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTreasureBowlPackageNotify_descriptor_;
  metadata.reflection = TActTreasureBowlPackageNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
