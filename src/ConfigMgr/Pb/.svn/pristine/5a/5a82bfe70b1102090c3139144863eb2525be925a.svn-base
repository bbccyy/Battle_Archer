// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DaySign.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/DaySign.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TDaySignGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDaySignGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDaySignGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDaySignGetRewardReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fDaySign_2eproto() {
  protobuf_AddDesc_net_2fDaySign_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/DaySign.proto");
  GOOGLE_CHECK(file != NULL);
  TDaySignGetInfoRsp_descriptor_ = file->message_type(0);
  static const int TDaySignGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetInfoRsp, accudaynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetInfoRsp, arrrewardday_),
  };
  TDaySignGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDaySignGetInfoRsp_descriptor_,
      TDaySignGetInfoRsp::default_instance_,
      TDaySignGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDaySignGetInfoRsp));
  TDaySignGetRewardReq_descriptor_ = file->message_type(1);
  static const int TDaySignGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetRewardReq, day_),
  };
  TDaySignGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDaySignGetRewardReq_descriptor_,
      TDaySignGetRewardReq::default_instance_,
      TDaySignGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDaySignGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDaySignGetRewardReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fDaySign_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDaySignGetInfoRsp_descriptor_, &TDaySignGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDaySignGetRewardReq_descriptor_, &TDaySignGetRewardReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fDaySign_2eproto() {
  delete TDaySignGetInfoRsp::default_instance_;
  delete TDaySignGetInfoRsp_reflection_;
  delete TDaySignGetRewardReq::default_instance_;
  delete TDaySignGetRewardReq_reflection_;
}

void protobuf_AddDesc_net_2fDaySign_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021net/DaySign.proto\022\002pb\">\n\022TDaySignGetIn"
    "foRsp\022\022\n\nAccuDayNum\030\001 \001(\r\022\024\n\014arrRewardDa"
    "y\030\002 \003(\r\"#\n\024TDaySignGetRewardReq\022\013\n\003Day\030\001"
    " \001(\r", 124);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/DaySign.proto", &protobuf_RegisterTypes);
  TDaySignGetInfoRsp::default_instance_ = new TDaySignGetInfoRsp();
  TDaySignGetRewardReq::default_instance_ = new TDaySignGetRewardReq();
  TDaySignGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TDaySignGetRewardReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fDaySign_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fDaySign_2eproto {
  StaticDescriptorInitializer_net_2fDaySign_2eproto() {
    protobuf_AddDesc_net_2fDaySign_2eproto();
  }
} static_descriptor_initializer_net_2fDaySign_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TDaySignGetInfoRsp::kAccuDayNumFieldNumber;
const int TDaySignGetInfoRsp::kArrRewardDayFieldNumber;
#endif  // !_MSC_VER

TDaySignGetInfoRsp::TDaySignGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDaySignGetInfoRsp)
}

void TDaySignGetInfoRsp::InitAsDefaultInstance() {
}

TDaySignGetInfoRsp::TDaySignGetInfoRsp(const TDaySignGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDaySignGetInfoRsp)
}

void TDaySignGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  accudaynum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDaySignGetInfoRsp::~TDaySignGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TDaySignGetInfoRsp)
  SharedDtor();
}

void TDaySignGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDaySignGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDaySignGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDaySignGetInfoRsp_descriptor_;
}

const TDaySignGetInfoRsp& TDaySignGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDaySign_2eproto();
  return *default_instance_;
}

TDaySignGetInfoRsp* TDaySignGetInfoRsp::default_instance_ = NULL;

TDaySignGetInfoRsp* TDaySignGetInfoRsp::New() const {
  return new TDaySignGetInfoRsp;
}

void TDaySignGetInfoRsp::Clear() {
  accudaynum_ = 0u;
  arrrewardday_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDaySignGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDaySignGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AccuDayNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accudaynum_)));
          set_has_accudaynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_arrRewardDay;
        break;
      }

      // repeated uint32 arrRewardDay = 2;
      case 2: {
        if (tag == 16) {
         parse_arrRewardDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arrrewardday())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrrewardday())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_arrRewardDay;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDaySignGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDaySignGetInfoRsp)
  return false;
#undef DO_
}

void TDaySignGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDaySignGetInfoRsp)
  // optional uint32 AccuDayNum = 1;
  if (has_accudaynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accudaynum(), output);
  }

  // repeated uint32 arrRewardDay = 2;
  for (int i = 0; i < this->arrrewardday_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arrrewardday(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDaySignGetInfoRsp)
}

::google::protobuf::uint8* TDaySignGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDaySignGetInfoRsp)
  // optional uint32 AccuDayNum = 1;
  if (has_accudaynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accudaynum(), target);
  }

  // repeated uint32 arrRewardDay = 2;
  for (int i = 0; i < this->arrrewardday_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arrrewardday(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDaySignGetInfoRsp)
  return target;
}

int TDaySignGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AccuDayNum = 1;
    if (has_accudaynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accudaynum());
    }

  }
  // repeated uint32 arrRewardDay = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrrewardday_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrrewardday(i));
    }
    total_size += 1 * this->arrrewardday_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDaySignGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDaySignGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDaySignGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDaySignGetInfoRsp::MergeFrom(const TDaySignGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardday_.MergeFrom(from.arrrewardday_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accudaynum()) {
      set_accudaynum(from.accudaynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDaySignGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDaySignGetInfoRsp::CopyFrom(const TDaySignGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDaySignGetInfoRsp::IsInitialized() const {

  return true;
}

void TDaySignGetInfoRsp::Swap(TDaySignGetInfoRsp* other) {
  if (other != this) {
    std::swap(accudaynum_, other->accudaynum_);
    arrrewardday_.Swap(&other->arrrewardday_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDaySignGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDaySignGetInfoRsp_descriptor_;
  metadata.reflection = TDaySignGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDaySignGetRewardReq::kDayFieldNumber;
#endif  // !_MSC_VER

TDaySignGetRewardReq::TDaySignGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDaySignGetRewardReq)
}

void TDaySignGetRewardReq::InitAsDefaultInstance() {
}

TDaySignGetRewardReq::TDaySignGetRewardReq(const TDaySignGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDaySignGetRewardReq)
}

void TDaySignGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDaySignGetRewardReq::~TDaySignGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TDaySignGetRewardReq)
  SharedDtor();
}

void TDaySignGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDaySignGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDaySignGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDaySignGetRewardReq_descriptor_;
}

const TDaySignGetRewardReq& TDaySignGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDaySign_2eproto();
  return *default_instance_;
}

TDaySignGetRewardReq* TDaySignGetRewardReq::default_instance_ = NULL;

TDaySignGetRewardReq* TDaySignGetRewardReq::New() const {
  return new TDaySignGetRewardReq;
}

void TDaySignGetRewardReq::Clear() {
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDaySignGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDaySignGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDaySignGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDaySignGetRewardReq)
  return false;
#undef DO_
}

void TDaySignGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDaySignGetRewardReq)
  // optional uint32 Day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDaySignGetRewardReq)
}

::google::protobuf::uint8* TDaySignGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDaySignGetRewardReq)
  // optional uint32 Day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDaySignGetRewardReq)
  return target;
}

int TDaySignGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDaySignGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDaySignGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDaySignGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDaySignGetRewardReq::MergeFrom(const TDaySignGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDaySignGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDaySignGetRewardReq::CopyFrom(const TDaySignGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDaySignGetRewardReq::IsInitialized() const {

  return true;
}

void TDaySignGetRewardReq::Swap(TDaySignGetRewardReq* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDaySignGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDaySignGetRewardReq_descriptor_;
  metadata.reflection = TDaySignGetRewardReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
