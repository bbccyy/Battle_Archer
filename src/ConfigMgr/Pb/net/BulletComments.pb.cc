// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BulletComments.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/BulletComments.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TBulletCommentsGetCommentsInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBulletCommentsGetCommentsInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBulletCommentsGetCommentsInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBulletCommentsGetCommentsInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBulletCommentsSendBulletCommentReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBulletCommentsSendBulletCommentReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fBulletComments_2eproto() {
  protobuf_AddDesc_net_2fBulletComments_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/BulletComments.proto");
  GOOGLE_CHECK(file != NULL);
  TBulletCommentsGetCommentsInfoReq_descriptor_ = file->message_type(0);
  static const int TBulletCommentsGetCommentsInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoReq, scenetid_),
  };
  TBulletCommentsGetCommentsInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBulletCommentsGetCommentsInfoReq_descriptor_,
      TBulletCommentsGetCommentsInfoReq::default_instance_,
      TBulletCommentsGetCommentsInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBulletCommentsGetCommentsInfoReq));
  TBulletCommentsGetCommentsInfoRsp_descriptor_ = file->message_type(1);
  static const int TBulletCommentsGetCommentsInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoRsp, commentarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoRsp, lastsendtime_),
  };
  TBulletCommentsGetCommentsInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBulletCommentsGetCommentsInfoRsp_descriptor_,
      TBulletCommentsGetCommentsInfoRsp::default_instance_,
      TBulletCommentsGetCommentsInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsGetCommentsInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBulletCommentsGetCommentsInfoRsp));
  TBulletCommentsSendBulletCommentReq_descriptor_ = file->message_type(2);
  static const int TBulletCommentsSendBulletCommentReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsSendBulletCommentReq, scenetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsSendBulletCommentReq, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsSendBulletCommentReq, comment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsSendBulletCommentReq, xpid_),
  };
  TBulletCommentsSendBulletCommentReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBulletCommentsSendBulletCommentReq_descriptor_,
      TBulletCommentsSendBulletCommentReq::default_instance_,
      TBulletCommentsSendBulletCommentReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsSendBulletCommentReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBulletCommentsSendBulletCommentReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBulletCommentsSendBulletCommentReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fBulletComments_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBulletCommentsGetCommentsInfoReq_descriptor_, &TBulletCommentsGetCommentsInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBulletCommentsGetCommentsInfoRsp_descriptor_, &TBulletCommentsGetCommentsInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBulletCommentsSendBulletCommentReq_descriptor_, &TBulletCommentsSendBulletCommentReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fBulletComments_2eproto() {
  delete TBulletCommentsGetCommentsInfoReq::default_instance_;
  delete TBulletCommentsGetCommentsInfoReq_reflection_;
  delete TBulletCommentsGetCommentsInfoRsp::default_instance_;
  delete TBulletCommentsGetCommentsInfoRsp_reflection_;
  delete TBulletCommentsSendBulletCommentReq::default_instance_;
  delete TBulletCommentsSendBulletCommentReq_reflection_;
}

void protobuf_AddDesc_net_2fBulletComments_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030net/BulletComments.proto\022\002pb\"5\n!TBulle"
    "tCommentsGetCommentsInfoReq\022\020\n\010SceneTid\030"
    "\001 \001(\r\"M\n!TBulletCommentsGetCommentsInfoR"
    "sp\022\022\n\nCommentArr\030\001 \003(\t\022\024\n\014LastSendTime\030\002"
    " \001(\004\"c\n#TBulletCommentsSendBulletComment"
    "Req\022\020\n\010SceneTid\030\001 \001(\r\022\013\n\003Uid\030\002 \001(\004\022\017\n\007Co"
    "mment\030\003 \001(\t\022\014\n\004Xpid\030\004 \001(\t", 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/BulletComments.proto", &protobuf_RegisterTypes);
  TBulletCommentsGetCommentsInfoReq::default_instance_ = new TBulletCommentsGetCommentsInfoReq();
  TBulletCommentsGetCommentsInfoRsp::default_instance_ = new TBulletCommentsGetCommentsInfoRsp();
  TBulletCommentsSendBulletCommentReq::default_instance_ = new TBulletCommentsSendBulletCommentReq();
  TBulletCommentsGetCommentsInfoReq::default_instance_->InitAsDefaultInstance();
  TBulletCommentsGetCommentsInfoRsp::default_instance_->InitAsDefaultInstance();
  TBulletCommentsSendBulletCommentReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fBulletComments_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fBulletComments_2eproto {
  StaticDescriptorInitializer_net_2fBulletComments_2eproto() {
    protobuf_AddDesc_net_2fBulletComments_2eproto();
  }
} static_descriptor_initializer_net_2fBulletComments_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TBulletCommentsGetCommentsInfoReq::kSceneTidFieldNumber;
#endif  // !_MSC_VER

TBulletCommentsGetCommentsInfoReq::TBulletCommentsGetCommentsInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBulletCommentsGetCommentsInfoReq)
}

void TBulletCommentsGetCommentsInfoReq::InitAsDefaultInstance() {
}

TBulletCommentsGetCommentsInfoReq::TBulletCommentsGetCommentsInfoReq(const TBulletCommentsGetCommentsInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBulletCommentsGetCommentsInfoReq)
}

void TBulletCommentsGetCommentsInfoReq::SharedCtor() {
  _cached_size_ = 0;
  scenetid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBulletCommentsGetCommentsInfoReq::~TBulletCommentsGetCommentsInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TBulletCommentsGetCommentsInfoReq)
  SharedDtor();
}

void TBulletCommentsGetCommentsInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBulletCommentsGetCommentsInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBulletCommentsGetCommentsInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBulletCommentsGetCommentsInfoReq_descriptor_;
}

const TBulletCommentsGetCommentsInfoReq& TBulletCommentsGetCommentsInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBulletComments_2eproto();
  return *default_instance_;
}

TBulletCommentsGetCommentsInfoReq* TBulletCommentsGetCommentsInfoReq::default_instance_ = NULL;

TBulletCommentsGetCommentsInfoReq* TBulletCommentsGetCommentsInfoReq::New() const {
  return new TBulletCommentsGetCommentsInfoReq;
}

void TBulletCommentsGetCommentsInfoReq::Clear() {
  scenetid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBulletCommentsGetCommentsInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBulletCommentsGetCommentsInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SceneTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scenetid_)));
          set_has_scenetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBulletCommentsGetCommentsInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBulletCommentsGetCommentsInfoReq)
  return false;
#undef DO_
}

void TBulletCommentsGetCommentsInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBulletCommentsGetCommentsInfoReq)
  // optional uint32 SceneTid = 1;
  if (has_scenetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scenetid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBulletCommentsGetCommentsInfoReq)
}

::google::protobuf::uint8* TBulletCommentsGetCommentsInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBulletCommentsGetCommentsInfoReq)
  // optional uint32 SceneTid = 1;
  if (has_scenetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scenetid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBulletCommentsGetCommentsInfoReq)
  return target;
}

int TBulletCommentsGetCommentsInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SceneTid = 1;
    if (has_scenetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scenetid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBulletCommentsGetCommentsInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBulletCommentsGetCommentsInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBulletCommentsGetCommentsInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBulletCommentsGetCommentsInfoReq::MergeFrom(const TBulletCommentsGetCommentsInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scenetid()) {
      set_scenetid(from.scenetid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBulletCommentsGetCommentsInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBulletCommentsGetCommentsInfoReq::CopyFrom(const TBulletCommentsGetCommentsInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBulletCommentsGetCommentsInfoReq::IsInitialized() const {

  return true;
}

void TBulletCommentsGetCommentsInfoReq::Swap(TBulletCommentsGetCommentsInfoReq* other) {
  if (other != this) {
    std::swap(scenetid_, other->scenetid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBulletCommentsGetCommentsInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBulletCommentsGetCommentsInfoReq_descriptor_;
  metadata.reflection = TBulletCommentsGetCommentsInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBulletCommentsGetCommentsInfoRsp::kCommentArrFieldNumber;
const int TBulletCommentsGetCommentsInfoRsp::kLastSendTimeFieldNumber;
#endif  // !_MSC_VER

TBulletCommentsGetCommentsInfoRsp::TBulletCommentsGetCommentsInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBulletCommentsGetCommentsInfoRsp)
}

void TBulletCommentsGetCommentsInfoRsp::InitAsDefaultInstance() {
}

TBulletCommentsGetCommentsInfoRsp::TBulletCommentsGetCommentsInfoRsp(const TBulletCommentsGetCommentsInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBulletCommentsGetCommentsInfoRsp)
}

void TBulletCommentsGetCommentsInfoRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lastsendtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBulletCommentsGetCommentsInfoRsp::~TBulletCommentsGetCommentsInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TBulletCommentsGetCommentsInfoRsp)
  SharedDtor();
}

void TBulletCommentsGetCommentsInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBulletCommentsGetCommentsInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBulletCommentsGetCommentsInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBulletCommentsGetCommentsInfoRsp_descriptor_;
}

const TBulletCommentsGetCommentsInfoRsp& TBulletCommentsGetCommentsInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBulletComments_2eproto();
  return *default_instance_;
}

TBulletCommentsGetCommentsInfoRsp* TBulletCommentsGetCommentsInfoRsp::default_instance_ = NULL;

TBulletCommentsGetCommentsInfoRsp* TBulletCommentsGetCommentsInfoRsp::New() const {
  return new TBulletCommentsGetCommentsInfoRsp;
}

void TBulletCommentsGetCommentsInfoRsp::Clear() {
  lastsendtime_ = GOOGLE_ULONGLONG(0);
  commentarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBulletCommentsGetCommentsInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBulletCommentsGetCommentsInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string CommentArr = 1;
      case 1: {
        if (tag == 10) {
         parse_CommentArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_commentarr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commentarr(this->commentarr_size() - 1).data(),
            this->commentarr(this->commentarr_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commentarr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_CommentArr;
        if (input->ExpectTag(16)) goto parse_LastSendTime;
        break;
      }

      // optional uint64 LastSendTime = 2;
      case 2: {
        if (tag == 16) {
         parse_LastSendTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastsendtime_)));
          set_has_lastsendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBulletCommentsGetCommentsInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBulletCommentsGetCommentsInfoRsp)
  return false;
#undef DO_
}

void TBulletCommentsGetCommentsInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBulletCommentsGetCommentsInfoRsp)
  // repeated string CommentArr = 1;
  for (int i = 0; i < this->commentarr_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->commentarr(i).data(), this->commentarr(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "commentarr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->commentarr(i), output);
  }

  // optional uint64 LastSendTime = 2;
  if (has_lastsendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lastsendtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBulletCommentsGetCommentsInfoRsp)
}

::google::protobuf::uint8* TBulletCommentsGetCommentsInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBulletCommentsGetCommentsInfoRsp)
  // repeated string CommentArr = 1;
  for (int i = 0; i < this->commentarr_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commentarr(i).data(), this->commentarr(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commentarr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->commentarr(i), target);
  }

  // optional uint64 LastSendTime = 2;
  if (has_lastsendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lastsendtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBulletCommentsGetCommentsInfoRsp)
  return target;
}

int TBulletCommentsGetCommentsInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint64 LastSendTime = 2;
    if (has_lastsendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lastsendtime());
    }

  }
  // repeated string CommentArr = 1;
  total_size += 1 * this->commentarr_size();
  for (int i = 0; i < this->commentarr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->commentarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBulletCommentsGetCommentsInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBulletCommentsGetCommentsInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBulletCommentsGetCommentsInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBulletCommentsGetCommentsInfoRsp::MergeFrom(const TBulletCommentsGetCommentsInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  commentarr_.MergeFrom(from.commentarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_lastsendtime()) {
      set_lastsendtime(from.lastsendtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBulletCommentsGetCommentsInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBulletCommentsGetCommentsInfoRsp::CopyFrom(const TBulletCommentsGetCommentsInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBulletCommentsGetCommentsInfoRsp::IsInitialized() const {

  return true;
}

void TBulletCommentsGetCommentsInfoRsp::Swap(TBulletCommentsGetCommentsInfoRsp* other) {
  if (other != this) {
    commentarr_.Swap(&other->commentarr_);
    std::swap(lastsendtime_, other->lastsendtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBulletCommentsGetCommentsInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBulletCommentsGetCommentsInfoRsp_descriptor_;
  metadata.reflection = TBulletCommentsGetCommentsInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBulletCommentsSendBulletCommentReq::kSceneTidFieldNumber;
const int TBulletCommentsSendBulletCommentReq::kUidFieldNumber;
const int TBulletCommentsSendBulletCommentReq::kCommentFieldNumber;
const int TBulletCommentsSendBulletCommentReq::kXpidFieldNumber;
#endif  // !_MSC_VER

TBulletCommentsSendBulletCommentReq::TBulletCommentsSendBulletCommentReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBulletCommentsSendBulletCommentReq)
}

void TBulletCommentsSendBulletCommentReq::InitAsDefaultInstance() {
}

TBulletCommentsSendBulletCommentReq::TBulletCommentsSendBulletCommentReq(const TBulletCommentsSendBulletCommentReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBulletCommentsSendBulletCommentReq)
}

void TBulletCommentsSendBulletCommentReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scenetid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBulletCommentsSendBulletCommentReq::~TBulletCommentsSendBulletCommentReq() {
  // @@protoc_insertion_point(destructor:pb.TBulletCommentsSendBulletCommentReq)
  SharedDtor();
}

void TBulletCommentsSendBulletCommentReq::SharedDtor() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (xpid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete xpid_;
  }
  if (this != default_instance_) {
  }
}

void TBulletCommentsSendBulletCommentReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBulletCommentsSendBulletCommentReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBulletCommentsSendBulletCommentReq_descriptor_;
}

const TBulletCommentsSendBulletCommentReq& TBulletCommentsSendBulletCommentReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBulletComments_2eproto();
  return *default_instance_;
}

TBulletCommentsSendBulletCommentReq* TBulletCommentsSendBulletCommentReq::default_instance_ = NULL;

TBulletCommentsSendBulletCommentReq* TBulletCommentsSendBulletCommentReq::New() const {
  return new TBulletCommentsSendBulletCommentReq;
}

void TBulletCommentsSendBulletCommentReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    scenetid_ = 0u;
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_comment()) {
      if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        comment_->clear();
      }
    }
    if (has_xpid()) {
      if (xpid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        xpid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBulletCommentsSendBulletCommentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBulletCommentsSendBulletCommentReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SceneTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scenetid_)));
          set_has_scenetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 2;
      case 2: {
        if (tag == 16) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Comment;
        break;
      }

      // optional string Comment = 3;
      case 3: {
        if (tag == 26) {
         parse_Comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Xpid;
        break;
      }

      // optional string Xpid = 4;
      case 4: {
        if (tag == 34) {
         parse_Xpid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xpid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->xpid().data(), this->xpid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xpid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBulletCommentsSendBulletCommentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBulletCommentsSendBulletCommentReq)
  return false;
#undef DO_
}

void TBulletCommentsSendBulletCommentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBulletCommentsSendBulletCommentReq)
  // optional uint32 SceneTid = 1;
  if (has_scenetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scenetid(), output);
  }

  // optional uint64 Uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // optional string Comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->comment(), output);
  }

  // optional string Xpid = 4;
  if (has_xpid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xpid().data(), this->xpid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xpid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->xpid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBulletCommentsSendBulletCommentReq)
}

::google::protobuf::uint8* TBulletCommentsSendBulletCommentReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBulletCommentsSendBulletCommentReq)
  // optional uint32 SceneTid = 1;
  if (has_scenetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scenetid(), target);
  }

  // optional uint64 Uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // optional string Comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->comment(), target);
  }

  // optional string Xpid = 4;
  if (has_xpid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xpid().data(), this->xpid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xpid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->xpid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBulletCommentsSendBulletCommentReq)
  return target;
}

int TBulletCommentsSendBulletCommentReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SceneTid = 1;
    if (has_scenetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scenetid());
    }

    // optional uint64 Uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string Comment = 3;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

    // optional string Xpid = 4;
    if (has_xpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xpid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBulletCommentsSendBulletCommentReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBulletCommentsSendBulletCommentReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBulletCommentsSendBulletCommentReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBulletCommentsSendBulletCommentReq::MergeFrom(const TBulletCommentsSendBulletCommentReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scenetid()) {
      set_scenetid(from.scenetid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_comment()) {
      set_comment(from.comment());
    }
    if (from.has_xpid()) {
      set_xpid(from.xpid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBulletCommentsSendBulletCommentReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBulletCommentsSendBulletCommentReq::CopyFrom(const TBulletCommentsSendBulletCommentReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBulletCommentsSendBulletCommentReq::IsInitialized() const {

  return true;
}

void TBulletCommentsSendBulletCommentReq::Swap(TBulletCommentsSendBulletCommentReq* other) {
  if (other != this) {
    std::swap(scenetid_, other->scenetid_);
    std::swap(uid_, other->uid_);
    std::swap(comment_, other->comment_);
    std::swap(xpid_, other->xpid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBulletCommentsSendBulletCommentReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBulletCommentsSendBulletCommentReq_descriptor_;
  metadata.reflection = TBulletCommentsSendBulletCommentReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
