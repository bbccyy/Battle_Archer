// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/Attributer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/Attributer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* TAttributeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TAttributeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSkillAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSkillAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* THaloData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THaloData_reflection_ = NULL;
const ::google::protobuf::Descriptor* THalo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THalo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSelf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSelf_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TModuleAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TModuleAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSquad_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSquad_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPositionArr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPositionArr_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EAttrSrc_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fAttributer_2eproto() {
  protobuf_AddDesc_module_2fAttributer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/Attributer.proto");
  GOOGLE_CHECK(file != NULL);
  TAttribute_descriptor_ = file->message_type(0);
  static const int TAttribute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttribute, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttribute, value_),
  };
  TAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAttribute_descriptor_,
      TAttribute::default_instance_,
      TAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAttribute));
  TAttributeInfo_descriptor_ = file->message_type(1);
  static const int TAttributeInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttributeInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttributeInfo, value_),
  };
  TAttributeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TAttributeInfo_descriptor_,
      TAttributeInfo::default_instance_,
      TAttributeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttributeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TAttributeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TAttributeInfo));
  TSkillAttribute_descriptor_ = file->message_type(2);
  static const int TSkillAttribute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkillAttribute, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkillAttribute, level_),
  };
  TSkillAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSkillAttribute_descriptor_,
      TSkillAttribute::default_instance_,
      TSkillAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkillAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkillAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSkillAttribute));
  THaloData_descriptor_ = file->message_type(3);
  static const int THaloData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THaloData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THaloData, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THaloData, halotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THaloData, param_),
  };
  THaloData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THaloData_descriptor_,
      THaloData::default_instance_,
      THaloData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THaloData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THaloData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THaloData));
  THalo_descriptor_ = file->message_type(4);
  static const int THalo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THalo, halodata_),
  };
  THalo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THalo_descriptor_,
      THalo::default_instance_,
      THalo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THalo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THalo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THalo));
  TSelf_descriptor_ = file->message_type(5);
  static const int TSelf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSelf, attr_),
  };
  TSelf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSelf_descriptor_,
      TSelf::default_instance_,
      TSelf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSelf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSelf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSelf));
  TSkill_descriptor_ = file->message_type(6);
  static const int TSkill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkill, skill_),
  };
  TSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSkill_descriptor_,
      TSkill::default_instance_,
      TSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSkill));
  THeroBaseInfo_descriptor_ = file->message_type(7);
  static const int THeroBaseInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, herolv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, advlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, basescale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, goldherobreaklv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, whitegoldbreaklv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, goldlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, whitegoldlv_),
  };
  THeroBaseInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroBaseInfo_descriptor_,
      THeroBaseInfo::default_instance_,
      THeroBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroBaseInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroBaseInfo));
  TModuleAttr_descriptor_ = file->message_type(8);
  static const int TModuleAttr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, halo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, skills_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, fightforce_),
  };
  TModuleAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TModuleAttr_descriptor_,
      TModuleAttr::default_instance_,
      TModuleAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModuleAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TModuleAttr));
  TPosition_descriptor_ = file->message_type(9);
  static const int TPosition_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPosition, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPosition, heroinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPosition, data_),
  };
  TPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPosition_descriptor_,
      TPosition::default_instance_,
      TPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPosition));
  TSquad_descriptor_ = file->message_type(10);
  static const int TSquad_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, ghalo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, teamhalo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, squad_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, starter_),
  };
  TSquad_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSquad_descriptor_,
      TSquad::default_instance_,
      TSquad_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquad, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSquad));
  TPositionArr_descriptor_ = file->message_type(11);
  static const int TPositionArr_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPositionArr, squad_),
  };
  TPositionArr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPositionArr_descriptor_,
      TPositionArr::default_instance_,
      TPositionArr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPositionArr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPositionArr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPositionArr));
  EAttrSrc_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fAttributer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAttribute_descriptor_, &TAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TAttributeInfo_descriptor_, &TAttributeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSkillAttribute_descriptor_, &TSkillAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THaloData_descriptor_, &THaloData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THalo_descriptor_, &THalo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSelf_descriptor_, &TSelf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSkill_descriptor_, &TSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroBaseInfo_descriptor_, &THeroBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TModuleAttr_descriptor_, &TModuleAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPosition_descriptor_, &TPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSquad_descriptor_, &TSquad::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPositionArr_descriptor_, &TPositionArr::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fAttributer_2eproto() {
  delete TAttribute::default_instance_;
  delete TAttribute_reflection_;
  delete TAttributeInfo::default_instance_;
  delete TAttributeInfo_reflection_;
  delete TSkillAttribute::default_instance_;
  delete TSkillAttribute_reflection_;
  delete THaloData::default_instance_;
  delete THaloData_reflection_;
  delete THalo::default_instance_;
  delete THalo_reflection_;
  delete TSelf::default_instance_;
  delete TSelf_reflection_;
  delete TSkill::default_instance_;
  delete TSkill_reflection_;
  delete THeroBaseInfo::default_instance_;
  delete THeroBaseInfo_reflection_;
  delete TModuleAttr::default_instance_;
  delete TModuleAttr_reflection_;
  delete TPosition::default_instance_;
  delete TPosition_reflection_;
  delete TSquad::default_instance_;
  delete TSquad_reflection_;
  delete TPositionArr::default_instance_;
  delete TPositionArr_reflection_;
}

void protobuf_AddDesc_module_2fAttributer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027module/Attributer.proto\022\002pb\"\'\n\nTAttrib"
    "ute\022\n\n\002Id\030\001 \002(\r\022\r\n\005Value\030\002 \002(\004\"+\n\016TAttri"
    "buteInfo\022\n\n\002Id\030\001 \002(\r\022\r\n\005Value\030\002 \002(\003\",\n\017T"
    "SkillAttribute\022\n\n\002Id\030\001 \002(\r\022\r\n\005Level\030\002 \002("
    "\r\"X\n\tTHaloData\022\014\n\004Name\030\001 \002(\r\022\034\n\004Attr\030\002 \002"
    "(\0132\016.pb.TAttribute\022\020\n\010HaloType\030\003 \002(\r\022\r\n\005"
    "Param\030\004 \003(\r\"(\n\005THalo\022\037\n\010HaloData\030\001 \003(\0132\r"
    ".pb.THaloData\"%\n\005TSelf\022\034\n\004Attr\030\001 \003(\0132\016.p"
    "b.TAttribute\",\n\006TSkill\022\"\n\005Skill\030\001 \003(\0132\023."
    "pb.TSkillAttribute\"\355\001\n\rTHeroBaseInfo\022\014\n\004"
    "Htid\030\001 \001(\r\022\013\n\003Hid\030\002 \001(\r\022\016\n\006HeroLv\030\003 \001(\r\022"
    "\031\n\005Skill\030\004 \001(\0132\n.pb.TSkill\022\016\n\006Weight\030\005 \001"
    "(\r\022\014\n\004Star\030\006 \001(\r\022\r\n\005AdvLv\030\007 \001(\r\022\021\n\tBaseS"
    "cale\030\010 \001(\r\022\027\n\017GoldHeroBreakLv\030\t \001(\r\022\030\n\020W"
    "hiteGoldBreakLv\030\n \001(\r\022\016\n\006GoldLv\030\013 \001(\r\022\023\n"
    "\013WhiteGoldLv\030\014 \001(\r\"\206\001\n\013TModuleAttr\022\014\n\004Na"
    "me\030\001 \002(\r\022\027\n\004Self\030\002 \001(\0132\t.pb.TSelf\022\027\n\004Hal"
    "o\030\003 \001(\0132\t.pb.THalo\022#\n\006Skills\030\004 \003(\0132\023.pb."
    "TSkillAttribute\022\022\n\nFightforce\030\005 \001(\004\"\\\n\tT"
    "Position\022\013\n\003Pos\030\001 \001(\r\022#\n\010HeroInfo\030\002 \001(\0132"
    "\021.pb.THeroBaseInfo\022\035\n\004Data\030\003 \003(\0132\017.pb.TM"
    "oduleAttr\"{\n\006TSquad\022\030\n\005GHalo\030\001 \001(\0132\t.pb."
    "THalo\022\033\n\010TeamHalo\030\002 \001(\0132\t.pb.THalo\022\034\n\005Sq"
    "uad\030\003 \003(\0132\r.pb.TPosition\022\013\n\003Uid\030\004 \001(\004\022\017\n"
    "\007Starter\030\005 \001(\r\",\n\014TPositionArr\022\034\n\005Squad\030"
    "\001 \003(\0132\r.pb.TPosition*\364\006\n\010EAttrSrc\022\021\n\rEAt"
    "trTeamHalo\020\001\022\020\n\014EAttrFashion\020\002\022\016\n\nEAttrM"
    "ount\020\003\022\020\n\014EAttrDestiny\020\004\022\016\n\nEAttrTitle\020\005"
    "\022\025\n\021EAttrIllustration\020\006\022\021\n\rEAttrBaseHero"
    "\020\007\022\016\n\nEAttrFavor\020\010\022\r\n\tEAttrComb\020\t\022\014\n\010EAt"
    "trAdv\020\n\022\r\n\tEAttrStar\020\013\022\014\n\010EAttrArm\020\014\022\022\n\016"
    "EAttrAccessory\020\r\022\r\n\tEAttrSoul\020\016\022\r\n\tEAttr"
    "Excl\020\017\022\016\n\nEAttrEnmst\020\020\022\r\n\tEAttrSuit\020\021\022\016\n"
    "\nEAttrExtra\020\022\022\025\n\021EAttrMythCreature\020\023\022\021\n\r"
    "EAttrHallStar\020\024\022\021\n\rEAttrGoldHero\020\025\022\027\n\023EA"
    "ttrTreasureSystem\020\026\022\026\n\022EAttrGoldHeroBrea"
    "k\020\027\022\r\n\tEAttrSilk\020\030\022\022\n\016EAttrHeroTitle\020\031\022\026"
    "\n\022EAttrHeroWhiteGold\020\032\022\033\n\027EAttrWhiteGold"
    "HeroBreak\020\033\022\022\n\016EAttrArmCarver\020\034\022\026\n\022EAttr"
    "InnerAlliance\020\035\022\031\n\025EAttrOfficialPosition"
    "\020\036\022\021\n\rEAttrHeroPlug\020\037\022\020\n\014EAttrBarrack\020 \022"
    "\020\n\014EAttrGodHero\020!\022\027\n\023EAttrGodHeroInherit"
    "\020\"\022\022\n\016EAttrWarRiding\020#\022\032\n\026EAttrWarRiding"
    "HandBook\020$\022\027\n\023EAttrHeroPurpleGold\020%\022\021\n\rE"
    "AttrCardBuff\020&\022\023\n\017EAttrFamousBook\020\'\022\021\n\rE"
    "AttrArtifact\020(\022\025\n\021EAttrDivineTroops\020)\022\035\n"
    "\031EAttrDivineTroopsHandBook\020*\022\022\n\016EAttrFor"
    "ceSoul\020+\022\021\n\rEAttrRealBody\020,", 1907);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/Attributer.proto", &protobuf_RegisterTypes);
  TAttribute::default_instance_ = new TAttribute();
  TAttributeInfo::default_instance_ = new TAttributeInfo();
  TSkillAttribute::default_instance_ = new TSkillAttribute();
  THaloData::default_instance_ = new THaloData();
  THalo::default_instance_ = new THalo();
  TSelf::default_instance_ = new TSelf();
  TSkill::default_instance_ = new TSkill();
  THeroBaseInfo::default_instance_ = new THeroBaseInfo();
  TModuleAttr::default_instance_ = new TModuleAttr();
  TPosition::default_instance_ = new TPosition();
  TSquad::default_instance_ = new TSquad();
  TPositionArr::default_instance_ = new TPositionArr();
  TAttribute::default_instance_->InitAsDefaultInstance();
  TAttributeInfo::default_instance_->InitAsDefaultInstance();
  TSkillAttribute::default_instance_->InitAsDefaultInstance();
  THaloData::default_instance_->InitAsDefaultInstance();
  THalo::default_instance_->InitAsDefaultInstance();
  TSelf::default_instance_->InitAsDefaultInstance();
  TSkill::default_instance_->InitAsDefaultInstance();
  THeroBaseInfo::default_instance_->InitAsDefaultInstance();
  TModuleAttr::default_instance_->InitAsDefaultInstance();
  TPosition::default_instance_->InitAsDefaultInstance();
  TSquad::default_instance_->InitAsDefaultInstance();
  TPositionArr::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fAttributer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fAttributer_2eproto {
  StaticDescriptorInitializer_module_2fAttributer_2eproto() {
    protobuf_AddDesc_module_2fAttributer_2eproto();
  }
} static_descriptor_initializer_module_2fAttributer_2eproto_;
const ::google::protobuf::EnumDescriptor* EAttrSrc_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EAttrSrc_descriptor_;
}
bool EAttrSrc_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TAttribute::kIdFieldNumber;
const int TAttribute::kValueFieldNumber;
#endif  // !_MSC_VER

TAttribute::TAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAttribute)
}

void TAttribute::InitAsDefaultInstance() {
}

TAttribute::TAttribute(const TAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAttribute)
}

void TAttribute::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  value_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAttribute::~TAttribute() {
  // @@protoc_insertion_point(destructor:pb.TAttribute)
  SharedDtor();
}

void TAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAttribute_descriptor_;
}

const TAttribute& TAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TAttribute* TAttribute::default_instance_ = NULL;

TAttribute* TAttribute::New() const {
  return new TAttribute;
}

void TAttribute::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAttribute*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(value_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Value;
        break;
      }

      // required uint64 Value = 2;
      case 2: {
        if (tag == 16) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAttribute)
  return false;
#undef DO_
}

void TAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAttribute)
  // required uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint64 Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAttribute)
}

::google::protobuf::uint8* TAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAttribute)
  // required uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint64 Value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAttribute)
  return target;
}

int TAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint64 Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAttribute::MergeFrom(const TAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAttribute::CopyFrom(const TAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TAttribute::Swap(TAttribute* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAttribute_descriptor_;
  metadata.reflection = TAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TAttributeInfo::kIdFieldNumber;
const int TAttributeInfo::kValueFieldNumber;
#endif  // !_MSC_VER

TAttributeInfo::TAttributeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TAttributeInfo)
}

void TAttributeInfo::InitAsDefaultInstance() {
}

TAttributeInfo::TAttributeInfo(const TAttributeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TAttributeInfo)
}

void TAttributeInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  value_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TAttributeInfo::~TAttributeInfo() {
  // @@protoc_insertion_point(destructor:pb.TAttributeInfo)
  SharedDtor();
}

void TAttributeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TAttributeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TAttributeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAttributeInfo_descriptor_;
}

const TAttributeInfo& TAttributeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TAttributeInfo* TAttributeInfo::default_instance_ = NULL;

TAttributeInfo* TAttributeInfo::New() const {
  return new TAttributeInfo;
}

void TAttributeInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TAttributeInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(value_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TAttributeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TAttributeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Value;
        break;
      }

      // required int64 Value = 2;
      case 2: {
        if (tag == 16) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TAttributeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TAttributeInfo)
  return false;
#undef DO_
}

void TAttributeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TAttributeInfo)
  // required uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required int64 Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TAttributeInfo)
}

::google::protobuf::uint8* TAttributeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TAttributeInfo)
  // required uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required int64 Value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TAttributeInfo)
  return target;
}

int TAttributeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required int64 Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TAttributeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TAttributeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TAttributeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TAttributeInfo::MergeFrom(const TAttributeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TAttributeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TAttributeInfo::CopyFrom(const TAttributeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAttributeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TAttributeInfo::Swap(TAttributeInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TAttributeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TAttributeInfo_descriptor_;
  metadata.reflection = TAttributeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSkillAttribute::kIdFieldNumber;
const int TSkillAttribute::kLevelFieldNumber;
#endif  // !_MSC_VER

TSkillAttribute::TSkillAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSkillAttribute)
}

void TSkillAttribute::InitAsDefaultInstance() {
}

TSkillAttribute::TSkillAttribute(const TSkillAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSkillAttribute)
}

void TSkillAttribute::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSkillAttribute::~TSkillAttribute() {
  // @@protoc_insertion_point(destructor:pb.TSkillAttribute)
  SharedDtor();
}

void TSkillAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSkillAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSkillAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSkillAttribute_descriptor_;
}

const TSkillAttribute& TSkillAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TSkillAttribute* TSkillAttribute::default_instance_ = NULL;

TSkillAttribute* TSkillAttribute::New() const {
  return new TSkillAttribute;
}

void TSkillAttribute::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSkillAttribute*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSkillAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSkillAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // required uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSkillAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSkillAttribute)
  return false;
#undef DO_
}

void TSkillAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSkillAttribute)
  // required uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSkillAttribute)
}

::google::protobuf::uint8* TSkillAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSkillAttribute)
  // required uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSkillAttribute)
  return target;
}

int TSkillAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSkillAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSkillAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSkillAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSkillAttribute::MergeFrom(const TSkillAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSkillAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSkillAttribute::CopyFrom(const TSkillAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSkillAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TSkillAttribute::Swap(TSkillAttribute* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSkillAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSkillAttribute_descriptor_;
  metadata.reflection = TSkillAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THaloData::kNameFieldNumber;
const int THaloData::kAttrFieldNumber;
const int THaloData::kHaloTypeFieldNumber;
const int THaloData::kParamFieldNumber;
#endif  // !_MSC_VER

THaloData::THaloData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THaloData)
}

void THaloData::InitAsDefaultInstance() {
  attr_ = const_cast< ::pb::TAttribute*>(&::pb::TAttribute::default_instance());
}

THaloData::THaloData(const THaloData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THaloData)
}

void THaloData::SharedCtor() {
  _cached_size_ = 0;
  name_ = 0u;
  attr_ = NULL;
  halotype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THaloData::~THaloData() {
  // @@protoc_insertion_point(destructor:pb.THaloData)
  SharedDtor();
}

void THaloData::SharedDtor() {
  if (this != default_instance_) {
    delete attr_;
  }
}

void THaloData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THaloData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THaloData_descriptor_;
}

const THaloData& THaloData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

THaloData* THaloData::default_instance_ = NULL;

THaloData* THaloData::New() const {
  return new THaloData;
}

void THaloData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THaloData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(name_, halotype_);
    if (has_attr()) {
      if (attr_ != NULL) attr_->::pb::TAttribute::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THaloData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THaloData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Name = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_)));
          set_has_name();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Attr;
        break;
      }

      // required .pb.TAttribute Attr = 2;
      case 2: {
        if (tag == 18) {
         parse_Attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HaloType;
        break;
      }

      // required uint32 HaloType = 3;
      case 3: {
        if (tag == 24) {
         parse_HaloType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &halotype_)));
          set_has_halotype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Param;
        break;
      }

      // repeated uint32 Param = 4;
      case 4: {
        if (tag == 32) {
         parse_Param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_param())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Param;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THaloData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THaloData)
  return false;
#undef DO_
}

void THaloData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THaloData)
  // required uint32 Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->name(), output);
  }

  // required .pb.TAttribute Attr = 2;
  if (has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(), output);
  }

  // required uint32 HaloType = 3;
  if (has_halotype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->halotype(), output);
  }

  // repeated uint32 Param = 4;
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->param(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THaloData)
}

::google::protobuf::uint8* THaloData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THaloData)
  // required uint32 Name = 1;
  if (has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->name(), target);
  }

  // required .pb.TAttribute Attr = 2;
  if (has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(), target);
  }

  // required uint32 HaloType = 3;
  if (has_halotype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->halotype(), target);
  }

  // repeated uint32 Param = 4;
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->param(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THaloData)
  return target;
}

int THaloData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->name());
    }

    // required .pb.TAttribute Attr = 2;
    if (has_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr());
    }

    // required uint32 HaloType = 3;
    if (has_halotype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->halotype());
    }

  }
  // repeated uint32 Param = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->param_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->param(i));
    }
    total_size += 1 * this->param_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THaloData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THaloData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THaloData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THaloData::MergeFrom(const THaloData& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_.MergeFrom(from.param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_attr()) {
      mutable_attr()->::pb::TAttribute::MergeFrom(from.attr());
    }
    if (from.has_halotype()) {
      set_halotype(from.halotype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THaloData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THaloData::CopyFrom(const THaloData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THaloData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_attr()) {
    if (!this->attr().IsInitialized()) return false;
  }
  return true;
}

void THaloData::Swap(THaloData* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(attr_, other->attr_);
    std::swap(halotype_, other->halotype_);
    param_.Swap(&other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THaloData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THaloData_descriptor_;
  metadata.reflection = THaloData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THalo::kHaloDataFieldNumber;
#endif  // !_MSC_VER

THalo::THalo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THalo)
}

void THalo::InitAsDefaultInstance() {
}

THalo::THalo(const THalo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THalo)
}

void THalo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THalo::~THalo() {
  // @@protoc_insertion_point(destructor:pb.THalo)
  SharedDtor();
}

void THalo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THalo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THalo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THalo_descriptor_;
}

const THalo& THalo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

THalo* THalo::default_instance_ = NULL;

THalo* THalo::New() const {
  return new THalo;
}

void THalo::Clear() {
  halodata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THalo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THalo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.THaloData HaloData = 1;
      case 1: {
        if (tag == 10) {
         parse_HaloData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_halodata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HaloData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THalo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THalo)
  return false;
#undef DO_
}

void THalo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THalo)
  // repeated .pb.THaloData HaloData = 1;
  for (int i = 0; i < this->halodata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->halodata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THalo)
}

::google::protobuf::uint8* THalo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THalo)
  // repeated .pb.THaloData HaloData = 1;
  for (int i = 0; i < this->halodata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->halodata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THalo)
  return target;
}

int THalo::ByteSize() const {
  int total_size = 0;

  // repeated .pb.THaloData HaloData = 1;
  total_size += 1 * this->halodata_size();
  for (int i = 0; i < this->halodata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->halodata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THalo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THalo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THalo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THalo::MergeFrom(const THalo& from) {
  GOOGLE_CHECK_NE(&from, this);
  halodata_.MergeFrom(from.halodata_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THalo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THalo::CopyFrom(const THalo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THalo::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->halodata())) return false;
  return true;
}

void THalo::Swap(THalo* other) {
  if (other != this) {
    halodata_.Swap(&other->halodata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THalo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THalo_descriptor_;
  metadata.reflection = THalo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSelf::kAttrFieldNumber;
#endif  // !_MSC_VER

TSelf::TSelf()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSelf)
}

void TSelf::InitAsDefaultInstance() {
}

TSelf::TSelf(const TSelf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSelf)
}

void TSelf::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSelf::~TSelf() {
  // @@protoc_insertion_point(destructor:pb.TSelf)
  SharedDtor();
}

void TSelf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSelf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSelf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSelf_descriptor_;
}

const TSelf& TSelf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TSelf* TSelf::default_instance_ = NULL;

TSelf* TSelf::New() const {
  return new TSelf;
}

void TSelf::Clear() {
  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSelf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSelf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TAttribute Attr = 1;
      case 1: {
        if (tag == 10) {
         parse_Attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Attr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSelf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSelf)
  return false;
#undef DO_
}

void TSelf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSelf)
  // repeated .pb.TAttribute Attr = 1;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSelf)
}

::google::protobuf::uint8* TSelf::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSelf)
  // repeated .pb.TAttribute Attr = 1;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSelf)
  return target;
}

int TSelf::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TAttribute Attr = 1;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSelf::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSelf* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSelf*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSelf::MergeFrom(const TSelf& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSelf::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSelf::CopyFrom(const TSelf& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSelf::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  return true;
}

void TSelf::Swap(TSelf* other) {
  if (other != this) {
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSelf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSelf_descriptor_;
  metadata.reflection = TSelf_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSkill::kSkillFieldNumber;
#endif  // !_MSC_VER

TSkill::TSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSkill)
}

void TSkill::InitAsDefaultInstance() {
}

TSkill::TSkill(const TSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSkill)
}

void TSkill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSkill::~TSkill() {
  // @@protoc_insertion_point(destructor:pb.TSkill)
  SharedDtor();
}

void TSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSkill_descriptor_;
}

const TSkill& TSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TSkill* TSkill::default_instance_ = NULL;

TSkill* TSkill::New() const {
  return new TSkill;
}

void TSkill::Clear() {
  skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSkillAttribute Skill = 1;
      case 1: {
        if (tag == 10) {
         parse_Skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Skill;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSkill)
  return false;
#undef DO_
}

void TSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSkill)
  // repeated .pb.TSkillAttribute Skill = 1;
  for (int i = 0; i < this->skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skill(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSkill)
}

::google::protobuf::uint8* TSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSkill)
  // repeated .pb.TSkillAttribute Skill = 1;
  for (int i = 0; i < this->skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skill(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSkill)
  return target;
}

int TSkill::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSkillAttribute Skill = 1;
  total_size += 1 * this->skill_size();
  for (int i = 0; i < this->skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSkill::MergeFrom(const TSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_.MergeFrom(from.skill_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSkill::CopyFrom(const TSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSkill::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->skill())) return false;
  return true;
}

void TSkill::Swap(TSkill* other) {
  if (other != this) {
    skill_.Swap(&other->skill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSkill_descriptor_;
  metadata.reflection = TSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroBaseInfo::kHtidFieldNumber;
const int THeroBaseInfo::kHidFieldNumber;
const int THeroBaseInfo::kHeroLvFieldNumber;
const int THeroBaseInfo::kSkillFieldNumber;
const int THeroBaseInfo::kWeightFieldNumber;
const int THeroBaseInfo::kStarFieldNumber;
const int THeroBaseInfo::kAdvLvFieldNumber;
const int THeroBaseInfo::kBaseScaleFieldNumber;
const int THeroBaseInfo::kGoldHeroBreakLvFieldNumber;
const int THeroBaseInfo::kWhiteGoldBreakLvFieldNumber;
const int THeroBaseInfo::kGoldLvFieldNumber;
const int THeroBaseInfo::kWhiteGoldLvFieldNumber;
#endif  // !_MSC_VER

THeroBaseInfo::THeroBaseInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroBaseInfo)
}

void THeroBaseInfo::InitAsDefaultInstance() {
  skill_ = const_cast< ::pb::TSkill*>(&::pb::TSkill::default_instance());
}

THeroBaseInfo::THeroBaseInfo(const THeroBaseInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroBaseInfo)
}

void THeroBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  htid_ = 0u;
  hid_ = 0u;
  herolv_ = 0u;
  skill_ = NULL;
  weight_ = 0u;
  star_ = 0u;
  advlv_ = 0u;
  basescale_ = 0u;
  goldherobreaklv_ = 0u;
  whitegoldbreaklv_ = 0u;
  goldlv_ = 0u;
  whitegoldlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroBaseInfo::~THeroBaseInfo() {
  // @@protoc_insertion_point(destructor:pb.THeroBaseInfo)
  SharedDtor();
}

void THeroBaseInfo::SharedDtor() {
  if (this != default_instance_) {
    delete skill_;
  }
}

void THeroBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroBaseInfo_descriptor_;
}

const THeroBaseInfo& THeroBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

THeroBaseInfo* THeroBaseInfo::default_instance_ = NULL;

THeroBaseInfo* THeroBaseInfo::New() const {
  return new THeroBaseInfo;
}

void THeroBaseInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroBaseInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(htid_, hid_);
    ZR_(herolv_, basescale_);
    if (has_skill()) {
      if (skill_ != NULL) skill_->::pb::TSkill::Clear();
    }
  }
  ZR_(goldherobreaklv_, whitegoldlv_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Htid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HeroLv;
        break;
      }

      // optional uint32 HeroLv = 3;
      case 3: {
        if (tag == 24) {
         parse_HeroLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herolv_)));
          set_has_herolv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Skill;
        break;
      }

      // optional .pb.TSkill Skill = 4;
      case 4: {
        if (tag == 34) {
         parse_Skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Weight;
        break;
      }

      // optional uint32 Weight = 5;
      case 5: {
        if (tag == 40) {
         parse_Weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 6;
      case 6: {
        if (tag == 48) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_AdvLv;
        break;
      }

      // optional uint32 AdvLv = 7;
      case 7: {
        if (tag == 56) {
         parse_AdvLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &advlv_)));
          set_has_advlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_BaseScale;
        break;
      }

      // optional uint32 BaseScale = 8;
      case 8: {
        if (tag == 64) {
         parse_BaseScale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &basescale_)));
          set_has_basescale();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_GoldHeroBreakLv;
        break;
      }

      // optional uint32 GoldHeroBreakLv = 9;
      case 9: {
        if (tag == 72) {
         parse_GoldHeroBreakLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldherobreaklv_)));
          set_has_goldherobreaklv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_WhiteGoldBreakLv;
        break;
      }

      // optional uint32 WhiteGoldBreakLv = 10;
      case 10: {
        if (tag == 80) {
         parse_WhiteGoldBreakLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &whitegoldbreaklv_)));
          set_has_whitegoldbreaklv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_GoldLv;
        break;
      }

      // optional uint32 GoldLv = 11;
      case 11: {
        if (tag == 88) {
         parse_GoldLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldlv_)));
          set_has_goldlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_WhiteGoldLv;
        break;
      }

      // optional uint32 WhiteGoldLv = 12;
      case 12: {
        if (tag == 96) {
         parse_WhiteGoldLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &whitegoldlv_)));
          set_has_whitegoldlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroBaseInfo)
  return false;
#undef DO_
}

void THeroBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroBaseInfo)
  // optional uint32 Htid = 1;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->htid(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  // optional uint32 HeroLv = 3;
  if (has_herolv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->herolv(), output);
  }

  // optional .pb.TSkill Skill = 4;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->skill(), output);
  }

  // optional uint32 Weight = 5;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->weight(), output);
  }

  // optional uint32 Star = 6;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->star(), output);
  }

  // optional uint32 AdvLv = 7;
  if (has_advlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->advlv(), output);
  }

  // optional uint32 BaseScale = 8;
  if (has_basescale()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->basescale(), output);
  }

  // optional uint32 GoldHeroBreakLv = 9;
  if (has_goldherobreaklv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->goldherobreaklv(), output);
  }

  // optional uint32 WhiteGoldBreakLv = 10;
  if (has_whitegoldbreaklv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->whitegoldbreaklv(), output);
  }

  // optional uint32 GoldLv = 11;
  if (has_goldlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->goldlv(), output);
  }

  // optional uint32 WhiteGoldLv = 12;
  if (has_whitegoldlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->whitegoldlv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroBaseInfo)
}

::google::protobuf::uint8* THeroBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroBaseInfo)
  // optional uint32 Htid = 1;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->htid(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  // optional uint32 HeroLv = 3;
  if (has_herolv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->herolv(), target);
  }

  // optional .pb.TSkill Skill = 4;
  if (has_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->skill(), target);
  }

  // optional uint32 Weight = 5;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->weight(), target);
  }

  // optional uint32 Star = 6;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->star(), target);
  }

  // optional uint32 AdvLv = 7;
  if (has_advlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->advlv(), target);
  }

  // optional uint32 BaseScale = 8;
  if (has_basescale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->basescale(), target);
  }

  // optional uint32 GoldHeroBreakLv = 9;
  if (has_goldherobreaklv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->goldherobreaklv(), target);
  }

  // optional uint32 WhiteGoldBreakLv = 10;
  if (has_whitegoldbreaklv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->whitegoldbreaklv(), target);
  }

  // optional uint32 GoldLv = 11;
  if (has_goldlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->goldlv(), target);
  }

  // optional uint32 WhiteGoldLv = 12;
  if (has_whitegoldlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->whitegoldlv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroBaseInfo)
  return target;
}

int THeroBaseInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Htid = 1;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 HeroLv = 3;
    if (has_herolv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herolv());
    }

    // optional .pb.TSkill Skill = 4;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill());
    }

    // optional uint32 Weight = 5;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weight());
    }

    // optional uint32 Star = 6;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // optional uint32 AdvLv = 7;
    if (has_advlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->advlv());
    }

    // optional uint32 BaseScale = 8;
    if (has_basescale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->basescale());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 GoldHeroBreakLv = 9;
    if (has_goldherobreaklv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goldherobreaklv());
    }

    // optional uint32 WhiteGoldBreakLv = 10;
    if (has_whitegoldbreaklv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->whitegoldbreaklv());
    }

    // optional uint32 GoldLv = 11;
    if (has_goldlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goldlv());
    }

    // optional uint32 WhiteGoldLv = 12;
    if (has_whitegoldlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->whitegoldlv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroBaseInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroBaseInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroBaseInfo::MergeFrom(const THeroBaseInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_herolv()) {
      set_herolv(from.herolv());
    }
    if (from.has_skill()) {
      mutable_skill()->::pb::TSkill::MergeFrom(from.skill());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_advlv()) {
      set_advlv(from.advlv());
    }
    if (from.has_basescale()) {
      set_basescale(from.basescale());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_goldherobreaklv()) {
      set_goldherobreaklv(from.goldherobreaklv());
    }
    if (from.has_whitegoldbreaklv()) {
      set_whitegoldbreaklv(from.whitegoldbreaklv());
    }
    if (from.has_goldlv()) {
      set_goldlv(from.goldlv());
    }
    if (from.has_whitegoldlv()) {
      set_whitegoldlv(from.whitegoldlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroBaseInfo::CopyFrom(const THeroBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroBaseInfo::IsInitialized() const {

  if (has_skill()) {
    if (!this->skill().IsInitialized()) return false;
  }
  return true;
}

void THeroBaseInfo::Swap(THeroBaseInfo* other) {
  if (other != this) {
    std::swap(htid_, other->htid_);
    std::swap(hid_, other->hid_);
    std::swap(herolv_, other->herolv_);
    std::swap(skill_, other->skill_);
    std::swap(weight_, other->weight_);
    std::swap(star_, other->star_);
    std::swap(advlv_, other->advlv_);
    std::swap(basescale_, other->basescale_);
    std::swap(goldherobreaklv_, other->goldherobreaklv_);
    std::swap(whitegoldbreaklv_, other->whitegoldbreaklv_);
    std::swap(goldlv_, other->goldlv_);
    std::swap(whitegoldlv_, other->whitegoldlv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroBaseInfo_descriptor_;
  metadata.reflection = THeroBaseInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TModuleAttr::kNameFieldNumber;
const int TModuleAttr::kSelfFieldNumber;
const int TModuleAttr::kHaloFieldNumber;
const int TModuleAttr::kSkillsFieldNumber;
const int TModuleAttr::kFightforceFieldNumber;
#endif  // !_MSC_VER

TModuleAttr::TModuleAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TModuleAttr)
}

void TModuleAttr::InitAsDefaultInstance() {
  self_ = const_cast< ::pb::TSelf*>(&::pb::TSelf::default_instance());
  halo_ = const_cast< ::pb::THalo*>(&::pb::THalo::default_instance());
}

TModuleAttr::TModuleAttr(const TModuleAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TModuleAttr)
}

void TModuleAttr::SharedCtor() {
  _cached_size_ = 0;
  name_ = 0u;
  self_ = NULL;
  halo_ = NULL;
  fightforce_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TModuleAttr::~TModuleAttr() {
  // @@protoc_insertion_point(destructor:pb.TModuleAttr)
  SharedDtor();
}

void TModuleAttr::SharedDtor() {
  if (this != default_instance_) {
    delete self_;
    delete halo_;
  }
}

void TModuleAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TModuleAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TModuleAttr_descriptor_;
}

const TModuleAttr& TModuleAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TModuleAttr* TModuleAttr::default_instance_ = NULL;

TModuleAttr* TModuleAttr::New() const {
  return new TModuleAttr;
}

void TModuleAttr::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TModuleAttr*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 23) {
    ZR_(fightforce_, name_);
    if (has_self()) {
      if (self_ != NULL) self_->::pb::TSelf::Clear();
    }
    if (has_halo()) {
      if (halo_ != NULL) halo_->::pb::THalo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  skills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TModuleAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TModuleAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Name = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_)));
          set_has_name();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Self;
        break;
      }

      // optional .pb.TSelf Self = 2;
      case 2: {
        if (tag == 18) {
         parse_Self:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Halo;
        break;
      }

      // optional .pb.THalo Halo = 3;
      case 3: {
        if (tag == 26) {
         parse_Halo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_halo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Skills;
        break;
      }

      // repeated .pb.TSkillAttribute Skills = 4;
      case 4: {
        if (tag == 34) {
         parse_Skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Skills;
        if (input->ExpectTag(40)) goto parse_Fightforce;
        break;
      }

      // optional uint64 Fightforce = 5;
      case 5: {
        if (tag == 40) {
         parse_Fightforce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fightforce_)));
          set_has_fightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TModuleAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TModuleAttr)
  return false;
#undef DO_
}

void TModuleAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TModuleAttr)
  // required uint32 Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->name(), output);
  }

  // optional .pb.TSelf Self = 2;
  if (has_self()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self(), output);
  }

  // optional .pb.THalo Halo = 3;
  if (has_halo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->halo(), output);
  }

  // repeated .pb.TSkillAttribute Skills = 4;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->skills(i), output);
  }

  // optional uint64 Fightforce = 5;
  if (has_fightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->fightforce(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TModuleAttr)
}

::google::protobuf::uint8* TModuleAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TModuleAttr)
  // required uint32 Name = 1;
  if (has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->name(), target);
  }

  // optional .pb.TSelf Self = 2;
  if (has_self()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self(), target);
  }

  // optional .pb.THalo Halo = 3;
  if (has_halo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->halo(), target);
  }

  // repeated .pb.TSkillAttribute Skills = 4;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->skills(i), target);
  }

  // optional uint64 Fightforce = 5;
  if (has_fightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->fightforce(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TModuleAttr)
  return target;
}

int TModuleAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->name());
    }

    // optional .pb.TSelf Self = 2;
    if (has_self()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self());
    }

    // optional .pb.THalo Halo = 3;
    if (has_halo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->halo());
    }

    // optional uint64 Fightforce = 5;
    if (has_fightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fightforce());
    }

  }
  // repeated .pb.TSkillAttribute Skills = 4;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TModuleAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TModuleAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TModuleAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TModuleAttr::MergeFrom(const TModuleAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  skills_.MergeFrom(from.skills_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_self()) {
      mutable_self()->::pb::TSelf::MergeFrom(from.self());
    }
    if (from.has_halo()) {
      mutable_halo()->::pb::THalo::MergeFrom(from.halo());
    }
    if (from.has_fightforce()) {
      set_fightforce(from.fightforce());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TModuleAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TModuleAttr::CopyFrom(const TModuleAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TModuleAttr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_self()) {
    if (!this->self().IsInitialized()) return false;
  }
  if (has_halo()) {
    if (!this->halo().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->skills())) return false;
  return true;
}

void TModuleAttr::Swap(TModuleAttr* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(self_, other->self_);
    std::swap(halo_, other->halo_);
    skills_.Swap(&other->skills_);
    std::swap(fightforce_, other->fightforce_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TModuleAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TModuleAttr_descriptor_;
  metadata.reflection = TModuleAttr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPosition::kPosFieldNumber;
const int TPosition::kHeroInfoFieldNumber;
const int TPosition::kDataFieldNumber;
#endif  // !_MSC_VER

TPosition::TPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPosition)
}

void TPosition::InitAsDefaultInstance() {
  heroinfo_ = const_cast< ::pb::THeroBaseInfo*>(&::pb::THeroBaseInfo::default_instance());
}

TPosition::TPosition(const TPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPosition)
}

void TPosition::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  heroinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPosition::~TPosition() {
  // @@protoc_insertion_point(destructor:pb.TPosition)
  SharedDtor();
}

void TPosition::SharedDtor() {
  if (this != default_instance_) {
    delete heroinfo_;
  }
}

void TPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPosition_descriptor_;
}

const TPosition& TPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TPosition* TPosition::default_instance_ = NULL;

TPosition* TPosition::New() const {
  return new TPosition;
}

void TPosition::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    pos_ = 0u;
    if (has_heroinfo()) {
      if (heroinfo_ != NULL) heroinfo_->::pb::THeroBaseInfo::Clear();
    }
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroInfo;
        break;
      }

      // optional .pb.THeroBaseInfo HeroInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_HeroInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heroinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // repeated .pb.TModuleAttr Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPosition)
  return false;
#undef DO_
}

void TPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPosition)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional .pb.THeroBaseInfo HeroInfo = 2;
  if (has_heroinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heroinfo(), output);
  }

  // repeated .pb.TModuleAttr Data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPosition)
}

::google::protobuf::uint8* TPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPosition)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional .pb.THeroBaseInfo HeroInfo = 2;
  if (has_heroinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heroinfo(), target);
  }

  // repeated .pb.TModuleAttr Data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPosition)
  return target;
}

int TPosition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.THeroBaseInfo HeroInfo = 2;
    if (has_heroinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heroinfo());
    }

  }
  // repeated .pb.TModuleAttr Data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPosition::MergeFrom(const TPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_heroinfo()) {
      mutable_heroinfo()->::pb::THeroBaseInfo::MergeFrom(from.heroinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPosition::CopyFrom(const TPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPosition::IsInitialized() const {

  if (has_heroinfo()) {
    if (!this->heroinfo().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void TPosition::Swap(TPosition* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(heroinfo_, other->heroinfo_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPosition_descriptor_;
  metadata.reflection = TPosition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSquad::kGHaloFieldNumber;
const int TSquad::kTeamHaloFieldNumber;
const int TSquad::kSquadFieldNumber;
const int TSquad::kUidFieldNumber;
const int TSquad::kStarterFieldNumber;
#endif  // !_MSC_VER

TSquad::TSquad()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSquad)
}

void TSquad::InitAsDefaultInstance() {
  ghalo_ = const_cast< ::pb::THalo*>(&::pb::THalo::default_instance());
  teamhalo_ = const_cast< ::pb::THalo*>(&::pb::THalo::default_instance());
}

TSquad::TSquad(const TSquad& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSquad)
}

void TSquad::SharedCtor() {
  _cached_size_ = 0;
  ghalo_ = NULL;
  teamhalo_ = NULL;
  uid_ = GOOGLE_ULONGLONG(0);
  starter_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSquad::~TSquad() {
  // @@protoc_insertion_point(destructor:pb.TSquad)
  SharedDtor();
}

void TSquad::SharedDtor() {
  if (this != default_instance_) {
    delete ghalo_;
    delete teamhalo_;
  }
}

void TSquad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSquad::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSquad_descriptor_;
}

const TSquad& TSquad::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TSquad* TSquad::default_instance_ = NULL;

TSquad* TSquad::New() const {
  return new TSquad;
}

void TSquad::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSquad*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 27) {
    ZR_(uid_, starter_);
    if (has_ghalo()) {
      if (ghalo_ != NULL) ghalo_->::pb::THalo::Clear();
    }
    if (has_teamhalo()) {
      if (teamhalo_ != NULL) teamhalo_->::pb::THalo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  squad_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSquad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSquad)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.THalo GHalo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ghalo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TeamHalo;
        break;
      }

      // optional .pb.THalo TeamHalo = 2;
      case 2: {
        if (tag == 18) {
         parse_TeamHalo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_teamhalo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Squad;
        break;
      }

      // repeated .pb.TPosition Squad = 3;
      case 3: {
        if (tag == 26) {
         parse_Squad:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_squad()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Squad;
        if (input->ExpectTag(32)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 4;
      case 4: {
        if (tag == 32) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Starter;
        break;
      }

      // optional uint32 Starter = 5;
      case 5: {
        if (tag == 40) {
         parse_Starter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starter_)));
          set_has_starter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSquad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSquad)
  return false;
#undef DO_
}

void TSquad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSquad)
  // optional .pb.THalo GHalo = 1;
  if (has_ghalo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ghalo(), output);
  }

  // optional .pb.THalo TeamHalo = 2;
  if (has_teamhalo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->teamhalo(), output);
  }

  // repeated .pb.TPosition Squad = 3;
  for (int i = 0; i < this->squad_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->squad(i), output);
  }

  // optional uint64 Uid = 4;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uid(), output);
  }

  // optional uint32 Starter = 5;
  if (has_starter()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->starter(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSquad)
}

::google::protobuf::uint8* TSquad::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSquad)
  // optional .pb.THalo GHalo = 1;
  if (has_ghalo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ghalo(), target);
  }

  // optional .pb.THalo TeamHalo = 2;
  if (has_teamhalo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->teamhalo(), target);
  }

  // repeated .pb.TPosition Squad = 3;
  for (int i = 0; i < this->squad_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->squad(i), target);
  }

  // optional uint64 Uid = 4;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uid(), target);
  }

  // optional uint32 Starter = 5;
  if (has_starter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->starter(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSquad)
  return target;
}

int TSquad::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.THalo GHalo = 1;
    if (has_ghalo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ghalo());
    }

    // optional .pb.THalo TeamHalo = 2;
    if (has_teamhalo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->teamhalo());
    }

    // optional uint64 Uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional uint32 Starter = 5;
    if (has_starter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starter());
    }

  }
  // repeated .pb.TPosition Squad = 3;
  total_size += 1 * this->squad_size();
  for (int i = 0; i < this->squad_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->squad(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSquad::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSquad* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSquad*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSquad::MergeFrom(const TSquad& from) {
  GOOGLE_CHECK_NE(&from, this);
  squad_.MergeFrom(from.squad_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ghalo()) {
      mutable_ghalo()->::pb::THalo::MergeFrom(from.ghalo());
    }
    if (from.has_teamhalo()) {
      mutable_teamhalo()->::pb::THalo::MergeFrom(from.teamhalo());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_starter()) {
      set_starter(from.starter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSquad::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSquad::CopyFrom(const TSquad& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSquad::IsInitialized() const {

  if (has_ghalo()) {
    if (!this->ghalo().IsInitialized()) return false;
  }
  if (has_teamhalo()) {
    if (!this->teamhalo().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->squad())) return false;
  return true;
}

void TSquad::Swap(TSquad* other) {
  if (other != this) {
    std::swap(ghalo_, other->ghalo_);
    std::swap(teamhalo_, other->teamhalo_);
    squad_.Swap(&other->squad_);
    std::swap(uid_, other->uid_);
    std::swap(starter_, other->starter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSquad::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSquad_descriptor_;
  metadata.reflection = TSquad_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPositionArr::kSquadFieldNumber;
#endif  // !_MSC_VER

TPositionArr::TPositionArr()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPositionArr)
}

void TPositionArr::InitAsDefaultInstance() {
}

TPositionArr::TPositionArr(const TPositionArr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPositionArr)
}

void TPositionArr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPositionArr::~TPositionArr() {
  // @@protoc_insertion_point(destructor:pb.TPositionArr)
  SharedDtor();
}

void TPositionArr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPositionArr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPositionArr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPositionArr_descriptor_;
}

const TPositionArr& TPositionArr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAttributer_2eproto();
  return *default_instance_;
}

TPositionArr* TPositionArr::default_instance_ = NULL;

TPositionArr* TPositionArr::New() const {
  return new TPositionArr;
}

void TPositionArr::Clear() {
  squad_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPositionArr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPositionArr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TPosition Squad = 1;
      case 1: {
        if (tag == 10) {
         parse_Squad:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_squad()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Squad;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPositionArr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPositionArr)
  return false;
#undef DO_
}

void TPositionArr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPositionArr)
  // repeated .pb.TPosition Squad = 1;
  for (int i = 0; i < this->squad_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->squad(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPositionArr)
}

::google::protobuf::uint8* TPositionArr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPositionArr)
  // repeated .pb.TPosition Squad = 1;
  for (int i = 0; i < this->squad_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->squad(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPositionArr)
  return target;
}

int TPositionArr::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TPosition Squad = 1;
  total_size += 1 * this->squad_size();
  for (int i = 0; i < this->squad_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->squad(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPositionArr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPositionArr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPositionArr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPositionArr::MergeFrom(const TPositionArr& from) {
  GOOGLE_CHECK_NE(&from, this);
  squad_.MergeFrom(from.squad_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPositionArr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPositionArr::CopyFrom(const TPositionArr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPositionArr::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->squad())) return false;
  return true;
}

void TPositionArr::Swap(TPositionArr* other) {
  if (other != this) {
    squad_.Swap(&other->squad_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPositionArr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPositionArr_descriptor_;
  metadata.reflection = TPositionArr_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
