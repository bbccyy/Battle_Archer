// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BattleViewCmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/BattleViewCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TBattleViewCmdList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBattleViewCmdList_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBattleViewCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBattleViewCmd_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TBattleViewCmd_ECmdEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TArmyUnitInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArmyUnitInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TRefPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TRefPos_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fBattleViewCmd_2eproto() {
  protobuf_AddDesc_net_2fBattleViewCmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/BattleViewCmd.proto");
  GOOGLE_CHECK(file != NULL);
  TBattleViewCmdList_descriptor_ = file->message_type(0);
  static const int TBattleViewCmdList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmdList, cmds_),
  };
  TBattleViewCmdList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBattleViewCmdList_descriptor_,
      TBattleViewCmdList::default_instance_,
      TBattleViewCmdList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmdList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmdList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBattleViewCmdList));
  TBattleViewCmd_descriptor_ = file->message_type(1);
  static const int TBattleViewCmd_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, cmdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, cmdentry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, refs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, refid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, army1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, army2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, effs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, refpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, anim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, socketname_),
  };
  TBattleViewCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBattleViewCmd_descriptor_,
      TBattleViewCmd::default_instance_,
      TBattleViewCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleViewCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBattleViewCmd));
  TBattleViewCmd_ECmdEntry_descriptor_ = TBattleViewCmd_descriptor_->enum_type(0);
  TArmyUnitInfo_descriptor_ = file->message_type(2);
  static const int TArmyUnitInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArmyUnitInfo, unitinfo_),
  };
  TArmyUnitInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArmyUnitInfo_descriptor_,
      TArmyUnitInfo::default_instance_,
      TArmyUnitInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArmyUnitInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArmyUnitInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArmyUnitInfo));
  TRefPos_descriptor_ = file->message_type(3);
  static const int TRefPos_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRefPos, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRefPos, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRefPos, z_),
  };
  TRefPos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TRefPos_descriptor_,
      TRefPos::default_instance_,
      TRefPos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRefPos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRefPos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TRefPos));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fBattleViewCmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBattleViewCmdList_descriptor_, &TBattleViewCmdList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBattleViewCmd_descriptor_, &TBattleViewCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArmyUnitInfo_descriptor_, &TArmyUnitInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TRefPos_descriptor_, &TRefPos::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fBattleViewCmd_2eproto() {
  delete TBattleViewCmdList::default_instance_;
  delete TBattleViewCmdList_reflection_;
  delete TBattleViewCmd::default_instance_;
  delete TBattleViewCmd_reflection_;
  delete TArmyUnitInfo::default_instance_;
  delete TArmyUnitInfo_reflection_;
  delete TRefPos::default_instance_;
  delete TRefPos_reflection_;
}

void protobuf_AddDesc_net_2fBattleViewCmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027net/BattleViewCmd.proto\022\002pb\"6\n\022TBattle"
    "ViewCmdList\022 \n\004Cmds\030\001 \003(\0132\022.pb.TBattleVi"
    "ewCmd\"\336\t\n\016TBattleViewCmd\022\017\n\007CmdTime\030\001 \001("
    "\005\022.\n\010CmdEntry\030\002 \002(\0162\034.pb.TBattleViewCmd."
    "ECmdEntry\022\014\n\004Args\030\003 \003(\003\022\014\n\004Refs\030\004 \003(\005\022\r\n"
    "\005RefId\030\005 \001(\005\022 \n\005Army1\030\006 \003(\0132\021.pb.TArmyUn"
    "itInfo\022 \n\005Army2\030\007 \003(\0132\021.pb.TArmyUnitInfo"
    "\022\014\n\004Effs\030\010 \003(\005\022\033\n\006RefPos\030\t \001(\0132\013.pb.TRef"
    "Pos\022\014\n\004Anim\030\n \001(\t\022\022\n\nSocketName\030\013 \001(\t\"\316\007"
    "\n\tECmdEntry\022\014\n\010Cutscene\020\001\022\022\n\016ResetTimeLi"
    "mit\020\002\022\r\n\tFieldInit\020\003\022\013\n\007EndShow\020\004\022\027\n\023Ful"
    "lscreenBlackMask\020\005\022\r\n\tAddAvatar\020\006\022\021\n\rAdd"
    "Projectile\020\007\022\023\n\017AddDestructable\020\010\022\023\n\017Add"
    "SceneBarrier\020\t\022\020\n\014ChangeAvatar\020\n\022\r\n\tDelE"
    "ntity\020\013\022\017\n\013PauseEntity\020\014\022\021\n\rUnpauseEntit"
    "y\020\r\022\022\n\016DestructEntity\020\016\022\022\n\016AttachToSocke"
    "t\020\017\022\t\n\005Scale\020\020\022\007\n\003Die\020\021\022\n\n\006Revive\020\022\022\n\n\006D"
    "amage\020\023\022\010\n\004Heal\020\024\022\r\n\tImmueBuff\020\025\022\016\n\nImmu"
    "eSkill\020\026\022\013\n\007AddRage\020\027\022\025\n\021AddUnparallelRa"
    "ge\020\030\022\025\n\021SubUnparallelRage\020\031\022\013\n\007SubRage\020\032"
    "\022\022\n\016RageSkillReady\020\033\022\032\n\026UnparalleledSkil"
    "lReady\020\034\022\014\n\010SkillHit\020\035\022\t\n\005Dodge\020\036\022\r\n\tExe"
    "mption\020\037\022\t\n\005Parry\020 \022\n\n\006Resist\020!\022\031\n\025Contr"
    "olledStateChange\020\"\022\017\n\013ActionSpeed\020#\022\017\n\013M"
    "axHpChange\020$\022\013\n\007BuffAdd\020%\022\021\n\rBuffModEnab"
    "le\020&\022\013\n\007BuffDel\020\'\022\024\n\020BuffNumberChange\020(\022"
    "\016\n\nSkillBegin\020)\022\r\n\tSkillShow\020*\022\r\n\tSkillE"
    "mit\020+\022\024\n\020SkillInterrupted\020,\022\014\n\010SkillEnd\020"
    ".\022\023\n\017SkillUnparallel\020/\022\031\n\025SkillOnReachRe"
    "fTarget\0200\022\010\n\004Move\0201\022\014\n\010Maneuver\0202\022\n\n\006Loc"
    "ate\0203\022\020\n\014InitLocation\0204\022\036\n\032BehaviourStan"
    "dPointReached\0205\022\016\n\nScreenText\0206\022\017\n\013Defen"
    "dPoint\0207\022\022\n\016DelDefendPoint\0208\022\030\n\024BattleSo"
    "ulSkillReady\0209\"!\n\rTArmyUnitInfo\022\020\n\010Uniti"
    "nfo\030\001 \003(\003\"*\n\007TRefPos\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002"
    "(\005\022\t\n\001z\030\003 \002(\005", 1413);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/BattleViewCmd.proto", &protobuf_RegisterTypes);
  TBattleViewCmdList::default_instance_ = new TBattleViewCmdList();
  TBattleViewCmd::default_instance_ = new TBattleViewCmd();
  TArmyUnitInfo::default_instance_ = new TArmyUnitInfo();
  TRefPos::default_instance_ = new TRefPos();
  TBattleViewCmdList::default_instance_->InitAsDefaultInstance();
  TBattleViewCmd::default_instance_->InitAsDefaultInstance();
  TArmyUnitInfo::default_instance_->InitAsDefaultInstance();
  TRefPos::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fBattleViewCmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fBattleViewCmd_2eproto {
  StaticDescriptorInitializer_net_2fBattleViewCmd_2eproto() {
    protobuf_AddDesc_net_2fBattleViewCmd_2eproto();
  }
} static_descriptor_initializer_net_2fBattleViewCmd_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TBattleViewCmdList::kCmdsFieldNumber;
#endif  // !_MSC_VER

TBattleViewCmdList::TBattleViewCmdList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBattleViewCmdList)
}

void TBattleViewCmdList::InitAsDefaultInstance() {
}

TBattleViewCmdList::TBattleViewCmdList(const TBattleViewCmdList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBattleViewCmdList)
}

void TBattleViewCmdList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBattleViewCmdList::~TBattleViewCmdList() {
  // @@protoc_insertion_point(destructor:pb.TBattleViewCmdList)
  SharedDtor();
}

void TBattleViewCmdList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBattleViewCmdList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBattleViewCmdList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBattleViewCmdList_descriptor_;
}

const TBattleViewCmdList& TBattleViewCmdList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBattleViewCmd_2eproto();
  return *default_instance_;
}

TBattleViewCmdList* TBattleViewCmdList::default_instance_ = NULL;

TBattleViewCmdList* TBattleViewCmdList::New() const {
  return new TBattleViewCmdList;
}

void TBattleViewCmdList::Clear() {
  cmds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBattleViewCmdList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBattleViewCmdList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBattleViewCmd Cmds = 1;
      case 1: {
        if (tag == 10) {
         parse_Cmds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cmds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Cmds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBattleViewCmdList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBattleViewCmdList)
  return false;
#undef DO_
}

void TBattleViewCmdList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBattleViewCmdList)
  // repeated .pb.TBattleViewCmd Cmds = 1;
  for (int i = 0; i < this->cmds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cmds(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBattleViewCmdList)
}

::google::protobuf::uint8* TBattleViewCmdList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBattleViewCmdList)
  // repeated .pb.TBattleViewCmd Cmds = 1;
  for (int i = 0; i < this->cmds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cmds(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBattleViewCmdList)
  return target;
}

int TBattleViewCmdList::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBattleViewCmd Cmds = 1;
  total_size += 1 * this->cmds_size();
  for (int i = 0; i < this->cmds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cmds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBattleViewCmdList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBattleViewCmdList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBattleViewCmdList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBattleViewCmdList::MergeFrom(const TBattleViewCmdList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cmds_.MergeFrom(from.cmds_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBattleViewCmdList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBattleViewCmdList::CopyFrom(const TBattleViewCmdList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBattleViewCmdList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cmds())) return false;
  return true;
}

void TBattleViewCmdList::Swap(TBattleViewCmdList* other) {
  if (other != this) {
    cmds_.Swap(&other->cmds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBattleViewCmdList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBattleViewCmdList_descriptor_;
  metadata.reflection = TBattleViewCmdList_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* TBattleViewCmd_ECmdEntry_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBattleViewCmd_ECmdEntry_descriptor_;
}
bool TBattleViewCmd_ECmdEntry_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Cutscene;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ResetTimeLimit;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::FieldInit;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::EndShow;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::FullscreenBlackMask;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AddAvatar;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AddProjectile;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AddDestructable;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AddSceneBarrier;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ChangeAvatar;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::DelEntity;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::PauseEntity;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::UnpauseEntity;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::DestructEntity;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AttachToSocket;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Scale;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Die;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Revive;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Damage;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Heal;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ImmueBuff;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ImmueSkill;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AddRage;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::AddUnparallelRage;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SubUnparallelRage;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SubRage;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::RageSkillReady;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::UnparalleledSkillReady;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillHit;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Dodge;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Exemption;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Parry;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Resist;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ControlledStateChange;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ActionSpeed;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::MaxHpChange;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::BuffAdd;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::BuffModEnable;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::BuffDel;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::BuffNumberChange;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillBegin;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillShow;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillEmit;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillInterrupted;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillEnd;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillUnparallel;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::SkillOnReachRefTarget;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Move;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Maneuver;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::Locate;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::InitLocation;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::BehaviourStandPointReached;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ScreenText;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::DefendPoint;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::DelDefendPoint;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::BattleSoulSkillReady;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ECmdEntry_MIN;
const TBattleViewCmd_ECmdEntry TBattleViewCmd::ECmdEntry_MAX;
const int TBattleViewCmd::ECmdEntry_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TBattleViewCmd::kCmdTimeFieldNumber;
const int TBattleViewCmd::kCmdEntryFieldNumber;
const int TBattleViewCmd::kArgsFieldNumber;
const int TBattleViewCmd::kRefsFieldNumber;
const int TBattleViewCmd::kRefIdFieldNumber;
const int TBattleViewCmd::kArmy1FieldNumber;
const int TBattleViewCmd::kArmy2FieldNumber;
const int TBattleViewCmd::kEffsFieldNumber;
const int TBattleViewCmd::kRefPosFieldNumber;
const int TBattleViewCmd::kAnimFieldNumber;
const int TBattleViewCmd::kSocketNameFieldNumber;
#endif  // !_MSC_VER

TBattleViewCmd::TBattleViewCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBattleViewCmd)
}

void TBattleViewCmd::InitAsDefaultInstance() {
  refpos_ = const_cast< ::pb::TRefPos*>(&::pb::TRefPos::default_instance());
}

TBattleViewCmd::TBattleViewCmd(const TBattleViewCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBattleViewCmd)
}

void TBattleViewCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmdtime_ = 0;
  cmdentry_ = 1;
  refid_ = 0;
  refpos_ = NULL;
  anim_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  socketname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBattleViewCmd::~TBattleViewCmd() {
  // @@protoc_insertion_point(destructor:pb.TBattleViewCmd)
  SharedDtor();
}

void TBattleViewCmd::SharedDtor() {
  if (anim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete anim_;
  }
  if (socketname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete socketname_;
  }
  if (this != default_instance_) {
    delete refpos_;
  }
}

void TBattleViewCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBattleViewCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBattleViewCmd_descriptor_;
}

const TBattleViewCmd& TBattleViewCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBattleViewCmd_2eproto();
  return *default_instance_;
}

TBattleViewCmd* TBattleViewCmd::default_instance_ = NULL;

TBattleViewCmd* TBattleViewCmd::New() const {
  return new TBattleViewCmd;
}

void TBattleViewCmd::Clear() {
  if (_has_bits_[0 / 32] & 19) {
    cmdtime_ = 0;
    cmdentry_ = 1;
    refid_ = 0;
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_refpos()) {
      if (refpos_ != NULL) refpos_->::pb::TRefPos::Clear();
    }
    if (has_anim()) {
      if (anim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        anim_->clear();
      }
    }
    if (has_socketname()) {
      if (socketname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        socketname_->clear();
      }
    }
  }
  args_.Clear();
  refs_.Clear();
  army1_.Clear();
  army2_.Clear();
  effs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBattleViewCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBattleViewCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 CmdTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmdtime_)));
          set_has_cmdtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CmdEntry;
        break;
      }

      // required .pb.TBattleViewCmd.ECmdEntry CmdEntry = 2;
      case 2: {
        if (tag == 16) {
         parse_CmdEntry:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::TBattleViewCmd_ECmdEntry_IsValid(value)) {
            set_cmdentry(static_cast< ::pb::TBattleViewCmd_ECmdEntry >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Args;
        break;
      }

      // repeated int64 Args = 3;
      case 3: {
        if (tag == 24) {
         parse_Args:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_args())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_args())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Args;
        if (input->ExpectTag(32)) goto parse_Refs;
        break;
      }

      // repeated int32 Refs = 4;
      case 4: {
        if (tag == 32) {
         parse_Refs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_refs())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_refs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Refs;
        if (input->ExpectTag(40)) goto parse_RefId;
        break;
      }

      // optional int32 RefId = 5;
      case 5: {
        if (tag == 40) {
         parse_RefId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refid_)));
          set_has_refid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Army1;
        break;
      }

      // repeated .pb.TArmyUnitInfo Army1 = 6;
      case 6: {
        if (tag == 50) {
         parse_Army1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_army1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Army1;
        if (input->ExpectTag(58)) goto parse_Army2;
        break;
      }

      // repeated .pb.TArmyUnitInfo Army2 = 7;
      case 7: {
        if (tag == 58) {
         parse_Army2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_army2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Army2;
        if (input->ExpectTag(64)) goto parse_Effs;
        break;
      }

      // repeated int32 Effs = 8;
      case 8: {
        if (tag == 64) {
         parse_Effs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_effs())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_effs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Effs;
        if (input->ExpectTag(74)) goto parse_RefPos;
        break;
      }

      // optional .pb.TRefPos RefPos = 9;
      case 9: {
        if (tag == 74) {
         parse_RefPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Anim;
        break;
      }

      // optional string Anim = 10;
      case 10: {
        if (tag == 82) {
         parse_Anim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anim()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anim().data(), this->anim().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anim");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_SocketName;
        break;
      }

      // optional string SocketName = 11;
      case 11: {
        if (tag == 90) {
         parse_SocketName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_socketname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->socketname().data(), this->socketname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "socketname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBattleViewCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBattleViewCmd)
  return false;
#undef DO_
}

void TBattleViewCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBattleViewCmd)
  // optional int32 CmdTime = 1;
  if (has_cmdtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmdtime(), output);
  }

  // required .pb.TBattleViewCmd.ECmdEntry CmdEntry = 2;
  if (has_cmdentry()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmdentry(), output);
  }

  // repeated int64 Args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->args(i), output);
  }

  // repeated int32 Refs = 4;
  for (int i = 0; i < this->refs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->refs(i), output);
  }

  // optional int32 RefId = 5;
  if (has_refid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refid(), output);
  }

  // repeated .pb.TArmyUnitInfo Army1 = 6;
  for (int i = 0; i < this->army1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->army1(i), output);
  }

  // repeated .pb.TArmyUnitInfo Army2 = 7;
  for (int i = 0; i < this->army2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->army2(i), output);
  }

  // repeated int32 Effs = 8;
  for (int i = 0; i < this->effs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->effs(i), output);
  }

  // optional .pb.TRefPos RefPos = 9;
  if (has_refpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->refpos(), output);
  }

  // optional string Anim = 10;
  if (has_anim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anim().data(), this->anim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anim");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->anim(), output);
  }

  // optional string SocketName = 11;
  if (has_socketname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->socketname().data(), this->socketname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "socketname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->socketname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBattleViewCmd)
}

::google::protobuf::uint8* TBattleViewCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBattleViewCmd)
  // optional int32 CmdTime = 1;
  if (has_cmdtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmdtime(), target);
  }

  // required .pb.TBattleViewCmd.ECmdEntry CmdEntry = 2;
  if (has_cmdentry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmdentry(), target);
  }

  // repeated int64 Args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->args(i), target);
  }

  // repeated int32 Refs = 4;
  for (int i = 0; i < this->refs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->refs(i), target);
  }

  // optional int32 RefId = 5;
  if (has_refid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refid(), target);
  }

  // repeated .pb.TArmyUnitInfo Army1 = 6;
  for (int i = 0; i < this->army1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->army1(i), target);
  }

  // repeated .pb.TArmyUnitInfo Army2 = 7;
  for (int i = 0; i < this->army2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->army2(i), target);
  }

  // repeated int32 Effs = 8;
  for (int i = 0; i < this->effs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->effs(i), target);
  }

  // optional .pb.TRefPos RefPos = 9;
  if (has_refpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->refpos(), target);
  }

  // optional string Anim = 10;
  if (has_anim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anim().data(), this->anim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anim");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->anim(), target);
  }

  // optional string SocketName = 11;
  if (has_socketname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->socketname().data(), this->socketname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "socketname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->socketname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBattleViewCmd)
  return target;
}

int TBattleViewCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 CmdTime = 1;
    if (has_cmdtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmdtime());
    }

    // required .pb.TBattleViewCmd.ECmdEntry CmdEntry = 2;
    if (has_cmdentry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmdentry());
    }

    // optional int32 RefId = 5;
    if (has_refid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .pb.TRefPos RefPos = 9;
    if (has_refpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->refpos());
    }

    // optional string Anim = 10;
    if (has_anim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->anim());
    }

    // optional string SocketName = 11;
    if (has_socketname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->socketname());
    }

  }
  // repeated int64 Args = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->args_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->args(i));
    }
    total_size += 1 * this->args_size() + data_size;
  }

  // repeated int32 Refs = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->refs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->refs(i));
    }
    total_size += 1 * this->refs_size() + data_size;
  }

  // repeated .pb.TArmyUnitInfo Army1 = 6;
  total_size += 1 * this->army1_size();
  for (int i = 0; i < this->army1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->army1(i));
  }

  // repeated .pb.TArmyUnitInfo Army2 = 7;
  total_size += 1 * this->army2_size();
  for (int i = 0; i < this->army2_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->army2(i));
  }

  // repeated int32 Effs = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->effs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->effs(i));
    }
    total_size += 1 * this->effs_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBattleViewCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBattleViewCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBattleViewCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBattleViewCmd::MergeFrom(const TBattleViewCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  args_.MergeFrom(from.args_);
  refs_.MergeFrom(from.refs_);
  army1_.MergeFrom(from.army1_);
  army2_.MergeFrom(from.army2_);
  effs_.MergeFrom(from.effs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmdtime()) {
      set_cmdtime(from.cmdtime());
    }
    if (from.has_cmdentry()) {
      set_cmdentry(from.cmdentry());
    }
    if (from.has_refid()) {
      set_refid(from.refid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_refpos()) {
      mutable_refpos()->::pb::TRefPos::MergeFrom(from.refpos());
    }
    if (from.has_anim()) {
      set_anim(from.anim());
    }
    if (from.has_socketname()) {
      set_socketname(from.socketname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBattleViewCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBattleViewCmd::CopyFrom(const TBattleViewCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBattleViewCmd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_refpos()) {
    if (!this->refpos().IsInitialized()) return false;
  }
  return true;
}

void TBattleViewCmd::Swap(TBattleViewCmd* other) {
  if (other != this) {
    std::swap(cmdtime_, other->cmdtime_);
    std::swap(cmdentry_, other->cmdentry_);
    args_.Swap(&other->args_);
    refs_.Swap(&other->refs_);
    std::swap(refid_, other->refid_);
    army1_.Swap(&other->army1_);
    army2_.Swap(&other->army2_);
    effs_.Swap(&other->effs_);
    std::swap(refpos_, other->refpos_);
    std::swap(anim_, other->anim_);
    std::swap(socketname_, other->socketname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBattleViewCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBattleViewCmd_descriptor_;
  metadata.reflection = TBattleViewCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArmyUnitInfo::kUnitinfoFieldNumber;
#endif  // !_MSC_VER

TArmyUnitInfo::TArmyUnitInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArmyUnitInfo)
}

void TArmyUnitInfo::InitAsDefaultInstance() {
}

TArmyUnitInfo::TArmyUnitInfo(const TArmyUnitInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArmyUnitInfo)
}

void TArmyUnitInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArmyUnitInfo::~TArmyUnitInfo() {
  // @@protoc_insertion_point(destructor:pb.TArmyUnitInfo)
  SharedDtor();
}

void TArmyUnitInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArmyUnitInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArmyUnitInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArmyUnitInfo_descriptor_;
}

const TArmyUnitInfo& TArmyUnitInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBattleViewCmd_2eproto();
  return *default_instance_;
}

TArmyUnitInfo* TArmyUnitInfo::default_instance_ = NULL;

TArmyUnitInfo* TArmyUnitInfo::New() const {
  return new TArmyUnitInfo;
}

void TArmyUnitInfo::Clear() {
  unitinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArmyUnitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArmyUnitInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 Unitinfo = 1;
      case 1: {
        if (tag == 8) {
         parse_Unitinfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_unitinfo())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_unitinfo())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_Unitinfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArmyUnitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArmyUnitInfo)
  return false;
#undef DO_
}

void TArmyUnitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArmyUnitInfo)
  // repeated int64 Unitinfo = 1;
  for (int i = 0; i < this->unitinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->unitinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArmyUnitInfo)
}

::google::protobuf::uint8* TArmyUnitInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArmyUnitInfo)
  // repeated int64 Unitinfo = 1;
  for (int i = 0; i < this->unitinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->unitinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArmyUnitInfo)
  return target;
}

int TArmyUnitInfo::ByteSize() const {
  int total_size = 0;

  // repeated int64 Unitinfo = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->unitinfo_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->unitinfo(i));
    }
    total_size += 1 * this->unitinfo_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArmyUnitInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArmyUnitInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArmyUnitInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArmyUnitInfo::MergeFrom(const TArmyUnitInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  unitinfo_.MergeFrom(from.unitinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArmyUnitInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArmyUnitInfo::CopyFrom(const TArmyUnitInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArmyUnitInfo::IsInitialized() const {

  return true;
}

void TArmyUnitInfo::Swap(TArmyUnitInfo* other) {
  if (other != this) {
    unitinfo_.Swap(&other->unitinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArmyUnitInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArmyUnitInfo_descriptor_;
  metadata.reflection = TArmyUnitInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TRefPos::kXFieldNumber;
const int TRefPos::kYFieldNumber;
const int TRefPos::kZFieldNumber;
#endif  // !_MSC_VER

TRefPos::TRefPos()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TRefPos)
}

void TRefPos::InitAsDefaultInstance() {
}

TRefPos::TRefPos(const TRefPos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TRefPos)
}

void TRefPos::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TRefPos::~TRefPos() {
  // @@protoc_insertion_point(destructor:pb.TRefPos)
  SharedDtor();
}

void TRefPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TRefPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TRefPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TRefPos_descriptor_;
}

const TRefPos& TRefPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBattleViewCmd_2eproto();
  return *default_instance_;
}

TRefPos* TRefPos::default_instance_ = NULL;

TRefPos* TRefPos::New() const {
  return new TRefPos;
}

void TRefPos::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TRefPos*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, z_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TRefPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TRefPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }

      // required int32 z = 3;
      case 3: {
        if (tag == 24) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TRefPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TRefPos)
  return false;
#undef DO_
}

void TRefPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TRefPos)
  // required int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // required int32 z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TRefPos)
}

::google::protobuf::uint8* TRefPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TRefPos)
  // required int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // required int32 z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TRefPos)
  return target;
}

int TRefPos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // required int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // required int32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->z());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TRefPos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TRefPos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TRefPos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TRefPos::MergeFrom(const TRefPos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TRefPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRefPos::CopyFrom(const TRefPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRefPos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void TRefPos::Swap(TRefPos* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TRefPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TRefPos_descriptor_;
  metadata.reflection = TRefPos_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
