// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/CommonTeam.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/CommonTeam.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TCommonEmpty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCommonEmpty_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ECommonTeamMode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ECommonChangeTeamRetCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fCommonTeam_2eproto() {
  protobuf_AddDesc_net_2fCommonTeam_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/CommonTeam.proto");
  GOOGLE_CHECK(file != NULL);
  TCommonEmpty_descriptor_ = file->message_type(0);
  static const int TCommonEmpty_offsets_[1] = {
  };
  TCommonEmpty_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCommonEmpty_descriptor_,
      TCommonEmpty::default_instance_,
      TCommonEmpty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCommonEmpty, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCommonEmpty, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCommonEmpty));
  ECommonTeamMode_descriptor_ = file->enum_type(0);
  ECommonChangeTeamRetCode_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fCommonTeam_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCommonEmpty_descriptor_, &TCommonEmpty::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fCommonTeam_2eproto() {
  delete TCommonEmpty::default_instance_;
  delete TCommonEmpty_reflection_;
}

void protobuf_AddDesc_net_2fCommonTeam_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024net/CommonTeam.proto\022\002pb\"\016\n\014TCommonEmp"
    "ty*\204\001\n\017ECommonTeamMode\022\032\n\026COMMON_TEAM_MO"
    "DE_ALONE\020\000\022\033\n\027COMMON_TEAM_MODE_LEADER\020\001\022"
    "\033\n\027COMMON_TEAM_MODE_MEMBER\020\002\022\033\n\027COMMON_T"
    "EAM_MODE_HELPER\020\003*\252\001\n\030ECommonChangeTeamR"
    "etCode\022!\n\035COMMON_TEAM_RET_CODE_CHANGEOK\020"
    "\000\022\"\n\036COMMON_TEAM_RET_CODE_TEAMSTART\020\001\022!\n"
    "\035COMMON_TEAM_RET_CODE_NOINTEAM\020\002\022$\n COMM"
    "ON_TEAM_RET_CODE_INVALIDTEAM\020\003", 350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/CommonTeam.proto", &protobuf_RegisterTypes);
  TCommonEmpty::default_instance_ = new TCommonEmpty();
  TCommonEmpty::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fCommonTeam_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fCommonTeam_2eproto {
  StaticDescriptorInitializer_net_2fCommonTeam_2eproto() {
    protobuf_AddDesc_net_2fCommonTeam_2eproto();
  }
} static_descriptor_initializer_net_2fCommonTeam_2eproto_;
const ::google::protobuf::EnumDescriptor* ECommonTeamMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ECommonTeamMode_descriptor_;
}
bool ECommonTeamMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ECommonChangeTeamRetCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ECommonChangeTeamRetCode_descriptor_;
}
bool ECommonChangeTeamRetCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TCommonEmpty::TCommonEmpty()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCommonEmpty)
}

void TCommonEmpty::InitAsDefaultInstance() {
}

TCommonEmpty::TCommonEmpty(const TCommonEmpty& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCommonEmpty)
}

void TCommonEmpty::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCommonEmpty::~TCommonEmpty() {
  // @@protoc_insertion_point(destructor:pb.TCommonEmpty)
  SharedDtor();
}

void TCommonEmpty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCommonEmpty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCommonEmpty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCommonEmpty_descriptor_;
}

const TCommonEmpty& TCommonEmpty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCommonTeam_2eproto();
  return *default_instance_;
}

TCommonEmpty* TCommonEmpty::default_instance_ = NULL;

TCommonEmpty* TCommonEmpty::New() const {
  return new TCommonEmpty;
}

void TCommonEmpty::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCommonEmpty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCommonEmpty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCommonEmpty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCommonEmpty)
  return false;
#undef DO_
}

void TCommonEmpty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCommonEmpty)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCommonEmpty)
}

::google::protobuf::uint8* TCommonEmpty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCommonEmpty)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCommonEmpty)
  return target;
}

int TCommonEmpty::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCommonEmpty::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCommonEmpty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCommonEmpty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCommonEmpty::MergeFrom(const TCommonEmpty& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCommonEmpty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCommonEmpty::CopyFrom(const TCommonEmpty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCommonEmpty::IsInitialized() const {

  return true;
}

void TCommonEmpty::Swap(TCommonEmpty* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCommonEmpty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCommonEmpty_descriptor_;
  metadata.reflection = TCommonEmpty_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
