// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ViewScene.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ViewScene.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TViewSceneUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneEnterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneEnterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneEnterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneEnterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneMoveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneMoveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneChangeStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneChangeStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneUserInfoChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneUserInfoChangeNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneCrossBaseInfoData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneCrossBaseInfoData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneCrossUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneCrossUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneEnterCrossReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneEnterCrossReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneEnterCrossRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneEnterCrossRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneMoveCrossReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneMoveCrossReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TViewSceneChangeStatusCrossReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewSceneChangeStatusCrossReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EViewSceneUserStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EViewSceneType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EViewSceneUserType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fViewScene_2eproto() {
  protobuf_AddDesc_net_2fViewScene_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ViewScene.proto");
  GOOGLE_CHECK(file != NULL);
  TViewSceneUserInfo_descriptor_ = file->message_type(0);
  static const int TViewSceneUserInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, usertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, usersimpleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, isleaving_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, arenaposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, highorderrankposition_),
  };
  TViewSceneUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneUserInfo_descriptor_,
      TViewSceneUserInfo::default_instance_,
      TViewSceneUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneUserInfo));
  TViewSceneEnterReq_descriptor_ = file->message_type(1);
  static const int TViewSceneEnterReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterReq, viewscenetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterReq, viewsceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterReq, pos_),
  };
  TViewSceneEnterReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneEnterReq_descriptor_,
      TViewSceneEnterReq::default_instance_,
      TViewSceneEnterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneEnterReq));
  TViewSceneEnterRsp_descriptor_ = file->message_type(2);
  static const int TViewSceneEnterRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterRsp, arruserinfo_),
  };
  TViewSceneEnterRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneEnterRsp_descriptor_,
      TViewSceneEnterRsp::default_instance_,
      TViewSceneEnterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneEnterRsp));
  TViewSceneMoveReq_descriptor_ = file->message_type(3);
  static const int TViewSceneMoveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneMoveReq, pos_),
  };
  TViewSceneMoveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneMoveReq_descriptor_,
      TViewSceneMoveReq::default_instance_,
      TViewSceneMoveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneMoveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneMoveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneMoveReq));
  TViewSceneChangeStatusReq_descriptor_ = file->message_type(4);
  static const int TViewSceneChangeStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneChangeStatusReq, status_),
  };
  TViewSceneChangeStatusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneChangeStatusReq_descriptor_,
      TViewSceneChangeStatusReq::default_instance_,
      TViewSceneChangeStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneChangeStatusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneChangeStatusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneChangeStatusReq));
  TViewSceneUserInfoChangeNotify_descriptor_ = file->message_type(5);
  static const int TViewSceneUserInfoChangeNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfoChangeNotify, viewscenetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfoChangeNotify, viewsceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfoChangeNotify, arruserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfoChangeNotify, arrlogoffuid_),
  };
  TViewSceneUserInfoChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneUserInfoChangeNotify_descriptor_,
      TViewSceneUserInfoChangeNotify::default_instance_,
      TViewSceneUserInfoChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfoChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneUserInfoChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneUserInfoChangeNotify));
  TViewSceneCrossBaseInfoData_descriptor_ = file->message_type(6);
  static const int TViewSceneCrossBaseInfoData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossBaseInfoData, usersimpleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossBaseInfoData, arenaposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossBaseInfoData, highorderrankposition_),
  };
  TViewSceneCrossBaseInfoData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneCrossBaseInfoData_descriptor_,
      TViewSceneCrossBaseInfoData::default_instance_,
      TViewSceneCrossBaseInfoData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossBaseInfoData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossBaseInfoData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneCrossBaseInfoData));
  TViewSceneCrossUserInfo_descriptor_ = file->message_type(7);
  static const int TViewSceneCrossUserInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, usertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, isleaving_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, infodata_),
  };
  TViewSceneCrossUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneCrossUserInfo_descriptor_,
      TViewSceneCrossUserInfo::default_instance_,
      TViewSceneCrossUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneCrossUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneCrossUserInfo));
  TViewSceneEnterCrossReq_descriptor_ = file->message_type(8);
  static const int TViewSceneEnterCrossReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossReq, viewscenecrosstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossReq, viewscenecrossid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossReq, pos_),
  };
  TViewSceneEnterCrossReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneEnterCrossReq_descriptor_,
      TViewSceneEnterCrossReq::default_instance_,
      TViewSceneEnterCrossReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneEnterCrossReq));
  TViewSceneEnterCrossRsp_descriptor_ = file->message_type(9);
  static const int TViewSceneEnterCrossRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossRsp, arruserinfo_),
  };
  TViewSceneEnterCrossRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneEnterCrossRsp_descriptor_,
      TViewSceneEnterCrossRsp::default_instance_,
      TViewSceneEnterCrossRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneEnterCrossRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneEnterCrossRsp));
  TViewSceneMoveCrossReq_descriptor_ = file->message_type(10);
  static const int TViewSceneMoveCrossReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneMoveCrossReq, pos_),
  };
  TViewSceneMoveCrossReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneMoveCrossReq_descriptor_,
      TViewSceneMoveCrossReq::default_instance_,
      TViewSceneMoveCrossReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneMoveCrossReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneMoveCrossReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneMoveCrossReq));
  TViewSceneChangeStatusCrossReq_descriptor_ = file->message_type(11);
  static const int TViewSceneChangeStatusCrossReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneChangeStatusCrossReq, status_),
  };
  TViewSceneChangeStatusCrossReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewSceneChangeStatusCrossReq_descriptor_,
      TViewSceneChangeStatusCrossReq::default_instance_,
      TViewSceneChangeStatusCrossReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneChangeStatusCrossReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewSceneChangeStatusCrossReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewSceneChangeStatusCrossReq));
  EViewSceneUserStatus_descriptor_ = file->enum_type(0);
  EViewSceneType_descriptor_ = file->enum_type(1);
  EViewSceneUserType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fViewScene_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneUserInfo_descriptor_, &TViewSceneUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneEnterReq_descriptor_, &TViewSceneEnterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneEnterRsp_descriptor_, &TViewSceneEnterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneMoveReq_descriptor_, &TViewSceneMoveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneChangeStatusReq_descriptor_, &TViewSceneChangeStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneUserInfoChangeNotify_descriptor_, &TViewSceneUserInfoChangeNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneCrossBaseInfoData_descriptor_, &TViewSceneCrossBaseInfoData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneCrossUserInfo_descriptor_, &TViewSceneCrossUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneEnterCrossReq_descriptor_, &TViewSceneEnterCrossReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneEnterCrossRsp_descriptor_, &TViewSceneEnterCrossRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneMoveCrossReq_descriptor_, &TViewSceneMoveCrossReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewSceneChangeStatusCrossReq_descriptor_, &TViewSceneChangeStatusCrossReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fViewScene_2eproto() {
  delete TViewSceneUserInfo::default_instance_;
  delete TViewSceneUserInfo_reflection_;
  delete TViewSceneEnterReq::default_instance_;
  delete TViewSceneEnterReq_reflection_;
  delete TViewSceneEnterRsp::default_instance_;
  delete TViewSceneEnterRsp_reflection_;
  delete TViewSceneMoveReq::default_instance_;
  delete TViewSceneMoveReq_reflection_;
  delete TViewSceneChangeStatusReq::default_instance_;
  delete TViewSceneChangeStatusReq_reflection_;
  delete TViewSceneUserInfoChangeNotify::default_instance_;
  delete TViewSceneUserInfoChangeNotify_reflection_;
  delete TViewSceneCrossBaseInfoData::default_instance_;
  delete TViewSceneCrossBaseInfoData_reflection_;
  delete TViewSceneCrossUserInfo::default_instance_;
  delete TViewSceneCrossUserInfo_reflection_;
  delete TViewSceneEnterCrossReq::default_instance_;
  delete TViewSceneEnterCrossReq_reflection_;
  delete TViewSceneEnterCrossRsp::default_instance_;
  delete TViewSceneEnterCrossRsp_reflection_;
  delete TViewSceneMoveCrossReq::default_instance_;
  delete TViewSceneMoveCrossReq_reflection_;
  delete TViewSceneChangeStatusCrossReq::default_instance_;
  delete TViewSceneChangeStatusCrossReq_reflection_;
}

void protobuf_AddDesc_net_2fViewScene_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/ViewScene.proto\022\002pb\032\016net/User.prot"
    "o\"\370\001\n\022TViewSceneUserInfo\022\013\n\003uid\030\001 \001(\004\022\013\n"
    "\003Pos\030\002 \001(\r\022(\n\006Status\030\003 \001(\0162\030.pb.EViewSce"
    "neUserStatus\022(\n\010UserType\030\004 \001(\0162\026.pb.EVie"
    "wSceneUserType\022+\n\016UserSimpleInfo\030\005 \001(\0132\023"
    ".pb.TUserSimpleInfo\022\021\n\tIsLeaving\030\006 \001(\r\022\025"
    "\n\rArenaPosition\030\007 \001(\005\022\035\n\025HighorderRankPo"
    "sition\030\010 \001(\005\"a\n\022TViewSceneEnterReq\022)\n\rVi"
    "ewSceneType\030\001 \001(\0162\022.pb.EViewSceneType\022\023\n"
    "\013ViewSceneId\030\002 \001(\004\022\013\n\003Pos\030\003 \001(\r\"A\n\022TView"
    "SceneEnterRsp\022+\n\013ArrUserInfo\030\001 \003(\0132\026.pb."
    "TViewSceneUserInfo\" \n\021TViewSceneMoveReq\022"
    "\013\n\003Pos\030\001 \001(\r\"E\n\031TViewSceneChangeStatusRe"
    "q\022(\n\006Status\030\001 \001(\0162\030.pb.EViewSceneUserSta"
    "tus\"\243\001\n\036TViewSceneUserInfoChangeNotify\022)"
    "\n\rViewSceneType\030\001 \001(\0162\022.pb.EViewSceneTyp"
    "e\022\023\n\013ViewSceneId\030\002 \001(\004\022+\n\013ArrUserInfo\030\003 "
    "\003(\0132\026.pb.TViewSceneUserInfo\022\024\n\014ArrLogoff"
    "Uid\030\004 \003(\004\"\200\001\n\033TViewSceneCrossBaseInfoDat"
    "a\022+\n\016UserSimpleInfo\030\001 \001(\0132\023.pb.TUserSimp"
    "leInfo\022\025\n\rArenaPosition\030\002 \001(\005\022\035\n\025Highord"
    "erRankPosition\030\003 \001(\005\"\276\001\n\027TViewSceneCross"
    "UserInfo\022\013\n\003Uid\030\001 \001(\004\022\020\n\010ServerId\030\002 \001(\t\022"
    "\013\n\003Pos\030\003 \001(\r\022(\n\006Status\030\004 \001(\0162\030.pb.EViewS"
    "ceneUserStatus\022(\n\010UserType\030\005 \001(\0162\026.pb.EV"
    "iewSceneUserType\022\021\n\tIsLeaving\030\006 \001(\r\022\020\n\010I"
    "nfoData\030\007 \001(\014\"p\n\027TViewSceneEnterCrossReq"
    "\022.\n\022ViewSceneCrossType\030\001 \001(\0162\022.pb.EViewS"
    "ceneType\022\030\n\020ViewSceneCrossId\030\002 \001(\004\022\013\n\003Po"
    "s\030\003 \001(\r\"K\n\027TViewSceneEnterCrossRsp\0220\n\013Ar"
    "rUserInfo\030\001 \003(\0132\033.pb.TViewSceneCrossUser"
    "Info\"%\n\026TViewSceneMoveCrossReq\022\013\n\003Pos\030\001 "
    "\001(\r\"J\n\036TViewSceneChangeStatusCrossReq\022(\n"
    "\006Status\030\001 \001(\0162\030.pb.EViewSceneUserStatus*"
    ".\n\024EViewSceneUserStatus\022\010\n\004IDLE\020\000\022\014\n\010FIG"
    "HTING\020\001*\365\001\n\016EViewSceneType\022\022\n\016SCENE_INST"
    "ANCE\020\001\022\017\n\013SCENE_GUILD\020\002\022\023\n\017SCENE_ADVENTU"
    "RE\020\003\022\023\n\017SCENE_WORLDBOSS\020\004\022\031\n\025SCENE_CROSS"
    "_WORLDBOSS\020\005\022\024\n\020SCENE_CROSS_LEVY\020\006\022\030\n\024SC"
    "ENE_CROSS_ALLIANCE\020\007\022\027\n\023SCENE_CROSS_BIGH"
    "UNT\020\010\022\032\n\026SCENE_CROSS_UNIONPARTY\020\t\022\024\n\020SCE"
    "NE_CROSS_BOSS\020\n*S\n\022EViewSceneUserType\022\022\n"
    "\016USER_TYPE_RAND\020\001\022\024\n\020USER_TYPE_FRIEND\020\002\022"
    "\023\n\017USER_TYPE_GUILD\020\003", 1740);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ViewScene.proto", &protobuf_RegisterTypes);
  TViewSceneUserInfo::default_instance_ = new TViewSceneUserInfo();
  TViewSceneEnterReq::default_instance_ = new TViewSceneEnterReq();
  TViewSceneEnterRsp::default_instance_ = new TViewSceneEnterRsp();
  TViewSceneMoveReq::default_instance_ = new TViewSceneMoveReq();
  TViewSceneChangeStatusReq::default_instance_ = new TViewSceneChangeStatusReq();
  TViewSceneUserInfoChangeNotify::default_instance_ = new TViewSceneUserInfoChangeNotify();
  TViewSceneCrossBaseInfoData::default_instance_ = new TViewSceneCrossBaseInfoData();
  TViewSceneCrossUserInfo::default_instance_ = new TViewSceneCrossUserInfo();
  TViewSceneEnterCrossReq::default_instance_ = new TViewSceneEnterCrossReq();
  TViewSceneEnterCrossRsp::default_instance_ = new TViewSceneEnterCrossRsp();
  TViewSceneMoveCrossReq::default_instance_ = new TViewSceneMoveCrossReq();
  TViewSceneChangeStatusCrossReq::default_instance_ = new TViewSceneChangeStatusCrossReq();
  TViewSceneUserInfo::default_instance_->InitAsDefaultInstance();
  TViewSceneEnterReq::default_instance_->InitAsDefaultInstance();
  TViewSceneEnterRsp::default_instance_->InitAsDefaultInstance();
  TViewSceneMoveReq::default_instance_->InitAsDefaultInstance();
  TViewSceneChangeStatusReq::default_instance_->InitAsDefaultInstance();
  TViewSceneUserInfoChangeNotify::default_instance_->InitAsDefaultInstance();
  TViewSceneCrossBaseInfoData::default_instance_->InitAsDefaultInstance();
  TViewSceneCrossUserInfo::default_instance_->InitAsDefaultInstance();
  TViewSceneEnterCrossReq::default_instance_->InitAsDefaultInstance();
  TViewSceneEnterCrossRsp::default_instance_->InitAsDefaultInstance();
  TViewSceneMoveCrossReq::default_instance_->InitAsDefaultInstance();
  TViewSceneChangeStatusCrossReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fViewScene_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fViewScene_2eproto {
  StaticDescriptorInitializer_net_2fViewScene_2eproto() {
    protobuf_AddDesc_net_2fViewScene_2eproto();
  }
} static_descriptor_initializer_net_2fViewScene_2eproto_;
const ::google::protobuf::EnumDescriptor* EViewSceneUserStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EViewSceneUserStatus_descriptor_;
}
bool EViewSceneUserStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EViewSceneType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EViewSceneType_descriptor_;
}
bool EViewSceneType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EViewSceneUserType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EViewSceneUserType_descriptor_;
}
bool EViewSceneUserType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneUserInfo::kUidFieldNumber;
const int TViewSceneUserInfo::kPosFieldNumber;
const int TViewSceneUserInfo::kStatusFieldNumber;
const int TViewSceneUserInfo::kUserTypeFieldNumber;
const int TViewSceneUserInfo::kUserSimpleInfoFieldNumber;
const int TViewSceneUserInfo::kIsLeavingFieldNumber;
const int TViewSceneUserInfo::kArenaPositionFieldNumber;
const int TViewSceneUserInfo::kHighorderRankPositionFieldNumber;
#endif  // !_MSC_VER

TViewSceneUserInfo::TViewSceneUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneUserInfo)
}

void TViewSceneUserInfo::InitAsDefaultInstance() {
  usersimpleinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TViewSceneUserInfo::TViewSceneUserInfo(const TViewSceneUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneUserInfo)
}

void TViewSceneUserInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  pos_ = 0u;
  status_ = 0;
  usertype_ = 1;
  usersimpleinfo_ = NULL;
  isleaving_ = 0u;
  arenaposition_ = 0;
  highorderrankposition_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneUserInfo::~TViewSceneUserInfo() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneUserInfo)
  SharedDtor();
}

void TViewSceneUserInfo::SharedDtor() {
  if (this != default_instance_) {
    delete usersimpleinfo_;
  }
}

void TViewSceneUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneUserInfo_descriptor_;
}

const TViewSceneUserInfo& TViewSceneUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneUserInfo* TViewSceneUserInfo::default_instance_ = NULL;

TViewSceneUserInfo* TViewSceneUserInfo::New() const {
  return new TViewSceneUserInfo;
}

void TViewSceneUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TViewSceneUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uid_, status_);
    ZR_(isleaving_, highorderrankposition_);
    usertype_ = 1;
    if (has_usersimpleinfo()) {
      if (usersimpleinfo_ != NULL) usersimpleinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Status;
        break;
      }

      // optional .pb.EViewSceneUserStatus Status = 3;
      case 3: {
        if (tag == 24) {
         parse_Status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EViewSceneUserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UserType;
        break;
      }

      // optional .pb.EViewSceneUserType UserType = 4;
      case 4: {
        if (tag == 32) {
         parse_UserType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserType_IsValid(value)) {
            set_usertype(static_cast< ::pb::EViewSceneUserType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_UserSimpleInfo;
        break;
      }

      // optional .pb.TUserSimpleInfo UserSimpleInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_UserSimpleInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usersimpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_IsLeaving;
        break;
      }

      // optional uint32 IsLeaving = 6;
      case 6: {
        if (tag == 48) {
         parse_IsLeaving:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isleaving_)));
          set_has_isleaving();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ArenaPosition;
        break;
      }

      // optional int32 ArenaPosition = 7;
      case 7: {
        if (tag == 56) {
         parse_ArenaPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arenaposition_)));
          set_has_arenaposition();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_HighorderRankPosition;
        break;
      }

      // optional int32 HighorderRankPosition = 8;
      case 8: {
        if (tag == 64) {
         parse_HighorderRankPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &highorderrankposition_)));
          set_has_highorderrankposition();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneUserInfo)
  return false;
#undef DO_
}

void TViewSceneUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneUserInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  // optional .pb.EViewSceneUserStatus Status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional .pb.EViewSceneUserType UserType = 4;
  if (has_usertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->usertype(), output);
  }

  // optional .pb.TUserSimpleInfo UserSimpleInfo = 5;
  if (has_usersimpleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->usersimpleinfo(), output);
  }

  // optional uint32 IsLeaving = 6;
  if (has_isleaving()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->isleaving(), output);
  }

  // optional int32 ArenaPosition = 7;
  if (has_arenaposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->arenaposition(), output);
  }

  // optional int32 HighorderRankPosition = 8;
  if (has_highorderrankposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->highorderrankposition(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneUserInfo)
}

::google::protobuf::uint8* TViewSceneUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneUserInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  // optional .pb.EViewSceneUserStatus Status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional .pb.EViewSceneUserType UserType = 4;
  if (has_usertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->usertype(), target);
  }

  // optional .pb.TUserSimpleInfo UserSimpleInfo = 5;
  if (has_usersimpleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->usersimpleinfo(), target);
  }

  // optional uint32 IsLeaving = 6;
  if (has_isleaving()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->isleaving(), target);
  }

  // optional int32 ArenaPosition = 7;
  if (has_arenaposition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->arenaposition(), target);
  }

  // optional int32 HighorderRankPosition = 8;
  if (has_highorderrankposition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->highorderrankposition(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneUserInfo)
  return target;
}

int TViewSceneUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional uint32 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.EViewSceneUserStatus Status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .pb.EViewSceneUserType UserType = 4;
    if (has_usertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->usertype());
    }

    // optional .pb.TUserSimpleInfo UserSimpleInfo = 5;
    if (has_usersimpleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->usersimpleinfo());
    }

    // optional uint32 IsLeaving = 6;
    if (has_isleaving()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isleaving());
    }

    // optional int32 ArenaPosition = 7;
    if (has_arenaposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arenaposition());
    }

    // optional int32 HighorderRankPosition = 8;
    if (has_highorderrankposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->highorderrankposition());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneUserInfo::MergeFrom(const TViewSceneUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_usertype()) {
      set_usertype(from.usertype());
    }
    if (from.has_usersimpleinfo()) {
      mutable_usersimpleinfo()->::pb::TUserSimpleInfo::MergeFrom(from.usersimpleinfo());
    }
    if (from.has_isleaving()) {
      set_isleaving(from.isleaving());
    }
    if (from.has_arenaposition()) {
      set_arenaposition(from.arenaposition());
    }
    if (from.has_highorderrankposition()) {
      set_highorderrankposition(from.highorderrankposition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneUserInfo::CopyFrom(const TViewSceneUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneUserInfo::IsInitialized() const {

  return true;
}

void TViewSceneUserInfo::Swap(TViewSceneUserInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(pos_, other->pos_);
    std::swap(status_, other->status_);
    std::swap(usertype_, other->usertype_);
    std::swap(usersimpleinfo_, other->usersimpleinfo_);
    std::swap(isleaving_, other->isleaving_);
    std::swap(arenaposition_, other->arenaposition_);
    std::swap(highorderrankposition_, other->highorderrankposition_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneUserInfo_descriptor_;
  metadata.reflection = TViewSceneUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneEnterReq::kViewSceneTypeFieldNumber;
const int TViewSceneEnterReq::kViewSceneIdFieldNumber;
const int TViewSceneEnterReq::kPosFieldNumber;
#endif  // !_MSC_VER

TViewSceneEnterReq::TViewSceneEnterReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneEnterReq)
}

void TViewSceneEnterReq::InitAsDefaultInstance() {
}

TViewSceneEnterReq::TViewSceneEnterReq(const TViewSceneEnterReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneEnterReq)
}

void TViewSceneEnterReq::SharedCtor() {
  _cached_size_ = 0;
  viewscenetype_ = 1;
  viewsceneid_ = GOOGLE_ULONGLONG(0);
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneEnterReq::~TViewSceneEnterReq() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneEnterReq)
  SharedDtor();
}

void TViewSceneEnterReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneEnterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneEnterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneEnterReq_descriptor_;
}

const TViewSceneEnterReq& TViewSceneEnterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneEnterReq* TViewSceneEnterReq::default_instance_ = NULL;

TViewSceneEnterReq* TViewSceneEnterReq::New() const {
  return new TViewSceneEnterReq;
}

void TViewSceneEnterReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    viewscenetype_ = 1;
    viewsceneid_ = GOOGLE_ULONGLONG(0);
    pos_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneEnterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneEnterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EViewSceneType ViewSceneType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneType_IsValid(value)) {
            set_viewscenetype(static_cast< ::pb::EViewSceneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ViewSceneId;
        break;
      }

      // optional uint64 ViewSceneId = 2;
      case 2: {
        if (tag == 16) {
         parse_ViewSceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &viewsceneid_)));
          set_has_viewsceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 3;
      case 3: {
        if (tag == 24) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneEnterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneEnterReq)
  return false;
#undef DO_
}

void TViewSceneEnterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneEnterReq)
  // optional .pb.EViewSceneType ViewSceneType = 1;
  if (has_viewscenetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->viewscenetype(), output);
  }

  // optional uint64 ViewSceneId = 2;
  if (has_viewsceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->viewsceneid(), output);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneEnterReq)
}

::google::protobuf::uint8* TViewSceneEnterReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneEnterReq)
  // optional .pb.EViewSceneType ViewSceneType = 1;
  if (has_viewscenetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->viewscenetype(), target);
  }

  // optional uint64 ViewSceneId = 2;
  if (has_viewsceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->viewsceneid(), target);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneEnterReq)
  return target;
}

int TViewSceneEnterReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EViewSceneType ViewSceneType = 1;
    if (has_viewscenetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewscenetype());
    }

    // optional uint64 ViewSceneId = 2;
    if (has_viewsceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->viewsceneid());
    }

    // optional uint32 Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneEnterReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneEnterReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneEnterReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneEnterReq::MergeFrom(const TViewSceneEnterReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewscenetype()) {
      set_viewscenetype(from.viewscenetype());
    }
    if (from.has_viewsceneid()) {
      set_viewsceneid(from.viewsceneid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneEnterReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneEnterReq::CopyFrom(const TViewSceneEnterReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneEnterReq::IsInitialized() const {

  return true;
}

void TViewSceneEnterReq::Swap(TViewSceneEnterReq* other) {
  if (other != this) {
    std::swap(viewscenetype_, other->viewscenetype_);
    std::swap(viewsceneid_, other->viewsceneid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneEnterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneEnterReq_descriptor_;
  metadata.reflection = TViewSceneEnterReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneEnterRsp::kArrUserInfoFieldNumber;
#endif  // !_MSC_VER

TViewSceneEnterRsp::TViewSceneEnterRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneEnterRsp)
}

void TViewSceneEnterRsp::InitAsDefaultInstance() {
}

TViewSceneEnterRsp::TViewSceneEnterRsp(const TViewSceneEnterRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneEnterRsp)
}

void TViewSceneEnterRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneEnterRsp::~TViewSceneEnterRsp() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneEnterRsp)
  SharedDtor();
}

void TViewSceneEnterRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneEnterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneEnterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneEnterRsp_descriptor_;
}

const TViewSceneEnterRsp& TViewSceneEnterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneEnterRsp* TViewSceneEnterRsp::default_instance_ = NULL;

TViewSceneEnterRsp* TViewSceneEnterRsp::New() const {
  return new TViewSceneEnterRsp;
}

void TViewSceneEnterRsp::Clear() {
  arruserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneEnterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneEnterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TViewSceneUserInfo ArrUserInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrUserInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneEnterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneEnterRsp)
  return false;
#undef DO_
}

void TViewSceneEnterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneEnterRsp)
  // repeated .pb.TViewSceneUserInfo ArrUserInfo = 1;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arruserinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneEnterRsp)
}

::google::protobuf::uint8* TViewSceneEnterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneEnterRsp)
  // repeated .pb.TViewSceneUserInfo ArrUserInfo = 1;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arruserinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneEnterRsp)
  return target;
}

int TViewSceneEnterRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TViewSceneUserInfo ArrUserInfo = 1;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneEnterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneEnterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneEnterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneEnterRsp::MergeFrom(const TViewSceneEnterRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneEnterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneEnterRsp::CopyFrom(const TViewSceneEnterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneEnterRsp::IsInitialized() const {

  return true;
}

void TViewSceneEnterRsp::Swap(TViewSceneEnterRsp* other) {
  if (other != this) {
    arruserinfo_.Swap(&other->arruserinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneEnterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneEnterRsp_descriptor_;
  metadata.reflection = TViewSceneEnterRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneMoveReq::kPosFieldNumber;
#endif  // !_MSC_VER

TViewSceneMoveReq::TViewSceneMoveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneMoveReq)
}

void TViewSceneMoveReq::InitAsDefaultInstance() {
}

TViewSceneMoveReq::TViewSceneMoveReq(const TViewSceneMoveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneMoveReq)
}

void TViewSceneMoveReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneMoveReq::~TViewSceneMoveReq() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneMoveReq)
  SharedDtor();
}

void TViewSceneMoveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneMoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneMoveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneMoveReq_descriptor_;
}

const TViewSceneMoveReq& TViewSceneMoveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneMoveReq* TViewSceneMoveReq::default_instance_ = NULL;

TViewSceneMoveReq* TViewSceneMoveReq::New() const {
  return new TViewSceneMoveReq;
}

void TViewSceneMoveReq::Clear() {
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneMoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneMoveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneMoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneMoveReq)
  return false;
#undef DO_
}

void TViewSceneMoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneMoveReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneMoveReq)
}

::google::protobuf::uint8* TViewSceneMoveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneMoveReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneMoveReq)
  return target;
}

int TViewSceneMoveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneMoveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneMoveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneMoveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneMoveReq::MergeFrom(const TViewSceneMoveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneMoveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneMoveReq::CopyFrom(const TViewSceneMoveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneMoveReq::IsInitialized() const {

  return true;
}

void TViewSceneMoveReq::Swap(TViewSceneMoveReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneMoveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneMoveReq_descriptor_;
  metadata.reflection = TViewSceneMoveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneChangeStatusReq::kStatusFieldNumber;
#endif  // !_MSC_VER

TViewSceneChangeStatusReq::TViewSceneChangeStatusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneChangeStatusReq)
}

void TViewSceneChangeStatusReq::InitAsDefaultInstance() {
}

TViewSceneChangeStatusReq::TViewSceneChangeStatusReq(const TViewSceneChangeStatusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneChangeStatusReq)
}

void TViewSceneChangeStatusReq::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneChangeStatusReq::~TViewSceneChangeStatusReq() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneChangeStatusReq)
  SharedDtor();
}

void TViewSceneChangeStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneChangeStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneChangeStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneChangeStatusReq_descriptor_;
}

const TViewSceneChangeStatusReq& TViewSceneChangeStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneChangeStatusReq* TViewSceneChangeStatusReq::default_instance_ = NULL;

TViewSceneChangeStatusReq* TViewSceneChangeStatusReq::New() const {
  return new TViewSceneChangeStatusReq;
}

void TViewSceneChangeStatusReq::Clear() {
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneChangeStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneChangeStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EViewSceneUserStatus Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EViewSceneUserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneChangeStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneChangeStatusReq)
  return false;
#undef DO_
}

void TViewSceneChangeStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneChangeStatusReq)
  // optional .pb.EViewSceneUserStatus Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneChangeStatusReq)
}

::google::protobuf::uint8* TViewSceneChangeStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneChangeStatusReq)
  // optional .pb.EViewSceneUserStatus Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneChangeStatusReq)
  return target;
}

int TViewSceneChangeStatusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EViewSceneUserStatus Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneChangeStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneChangeStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneChangeStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneChangeStatusReq::MergeFrom(const TViewSceneChangeStatusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneChangeStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneChangeStatusReq::CopyFrom(const TViewSceneChangeStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneChangeStatusReq::IsInitialized() const {

  return true;
}

void TViewSceneChangeStatusReq::Swap(TViewSceneChangeStatusReq* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneChangeStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneChangeStatusReq_descriptor_;
  metadata.reflection = TViewSceneChangeStatusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneUserInfoChangeNotify::kViewSceneTypeFieldNumber;
const int TViewSceneUserInfoChangeNotify::kViewSceneIdFieldNumber;
const int TViewSceneUserInfoChangeNotify::kArrUserInfoFieldNumber;
const int TViewSceneUserInfoChangeNotify::kArrLogoffUidFieldNumber;
#endif  // !_MSC_VER

TViewSceneUserInfoChangeNotify::TViewSceneUserInfoChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneUserInfoChangeNotify)
}

void TViewSceneUserInfoChangeNotify::InitAsDefaultInstance() {
}

TViewSceneUserInfoChangeNotify::TViewSceneUserInfoChangeNotify(const TViewSceneUserInfoChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneUserInfoChangeNotify)
}

void TViewSceneUserInfoChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  viewscenetype_ = 1;
  viewsceneid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneUserInfoChangeNotify::~TViewSceneUserInfoChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneUserInfoChangeNotify)
  SharedDtor();
}

void TViewSceneUserInfoChangeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneUserInfoChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneUserInfoChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneUserInfoChangeNotify_descriptor_;
}

const TViewSceneUserInfoChangeNotify& TViewSceneUserInfoChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneUserInfoChangeNotify* TViewSceneUserInfoChangeNotify::default_instance_ = NULL;

TViewSceneUserInfoChangeNotify* TViewSceneUserInfoChangeNotify::New() const {
  return new TViewSceneUserInfoChangeNotify;
}

void TViewSceneUserInfoChangeNotify::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    viewscenetype_ = 1;
    viewsceneid_ = GOOGLE_ULONGLONG(0);
  }
  arruserinfo_.Clear();
  arrlogoffuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneUserInfoChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneUserInfoChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EViewSceneType ViewSceneType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneType_IsValid(value)) {
            set_viewscenetype(static_cast< ::pb::EViewSceneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ViewSceneId;
        break;
      }

      // optional uint64 ViewSceneId = 2;
      case 2: {
        if (tag == 16) {
         parse_ViewSceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &viewsceneid_)));
          set_has_viewsceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrUserInfo;
        break;
      }

      // repeated .pb.TViewSceneUserInfo ArrUserInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrUserInfo;
        if (input->ExpectTag(32)) goto parse_ArrLogoffUid;
        break;
      }

      // repeated uint64 ArrLogoffUid = 4;
      case 4: {
        if (tag == 32) {
         parse_ArrLogoffUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32, input, this->mutable_arrlogoffuid())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_arrlogoffuid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ArrLogoffUid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneUserInfoChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneUserInfoChangeNotify)
  return false;
#undef DO_
}

void TViewSceneUserInfoChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneUserInfoChangeNotify)
  // optional .pb.EViewSceneType ViewSceneType = 1;
  if (has_viewscenetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->viewscenetype(), output);
  }

  // optional uint64 ViewSceneId = 2;
  if (has_viewsceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->viewsceneid(), output);
  }

  // repeated .pb.TViewSceneUserInfo ArrUserInfo = 3;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arruserinfo(i), output);
  }

  // repeated uint64 ArrLogoffUid = 4;
  for (int i = 0; i < this->arrlogoffuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->arrlogoffuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneUserInfoChangeNotify)
}

::google::protobuf::uint8* TViewSceneUserInfoChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneUserInfoChangeNotify)
  // optional .pb.EViewSceneType ViewSceneType = 1;
  if (has_viewscenetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->viewscenetype(), target);
  }

  // optional uint64 ViewSceneId = 2;
  if (has_viewsceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->viewsceneid(), target);
  }

  // repeated .pb.TViewSceneUserInfo ArrUserInfo = 3;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arruserinfo(i), target);
  }

  // repeated uint64 ArrLogoffUid = 4;
  for (int i = 0; i < this->arrlogoffuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->arrlogoffuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneUserInfoChangeNotify)
  return target;
}

int TViewSceneUserInfoChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EViewSceneType ViewSceneType = 1;
    if (has_viewscenetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewscenetype());
    }

    // optional uint64 ViewSceneId = 2;
    if (has_viewsceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->viewsceneid());
    }

  }
  // repeated .pb.TViewSceneUserInfo ArrUserInfo = 3;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  // repeated uint64 ArrLogoffUid = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrlogoffuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->arrlogoffuid(i));
    }
    total_size += 1 * this->arrlogoffuid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneUserInfoChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneUserInfoChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneUserInfoChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneUserInfoChangeNotify::MergeFrom(const TViewSceneUserInfoChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  arrlogoffuid_.MergeFrom(from.arrlogoffuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewscenetype()) {
      set_viewscenetype(from.viewscenetype());
    }
    if (from.has_viewsceneid()) {
      set_viewsceneid(from.viewsceneid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneUserInfoChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneUserInfoChangeNotify::CopyFrom(const TViewSceneUserInfoChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneUserInfoChangeNotify::IsInitialized() const {

  return true;
}

void TViewSceneUserInfoChangeNotify::Swap(TViewSceneUserInfoChangeNotify* other) {
  if (other != this) {
    std::swap(viewscenetype_, other->viewscenetype_);
    std::swap(viewsceneid_, other->viewsceneid_);
    arruserinfo_.Swap(&other->arruserinfo_);
    arrlogoffuid_.Swap(&other->arrlogoffuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneUserInfoChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneUserInfoChangeNotify_descriptor_;
  metadata.reflection = TViewSceneUserInfoChangeNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneCrossBaseInfoData::kUserSimpleInfoFieldNumber;
const int TViewSceneCrossBaseInfoData::kArenaPositionFieldNumber;
const int TViewSceneCrossBaseInfoData::kHighorderRankPositionFieldNumber;
#endif  // !_MSC_VER

TViewSceneCrossBaseInfoData::TViewSceneCrossBaseInfoData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneCrossBaseInfoData)
}

void TViewSceneCrossBaseInfoData::InitAsDefaultInstance() {
  usersimpleinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TViewSceneCrossBaseInfoData::TViewSceneCrossBaseInfoData(const TViewSceneCrossBaseInfoData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneCrossBaseInfoData)
}

void TViewSceneCrossBaseInfoData::SharedCtor() {
  _cached_size_ = 0;
  usersimpleinfo_ = NULL;
  arenaposition_ = 0;
  highorderrankposition_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneCrossBaseInfoData::~TViewSceneCrossBaseInfoData() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneCrossBaseInfoData)
  SharedDtor();
}

void TViewSceneCrossBaseInfoData::SharedDtor() {
  if (this != default_instance_) {
    delete usersimpleinfo_;
  }
}

void TViewSceneCrossBaseInfoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneCrossBaseInfoData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneCrossBaseInfoData_descriptor_;
}

const TViewSceneCrossBaseInfoData& TViewSceneCrossBaseInfoData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneCrossBaseInfoData* TViewSceneCrossBaseInfoData::default_instance_ = NULL;

TViewSceneCrossBaseInfoData* TViewSceneCrossBaseInfoData::New() const {
  return new TViewSceneCrossBaseInfoData;
}

void TViewSceneCrossBaseInfoData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TViewSceneCrossBaseInfoData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(arenaposition_, highorderrankposition_);
    if (has_usersimpleinfo()) {
      if (usersimpleinfo_ != NULL) usersimpleinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneCrossBaseInfoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneCrossBaseInfoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserSimpleInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usersimpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArenaPosition;
        break;
      }

      // optional int32 ArenaPosition = 2;
      case 2: {
        if (tag == 16) {
         parse_ArenaPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arenaposition_)));
          set_has_arenaposition();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HighorderRankPosition;
        break;
      }

      // optional int32 HighorderRankPosition = 3;
      case 3: {
        if (tag == 24) {
         parse_HighorderRankPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &highorderrankposition_)));
          set_has_highorderrankposition();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneCrossBaseInfoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneCrossBaseInfoData)
  return false;
#undef DO_
}

void TViewSceneCrossBaseInfoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneCrossBaseInfoData)
  // optional .pb.TUserSimpleInfo UserSimpleInfo = 1;
  if (has_usersimpleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->usersimpleinfo(), output);
  }

  // optional int32 ArenaPosition = 2;
  if (has_arenaposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->arenaposition(), output);
  }

  // optional int32 HighorderRankPosition = 3;
  if (has_highorderrankposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->highorderrankposition(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneCrossBaseInfoData)
}

::google::protobuf::uint8* TViewSceneCrossBaseInfoData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneCrossBaseInfoData)
  // optional .pb.TUserSimpleInfo UserSimpleInfo = 1;
  if (has_usersimpleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->usersimpleinfo(), target);
  }

  // optional int32 ArenaPosition = 2;
  if (has_arenaposition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->arenaposition(), target);
  }

  // optional int32 HighorderRankPosition = 3;
  if (has_highorderrankposition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->highorderrankposition(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneCrossBaseInfoData)
  return target;
}

int TViewSceneCrossBaseInfoData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserSimpleInfo = 1;
    if (has_usersimpleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->usersimpleinfo());
    }

    // optional int32 ArenaPosition = 2;
    if (has_arenaposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arenaposition());
    }

    // optional int32 HighorderRankPosition = 3;
    if (has_highorderrankposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->highorderrankposition());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneCrossBaseInfoData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneCrossBaseInfoData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneCrossBaseInfoData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneCrossBaseInfoData::MergeFrom(const TViewSceneCrossBaseInfoData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usersimpleinfo()) {
      mutable_usersimpleinfo()->::pb::TUserSimpleInfo::MergeFrom(from.usersimpleinfo());
    }
    if (from.has_arenaposition()) {
      set_arenaposition(from.arenaposition());
    }
    if (from.has_highorderrankposition()) {
      set_highorderrankposition(from.highorderrankposition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneCrossBaseInfoData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneCrossBaseInfoData::CopyFrom(const TViewSceneCrossBaseInfoData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneCrossBaseInfoData::IsInitialized() const {

  return true;
}

void TViewSceneCrossBaseInfoData::Swap(TViewSceneCrossBaseInfoData* other) {
  if (other != this) {
    std::swap(usersimpleinfo_, other->usersimpleinfo_);
    std::swap(arenaposition_, other->arenaposition_);
    std::swap(highorderrankposition_, other->highorderrankposition_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneCrossBaseInfoData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneCrossBaseInfoData_descriptor_;
  metadata.reflection = TViewSceneCrossBaseInfoData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneCrossUserInfo::kUidFieldNumber;
const int TViewSceneCrossUserInfo::kServerIdFieldNumber;
const int TViewSceneCrossUserInfo::kPosFieldNumber;
const int TViewSceneCrossUserInfo::kStatusFieldNumber;
const int TViewSceneCrossUserInfo::kUserTypeFieldNumber;
const int TViewSceneCrossUserInfo::kIsLeavingFieldNumber;
const int TViewSceneCrossUserInfo::kInfoDataFieldNumber;
#endif  // !_MSC_VER

TViewSceneCrossUserInfo::TViewSceneCrossUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneCrossUserInfo)
}

void TViewSceneCrossUserInfo::InitAsDefaultInstance() {
}

TViewSceneCrossUserInfo::TViewSceneCrossUserInfo(const TViewSceneCrossUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneCrossUserInfo)
}

void TViewSceneCrossUserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = 0u;
  status_ = 0;
  usertype_ = 1;
  isleaving_ = 0u;
  infodata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneCrossUserInfo::~TViewSceneCrossUserInfo() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneCrossUserInfo)
  SharedDtor();
}

void TViewSceneCrossUserInfo::SharedDtor() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (infodata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete infodata_;
  }
  if (this != default_instance_) {
  }
}

void TViewSceneCrossUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneCrossUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneCrossUserInfo_descriptor_;
}

const TViewSceneCrossUserInfo& TViewSceneCrossUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneCrossUserInfo* TViewSceneCrossUserInfo::default_instance_ = NULL;

TViewSceneCrossUserInfo* TViewSceneCrossUserInfo::New() const {
  return new TViewSceneCrossUserInfo;
}

void TViewSceneCrossUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TViewSceneCrossUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(pos_, status_);
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_serverid()) {
      if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverid_->clear();
      }
    }
    usertype_ = 1;
    isleaving_ = 0u;
    if (has_infodata()) {
      if (infodata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        infodata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneCrossUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneCrossUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerId;
        break;
      }

      // optional string ServerId = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverid().data(), this->serverid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 3;
      case 3: {
        if (tag == 24) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Status;
        break;
      }

      // optional .pb.EViewSceneUserStatus Status = 4;
      case 4: {
        if (tag == 32) {
         parse_Status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EViewSceneUserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_UserType;
        break;
      }

      // optional .pb.EViewSceneUserType UserType = 5;
      case 5: {
        if (tag == 40) {
         parse_UserType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserType_IsValid(value)) {
            set_usertype(static_cast< ::pb::EViewSceneUserType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_IsLeaving;
        break;
      }

      // optional uint32 IsLeaving = 6;
      case 6: {
        if (tag == 48) {
         parse_IsLeaving:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isleaving_)));
          set_has_isleaving();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_InfoData;
        break;
      }

      // optional bytes InfoData = 7;
      case 7: {
        if (tag == 58) {
         parse_InfoData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_infodata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneCrossUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneCrossUserInfo)
  return false;
#undef DO_
}

void TViewSceneCrossUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneCrossUserInfo)
  // optional uint64 Uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serverid(), output);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  // optional .pb.EViewSceneUserStatus Status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // optional .pb.EViewSceneUserType UserType = 5;
  if (has_usertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->usertype(), output);
  }

  // optional uint32 IsLeaving = 6;
  if (has_isleaving()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->isleaving(), output);
  }

  // optional bytes InfoData = 7;
  if (has_infodata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->infodata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneCrossUserInfo)
}

::google::protobuf::uint8* TViewSceneCrossUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneCrossUserInfo)
  // optional uint64 Uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string ServerId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverid().data(), this->serverid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serverid(), target);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  // optional .pb.EViewSceneUserStatus Status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // optional .pb.EViewSceneUserType UserType = 5;
  if (has_usertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->usertype(), target);
  }

  // optional uint32 IsLeaving = 6;
  if (has_isleaving()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->isleaving(), target);
  }

  // optional bytes InfoData = 7;
  if (has_infodata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->infodata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneCrossUserInfo)
  return target;
}

int TViewSceneCrossUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string ServerId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverid());
    }

    // optional uint32 Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.EViewSceneUserStatus Status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .pb.EViewSceneUserType UserType = 5;
    if (has_usertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->usertype());
    }

    // optional uint32 IsLeaving = 6;
    if (has_isleaving()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isleaving());
    }

    // optional bytes InfoData = 7;
    if (has_infodata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->infodata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneCrossUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneCrossUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneCrossUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneCrossUserInfo::MergeFrom(const TViewSceneCrossUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_usertype()) {
      set_usertype(from.usertype());
    }
    if (from.has_isleaving()) {
      set_isleaving(from.isleaving());
    }
    if (from.has_infodata()) {
      set_infodata(from.infodata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneCrossUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneCrossUserInfo::CopyFrom(const TViewSceneCrossUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneCrossUserInfo::IsInitialized() const {

  return true;
}

void TViewSceneCrossUserInfo::Swap(TViewSceneCrossUserInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(serverid_, other->serverid_);
    std::swap(pos_, other->pos_);
    std::swap(status_, other->status_);
    std::swap(usertype_, other->usertype_);
    std::swap(isleaving_, other->isleaving_);
    std::swap(infodata_, other->infodata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneCrossUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneCrossUserInfo_descriptor_;
  metadata.reflection = TViewSceneCrossUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneEnterCrossReq::kViewSceneCrossTypeFieldNumber;
const int TViewSceneEnterCrossReq::kViewSceneCrossIdFieldNumber;
const int TViewSceneEnterCrossReq::kPosFieldNumber;
#endif  // !_MSC_VER

TViewSceneEnterCrossReq::TViewSceneEnterCrossReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneEnterCrossReq)
}

void TViewSceneEnterCrossReq::InitAsDefaultInstance() {
}

TViewSceneEnterCrossReq::TViewSceneEnterCrossReq(const TViewSceneEnterCrossReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneEnterCrossReq)
}

void TViewSceneEnterCrossReq::SharedCtor() {
  _cached_size_ = 0;
  viewscenecrosstype_ = 1;
  viewscenecrossid_ = GOOGLE_ULONGLONG(0);
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneEnterCrossReq::~TViewSceneEnterCrossReq() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneEnterCrossReq)
  SharedDtor();
}

void TViewSceneEnterCrossReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneEnterCrossReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneEnterCrossReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneEnterCrossReq_descriptor_;
}

const TViewSceneEnterCrossReq& TViewSceneEnterCrossReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneEnterCrossReq* TViewSceneEnterCrossReq::default_instance_ = NULL;

TViewSceneEnterCrossReq* TViewSceneEnterCrossReq::New() const {
  return new TViewSceneEnterCrossReq;
}

void TViewSceneEnterCrossReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    viewscenecrosstype_ = 1;
    viewscenecrossid_ = GOOGLE_ULONGLONG(0);
    pos_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneEnterCrossReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneEnterCrossReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EViewSceneType ViewSceneCrossType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneType_IsValid(value)) {
            set_viewscenecrosstype(static_cast< ::pb::EViewSceneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ViewSceneCrossId;
        break;
      }

      // optional uint64 ViewSceneCrossId = 2;
      case 2: {
        if (tag == 16) {
         parse_ViewSceneCrossId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &viewscenecrossid_)));
          set_has_viewscenecrossid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 3;
      case 3: {
        if (tag == 24) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneEnterCrossReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneEnterCrossReq)
  return false;
#undef DO_
}

void TViewSceneEnterCrossReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneEnterCrossReq)
  // optional .pb.EViewSceneType ViewSceneCrossType = 1;
  if (has_viewscenecrosstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->viewscenecrosstype(), output);
  }

  // optional uint64 ViewSceneCrossId = 2;
  if (has_viewscenecrossid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->viewscenecrossid(), output);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneEnterCrossReq)
}

::google::protobuf::uint8* TViewSceneEnterCrossReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneEnterCrossReq)
  // optional .pb.EViewSceneType ViewSceneCrossType = 1;
  if (has_viewscenecrosstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->viewscenecrosstype(), target);
  }

  // optional uint64 ViewSceneCrossId = 2;
  if (has_viewscenecrossid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->viewscenecrossid(), target);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneEnterCrossReq)
  return target;
}

int TViewSceneEnterCrossReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EViewSceneType ViewSceneCrossType = 1;
    if (has_viewscenecrosstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewscenecrosstype());
    }

    // optional uint64 ViewSceneCrossId = 2;
    if (has_viewscenecrossid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->viewscenecrossid());
    }

    // optional uint32 Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneEnterCrossReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneEnterCrossReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneEnterCrossReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneEnterCrossReq::MergeFrom(const TViewSceneEnterCrossReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewscenecrosstype()) {
      set_viewscenecrosstype(from.viewscenecrosstype());
    }
    if (from.has_viewscenecrossid()) {
      set_viewscenecrossid(from.viewscenecrossid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneEnterCrossReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneEnterCrossReq::CopyFrom(const TViewSceneEnterCrossReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneEnterCrossReq::IsInitialized() const {

  return true;
}

void TViewSceneEnterCrossReq::Swap(TViewSceneEnterCrossReq* other) {
  if (other != this) {
    std::swap(viewscenecrosstype_, other->viewscenecrosstype_);
    std::swap(viewscenecrossid_, other->viewscenecrossid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneEnterCrossReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneEnterCrossReq_descriptor_;
  metadata.reflection = TViewSceneEnterCrossReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneEnterCrossRsp::kArrUserInfoFieldNumber;
#endif  // !_MSC_VER

TViewSceneEnterCrossRsp::TViewSceneEnterCrossRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneEnterCrossRsp)
}

void TViewSceneEnterCrossRsp::InitAsDefaultInstance() {
}

TViewSceneEnterCrossRsp::TViewSceneEnterCrossRsp(const TViewSceneEnterCrossRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneEnterCrossRsp)
}

void TViewSceneEnterCrossRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneEnterCrossRsp::~TViewSceneEnterCrossRsp() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneEnterCrossRsp)
  SharedDtor();
}

void TViewSceneEnterCrossRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneEnterCrossRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneEnterCrossRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneEnterCrossRsp_descriptor_;
}

const TViewSceneEnterCrossRsp& TViewSceneEnterCrossRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneEnterCrossRsp* TViewSceneEnterCrossRsp::default_instance_ = NULL;

TViewSceneEnterCrossRsp* TViewSceneEnterCrossRsp::New() const {
  return new TViewSceneEnterCrossRsp;
}

void TViewSceneEnterCrossRsp::Clear() {
  arruserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneEnterCrossRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneEnterCrossRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TViewSceneCrossUserInfo ArrUserInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arruserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrUserInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneEnterCrossRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneEnterCrossRsp)
  return false;
#undef DO_
}

void TViewSceneEnterCrossRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneEnterCrossRsp)
  // repeated .pb.TViewSceneCrossUserInfo ArrUserInfo = 1;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arruserinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneEnterCrossRsp)
}

::google::protobuf::uint8* TViewSceneEnterCrossRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneEnterCrossRsp)
  // repeated .pb.TViewSceneCrossUserInfo ArrUserInfo = 1;
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arruserinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneEnterCrossRsp)
  return target;
}

int TViewSceneEnterCrossRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TViewSceneCrossUserInfo ArrUserInfo = 1;
  total_size += 1 * this->arruserinfo_size();
  for (int i = 0; i < this->arruserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arruserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneEnterCrossRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneEnterCrossRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneEnterCrossRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneEnterCrossRsp::MergeFrom(const TViewSceneEnterCrossRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arruserinfo_.MergeFrom(from.arruserinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneEnterCrossRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneEnterCrossRsp::CopyFrom(const TViewSceneEnterCrossRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneEnterCrossRsp::IsInitialized() const {

  return true;
}

void TViewSceneEnterCrossRsp::Swap(TViewSceneEnterCrossRsp* other) {
  if (other != this) {
    arruserinfo_.Swap(&other->arruserinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneEnterCrossRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneEnterCrossRsp_descriptor_;
  metadata.reflection = TViewSceneEnterCrossRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneMoveCrossReq::kPosFieldNumber;
#endif  // !_MSC_VER

TViewSceneMoveCrossReq::TViewSceneMoveCrossReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneMoveCrossReq)
}

void TViewSceneMoveCrossReq::InitAsDefaultInstance() {
}

TViewSceneMoveCrossReq::TViewSceneMoveCrossReq(const TViewSceneMoveCrossReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneMoveCrossReq)
}

void TViewSceneMoveCrossReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneMoveCrossReq::~TViewSceneMoveCrossReq() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneMoveCrossReq)
  SharedDtor();
}

void TViewSceneMoveCrossReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneMoveCrossReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneMoveCrossReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneMoveCrossReq_descriptor_;
}

const TViewSceneMoveCrossReq& TViewSceneMoveCrossReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneMoveCrossReq* TViewSceneMoveCrossReq::default_instance_ = NULL;

TViewSceneMoveCrossReq* TViewSceneMoveCrossReq::New() const {
  return new TViewSceneMoveCrossReq;
}

void TViewSceneMoveCrossReq::Clear() {
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneMoveCrossReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneMoveCrossReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneMoveCrossReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneMoveCrossReq)
  return false;
#undef DO_
}

void TViewSceneMoveCrossReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneMoveCrossReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneMoveCrossReq)
}

::google::protobuf::uint8* TViewSceneMoveCrossReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneMoveCrossReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneMoveCrossReq)
  return target;
}

int TViewSceneMoveCrossReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneMoveCrossReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneMoveCrossReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneMoveCrossReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneMoveCrossReq::MergeFrom(const TViewSceneMoveCrossReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneMoveCrossReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneMoveCrossReq::CopyFrom(const TViewSceneMoveCrossReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneMoveCrossReq::IsInitialized() const {

  return true;
}

void TViewSceneMoveCrossReq::Swap(TViewSceneMoveCrossReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneMoveCrossReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneMoveCrossReq_descriptor_;
  metadata.reflection = TViewSceneMoveCrossReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TViewSceneChangeStatusCrossReq::kStatusFieldNumber;
#endif  // !_MSC_VER

TViewSceneChangeStatusCrossReq::TViewSceneChangeStatusCrossReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TViewSceneChangeStatusCrossReq)
}

void TViewSceneChangeStatusCrossReq::InitAsDefaultInstance() {
}

TViewSceneChangeStatusCrossReq::TViewSceneChangeStatusCrossReq(const TViewSceneChangeStatusCrossReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TViewSceneChangeStatusCrossReq)
}

void TViewSceneChangeStatusCrossReq::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewSceneChangeStatusCrossReq::~TViewSceneChangeStatusCrossReq() {
  // @@protoc_insertion_point(destructor:pb.TViewSceneChangeStatusCrossReq)
  SharedDtor();
}

void TViewSceneChangeStatusCrossReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewSceneChangeStatusCrossReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewSceneChangeStatusCrossReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewSceneChangeStatusCrossReq_descriptor_;
}

const TViewSceneChangeStatusCrossReq& TViewSceneChangeStatusCrossReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fViewScene_2eproto();
  return *default_instance_;
}

TViewSceneChangeStatusCrossReq* TViewSceneChangeStatusCrossReq::default_instance_ = NULL;

TViewSceneChangeStatusCrossReq* TViewSceneChangeStatusCrossReq::New() const {
  return new TViewSceneChangeStatusCrossReq;
}

void TViewSceneChangeStatusCrossReq::Clear() {
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewSceneChangeStatusCrossReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TViewSceneChangeStatusCrossReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EViewSceneUserStatus Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EViewSceneUserStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EViewSceneUserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TViewSceneChangeStatusCrossReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TViewSceneChangeStatusCrossReq)
  return false;
#undef DO_
}

void TViewSceneChangeStatusCrossReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TViewSceneChangeStatusCrossReq)
  // optional .pb.EViewSceneUserStatus Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TViewSceneChangeStatusCrossReq)
}

::google::protobuf::uint8* TViewSceneChangeStatusCrossReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TViewSceneChangeStatusCrossReq)
  // optional .pb.EViewSceneUserStatus Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TViewSceneChangeStatusCrossReq)
  return target;
}

int TViewSceneChangeStatusCrossReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EViewSceneUserStatus Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewSceneChangeStatusCrossReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewSceneChangeStatusCrossReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewSceneChangeStatusCrossReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewSceneChangeStatusCrossReq::MergeFrom(const TViewSceneChangeStatusCrossReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewSceneChangeStatusCrossReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewSceneChangeStatusCrossReq::CopyFrom(const TViewSceneChangeStatusCrossReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewSceneChangeStatusCrossReq::IsInitialized() const {

  return true;
}

void TViewSceneChangeStatusCrossReq::Swap(TViewSceneChangeStatusCrossReq* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewSceneChangeStatusCrossReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewSceneChangeStatusCrossReq_descriptor_;
  metadata.reflection = TViewSceneChangeStatusCrossReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
