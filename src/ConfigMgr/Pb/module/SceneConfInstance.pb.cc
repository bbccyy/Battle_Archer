// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/SceneConfInstance.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/SceneConfInstance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TreasureBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TreasureBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* InteracteSceneUI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InteracteSceneUI_reflection_ = NULL;
const ::google::protobuf::Descriptor* WarMisty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WarMisty_reflection_ = NULL;
const ::google::protobuf::Descriptor* WarMistyArea_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WarMistyArea_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskNpc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskNpc_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SceneConfInstance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SceneConfInstance_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fSceneConfInstance_2eproto() {
  protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/SceneConfInstance.proto");
  GOOGLE_CHECK(file != NULL);
  TreasureBox_descriptor_ = file->message_type(0);
  static const int TreasureBox_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, rectinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, visible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, normalassetpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, normalassetisanim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, normaldefaultanim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, triggeredassetpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, triggeredassetisanim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, triggereddefaultanim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, sortinglayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, sortingorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, delafterreceive_),
  };
  TreasureBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TreasureBox_descriptor_,
      TreasureBox::default_instance_,
      TreasureBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TreasureBox));
  InteracteSceneUI_descriptor_ = file->message_type(1);
  static const int InteracteSceneUI_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, assetpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, rectinfo_),
  };
  InteracteSceneUI_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InteracteSceneUI_descriptor_,
      InteracteSceneUI::default_instance_,
      InteracteSceneUI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteracteSceneUI, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InteracteSceneUI));
  WarMisty_descriptor_ = file->message_type(2);
  static const int WarMisty_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMisty, uniformscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMisty, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMisty, assetpathindex_),
  };
  WarMisty_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WarMisty_descriptor_,
      WarMisty::default_instance_,
      WarMisty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMisty, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMisty, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WarMisty));
  WarMistyArea_descriptor_ = file->message_type(3);
  static const int WarMistyArea_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, warmistyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, visible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, sortinglayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, sortingorder_),
  };
  WarMistyArea_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WarMistyArea_descriptor_,
      WarMistyArea::default_instance_,
      WarMistyArea_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarMistyArea, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WarMistyArea));
  TaskNpc_descriptor_ = file->message_type(4);
  static const int TaskNpc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, rectinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, viewelementname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, viewelementtype_),
  };
  TaskNpc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskNpc_descriptor_,
      TaskNpc::default_instance_,
      TaskNpc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNpc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskNpc));
  MapInfo_descriptor_ = file->message_type(5);
  static const int MapInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, mapscenetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, mapscenename_),
  };
  MapInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapInfo_descriptor_,
      MapInfo::default_instance_,
      MapInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapInfo));
  SceneConfInstance_descriptor_ = file->message_type(6);
  static const int SceneConfInstance_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, confname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, mapinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, chunkinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, pointelementarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, cameramovearea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, rectareaarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, customareaarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, animassetarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, staticassetarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, effectassetarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, treasureboxarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, warmistyareaarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, interactesceneuiarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, patrolpatharr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, carrierentarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, obstaclearr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, mistyassetpatharr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, tasknpcarr_),
  };
  SceneConfInstance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SceneConfInstance_descriptor_,
      SceneConfInstance::default_instance_,
      SceneConfInstance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneConfInstance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SceneConfInstance));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fSceneConfInstance_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TreasureBox_descriptor_, &TreasureBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InteracteSceneUI_descriptor_, &InteracteSceneUI::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WarMisty_descriptor_, &WarMisty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WarMistyArea_descriptor_, &WarMistyArea::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskNpc_descriptor_, &TaskNpc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapInfo_descriptor_, &MapInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SceneConfInstance_descriptor_, &SceneConfInstance::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fSceneConfInstance_2eproto() {
  delete TreasureBox::default_instance_;
  delete TreasureBox_reflection_;
  delete InteracteSceneUI::default_instance_;
  delete InteracteSceneUI_reflection_;
  delete WarMisty::default_instance_;
  delete WarMisty_reflection_;
  delete WarMistyArea::default_instance_;
  delete WarMistyArea_reflection_;
  delete TaskNpc::default_instance_;
  delete TaskNpc_reflection_;
  delete MapInfo::default_instance_;
  delete MapInfo_reflection_;
  delete SceneConfInstance::default_instance_;
  delete SceneConfInstance_reflection_;
}

void protobuf_AddDesc_module_2fSceneConfInstance_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_module_2fUtil_2eproto();
  ::pb::protobuf_AddDesc_module_2fSceneConf2d_2eproto();
  ::pb::protobuf_AddDesc_module_2fSceneElementDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036module/SceneConfInstance.proto\022\002pb\032\021mo"
    "dule/Util.proto\032\030module/SceneConf2d.prot"
    "o\032\037module/SceneElementDefine.proto\"\327\002\n\013T"
    "reasureBox\022\014\n\004Name\030\001 \002(\t\022\037\n\010Position\030\002 \002"
    "(\0132\r.pb.PbVector2\022\034\n\010RectInfo\030\003 \002(\0132\n.pb"
    ".PbRect\022\017\n\007Visible\030\004 \002(\010\022\027\n\017NormalAssetP"
    "ath\030\005 \001(\t\022\031\n\021NormalAssetIsAnim\030\006 \001(\010\022\031\n\021"
    "NormalDefaultAnim\030\007 \001(\t\022\032\n\022TriggeredAsse"
    "tPath\030\010 \001(\t\022\034\n\024TriggeredAssetIsAnim\030\t \001("
    "\010\022\034\n\024TriggeredDefaultAnim\030\n \001(\t\022\024\n\014Sorti"
    "ngLayer\030\013 \001(\t\022\024\n\014SortingOrder\030\014 \001(\005\022\027\n\017D"
    "elAfterReceive\030\r \001(\010\"\220\001\n\020InteracteSceneU"
    "I\022\014\n\004Name\030\001 \001(\t\022\037\n\010Position\030\002 \001(\0132\r.pb.P"
    "bVector2\022\034\n\005Scale\030\003 \001(\0132\r.pb.PbVector2\022\021"
    "\n\tAssetPath\030\004 \001(\t\022\034\n\010RectInfo\030\005 \001(\0132\n.pb"
    ".PbRect\"Y\n\010WarMisty\022\024\n\014UniformScale\030\001 \001("
    "\002\022\037\n\010Position\030\002 \001(\0132\r.pb.PbVector2\022\026\n\016As"
    "setPathIndex\030\003 \001(\r\"|\n\014WarMistyArea\022\014\n\004Na"
    "me\030\001 \001(\t\022!\n\013WarMistyArr\030\002 \003(\0132\014.pb.WarMi"
    "sty\022\017\n\007Visible\030\003 \001(\010\022\024\n\014SortingLayer\030\004 \001"
    "(\t\022\024\n\014SortingOrder\030\005 \001(\005\"\237\001\n\007TaskNpc\022\014\n\004"
    "Name\030\001 \001(\t\022\037\n\010Position\030\002 \001(\0132\r.pb.PbVect"
    "or2\022\034\n\010RectInfo\030\003 \001(\0132\n.pb.PbRect\022\027\n\017Vie"
    "wElementName\030\004 \001(\t\022.\n\017ViewElementType\030\005 "
    "\001(\0162\025.pb.ESceneElementType\"5\n\007MapInfo\022\024\n"
    "\014MapSceneType\030\001 \001(\005\022\024\n\014MapSceneName\030\002 \001("
    "\t\"\302\005\n\021SceneConfInstance\022\n\n\002Id\030\001 \002(\005\022\020\n\010C"
    "onfName\030\002 \002(\t\022\034\n\007MapInfo\030\003 \001(\0132\013.pb.MapI"
    "nfo\022%\n\tChunkInfo\030\004 \002(\0132\022.pb.SceneChunkIn"
    "fo\022*\n\017PointElementArr\030\005 \003(\0132\021.pb.PointEl"
    "ement2\022\"\n\016CameraMoveArea\030\006 \002(\0132\n.pb.PbRe"
    "ct\022\"\n\013RectAreaArr\030\007 \003(\0132\r.pb.RectArea2\022&"
    "\n\rCustomAreaArr\030\010 \003(\0132\017.pb.CustomArea2\022$"
    "\n\014AnimAssetArr\030\t \003(\0132\016.pb.AnimAsset2\022(\n\016"
    "StaticAssetArr\030\n \003(\0132\020.pb.StaticAsset2\022("
    "\n\016EffectAssetArr\030\013 \003(\0132\020.pb.EffectAsset2"
    "\022\'\n\016TreasureBoxArr\030\014 \003(\0132\017.pb.TreasureBo"
    "x\022)\n\017WarMistyAreaArr\030\r \003(\0132\020.pb.WarMisty"
    "Area\0221\n\023InteracteSceneUIArr\030\016 \003(\0132\024.pb.I"
    "nteracteSceneUI\022&\n\rPatrolPathArr\030\017 \003(\0132\017"
    ".pb.PatrolPath2\022&\n\rCarrierEntArr\030\020 \003(\0132\017"
    ".pb.CarrierEnt2\022!\n\013ObstacleArr\030\021 \003(\0132\014.p"
    "b.Obstacle\022\031\n\021MistyAssetPathArr\030\022 \003(\t\022\037\n"
    "\nTaskNpcArr\030\023 \003(\0132\013.pb.TaskNpc", 1750);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/SceneConfInstance.proto", &protobuf_RegisterTypes);
  TreasureBox::default_instance_ = new TreasureBox();
  InteracteSceneUI::default_instance_ = new InteracteSceneUI();
  WarMisty::default_instance_ = new WarMisty();
  WarMistyArea::default_instance_ = new WarMistyArea();
  TaskNpc::default_instance_ = new TaskNpc();
  MapInfo::default_instance_ = new MapInfo();
  SceneConfInstance::default_instance_ = new SceneConfInstance();
  TreasureBox::default_instance_->InitAsDefaultInstance();
  InteracteSceneUI::default_instance_->InitAsDefaultInstance();
  WarMisty::default_instance_->InitAsDefaultInstance();
  WarMistyArea::default_instance_->InitAsDefaultInstance();
  TaskNpc::default_instance_->InitAsDefaultInstance();
  MapInfo::default_instance_->InitAsDefaultInstance();
  SceneConfInstance::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fSceneConfInstance_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fSceneConfInstance_2eproto {
  StaticDescriptorInitializer_module_2fSceneConfInstance_2eproto() {
    protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  }
} static_descriptor_initializer_module_2fSceneConfInstance_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TreasureBox::kNameFieldNumber;
const int TreasureBox::kPositionFieldNumber;
const int TreasureBox::kRectInfoFieldNumber;
const int TreasureBox::kVisibleFieldNumber;
const int TreasureBox::kNormalAssetPathFieldNumber;
const int TreasureBox::kNormalAssetIsAnimFieldNumber;
const int TreasureBox::kNormalDefaultAnimFieldNumber;
const int TreasureBox::kTriggeredAssetPathFieldNumber;
const int TreasureBox::kTriggeredAssetIsAnimFieldNumber;
const int TreasureBox::kTriggeredDefaultAnimFieldNumber;
const int TreasureBox::kSortingLayerFieldNumber;
const int TreasureBox::kSortingOrderFieldNumber;
const int TreasureBox::kDelAfterReceiveFieldNumber;
#endif  // !_MSC_VER

TreasureBox::TreasureBox()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TreasureBox)
}

void TreasureBox::InitAsDefaultInstance() {
  position_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
  rectinfo_ = const_cast< ::pb::PbRect*>(&::pb::PbRect::default_instance());
}

TreasureBox::TreasureBox(const TreasureBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TreasureBox)
}

void TreasureBox::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = NULL;
  rectinfo_ = NULL;
  visible_ = false;
  normalassetpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normalassetisanim_ = false;
  normaldefaultanim_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  triggeredassetpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  triggeredassetisanim_ = false;
  triggereddefaultanim_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sortinglayer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sortingorder_ = 0;
  delafterreceive_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TreasureBox::~TreasureBox() {
  // @@protoc_insertion_point(destructor:pb.TreasureBox)
  SharedDtor();
}

void TreasureBox::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (normalassetpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete normalassetpath_;
  }
  if (normaldefaultanim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete normaldefaultanim_;
  }
  if (triggeredassetpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete triggeredassetpath_;
  }
  if (triggereddefaultanim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete triggereddefaultanim_;
  }
  if (sortinglayer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sortinglayer_;
  }
  if (this != default_instance_) {
    delete position_;
    delete rectinfo_;
  }
}

void TreasureBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreasureBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TreasureBox_descriptor_;
}

const TreasureBox& TreasureBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

TreasureBox* TreasureBox::default_instance_ = NULL;

TreasureBox* TreasureBox::New() const {
  return new TreasureBox;
}

void TreasureBox::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TreasureBox*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(visible_, normalassetisanim_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_position()) {
      if (position_ != NULL) position_->::pb::PbVector2::Clear();
    }
    if (has_rectinfo()) {
      if (rectinfo_ != NULL) rectinfo_->::pb::PbRect::Clear();
    }
    if (has_normalassetpath()) {
      if (normalassetpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        normalassetpath_->clear();
      }
    }
    if (has_normaldefaultanim()) {
      if (normaldefaultanim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        normaldefaultanim_->clear();
      }
    }
    if (has_triggeredassetpath()) {
      if (triggeredassetpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        triggeredassetpath_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(triggeredassetisanim_, sortingorder_);
    if (has_triggereddefaultanim()) {
      if (triggereddefaultanim_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        triggereddefaultanim_->clear();
      }
    }
    if (has_sortinglayer()) {
      if (sortinglayer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sortinglayer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TreasureBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TreasureBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Position;
        break;
      }

      // required .pb.PbVector2 Position = 2;
      case 2: {
        if (tag == 18) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RectInfo;
        break;
      }

      // required .pb.PbRect RectInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_RectInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rectinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Visible;
        break;
      }

      // required bool Visible = 4;
      case 4: {
        if (tag == 32) {
         parse_Visible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_NormalAssetPath;
        break;
      }

      // optional string NormalAssetPath = 5;
      case 5: {
        if (tag == 42) {
         parse_NormalAssetPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_normalassetpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->normalassetpath().data(), this->normalassetpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "normalassetpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_NormalAssetIsAnim;
        break;
      }

      // optional bool NormalAssetIsAnim = 6;
      case 6: {
        if (tag == 48) {
         parse_NormalAssetIsAnim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &normalassetisanim_)));
          set_has_normalassetisanim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_NormalDefaultAnim;
        break;
      }

      // optional string NormalDefaultAnim = 7;
      case 7: {
        if (tag == 58) {
         parse_NormalDefaultAnim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_normaldefaultanim()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->normaldefaultanim().data(), this->normaldefaultanim().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "normaldefaultanim");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_TriggeredAssetPath;
        break;
      }

      // optional string TriggeredAssetPath = 8;
      case 8: {
        if (tag == 66) {
         parse_TriggeredAssetPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_triggeredassetpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->triggeredassetpath().data(), this->triggeredassetpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "triggeredassetpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_TriggeredAssetIsAnim;
        break;
      }

      // optional bool TriggeredAssetIsAnim = 9;
      case 9: {
        if (tag == 72) {
         parse_TriggeredAssetIsAnim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &triggeredassetisanim_)));
          set_has_triggeredassetisanim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_TriggeredDefaultAnim;
        break;
      }

      // optional string TriggeredDefaultAnim = 10;
      case 10: {
        if (tag == 82) {
         parse_TriggeredDefaultAnim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_triggereddefaultanim()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->triggereddefaultanim().data(), this->triggereddefaultanim().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "triggereddefaultanim");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_SortingLayer;
        break;
      }

      // optional string SortingLayer = 11;
      case 11: {
        if (tag == 90) {
         parse_SortingLayer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sortinglayer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sortinglayer().data(), this->sortinglayer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sortinglayer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_SortingOrder;
        break;
      }

      // optional int32 SortingOrder = 12;
      case 12: {
        if (tag == 96) {
         parse_SortingOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortingorder_)));
          set_has_sortingorder();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_DelAfterReceive;
        break;
      }

      // optional bool DelAfterReceive = 13;
      case 13: {
        if (tag == 104) {
         parse_DelAfterReceive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delafterreceive_)));
          set_has_delafterreceive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TreasureBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TreasureBox)
  return false;
#undef DO_
}

void TreasureBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TreasureBox)
  // required string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .pb.PbVector2 Position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // required .pb.PbRect RectInfo = 3;
  if (has_rectinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rectinfo(), output);
  }

  // required bool Visible = 4;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->visible(), output);
  }

  // optional string NormalAssetPath = 5;
  if (has_normalassetpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normalassetpath().data(), this->normalassetpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "normalassetpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->normalassetpath(), output);
  }

  // optional bool NormalAssetIsAnim = 6;
  if (has_normalassetisanim()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->normalassetisanim(), output);
  }

  // optional string NormalDefaultAnim = 7;
  if (has_normaldefaultanim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normaldefaultanim().data(), this->normaldefaultanim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "normaldefaultanim");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->normaldefaultanim(), output);
  }

  // optional string TriggeredAssetPath = 8;
  if (has_triggeredassetpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->triggeredassetpath().data(), this->triggeredassetpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "triggeredassetpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->triggeredassetpath(), output);
  }

  // optional bool TriggeredAssetIsAnim = 9;
  if (has_triggeredassetisanim()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->triggeredassetisanim(), output);
  }

  // optional string TriggeredDefaultAnim = 10;
  if (has_triggereddefaultanim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->triggereddefaultanim().data(), this->triggereddefaultanim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "triggereddefaultanim");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->triggereddefaultanim(), output);
  }

  // optional string SortingLayer = 11;
  if (has_sortinglayer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sortinglayer().data(), this->sortinglayer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sortinglayer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sortinglayer(), output);
  }

  // optional int32 SortingOrder = 12;
  if (has_sortingorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->sortingorder(), output);
  }

  // optional bool DelAfterReceive = 13;
  if (has_delafterreceive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->delafterreceive(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TreasureBox)
}

::google::protobuf::uint8* TreasureBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TreasureBox)
  // required string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .pb.PbVector2 Position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // required .pb.PbRect RectInfo = 3;
  if (has_rectinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rectinfo(), target);
  }

  // required bool Visible = 4;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->visible(), target);
  }

  // optional string NormalAssetPath = 5;
  if (has_normalassetpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normalassetpath().data(), this->normalassetpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "normalassetpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->normalassetpath(), target);
  }

  // optional bool NormalAssetIsAnim = 6;
  if (has_normalassetisanim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->normalassetisanim(), target);
  }

  // optional string NormalDefaultAnim = 7;
  if (has_normaldefaultanim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normaldefaultanim().data(), this->normaldefaultanim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "normaldefaultanim");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->normaldefaultanim(), target);
  }

  // optional string TriggeredAssetPath = 8;
  if (has_triggeredassetpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->triggeredassetpath().data(), this->triggeredassetpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "triggeredassetpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->triggeredassetpath(), target);
  }

  // optional bool TriggeredAssetIsAnim = 9;
  if (has_triggeredassetisanim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->triggeredassetisanim(), target);
  }

  // optional string TriggeredDefaultAnim = 10;
  if (has_triggereddefaultanim()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->triggereddefaultanim().data(), this->triggereddefaultanim().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "triggereddefaultanim");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->triggereddefaultanim(), target);
  }

  // optional string SortingLayer = 11;
  if (has_sortinglayer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sortinglayer().data(), this->sortinglayer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sortinglayer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sortinglayer(), target);
  }

  // optional int32 SortingOrder = 12;
  if (has_sortingorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->sortingorder(), target);
  }

  // optional bool DelAfterReceive = 13;
  if (has_delafterreceive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->delafterreceive(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TreasureBox)
  return target;
}

int TreasureBox::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .pb.PbVector2 Position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // required .pb.PbRect RectInfo = 3;
    if (has_rectinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rectinfo());
    }

    // required bool Visible = 4;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional string NormalAssetPath = 5;
    if (has_normalassetpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->normalassetpath());
    }

    // optional bool NormalAssetIsAnim = 6;
    if (has_normalassetisanim()) {
      total_size += 1 + 1;
    }

    // optional string NormalDefaultAnim = 7;
    if (has_normaldefaultanim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->normaldefaultanim());
    }

    // optional string TriggeredAssetPath = 8;
    if (has_triggeredassetpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->triggeredassetpath());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool TriggeredAssetIsAnim = 9;
    if (has_triggeredassetisanim()) {
      total_size += 1 + 1;
    }

    // optional string TriggeredDefaultAnim = 10;
    if (has_triggereddefaultanim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->triggereddefaultanim());
    }

    // optional string SortingLayer = 11;
    if (has_sortinglayer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sortinglayer());
    }

    // optional int32 SortingOrder = 12;
    if (has_sortingorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sortingorder());
    }

    // optional bool DelAfterReceive = 13;
    if (has_delafterreceive()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreasureBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TreasureBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TreasureBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TreasureBox::MergeFrom(const TreasureBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_position()) {
      mutable_position()->::pb::PbVector2::MergeFrom(from.position());
    }
    if (from.has_rectinfo()) {
      mutable_rectinfo()->::pb::PbRect::MergeFrom(from.rectinfo());
    }
    if (from.has_visible()) {
      set_visible(from.visible());
    }
    if (from.has_normalassetpath()) {
      set_normalassetpath(from.normalassetpath());
    }
    if (from.has_normalassetisanim()) {
      set_normalassetisanim(from.normalassetisanim());
    }
    if (from.has_normaldefaultanim()) {
      set_normaldefaultanim(from.normaldefaultanim());
    }
    if (from.has_triggeredassetpath()) {
      set_triggeredassetpath(from.triggeredassetpath());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_triggeredassetisanim()) {
      set_triggeredassetisanim(from.triggeredassetisanim());
    }
    if (from.has_triggereddefaultanim()) {
      set_triggereddefaultanim(from.triggereddefaultanim());
    }
    if (from.has_sortinglayer()) {
      set_sortinglayer(from.sortinglayer());
    }
    if (from.has_sortingorder()) {
      set_sortingorder(from.sortingorder());
    }
    if (from.has_delafterreceive()) {
      set_delafterreceive(from.delafterreceive());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TreasureBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreasureBox::CopyFrom(const TreasureBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasureBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  if (has_rectinfo()) {
    if (!this->rectinfo().IsInitialized()) return false;
  }
  return true;
}

void TreasureBox::Swap(TreasureBox* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(position_, other->position_);
    std::swap(rectinfo_, other->rectinfo_);
    std::swap(visible_, other->visible_);
    std::swap(normalassetpath_, other->normalassetpath_);
    std::swap(normalassetisanim_, other->normalassetisanim_);
    std::swap(normaldefaultanim_, other->normaldefaultanim_);
    std::swap(triggeredassetpath_, other->triggeredassetpath_);
    std::swap(triggeredassetisanim_, other->triggeredassetisanim_);
    std::swap(triggereddefaultanim_, other->triggereddefaultanim_);
    std::swap(sortinglayer_, other->sortinglayer_);
    std::swap(sortingorder_, other->sortingorder_);
    std::swap(delafterreceive_, other->delafterreceive_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TreasureBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TreasureBox_descriptor_;
  metadata.reflection = TreasureBox_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InteracteSceneUI::kNameFieldNumber;
const int InteracteSceneUI::kPositionFieldNumber;
const int InteracteSceneUI::kScaleFieldNumber;
const int InteracteSceneUI::kAssetPathFieldNumber;
const int InteracteSceneUI::kRectInfoFieldNumber;
#endif  // !_MSC_VER

InteracteSceneUI::InteracteSceneUI()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.InteracteSceneUI)
}

void InteracteSceneUI::InitAsDefaultInstance() {
  position_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
  scale_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
  rectinfo_ = const_cast< ::pb::PbRect*>(&::pb::PbRect::default_instance());
}

InteracteSceneUI::InteracteSceneUI(const InteracteSceneUI& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.InteracteSceneUI)
}

void InteracteSceneUI::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = NULL;
  scale_ = NULL;
  assetpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InteracteSceneUI::~InteracteSceneUI() {
  // @@protoc_insertion_point(destructor:pb.InteracteSceneUI)
  SharedDtor();
}

void InteracteSceneUI::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (assetpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete assetpath_;
  }
  if (this != default_instance_) {
    delete position_;
    delete scale_;
    delete rectinfo_;
  }
}

void InteracteSceneUI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InteracteSceneUI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InteracteSceneUI_descriptor_;
}

const InteracteSceneUI& InteracteSceneUI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

InteracteSceneUI* InteracteSceneUI::default_instance_ = NULL;

InteracteSceneUI* InteracteSceneUI::New() const {
  return new InteracteSceneUI;
}

void InteracteSceneUI::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_position()) {
      if (position_ != NULL) position_->::pb::PbVector2::Clear();
    }
    if (has_scale()) {
      if (scale_ != NULL) scale_->::pb::PbVector2::Clear();
    }
    if (has_assetpath()) {
      if (assetpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        assetpath_->clear();
      }
    }
    if (has_rectinfo()) {
      if (rectinfo_ != NULL) rectinfo_->::pb::PbRect::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InteracteSceneUI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.InteracteSceneUI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Position;
        break;
      }

      // optional .pb.PbVector2 Position = 2;
      case 2: {
        if (tag == 18) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Scale;
        break;
      }

      // optional .pb.PbVector2 Scale = 3;
      case 3: {
        if (tag == 26) {
         parse_Scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_AssetPath;
        break;
      }

      // optional string AssetPath = 4;
      case 4: {
        if (tag == 34) {
         parse_AssetPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assetpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->assetpath().data(), this->assetpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "assetpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_RectInfo;
        break;
      }

      // optional .pb.PbRect RectInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_RectInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rectinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.InteracteSceneUI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.InteracteSceneUI)
  return false;
#undef DO_
}

void InteracteSceneUI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.InteracteSceneUI)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .pb.PbVector2 Position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // optional .pb.PbVector2 Scale = 3;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->scale(), output);
  }

  // optional string AssetPath = 4;
  if (has_assetpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->assetpath().data(), this->assetpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "assetpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->assetpath(), output);
  }

  // optional .pb.PbRect RectInfo = 5;
  if (has_rectinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rectinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.InteracteSceneUI)
}

::google::protobuf::uint8* InteracteSceneUI::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.InteracteSceneUI)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .pb.PbVector2 Position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // optional .pb.PbVector2 Scale = 3;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->scale(), target);
  }

  // optional string AssetPath = 4;
  if (has_assetpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->assetpath().data(), this->assetpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "assetpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->assetpath(), target);
  }

  // optional .pb.PbRect RectInfo = 5;
  if (has_rectinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->rectinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.InteracteSceneUI)
  return target;
}

int InteracteSceneUI::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .pb.PbVector2 Position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // optional .pb.PbVector2 Scale = 3;
    if (has_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scale());
    }

    // optional string AssetPath = 4;
    if (has_assetpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->assetpath());
    }

    // optional .pb.PbRect RectInfo = 5;
    if (has_rectinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rectinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InteracteSceneUI::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InteracteSceneUI* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InteracteSceneUI*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InteracteSceneUI::MergeFrom(const InteracteSceneUI& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_position()) {
      mutable_position()->::pb::PbVector2::MergeFrom(from.position());
    }
    if (from.has_scale()) {
      mutable_scale()->::pb::PbVector2::MergeFrom(from.scale());
    }
    if (from.has_assetpath()) {
      set_assetpath(from.assetpath());
    }
    if (from.has_rectinfo()) {
      mutable_rectinfo()->::pb::PbRect::MergeFrom(from.rectinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InteracteSceneUI::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InteracteSceneUI::CopyFrom(const InteracteSceneUI& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InteracteSceneUI::IsInitialized() const {

  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  if (has_scale()) {
    if (!this->scale().IsInitialized()) return false;
  }
  if (has_rectinfo()) {
    if (!this->rectinfo().IsInitialized()) return false;
  }
  return true;
}

void InteracteSceneUI::Swap(InteracteSceneUI* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(position_, other->position_);
    std::swap(scale_, other->scale_);
    std::swap(assetpath_, other->assetpath_);
    std::swap(rectinfo_, other->rectinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InteracteSceneUI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InteracteSceneUI_descriptor_;
  metadata.reflection = InteracteSceneUI_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WarMisty::kUniformScaleFieldNumber;
const int WarMisty::kPositionFieldNumber;
const int WarMisty::kAssetPathIndexFieldNumber;
#endif  // !_MSC_VER

WarMisty::WarMisty()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.WarMisty)
}

void WarMisty::InitAsDefaultInstance() {
  position_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
}

WarMisty::WarMisty(const WarMisty& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.WarMisty)
}

void WarMisty::SharedCtor() {
  _cached_size_ = 0;
  uniformscale_ = 0;
  position_ = NULL;
  assetpathindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WarMisty::~WarMisty() {
  // @@protoc_insertion_point(destructor:pb.WarMisty)
  SharedDtor();
}

void WarMisty::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void WarMisty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarMisty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WarMisty_descriptor_;
}

const WarMisty& WarMisty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

WarMisty* WarMisty::default_instance_ = NULL;

WarMisty* WarMisty::New() const {
  return new WarMisty;
}

void WarMisty::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<WarMisty*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(uniformscale_, assetpathindex_);
    if (has_position()) {
      if (position_ != NULL) position_->::pb::PbVector2::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WarMisty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.WarMisty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float UniformScale = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &uniformscale_)));
          set_has_uniformscale();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Position;
        break;
      }

      // optional .pb.PbVector2 Position = 2;
      case 2: {
        if (tag == 18) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AssetPathIndex;
        break;
      }

      // optional uint32 AssetPathIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_AssetPathIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assetpathindex_)));
          set_has_assetpathindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.WarMisty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.WarMisty)
  return false;
#undef DO_
}

void WarMisty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.WarMisty)
  // optional float UniformScale = 1;
  if (has_uniformscale()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->uniformscale(), output);
  }

  // optional .pb.PbVector2 Position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // optional uint32 AssetPathIndex = 3;
  if (has_assetpathindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->assetpathindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.WarMisty)
}

::google::protobuf::uint8* WarMisty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.WarMisty)
  // optional float UniformScale = 1;
  if (has_uniformscale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->uniformscale(), target);
  }

  // optional .pb.PbVector2 Position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // optional uint32 AssetPathIndex = 3;
  if (has_assetpathindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->assetpathindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.WarMisty)
  return target;
}

int WarMisty::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional float UniformScale = 1;
    if (has_uniformscale()) {
      total_size += 1 + 4;
    }

    // optional .pb.PbVector2 Position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // optional uint32 AssetPathIndex = 3;
    if (has_assetpathindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assetpathindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarMisty::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WarMisty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WarMisty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WarMisty::MergeFrom(const WarMisty& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniformscale()) {
      set_uniformscale(from.uniformscale());
    }
    if (from.has_position()) {
      mutable_position()->::pb::PbVector2::MergeFrom(from.position());
    }
    if (from.has_assetpathindex()) {
      set_assetpathindex(from.assetpathindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WarMisty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarMisty::CopyFrom(const WarMisty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarMisty::IsInitialized() const {

  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  return true;
}

void WarMisty::Swap(WarMisty* other) {
  if (other != this) {
    std::swap(uniformscale_, other->uniformscale_);
    std::swap(position_, other->position_);
    std::swap(assetpathindex_, other->assetpathindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WarMisty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WarMisty_descriptor_;
  metadata.reflection = WarMisty_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WarMistyArea::kNameFieldNumber;
const int WarMistyArea::kWarMistyArrFieldNumber;
const int WarMistyArea::kVisibleFieldNumber;
const int WarMistyArea::kSortingLayerFieldNumber;
const int WarMistyArea::kSortingOrderFieldNumber;
#endif  // !_MSC_VER

WarMistyArea::WarMistyArea()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.WarMistyArea)
}

void WarMistyArea::InitAsDefaultInstance() {
}

WarMistyArea::WarMistyArea(const WarMistyArea& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.WarMistyArea)
}

void WarMistyArea::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visible_ = false;
  sortinglayer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sortingorder_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WarMistyArea::~WarMistyArea() {
  // @@protoc_insertion_point(destructor:pb.WarMistyArea)
  SharedDtor();
}

void WarMistyArea::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (sortinglayer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sortinglayer_;
  }
  if (this != default_instance_) {
  }
}

void WarMistyArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarMistyArea::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WarMistyArea_descriptor_;
}

const WarMistyArea& WarMistyArea::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

WarMistyArea* WarMistyArea::default_instance_ = NULL;

WarMistyArea* WarMistyArea::New() const {
  return new WarMistyArea;
}

void WarMistyArea::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<WarMistyArea*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 29) {
    ZR_(visible_, sortingorder_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_sortinglayer()) {
      if (sortinglayer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sortinglayer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  warmistyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WarMistyArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.WarMistyArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WarMistyArr;
        break;
      }

      // repeated .pb.WarMisty WarMistyArr = 2;
      case 2: {
        if (tag == 18) {
         parse_WarMistyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_warmistyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WarMistyArr;
        if (input->ExpectTag(24)) goto parse_Visible;
        break;
      }

      // optional bool Visible = 3;
      case 3: {
        if (tag == 24) {
         parse_Visible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_SortingLayer;
        break;
      }

      // optional string SortingLayer = 4;
      case 4: {
        if (tag == 34) {
         parse_SortingLayer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sortinglayer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sortinglayer().data(), this->sortinglayer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sortinglayer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SortingOrder;
        break;
      }

      // optional int32 SortingOrder = 5;
      case 5: {
        if (tag == 40) {
         parse_SortingOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortingorder_)));
          set_has_sortingorder();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.WarMistyArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.WarMistyArea)
  return false;
#undef DO_
}

void WarMistyArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.WarMistyArea)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .pb.WarMisty WarMistyArr = 2;
  for (int i = 0; i < this->warmistyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->warmistyarr(i), output);
  }

  // optional bool Visible = 3;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->visible(), output);
  }

  // optional string SortingLayer = 4;
  if (has_sortinglayer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sortinglayer().data(), this->sortinglayer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sortinglayer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sortinglayer(), output);
  }

  // optional int32 SortingOrder = 5;
  if (has_sortingorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sortingorder(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.WarMistyArea)
}

::google::protobuf::uint8* WarMistyArea::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.WarMistyArea)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .pb.WarMisty WarMistyArr = 2;
  for (int i = 0; i < this->warmistyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->warmistyarr(i), target);
  }

  // optional bool Visible = 3;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->visible(), target);
  }

  // optional string SortingLayer = 4;
  if (has_sortinglayer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sortinglayer().data(), this->sortinglayer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sortinglayer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sortinglayer(), target);
  }

  // optional int32 SortingOrder = 5;
  if (has_sortingorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sortingorder(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.WarMistyArea)
  return target;
}

int WarMistyArea::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool Visible = 3;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional string SortingLayer = 4;
    if (has_sortinglayer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sortinglayer());
    }

    // optional int32 SortingOrder = 5;
    if (has_sortingorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sortingorder());
    }

  }
  // repeated .pb.WarMisty WarMistyArr = 2;
  total_size += 1 * this->warmistyarr_size();
  for (int i = 0; i < this->warmistyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->warmistyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarMistyArea::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WarMistyArea* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WarMistyArea*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WarMistyArea::MergeFrom(const WarMistyArea& from) {
  GOOGLE_CHECK_NE(&from, this);
  warmistyarr_.MergeFrom(from.warmistyarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_visible()) {
      set_visible(from.visible());
    }
    if (from.has_sortinglayer()) {
      set_sortinglayer(from.sortinglayer());
    }
    if (from.has_sortingorder()) {
      set_sortingorder(from.sortingorder());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WarMistyArea::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarMistyArea::CopyFrom(const WarMistyArea& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarMistyArea::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->warmistyarr())) return false;
  return true;
}

void WarMistyArea::Swap(WarMistyArea* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    warmistyarr_.Swap(&other->warmistyarr_);
    std::swap(visible_, other->visible_);
    std::swap(sortinglayer_, other->sortinglayer_);
    std::swap(sortingorder_, other->sortingorder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WarMistyArea::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WarMistyArea_descriptor_;
  metadata.reflection = WarMistyArea_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TaskNpc::kNameFieldNumber;
const int TaskNpc::kPositionFieldNumber;
const int TaskNpc::kRectInfoFieldNumber;
const int TaskNpc::kViewElementNameFieldNumber;
const int TaskNpc::kViewElementTypeFieldNumber;
#endif  // !_MSC_VER

TaskNpc::TaskNpc()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TaskNpc)
}

void TaskNpc::InitAsDefaultInstance() {
  position_ = const_cast< ::pb::PbVector2*>(&::pb::PbVector2::default_instance());
  rectinfo_ = const_cast< ::pb::PbRect*>(&::pb::PbRect::default_instance());
}

TaskNpc::TaskNpc(const TaskNpc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TaskNpc)
}

void TaskNpc::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = NULL;
  rectinfo_ = NULL;
  viewelementname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewelementtype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskNpc::~TaskNpc() {
  // @@protoc_insertion_point(destructor:pb.TaskNpc)
  SharedDtor();
}

void TaskNpc::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (viewelementname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete viewelementname_;
  }
  if (this != default_instance_) {
    delete position_;
    delete rectinfo_;
  }
}

void TaskNpc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskNpc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskNpc_descriptor_;
}

const TaskNpc& TaskNpc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

TaskNpc* TaskNpc::default_instance_ = NULL;

TaskNpc* TaskNpc::New() const {
  return new TaskNpc;
}

void TaskNpc::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_position()) {
      if (position_ != NULL) position_->::pb::PbVector2::Clear();
    }
    if (has_rectinfo()) {
      if (rectinfo_ != NULL) rectinfo_->::pb::PbRect::Clear();
    }
    if (has_viewelementname()) {
      if (viewelementname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        viewelementname_->clear();
      }
    }
    viewelementtype_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskNpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TaskNpc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Position;
        break;
      }

      // optional .pb.PbVector2 Position = 2;
      case 2: {
        if (tag == 18) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RectInfo;
        break;
      }

      // optional .pb.PbRect RectInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_RectInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rectinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ViewElementName;
        break;
      }

      // optional string ViewElementName = 4;
      case 4: {
        if (tag == 34) {
         parse_ViewElementName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_viewelementname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->viewelementname().data(), this->viewelementname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "viewelementname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ViewElementType;
        break;
      }

      // optional .pb.ESceneElementType ViewElementType = 5;
      case 5: {
        if (tag == 40) {
         parse_ViewElementType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ESceneElementType_IsValid(value)) {
            set_viewelementtype(static_cast< ::pb::ESceneElementType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TaskNpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TaskNpc)
  return false;
#undef DO_
}

void TaskNpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TaskNpc)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .pb.PbVector2 Position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // optional .pb.PbRect RectInfo = 3;
  if (has_rectinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rectinfo(), output);
  }

  // optional string ViewElementName = 4;
  if (has_viewelementname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewelementname().data(), this->viewelementname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewelementname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->viewelementname(), output);
  }

  // optional .pb.ESceneElementType ViewElementType = 5;
  if (has_viewelementtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->viewelementtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TaskNpc)
}

::google::protobuf::uint8* TaskNpc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TaskNpc)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .pb.PbVector2 Position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // optional .pb.PbRect RectInfo = 3;
  if (has_rectinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rectinfo(), target);
  }

  // optional string ViewElementName = 4;
  if (has_viewelementname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewelementname().data(), this->viewelementname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "viewelementname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->viewelementname(), target);
  }

  // optional .pb.ESceneElementType ViewElementType = 5;
  if (has_viewelementtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->viewelementtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TaskNpc)
  return target;
}

int TaskNpc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .pb.PbVector2 Position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // optional .pb.PbRect RectInfo = 3;
    if (has_rectinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rectinfo());
    }

    // optional string ViewElementName = 4;
    if (has_viewelementname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->viewelementname());
    }

    // optional .pb.ESceneElementType ViewElementType = 5;
    if (has_viewelementtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewelementtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskNpc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskNpc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskNpc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskNpc::MergeFrom(const TaskNpc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_position()) {
      mutable_position()->::pb::PbVector2::MergeFrom(from.position());
    }
    if (from.has_rectinfo()) {
      mutable_rectinfo()->::pb::PbRect::MergeFrom(from.rectinfo());
    }
    if (from.has_viewelementname()) {
      set_viewelementname(from.viewelementname());
    }
    if (from.has_viewelementtype()) {
      set_viewelementtype(from.viewelementtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskNpc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskNpc::CopyFrom(const TaskNpc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskNpc::IsInitialized() const {

  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  if (has_rectinfo()) {
    if (!this->rectinfo().IsInitialized()) return false;
  }
  return true;
}

void TaskNpc::Swap(TaskNpc* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(position_, other->position_);
    std::swap(rectinfo_, other->rectinfo_);
    std::swap(viewelementname_, other->viewelementname_);
    std::swap(viewelementtype_, other->viewelementtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskNpc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskNpc_descriptor_;
  metadata.reflection = TaskNpc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MapInfo::kMapSceneTypeFieldNumber;
const int MapInfo::kMapSceneNameFieldNumber;
#endif  // !_MSC_VER

MapInfo::MapInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MapInfo)
}

void MapInfo::InitAsDefaultInstance() {
}

MapInfo::MapInfo(const MapInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.MapInfo)
}

void MapInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mapscenetype_ = 0;
  mapscenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapInfo::~MapInfo() {
  // @@protoc_insertion_point(destructor:pb.MapInfo)
  SharedDtor();
}

void MapInfo::SharedDtor() {
  if (mapscenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapscenename_;
  }
  if (this != default_instance_) {
  }
}

void MapInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapInfo_descriptor_;
}

const MapInfo& MapInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

MapInfo* MapInfo::default_instance_ = NULL;

MapInfo* MapInfo::New() const {
  return new MapInfo;
}

void MapInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    mapscenetype_ = 0;
    if (has_mapscenename()) {
      if (mapscenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mapscenename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MapInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MapSceneType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapscenetype_)));
          set_has_mapscenetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MapSceneName;
        break;
      }

      // optional string MapSceneName = 2;
      case 2: {
        if (tag == 18) {
         parse_MapSceneName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapscenename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapscenename().data(), this->mapscenename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mapscenename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MapInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MapInfo)
  return false;
#undef DO_
}

void MapInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MapInfo)
  // optional int32 MapSceneType = 1;
  if (has_mapscenetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mapscenetype(), output);
  }

  // optional string MapSceneName = 2;
  if (has_mapscenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapscenename().data(), this->mapscenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapscenename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mapscenename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.MapInfo)
}

::google::protobuf::uint8* MapInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.MapInfo)
  // optional int32 MapSceneType = 1;
  if (has_mapscenetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mapscenetype(), target);
  }

  // optional string MapSceneName = 2;
  if (has_mapscenename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapscenename().data(), this->mapscenename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapscenename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mapscenename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.MapInfo)
  return target;
}

int MapInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 MapSceneType = 1;
    if (has_mapscenetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapscenetype());
    }

    // optional string MapSceneName = 2;
    if (has_mapscenename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapscenename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapInfo::MergeFrom(const MapInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapscenetype()) {
      set_mapscenetype(from.mapscenetype());
    }
    if (from.has_mapscenename()) {
      set_mapscenename(from.mapscenename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapInfo::CopyFrom(const MapInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapInfo::IsInitialized() const {

  return true;
}

void MapInfo::Swap(MapInfo* other) {
  if (other != this) {
    std::swap(mapscenetype_, other->mapscenetype_);
    std::swap(mapscenename_, other->mapscenename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapInfo_descriptor_;
  metadata.reflection = MapInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SceneConfInstance::kIdFieldNumber;
const int SceneConfInstance::kConfNameFieldNumber;
const int SceneConfInstance::kMapInfoFieldNumber;
const int SceneConfInstance::kChunkInfoFieldNumber;
const int SceneConfInstance::kPointElementArrFieldNumber;
const int SceneConfInstance::kCameraMoveAreaFieldNumber;
const int SceneConfInstance::kRectAreaArrFieldNumber;
const int SceneConfInstance::kCustomAreaArrFieldNumber;
const int SceneConfInstance::kAnimAssetArrFieldNumber;
const int SceneConfInstance::kStaticAssetArrFieldNumber;
const int SceneConfInstance::kEffectAssetArrFieldNumber;
const int SceneConfInstance::kTreasureBoxArrFieldNumber;
const int SceneConfInstance::kWarMistyAreaArrFieldNumber;
const int SceneConfInstance::kInteracteSceneUIArrFieldNumber;
const int SceneConfInstance::kPatrolPathArrFieldNumber;
const int SceneConfInstance::kCarrierEntArrFieldNumber;
const int SceneConfInstance::kObstacleArrFieldNumber;
const int SceneConfInstance::kMistyAssetPathArrFieldNumber;
const int SceneConfInstance::kTaskNpcArrFieldNumber;
#endif  // !_MSC_VER

SceneConfInstance::SceneConfInstance()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SceneConfInstance)
}

void SceneConfInstance::InitAsDefaultInstance() {
  mapinfo_ = const_cast< ::pb::MapInfo*>(&::pb::MapInfo::default_instance());
  chunkinfo_ = const_cast< ::pb::SceneChunkInfo*>(&::pb::SceneChunkInfo::default_instance());
  cameramovearea_ = const_cast< ::pb::PbRect*>(&::pb::PbRect::default_instance());
}

SceneConfInstance::SceneConfInstance(const SceneConfInstance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SceneConfInstance)
}

void SceneConfInstance::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  confname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapinfo_ = NULL;
  chunkinfo_ = NULL;
  cameramovearea_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SceneConfInstance::~SceneConfInstance() {
  // @@protoc_insertion_point(destructor:pb.SceneConfInstance)
  SharedDtor();
}

void SceneConfInstance::SharedDtor() {
  if (confname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete confname_;
  }
  if (this != default_instance_) {
    delete mapinfo_;
    delete chunkinfo_;
    delete cameramovearea_;
  }
}

void SceneConfInstance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneConfInstance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SceneConfInstance_descriptor_;
}

const SceneConfInstance& SceneConfInstance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneConfInstance_2eproto();
  return *default_instance_;
}

SceneConfInstance* SceneConfInstance::default_instance_ = NULL;

SceneConfInstance* SceneConfInstance::New() const {
  return new SceneConfInstance;
}

void SceneConfInstance::Clear() {
  if (_has_bits_[0 / 32] & 47) {
    id_ = 0;
    if (has_confname()) {
      if (confname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        confname_->clear();
      }
    }
    if (has_mapinfo()) {
      if (mapinfo_ != NULL) mapinfo_->::pb::MapInfo::Clear();
    }
    if (has_chunkinfo()) {
      if (chunkinfo_ != NULL) chunkinfo_->::pb::SceneChunkInfo::Clear();
    }
    if (has_cameramovearea()) {
      if (cameramovearea_ != NULL) cameramovearea_->::pb::PbRect::Clear();
    }
  }
  pointelementarr_.Clear();
  rectareaarr_.Clear();
  customareaarr_.Clear();
  animassetarr_.Clear();
  staticassetarr_.Clear();
  effectassetarr_.Clear();
  treasureboxarr_.Clear();
  warmistyareaarr_.Clear();
  interactesceneuiarr_.Clear();
  patrolpatharr_.Clear();
  carrierentarr_.Clear();
  obstaclearr_.Clear();
  mistyassetpatharr_.Clear();
  tasknpcarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SceneConfInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SceneConfInstance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConfName;
        break;
      }

      // required string ConfName = 2;
      case 2: {
        if (tag == 18) {
         parse_ConfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->confname().data(), this->confname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "confname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_MapInfo;
        break;
      }

      // optional .pb.MapInfo MapInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_MapInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mapinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ChunkInfo;
        break;
      }

      // required .pb.SceneChunkInfo ChunkInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ChunkInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chunkinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_PointElementArr;
        break;
      }

      // repeated .pb.PointElement2 PointElementArr = 5;
      case 5: {
        if (tag == 42) {
         parse_PointElementArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pointelementarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_PointElementArr;
        if (input->ExpectTag(50)) goto parse_CameraMoveArea;
        break;
      }

      // required .pb.PbRect CameraMoveArea = 6;
      case 6: {
        if (tag == 50) {
         parse_CameraMoveArea:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cameramovearea()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_RectAreaArr;
        break;
      }

      // repeated .pb.RectArea2 RectAreaArr = 7;
      case 7: {
        if (tag == 58) {
         parse_RectAreaArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rectareaarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_RectAreaArr;
        if (input->ExpectTag(66)) goto parse_CustomAreaArr;
        break;
      }

      // repeated .pb.CustomArea2 CustomAreaArr = 8;
      case 8: {
        if (tag == 66) {
         parse_CustomAreaArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_customareaarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_CustomAreaArr;
        if (input->ExpectTag(74)) goto parse_AnimAssetArr;
        break;
      }

      // repeated .pb.AnimAsset2 AnimAssetArr = 9;
      case 9: {
        if (tag == 74) {
         parse_AnimAssetArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animassetarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_AnimAssetArr;
        if (input->ExpectTag(82)) goto parse_StaticAssetArr;
        break;
      }

      // repeated .pb.StaticAsset2 StaticAssetArr = 10;
      case 10: {
        if (tag == 82) {
         parse_StaticAssetArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_staticassetarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_StaticAssetArr;
        if (input->ExpectTag(90)) goto parse_EffectAssetArr;
        break;
      }

      // repeated .pb.EffectAsset2 EffectAssetArr = 11;
      case 11: {
        if (tag == 90) {
         parse_EffectAssetArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_effectassetarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_EffectAssetArr;
        if (input->ExpectTag(98)) goto parse_TreasureBoxArr;
        break;
      }

      // repeated .pb.TreasureBox TreasureBoxArr = 12;
      case 12: {
        if (tag == 98) {
         parse_TreasureBoxArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_treasureboxarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_TreasureBoxArr;
        if (input->ExpectTag(106)) goto parse_WarMistyAreaArr;
        break;
      }

      // repeated .pb.WarMistyArea WarMistyAreaArr = 13;
      case 13: {
        if (tag == 106) {
         parse_WarMistyAreaArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_warmistyareaarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_WarMistyAreaArr;
        if (input->ExpectTag(114)) goto parse_InteracteSceneUIArr;
        break;
      }

      // repeated .pb.InteracteSceneUI InteracteSceneUIArr = 14;
      case 14: {
        if (tag == 114) {
         parse_InteracteSceneUIArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_interactesceneuiarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_InteracteSceneUIArr;
        if (input->ExpectTag(122)) goto parse_PatrolPathArr;
        break;
      }

      // repeated .pb.PatrolPath2 PatrolPathArr = 15;
      case 15: {
        if (tag == 122) {
         parse_PatrolPathArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_patrolpatharr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_PatrolPathArr;
        if (input->ExpectTag(130)) goto parse_CarrierEntArr;
        break;
      }

      // repeated .pb.CarrierEnt2 CarrierEntArr = 16;
      case 16: {
        if (tag == 130) {
         parse_CarrierEntArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_carrierentarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_CarrierEntArr;
        if (input->ExpectTag(138)) goto parse_ObstacleArr;
        break;
      }

      // repeated .pb.Obstacle ObstacleArr = 17;
      case 17: {
        if (tag == 138) {
         parse_ObstacleArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obstaclearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_ObstacleArr;
        if (input->ExpectTag(146)) goto parse_MistyAssetPathArr;
        break;
      }

      // repeated string MistyAssetPathArr = 18;
      case 18: {
        if (tag == 146) {
         parse_MistyAssetPathArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mistyassetpatharr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mistyassetpatharr(this->mistyassetpatharr_size() - 1).data(),
            this->mistyassetpatharr(this->mistyassetpatharr_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mistyassetpatharr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_MistyAssetPathArr;
        if (input->ExpectTag(154)) goto parse_TaskNpcArr;
        break;
      }

      // repeated .pb.TaskNpc TaskNpcArr = 19;
      case 19: {
        if (tag == 154) {
         parse_TaskNpcArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tasknpcarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_TaskNpcArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SceneConfInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SceneConfInstance)
  return false;
#undef DO_
}

void SceneConfInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SceneConfInstance)
  // required int32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string ConfName = 2;
  if (has_confname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->confname().data(), this->confname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "confname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->confname(), output);
  }

  // optional .pb.MapInfo MapInfo = 3;
  if (has_mapinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mapinfo(), output);
  }

  // required .pb.SceneChunkInfo ChunkInfo = 4;
  if (has_chunkinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->chunkinfo(), output);
  }

  // repeated .pb.PointElement2 PointElementArr = 5;
  for (int i = 0; i < this->pointelementarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->pointelementarr(i), output);
  }

  // required .pb.PbRect CameraMoveArea = 6;
  if (has_cameramovearea()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->cameramovearea(), output);
  }

  // repeated .pb.RectArea2 RectAreaArr = 7;
  for (int i = 0; i < this->rectareaarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rectareaarr(i), output);
  }

  // repeated .pb.CustomArea2 CustomAreaArr = 8;
  for (int i = 0; i < this->customareaarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->customareaarr(i), output);
  }

  // repeated .pb.AnimAsset2 AnimAssetArr = 9;
  for (int i = 0; i < this->animassetarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->animassetarr(i), output);
  }

  // repeated .pb.StaticAsset2 StaticAssetArr = 10;
  for (int i = 0; i < this->staticassetarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->staticassetarr(i), output);
  }

  // repeated .pb.EffectAsset2 EffectAssetArr = 11;
  for (int i = 0; i < this->effectassetarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->effectassetarr(i), output);
  }

  // repeated .pb.TreasureBox TreasureBoxArr = 12;
  for (int i = 0; i < this->treasureboxarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->treasureboxarr(i), output);
  }

  // repeated .pb.WarMistyArea WarMistyAreaArr = 13;
  for (int i = 0; i < this->warmistyareaarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->warmistyareaarr(i), output);
  }

  // repeated .pb.InteracteSceneUI InteracteSceneUIArr = 14;
  for (int i = 0; i < this->interactesceneuiarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->interactesceneuiarr(i), output);
  }

  // repeated .pb.PatrolPath2 PatrolPathArr = 15;
  for (int i = 0; i < this->patrolpatharr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->patrolpatharr(i), output);
  }

  // repeated .pb.CarrierEnt2 CarrierEntArr = 16;
  for (int i = 0; i < this->carrierentarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->carrierentarr(i), output);
  }

  // repeated .pb.Obstacle ObstacleArr = 17;
  for (int i = 0; i < this->obstaclearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->obstaclearr(i), output);
  }

  // repeated string MistyAssetPathArr = 18;
  for (int i = 0; i < this->mistyassetpatharr_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->mistyassetpatharr(i).data(), this->mistyassetpatharr(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "mistyassetpatharr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->mistyassetpatharr(i), output);
  }

  // repeated .pb.TaskNpc TaskNpcArr = 19;
  for (int i = 0; i < this->tasknpcarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->tasknpcarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SceneConfInstance)
}

::google::protobuf::uint8* SceneConfInstance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SceneConfInstance)
  // required int32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string ConfName = 2;
  if (has_confname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->confname().data(), this->confname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "confname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->confname(), target);
  }

  // optional .pb.MapInfo MapInfo = 3;
  if (has_mapinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mapinfo(), target);
  }

  // required .pb.SceneChunkInfo ChunkInfo = 4;
  if (has_chunkinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->chunkinfo(), target);
  }

  // repeated .pb.PointElement2 PointElementArr = 5;
  for (int i = 0; i < this->pointelementarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->pointelementarr(i), target);
  }

  // required .pb.PbRect CameraMoveArea = 6;
  if (has_cameramovearea()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->cameramovearea(), target);
  }

  // repeated .pb.RectArea2 RectAreaArr = 7;
  for (int i = 0; i < this->rectareaarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rectareaarr(i), target);
  }

  // repeated .pb.CustomArea2 CustomAreaArr = 8;
  for (int i = 0; i < this->customareaarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->customareaarr(i), target);
  }

  // repeated .pb.AnimAsset2 AnimAssetArr = 9;
  for (int i = 0; i < this->animassetarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->animassetarr(i), target);
  }

  // repeated .pb.StaticAsset2 StaticAssetArr = 10;
  for (int i = 0; i < this->staticassetarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->staticassetarr(i), target);
  }

  // repeated .pb.EffectAsset2 EffectAssetArr = 11;
  for (int i = 0; i < this->effectassetarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->effectassetarr(i), target);
  }

  // repeated .pb.TreasureBox TreasureBoxArr = 12;
  for (int i = 0; i < this->treasureboxarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->treasureboxarr(i), target);
  }

  // repeated .pb.WarMistyArea WarMistyAreaArr = 13;
  for (int i = 0; i < this->warmistyareaarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->warmistyareaarr(i), target);
  }

  // repeated .pb.InteracteSceneUI InteracteSceneUIArr = 14;
  for (int i = 0; i < this->interactesceneuiarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->interactesceneuiarr(i), target);
  }

  // repeated .pb.PatrolPath2 PatrolPathArr = 15;
  for (int i = 0; i < this->patrolpatharr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->patrolpatharr(i), target);
  }

  // repeated .pb.CarrierEnt2 CarrierEntArr = 16;
  for (int i = 0; i < this->carrierentarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->carrierentarr(i), target);
  }

  // repeated .pb.Obstacle ObstacleArr = 17;
  for (int i = 0; i < this->obstaclearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->obstaclearr(i), target);
  }

  // repeated string MistyAssetPathArr = 18;
  for (int i = 0; i < this->mistyassetpatharr_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mistyassetpatharr(i).data(), this->mistyassetpatharr(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mistyassetpatharr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(18, this->mistyassetpatharr(i), target);
  }

  // repeated .pb.TaskNpc TaskNpcArr = 19;
  for (int i = 0; i < this->tasknpcarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->tasknpcarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SceneConfInstance)
  return target;
}

int SceneConfInstance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required string ConfName = 2;
    if (has_confname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->confname());
    }

    // optional .pb.MapInfo MapInfo = 3;
    if (has_mapinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mapinfo());
    }

    // required .pb.SceneChunkInfo ChunkInfo = 4;
    if (has_chunkinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chunkinfo());
    }

    // required .pb.PbRect CameraMoveArea = 6;
    if (has_cameramovearea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cameramovearea());
    }

  }
  // repeated .pb.PointElement2 PointElementArr = 5;
  total_size += 1 * this->pointelementarr_size();
  for (int i = 0; i < this->pointelementarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pointelementarr(i));
  }

  // repeated .pb.RectArea2 RectAreaArr = 7;
  total_size += 1 * this->rectareaarr_size();
  for (int i = 0; i < this->rectareaarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rectareaarr(i));
  }

  // repeated .pb.CustomArea2 CustomAreaArr = 8;
  total_size += 1 * this->customareaarr_size();
  for (int i = 0; i < this->customareaarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->customareaarr(i));
  }

  // repeated .pb.AnimAsset2 AnimAssetArr = 9;
  total_size += 1 * this->animassetarr_size();
  for (int i = 0; i < this->animassetarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animassetarr(i));
  }

  // repeated .pb.StaticAsset2 StaticAssetArr = 10;
  total_size += 1 * this->staticassetarr_size();
  for (int i = 0; i < this->staticassetarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->staticassetarr(i));
  }

  // repeated .pb.EffectAsset2 EffectAssetArr = 11;
  total_size += 1 * this->effectassetarr_size();
  for (int i = 0; i < this->effectassetarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effectassetarr(i));
  }

  // repeated .pb.TreasureBox TreasureBoxArr = 12;
  total_size += 1 * this->treasureboxarr_size();
  for (int i = 0; i < this->treasureboxarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->treasureboxarr(i));
  }

  // repeated .pb.WarMistyArea WarMistyAreaArr = 13;
  total_size += 1 * this->warmistyareaarr_size();
  for (int i = 0; i < this->warmistyareaarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->warmistyareaarr(i));
  }

  // repeated .pb.InteracteSceneUI InteracteSceneUIArr = 14;
  total_size += 1 * this->interactesceneuiarr_size();
  for (int i = 0; i < this->interactesceneuiarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->interactesceneuiarr(i));
  }

  // repeated .pb.PatrolPath2 PatrolPathArr = 15;
  total_size += 1 * this->patrolpatharr_size();
  for (int i = 0; i < this->patrolpatharr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->patrolpatharr(i));
  }

  // repeated .pb.CarrierEnt2 CarrierEntArr = 16;
  total_size += 2 * this->carrierentarr_size();
  for (int i = 0; i < this->carrierentarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->carrierentarr(i));
  }

  // repeated .pb.Obstacle ObstacleArr = 17;
  total_size += 2 * this->obstaclearr_size();
  for (int i = 0; i < this->obstaclearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->obstaclearr(i));
  }

  // repeated string MistyAssetPathArr = 18;
  total_size += 2 * this->mistyassetpatharr_size();
  for (int i = 0; i < this->mistyassetpatharr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mistyassetpatharr(i));
  }

  // repeated .pb.TaskNpc TaskNpcArr = 19;
  total_size += 2 * this->tasknpcarr_size();
  for (int i = 0; i < this->tasknpcarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tasknpcarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneConfInstance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SceneConfInstance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SceneConfInstance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SceneConfInstance::MergeFrom(const SceneConfInstance& from) {
  GOOGLE_CHECK_NE(&from, this);
  pointelementarr_.MergeFrom(from.pointelementarr_);
  rectareaarr_.MergeFrom(from.rectareaarr_);
  customareaarr_.MergeFrom(from.customareaarr_);
  animassetarr_.MergeFrom(from.animassetarr_);
  staticassetarr_.MergeFrom(from.staticassetarr_);
  effectassetarr_.MergeFrom(from.effectassetarr_);
  treasureboxarr_.MergeFrom(from.treasureboxarr_);
  warmistyareaarr_.MergeFrom(from.warmistyareaarr_);
  interactesceneuiarr_.MergeFrom(from.interactesceneuiarr_);
  patrolpatharr_.MergeFrom(from.patrolpatharr_);
  carrierentarr_.MergeFrom(from.carrierentarr_);
  obstaclearr_.MergeFrom(from.obstaclearr_);
  mistyassetpatharr_.MergeFrom(from.mistyassetpatharr_);
  tasknpcarr_.MergeFrom(from.tasknpcarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_confname()) {
      set_confname(from.confname());
    }
    if (from.has_mapinfo()) {
      mutable_mapinfo()->::pb::MapInfo::MergeFrom(from.mapinfo());
    }
    if (from.has_chunkinfo()) {
      mutable_chunkinfo()->::pb::SceneChunkInfo::MergeFrom(from.chunkinfo());
    }
    if (from.has_cameramovearea()) {
      mutable_cameramovearea()->::pb::PbRect::MergeFrom(from.cameramovearea());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SceneConfInstance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneConfInstance::CopyFrom(const SceneConfInstance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneConfInstance::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000002b) != 0x0000002b) return false;

  if (has_chunkinfo()) {
    if (!this->chunkinfo().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->pointelementarr())) return false;
  if (has_cameramovearea()) {
    if (!this->cameramovearea().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->rectareaarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->customareaarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animassetarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->staticassetarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->effectassetarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->treasureboxarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->warmistyareaarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->interactesceneuiarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->patrolpatharr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->carrierentarr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tasknpcarr())) return false;
  return true;
}

void SceneConfInstance::Swap(SceneConfInstance* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(confname_, other->confname_);
    std::swap(mapinfo_, other->mapinfo_);
    std::swap(chunkinfo_, other->chunkinfo_);
    pointelementarr_.Swap(&other->pointelementarr_);
    std::swap(cameramovearea_, other->cameramovearea_);
    rectareaarr_.Swap(&other->rectareaarr_);
    customareaarr_.Swap(&other->customareaarr_);
    animassetarr_.Swap(&other->animassetarr_);
    staticassetarr_.Swap(&other->staticassetarr_);
    effectassetarr_.Swap(&other->effectassetarr_);
    treasureboxarr_.Swap(&other->treasureboxarr_);
    warmistyareaarr_.Swap(&other->warmistyareaarr_);
    interactesceneuiarr_.Swap(&other->interactesceneuiarr_);
    patrolpatharr_.Swap(&other->patrolpatharr_);
    carrierentarr_.Swap(&other->carrierentarr_);
    obstaclearr_.Swap(&other->obstaclearr_);
    mistyassetpatharr_.Swap(&other->mistyassetpatharr_);
    tasknpcarr_.Swap(&other->tasknpcarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SceneConfInstance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SceneConfInstance_descriptor_;
  metadata.reflection = SceneConfInstance_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
