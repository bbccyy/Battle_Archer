// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BattleStarter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/BattleStarter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TBattleDummyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBattleDummyMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EBattleType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EBattleStarter_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fBattleStarter_2eproto() {
  protobuf_AddDesc_net_2fBattleStarter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/BattleStarter.proto");
  GOOGLE_CHECK(file != NULL);
  TBattleDummyMsg_descriptor_ = file->message_type(0);
  static const int TBattleDummyMsg_offsets_[1] = {
  };
  TBattleDummyMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBattleDummyMsg_descriptor_,
      TBattleDummyMsg::default_instance_,
      TBattleDummyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleDummyMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBattleDummyMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBattleDummyMsg));
  EBattleType_descriptor_ = file->enum_type(0);
  EBattleStarter_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fBattleStarter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBattleDummyMsg_descriptor_, &TBattleDummyMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fBattleStarter_2eproto() {
  delete TBattleDummyMsg::default_instance_;
  delete TBattleDummyMsg_reflection_;
}

void protobuf_AddDesc_net_2fBattleStarter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027net/BattleStarter.proto\022\002pb\"\021\n\017TBattle"
    "DummyMsg*i\n\013EBattleType\022\025\n\021EBattleTypeRP"
    "GPVE\020\001\022\025\n\021EBattleTypeRPGPVP\020\002\022\025\n\021EBattle"
    "TypeSLGPVE\020\003\022\025\n\021EBattleTypeSLGPVP\020\004*\252\013\n\016"
    "EBattleStarter\022\017\n\013EBattleNone\020\000\022\036\n\032EBatt"
    "leMajorInstanceNormal\020\001\022\035\n\031EBattleMajorI"
    "nstanceElite\020\002\022\035\n\031EBattleMajorInstanceDa"
    "ily\020\003\022\032\n\026EBattleMajorExpedition\020\004\022\025\n\021EBa"
    "ttleMajorTower\020\005\022\025\n\021EBattleMajorArena\020\006\022"
    "\031\n\025EBattleMajorAdventure\020\007\022\030\n\024EBattleMaj"
    "orHuntSoul\020\010\022\030\n\024EBattleSLGCountryWar\020\t\022\031"
    "\n\025EBattleMajorGuildBoss\020\n\022\027\n\023EBattleMajo"
    "rCompare\020\013\022\027\n\023EBattleMajorRPGMine\020\014\022\030\n\024E"
    "BattleMajorGuildWar\020\r\022\031\n\025EBattleMajorWor"
    "ldBoss\020\016\022\023\n\017EBattleMajor3v3\020\017\022\035\n\031EBattle"
    "MajorAdvancedArena\020\020\022\"\n\036EBattleMajorGuil"
    "dInvadeMonster\020\021\022\022\n\016EBattleMajorAR\020\022\022\035\n\031"
    "EBattleMajorInstanceBeast\020\023\022\031\n\025EBattleMa"
    "jorCampTower\020\024\022\036\n\032EBattleMajorAdventureT"
    "ower\020\025\022%\n!EBattleMajorGroupingKnockoutMa"
    "tch\020\026\022\"\n\036EBattleMajorAdventureEnemyRaid\020"
    "\027\022\022\n\016EBattleMajorTD\020\030\022\036\n\032EBattleMajorCro"
    "ssChallenge\020\031\022\036\n\032EBattleMajorCrossWorldB"
    "oss\020\032\022%\n!EBattleCrossGuildWarCallForBatt"
    "le\020\033\022\035\n\031EBattleCrossGuildWarTower\020\034\022&\n\"E"
    "BattleMajorActivityLimitChallenge\020\035\022\024\n\020E"
    "BattleCrossLevy\020\036\022\032\n\026EBattleMajorActivit"
    "yTD\020\037\022\024\n\020EBattleMajorLevy\020 \022\031\n\025EBattleCr"
    "ossLevyTower\020!\022\035\n\031EBattleCrossLevySuperB"
    "oss\020\"\022\030\n\024EBattleMajorOutsmart\020#\022\033\n\027EBatt"
    "leLevyTeamInstance\020$\022\033\n\027EBattleCrossColl"
    "aborate\020%\022\017\n\013EBattlePubg\020&\022\022\n\016EBattleAll"
    "yWar\020\'\022\022\n\016EBattleBigHunt\020(\022\026\n\022EBattleBig"
    "HuntBoss\020)\022\027\n\023EBattlePlunderGuard\020*\022\030\n\024E"
    "BattlePlunderAttack\020+\022\031\n\025EBattlePlunderR"
    "evenge\020,\022\025\n\021EBattleLayerFight\020-\022\022\n\016EBatt"
    "lePlunder\020.\022\034\n\030EBattleSoulChainActivity\020"
    "/\022\017\n\013EBattleBoss\0200\022\030\n\024EBattlePlatformAre"
    "na\0201\022 \n\034EBattleLegendaryArmChallenge\0202\022\024"
    "\n\020EBattleTowerHell\0203\022\032\n\026EBattleDefineCha"
    "llenge\0204", 1608);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/BattleStarter.proto", &protobuf_RegisterTypes);
  TBattleDummyMsg::default_instance_ = new TBattleDummyMsg();
  TBattleDummyMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fBattleStarter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fBattleStarter_2eproto {
  StaticDescriptorInitializer_net_2fBattleStarter_2eproto() {
    protobuf_AddDesc_net_2fBattleStarter_2eproto();
  }
} static_descriptor_initializer_net_2fBattleStarter_2eproto_;
const ::google::protobuf::EnumDescriptor* EBattleType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EBattleType_descriptor_;
}
bool EBattleType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EBattleStarter_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EBattleStarter_descriptor_;
}
bool EBattleStarter_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TBattleDummyMsg::TBattleDummyMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBattleDummyMsg)
}

void TBattleDummyMsg::InitAsDefaultInstance() {
}

TBattleDummyMsg::TBattleDummyMsg(const TBattleDummyMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBattleDummyMsg)
}

void TBattleDummyMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBattleDummyMsg::~TBattleDummyMsg() {
  // @@protoc_insertion_point(destructor:pb.TBattleDummyMsg)
  SharedDtor();
}

void TBattleDummyMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBattleDummyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBattleDummyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBattleDummyMsg_descriptor_;
}

const TBattleDummyMsg& TBattleDummyMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBattleStarter_2eproto();
  return *default_instance_;
}

TBattleDummyMsg* TBattleDummyMsg::default_instance_ = NULL;

TBattleDummyMsg* TBattleDummyMsg::New() const {
  return new TBattleDummyMsg;
}

void TBattleDummyMsg::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBattleDummyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBattleDummyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBattleDummyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBattleDummyMsg)
  return false;
#undef DO_
}

void TBattleDummyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBattleDummyMsg)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBattleDummyMsg)
}

::google::protobuf::uint8* TBattleDummyMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBattleDummyMsg)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBattleDummyMsg)
  return target;
}

int TBattleDummyMsg::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBattleDummyMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBattleDummyMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBattleDummyMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBattleDummyMsg::MergeFrom(const TBattleDummyMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBattleDummyMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBattleDummyMsg::CopyFrom(const TBattleDummyMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBattleDummyMsg::IsInitialized() const {

  return true;
}

void TBattleDummyMsg::Swap(TBattleDummyMsg* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBattleDummyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBattleDummyMsg_descriptor_;
  metadata.reflection = TBattleDummyMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
