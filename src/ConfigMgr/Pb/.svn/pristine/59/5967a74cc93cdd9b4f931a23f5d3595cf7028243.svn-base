// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Recycle.proto

#ifndef PROTOBUF_net_2fRecycle_2eproto__INCLUDED
#define PROTOBUF_net_2fRecycle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fRecycle_2eproto();
void protobuf_AssignDesc_net_2fRecycle_2eproto();
void protobuf_ShutdownFile_net_2fRecycle_2eproto();

class TRecycleGetInfoRsp;
class TRecycleItemTidInfo;
class TRecycleRecycleHeroFragReq;
class TRecycleRecycleHeroFragRsp;
class TRecycleDecomposeArmsReq;
class TRecycleDecomposeArmsRsp;
class TRecycleRebornArmsReq;
class TRecycleRebornArmsRsp;
class TRecycleRebornAccessoryReq;
class TRecycleRebornAccessoryRsp;
class TRecycleDecomposeAccessoryReq;
class TRecycleDecomposeAccessoryRsp;
class TRecycleRebornHeroReq;
class TRecycleRebornHeroRsp;
class TRecycleInheritHeroReq;
class TRecycleInheritHeroRsp;
class TRecycleDecomposeExclEquipReq;
class TRecycleDecomposeExclEquipRsp;
class TRecycleRebornExclEquipReq;
class TRecycleRebornExclEquipRsp;
class TRecycleRebornExclEquipRefineReq;
class TRecycleRebornExclEquipRefineRsp;
class TRecycleRebornWarRidingReq;
class TRecycleRebornWarRidingRsp;
class TRecycleRebornBeastReq;
class TRecycleRebornBeastRsp;
class TRecycleRebornBeastArmReq;
class TRecycleRebornBeastArmRsp;
class TRecycleDecomposeBeastArmReq;
class TRecycleDecomposeBeastArmRsp;
class TRecycleRebornMountEquipReq;
class TRecycleDecomposeMountEquipReq;
class TRecycleDecomposeDirectItemReq;
class TRecycleGoldHeroExchangeReq;
class TRecycleCountryExchangeReq;
class TRecycleRedHeroExchangeReq;
class TRecycleRedHeroExchangeRsp;
class TRecycleDecomposeArmFragReq;
class TRecycleDecomposeAccessoryFragReq;
class TRecycleRebornSilkBagReq;
class TRecycleDecomposeSilkBagReq;
class TRecycleDecomposeTreasureStoneReq;
class TRecycleDecomposeDecorationsReq;
class TRecycleDecomposeDecorationsRsp;
class TRecycleRebornDecorationsReq;
class TRecycleRebornDecorationsRsp;
class TRecycleRebornForceSoulReq;
class TRecycleRebornForceSoulRsp;
class TRecycleDecomposeForceSoulReq;
class TRecycleDecomposeForceSoulRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TRecycleGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleGetInfoRsp : public ::google::protobuf::Message {
 public:
  TRecycleGetInfoRsp();
  virtual ~TRecycleGetInfoRsp();

  TRecycleGetInfoRsp(const TRecycleGetInfoRsp& from);

  inline TRecycleGetInfoRsp& operator=(const TRecycleGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleGetInfoRsp& default_instance();

  void Swap(TRecycleGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TRecycleGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleGetInfoRsp& from);
  void MergeFrom(const TRecycleGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 CountryExchangeTime = 1;
  inline bool has_countryexchangetime() const;
  inline void clear_countryexchangetime();
  static const int kCountryExchangeTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleGetInfoRsp</name>
  	<Function>
  		<name>countryexchangetime</name>
  		<replaceName>CountryExchangeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_countryexchangetime</name>
  		<replaceName>CountryExchangeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_countryexchangetime</name>
  		<replaceName>CountryExchangeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 countryexchangetime() const;
  inline void set_countryexchangetime(::google::protobuf::uint64 value);

  // optional uint32 CountryExchangeNum = 2;
  inline bool has_countryexchangenum() const;
  inline void clear_countryexchangenum();
  static const int kCountryExchangeNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleGetInfoRsp</name>
  	<Function>
  		<name>countryexchangenum</name>
  		<replaceName>CountryExchangeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_countryexchangenum</name>
  		<replaceName>CountryExchangeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_countryexchangenum</name>
  		<replaceName>CountryExchangeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 countryexchangenum() const;
  inline void set_countryexchangenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleGetInfoRsp)
 private:
  inline void set_has_countryexchangetime();
  inline void clear_has_countryexchangetime();
  inline void set_has_countryexchangenum();
  inline void clear_has_countryexchangenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 countryexchangetime_;
  ::google::protobuf::uint32 countryexchangenum_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleItemTidInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleItemTidInfo : public ::google::protobuf::Message {
 public:
  TRecycleItemTidInfo();
  virtual ~TRecycleItemTidInfo();

  TRecycleItemTidInfo(const TRecycleItemTidInfo& from);

  inline TRecycleItemTidInfo& operator=(const TRecycleItemTidInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleItemTidInfo& default_instance();

  void Swap(TRecycleItemTidInfo* other);

  // implements Message ----------------------------------------------

  TRecycleItemTidInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleItemTidInfo& from);
  void MergeFrom(const TRecycleItemTidInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemTid = 1;
  inline bool has_itemtid() const;
  inline void clear_itemtid();
  static const int kItemTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleItemTidInfo</name>
  	<Function>
  		<name>itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemtid() const;
  inline void set_itemtid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleItemTidInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleItemTidInfo)
 private:
  inline void set_has_itemtid();
  inline void clear_has_itemtid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemtid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleItemTidInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRecycleHeroFragReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRecycleHeroFragReq : public ::google::protobuf::Message {
 public:
  TRecycleRecycleHeroFragReq();
  virtual ~TRecycleRecycleHeroFragReq();

  TRecycleRecycleHeroFragReq(const TRecycleRecycleHeroFragReq& from);

  inline TRecycleRecycleHeroFragReq& operator=(const TRecycleRecycleHeroFragReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRecycleHeroFragReq& default_instance();

  void Swap(TRecycleRecycleHeroFragReq* other);

  // implements Message ----------------------------------------------

  TRecycleRecycleHeroFragReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRecycleHeroFragReq& from);
  void MergeFrom(const TRecycleRecycleHeroFragReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TRecycleItemTidInfo ItemArray = 1;
  inline int itemarray_size() const;
  inline void clear_itemarray();
  static const int kItemArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRecycleHeroFragReq</name>
  	<Function>
  		<name>itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemarray_size</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRecycleItemTidInfo& itemarray(int index) const;
  inline ::pb::TRecycleItemTidInfo* mutable_itemarray(int index);
  inline ::pb::TRecycleItemTidInfo* add_itemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >&
      itemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >*
      mutable_itemarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRecycleHeroFragReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo > itemarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRecycleHeroFragReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRecycleHeroFragRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRecycleHeroFragRsp : public ::google::protobuf::Message {
 public:
  TRecycleRecycleHeroFragRsp();
  virtual ~TRecycleRecycleHeroFragRsp();

  TRecycleRecycleHeroFragRsp(const TRecycleRecycleHeroFragRsp& from);

  inline TRecycleRecycleHeroFragRsp& operator=(const TRecycleRecycleHeroFragRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRecycleHeroFragRsp& default_instance();

  void Swap(TRecycleRecycleHeroFragRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRecycleHeroFragRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRecycleHeroFragRsp& from);
  void MergeFrom(const TRecycleRecycleHeroFragRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRecycleHeroFragRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRecycleHeroFragRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRecycleHeroFragRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeArmsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeArmsReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeArmsReq();
  virtual ~TRecycleDecomposeArmsReq();

  TRecycleDecomposeArmsReq(const TRecycleDecomposeArmsReq& from);

  inline TRecycleDecomposeArmsReq& operator=(const TRecycleDecomposeArmsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeArmsReq& default_instance();

  void Swap(TRecycleDecomposeArmsReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeArmsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeArmsReq& from);
  void MergeFrom(const TRecycleDecomposeArmsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeArmsReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeArmsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeArmsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeArmsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeArmsRsp : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeArmsRsp();
  virtual ~TRecycleDecomposeArmsRsp();

  TRecycleDecomposeArmsRsp(const TRecycleDecomposeArmsRsp& from);

  inline TRecycleDecomposeArmsRsp& operator=(const TRecycleDecomposeArmsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeArmsRsp& default_instance();

  void Swap(TRecycleDecomposeArmsRsp* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeArmsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeArmsRsp& from);
  void MergeFrom(const TRecycleDecomposeArmsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeArmsRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeArmsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeArmsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornArmsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornArmsReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornArmsReq();
  virtual ~TRecycleRebornArmsReq();

  TRecycleRebornArmsReq(const TRecycleRebornArmsReq& from);

  inline TRecycleRebornArmsReq& operator=(const TRecycleRebornArmsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornArmsReq& default_instance();

  void Swap(TRecycleRebornArmsReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornArmsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornArmsReq& from);
  void MergeFrom(const TRecycleRebornArmsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornArmsReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornArmsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornArmsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornArmsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornArmsRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornArmsRsp();
  virtual ~TRecycleRebornArmsRsp();

  TRecycleRebornArmsRsp(const TRecycleRebornArmsRsp& from);

  inline TRecycleRebornArmsRsp& operator=(const TRecycleRebornArmsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornArmsRsp& default_instance();

  void Swap(TRecycleRebornArmsRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornArmsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornArmsRsp& from);
  void MergeFrom(const TRecycleRebornArmsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornArmsRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornArmsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornArmsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornAccessoryReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornAccessoryReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornAccessoryReq();
  virtual ~TRecycleRebornAccessoryReq();

  TRecycleRebornAccessoryReq(const TRecycleRebornAccessoryReq& from);

  inline TRecycleRebornAccessoryReq& operator=(const TRecycleRebornAccessoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornAccessoryReq& default_instance();

  void Swap(TRecycleRebornAccessoryReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornAccessoryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornAccessoryReq& from);
  void MergeFrom(const TRecycleRebornAccessoryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornAccessoryReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornAccessoryReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornAccessoryReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornAccessoryRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornAccessoryRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornAccessoryRsp();
  virtual ~TRecycleRebornAccessoryRsp();

  TRecycleRebornAccessoryRsp(const TRecycleRebornAccessoryRsp& from);

  inline TRecycleRebornAccessoryRsp& operator=(const TRecycleRebornAccessoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornAccessoryRsp& default_instance();

  void Swap(TRecycleRebornAccessoryRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornAccessoryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornAccessoryRsp& from);
  void MergeFrom(const TRecycleRebornAccessoryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornAccessoryRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornAccessoryRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornAccessoryRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeAccessoryReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeAccessoryReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeAccessoryReq();
  virtual ~TRecycleDecomposeAccessoryReq();

  TRecycleDecomposeAccessoryReq(const TRecycleDecomposeAccessoryReq& from);

  inline TRecycleDecomposeAccessoryReq& operator=(const TRecycleDecomposeAccessoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeAccessoryReq& default_instance();

  void Swap(TRecycleDecomposeAccessoryReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeAccessoryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeAccessoryReq& from);
  void MergeFrom(const TRecycleDecomposeAccessoryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeAccessoryReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeAccessoryReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeAccessoryReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeAccessoryRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeAccessoryRsp : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeAccessoryRsp();
  virtual ~TRecycleDecomposeAccessoryRsp();

  TRecycleDecomposeAccessoryRsp(const TRecycleDecomposeAccessoryRsp& from);

  inline TRecycleDecomposeAccessoryRsp& operator=(const TRecycleDecomposeAccessoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeAccessoryRsp& default_instance();

  void Swap(TRecycleDecomposeAccessoryRsp* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeAccessoryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeAccessoryRsp& from);
  void MergeFrom(const TRecycleDecomposeAccessoryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeAccessoryRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeAccessoryRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeAccessoryRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornHeroReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornHeroReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornHeroReq();
  virtual ~TRecycleRebornHeroReq();

  TRecycleRebornHeroReq(const TRecycleRebornHeroReq& from);

  inline TRecycleRebornHeroReq& operator=(const TRecycleRebornHeroReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornHeroReq& default_instance();

  void Swap(TRecycleRebornHeroReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornHeroReq& from);
  void MergeFrom(const TRecycleRebornHeroReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornHeroReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional bool IsPreview = 2;
  inline bool has_ispreview() const;
  inline void clear_ispreview();
  static const int kIsPreviewFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornHeroReq</name>
  	<Function>
  		<name>ispreview</name>
  		<replaceName>IsPreview</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_ispreview</name>
  		<replaceName>IsPreview</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ispreview</name>
  		<replaceName>IsPreview</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool ispreview() const;
  inline void set_ispreview(bool value);

  // optional bool IsHall = 3;
  inline bool has_ishall() const;
  inline void clear_ishall();
  static const int kIsHallFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornHeroReq</name>
  	<Function>
  		<name>ishall</name>
  		<replaceName>IsHall</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_ishall</name>
  		<replaceName>IsHall</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ishall</name>
  		<replaceName>IsHall</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool ishall() const;
  inline void set_ishall(bool value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornHeroReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_ispreview();
  inline void clear_has_ispreview();
  inline void set_has_ishall();
  inline void clear_has_ishall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  bool ispreview_;
  bool ishall_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornHeroReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornHeroRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornHeroRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornHeroRsp();
  virtual ~TRecycleRebornHeroRsp();

  TRecycleRebornHeroRsp(const TRecycleRebornHeroRsp& from);

  inline TRecycleRebornHeroRsp& operator=(const TRecycleRebornHeroRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornHeroRsp& default_instance();

  void Swap(TRecycleRebornHeroRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornHeroRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornHeroRsp& from);
  void MergeFrom(const TRecycleRebornHeroRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornHeroRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornHeroRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornHeroRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleInheritHeroReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleInheritHeroReq : public ::google::protobuf::Message {
 public:
  TRecycleInheritHeroReq();
  virtual ~TRecycleInheritHeroReq();

  TRecycleInheritHeroReq(const TRecycleInheritHeroReq& from);

  inline TRecycleInheritHeroReq& operator=(const TRecycleInheritHeroReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleInheritHeroReq& default_instance();

  void Swap(TRecycleInheritHeroReq* other);

  // implements Message ----------------------------------------------

  TRecycleInheritHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleInheritHeroReq& from);
  void MergeFrom(const TRecycleInheritHeroReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FromHid = 1;
  inline bool has_fromhid() const;
  inline void clear_fromhid();
  static const int kFromHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleInheritHeroReq</name>
  	<Function>
  		<name>fromhid</name>
  		<replaceName>FromHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fromhid</name>
  		<replaceName>FromHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fromhid</name>
  		<replaceName>FromHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 fromhid() const;
  inline void set_fromhid(::google::protobuf::uint32 value);

  // optional uint32 ToHid = 2;
  inline bool has_tohid() const;
  inline void clear_tohid();
  static const int kToHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleInheritHeroReq</name>
  	<Function>
  		<name>tohid</name>
  		<replaceName>ToHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tohid</name>
  		<replaceName>ToHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tohid</name>
  		<replaceName>ToHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tohid() const;
  inline void set_tohid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleInheritHeroReq)
 private:
  inline void set_has_fromhid();
  inline void clear_has_fromhid();
  inline void set_has_tohid();
  inline void clear_has_tohid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 fromhid_;
  ::google::protobuf::uint32 tohid_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleInheritHeroReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleInheritHeroRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleInheritHeroRsp : public ::google::protobuf::Message {
 public:
  TRecycleInheritHeroRsp();
  virtual ~TRecycleInheritHeroRsp();

  TRecycleInheritHeroRsp(const TRecycleInheritHeroRsp& from);

  inline TRecycleInheritHeroRsp& operator=(const TRecycleInheritHeroRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleInheritHeroRsp& default_instance();

  void Swap(TRecycleInheritHeroRsp* other);

  // implements Message ----------------------------------------------

  TRecycleInheritHeroRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleInheritHeroRsp& from);
  void MergeFrom(const TRecycleInheritHeroRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleInheritHeroRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleInheritHeroRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleInheritHeroRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeExclEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeExclEquipReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeExclEquipReq();
  virtual ~TRecycleDecomposeExclEquipReq();

  TRecycleDecomposeExclEquipReq(const TRecycleDecomposeExclEquipReq& from);

  inline TRecycleDecomposeExclEquipReq& operator=(const TRecycleDecomposeExclEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeExclEquipReq& default_instance();

  void Swap(TRecycleDecomposeExclEquipReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeExclEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeExclEquipReq& from);
  void MergeFrom(const TRecycleDecomposeExclEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeExclEquipReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeExclEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeExclEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeExclEquipRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeExclEquipRsp : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeExclEquipRsp();
  virtual ~TRecycleDecomposeExclEquipRsp();

  TRecycleDecomposeExclEquipRsp(const TRecycleDecomposeExclEquipRsp& from);

  inline TRecycleDecomposeExclEquipRsp& operator=(const TRecycleDecomposeExclEquipRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeExclEquipRsp& default_instance();

  void Swap(TRecycleDecomposeExclEquipRsp* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeExclEquipRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeExclEquipRsp& from);
  void MergeFrom(const TRecycleDecomposeExclEquipRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeExclEquipRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeExclEquipRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeExclEquipRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornExclEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornExclEquipReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornExclEquipReq();
  virtual ~TRecycleRebornExclEquipReq();

  TRecycleRebornExclEquipReq(const TRecycleRebornExclEquipReq& from);

  inline TRecycleRebornExclEquipReq& operator=(const TRecycleRebornExclEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornExclEquipReq& default_instance();

  void Swap(TRecycleRebornExclEquipReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornExclEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornExclEquipReq& from);
  void MergeFrom(const TRecycleRebornExclEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornExclEquipReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornExclEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornExclEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornExclEquipRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornExclEquipRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornExclEquipRsp();
  virtual ~TRecycleRebornExclEquipRsp();

  TRecycleRebornExclEquipRsp(const TRecycleRebornExclEquipRsp& from);

  inline TRecycleRebornExclEquipRsp& operator=(const TRecycleRebornExclEquipRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornExclEquipRsp& default_instance();

  void Swap(TRecycleRebornExclEquipRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornExclEquipRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornExclEquipRsp& from);
  void MergeFrom(const TRecycleRebornExclEquipRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornExclEquipRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornExclEquipRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornExclEquipRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornExclEquipRefineReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornExclEquipRefineReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornExclEquipRefineReq();
  virtual ~TRecycleRebornExclEquipRefineReq();

  TRecycleRebornExclEquipRefineReq(const TRecycleRebornExclEquipRefineReq& from);

  inline TRecycleRebornExclEquipRefineReq& operator=(const TRecycleRebornExclEquipRefineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornExclEquipRefineReq& default_instance();

  void Swap(TRecycleRebornExclEquipRefineReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornExclEquipRefineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornExclEquipRefineReq& from);
  void MergeFrom(const TRecycleRebornExclEquipRefineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornExclEquipRefineReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornExclEquipRefineReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornExclEquipRefineReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornExclEquipRefineRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornExclEquipRefineRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornExclEquipRefineRsp();
  virtual ~TRecycleRebornExclEquipRefineRsp();

  TRecycleRebornExclEquipRefineRsp(const TRecycleRebornExclEquipRefineRsp& from);

  inline TRecycleRebornExclEquipRefineRsp& operator=(const TRecycleRebornExclEquipRefineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornExclEquipRefineRsp& default_instance();

  void Swap(TRecycleRebornExclEquipRefineRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornExclEquipRefineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornExclEquipRefineRsp& from);
  void MergeFrom(const TRecycleRebornExclEquipRefineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornExclEquipRefineRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornExclEquipRefineRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornExclEquipRefineRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornWarRidingReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornWarRidingReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornWarRidingReq();
  virtual ~TRecycleRebornWarRidingReq();

  TRecycleRebornWarRidingReq(const TRecycleRebornWarRidingReq& from);

  inline TRecycleRebornWarRidingReq& operator=(const TRecycleRebornWarRidingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornWarRidingReq& default_instance();

  void Swap(TRecycleRebornWarRidingReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornWarRidingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornWarRidingReq& from);
  void MergeFrom(const TRecycleRebornWarRidingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 WarRidingTidArray = 1;
  inline int warridingtidarray_size() const;
  inline void clear_warridingtidarray();
  static const int kWarRidingTidArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornWarRidingReq</name>
  	<Function>
  		<name>warridingtidarray</name>
  		<replaceName>WarRidingTidArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_warridingtidarray</name>
  		<replaceName>WarRidingTidArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_warridingtidarray</name>
  		<replaceName>WarRidingTidArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridingtidarray</name>
  		<replaceName>WarRidingTidArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>warridingtidarray_size</name>
  		<replaceName>WarRidingTidArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridingtidarray(int index) const;
  inline void set_warridingtidarray(int index, ::google::protobuf::uint32 value);
  inline void add_warridingtidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      warridingtidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_warridingtidarray();

  // optional bool IsPreview = 2;
  inline bool has_ispreview() const;
  inline void clear_ispreview();
  static const int kIsPreviewFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornWarRidingReq</name>
  	<Function>
  		<name>ispreview</name>
  		<replaceName>IsPreview</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_ispreview</name>
  		<replaceName>IsPreview</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ispreview</name>
  		<replaceName>IsPreview</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool ispreview() const;
  inline void set_ispreview(bool value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornWarRidingReq)
 private:
  inline void set_has_ispreview();
  inline void clear_has_ispreview();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > warridingtidarray_;
  bool ispreview_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornWarRidingReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornWarRidingRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornWarRidingRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornWarRidingRsp();
  virtual ~TRecycleRebornWarRidingRsp();

  TRecycleRebornWarRidingRsp(const TRecycleRebornWarRidingRsp& from);

  inline TRecycleRebornWarRidingRsp& operator=(const TRecycleRebornWarRidingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornWarRidingRsp& default_instance();

  void Swap(TRecycleRebornWarRidingRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornWarRidingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornWarRidingRsp& from);
  void MergeFrom(const TRecycleRebornWarRidingRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornWarRidingRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornWarRidingRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornWarRidingRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornBeastReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornBeastReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornBeastReq();
  virtual ~TRecycleRebornBeastReq();

  TRecycleRebornBeastReq(const TRecycleRebornBeastReq& from);

  inline TRecycleRebornBeastReq& operator=(const TRecycleRebornBeastReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornBeastReq& default_instance();

  void Swap(TRecycleRebornBeastReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornBeastReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornBeastReq& from);
  void MergeFrom(const TRecycleRebornBeastReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 BeastIdArray = 1;
  inline int beastidarray_size() const;
  inline void clear_beastidarray();
  static const int kBeastIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornBeastReq</name>
  	<Function>
  		<name>beastidarray</name>
  		<replaceName>BeastIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_beastidarray</name>
  		<replaceName>BeastIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_beastidarray</name>
  		<replaceName>BeastIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_beastidarray</name>
  		<replaceName>BeastIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>beastidarray_size</name>
  		<replaceName>BeastIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 beastidarray(int index) const;
  inline void set_beastidarray(int index, ::google::protobuf::uint32 value);
  inline void add_beastidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      beastidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_beastidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornBeastReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > beastidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornBeastReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornBeastRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornBeastRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornBeastRsp();
  virtual ~TRecycleRebornBeastRsp();

  TRecycleRebornBeastRsp(const TRecycleRebornBeastRsp& from);

  inline TRecycleRebornBeastRsp& operator=(const TRecycleRebornBeastRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornBeastRsp& default_instance();

  void Swap(TRecycleRebornBeastRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornBeastRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornBeastRsp& from);
  void MergeFrom(const TRecycleRebornBeastRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornBeastRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornBeastRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornBeastRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornBeastArmReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornBeastArmReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornBeastArmReq();
  virtual ~TRecycleRebornBeastArmReq();

  TRecycleRebornBeastArmReq(const TRecycleRebornBeastArmReq& from);

  inline TRecycleRebornBeastArmReq& operator=(const TRecycleRebornBeastArmReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornBeastArmReq& default_instance();

  void Swap(TRecycleRebornBeastArmReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornBeastArmReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornBeastArmReq& from);
  void MergeFrom(const TRecycleRebornBeastArmReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornBeastArmReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornBeastArmReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornBeastArmReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornBeastArmRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornBeastArmRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornBeastArmRsp();
  virtual ~TRecycleRebornBeastArmRsp();

  TRecycleRebornBeastArmRsp(const TRecycleRebornBeastArmRsp& from);

  inline TRecycleRebornBeastArmRsp& operator=(const TRecycleRebornBeastArmRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornBeastArmRsp& default_instance();

  void Swap(TRecycleRebornBeastArmRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornBeastArmRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornBeastArmRsp& from);
  void MergeFrom(const TRecycleRebornBeastArmRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornBeastArmRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornBeastArmRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornBeastArmRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeBeastArmReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeBeastArmReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeBeastArmReq();
  virtual ~TRecycleDecomposeBeastArmReq();

  TRecycleDecomposeBeastArmReq(const TRecycleDecomposeBeastArmReq& from);

  inline TRecycleDecomposeBeastArmReq& operator=(const TRecycleDecomposeBeastArmReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeBeastArmReq& default_instance();

  void Swap(TRecycleDecomposeBeastArmReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeBeastArmReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeBeastArmReq& from);
  void MergeFrom(const TRecycleDecomposeBeastArmReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeBeastArmReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeBeastArmReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeBeastArmReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeBeastArmRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeBeastArmRsp : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeBeastArmRsp();
  virtual ~TRecycleDecomposeBeastArmRsp();

  TRecycleDecomposeBeastArmRsp(const TRecycleDecomposeBeastArmRsp& from);

  inline TRecycleDecomposeBeastArmRsp& operator=(const TRecycleDecomposeBeastArmRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeBeastArmRsp& default_instance();

  void Swap(TRecycleDecomposeBeastArmRsp* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeBeastArmRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeBeastArmRsp& from);
  void MergeFrom(const TRecycleDecomposeBeastArmRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeBeastArmRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeBeastArmRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeBeastArmRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornMountEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornMountEquipReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornMountEquipReq();
  virtual ~TRecycleRebornMountEquipReq();

  TRecycleRebornMountEquipReq(const TRecycleRebornMountEquipReq& from);

  inline TRecycleRebornMountEquipReq& operator=(const TRecycleRebornMountEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornMountEquipReq& default_instance();

  void Swap(TRecycleRebornMountEquipReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornMountEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornMountEquipReq& from);
  void MergeFrom(const TRecycleRebornMountEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornMountEquipReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornMountEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornMountEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeMountEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeMountEquipReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeMountEquipReq();
  virtual ~TRecycleDecomposeMountEquipReq();

  TRecycleDecomposeMountEquipReq(const TRecycleDecomposeMountEquipReq& from);

  inline TRecycleDecomposeMountEquipReq& operator=(const TRecycleDecomposeMountEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeMountEquipReq& default_instance();

  void Swap(TRecycleDecomposeMountEquipReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeMountEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeMountEquipReq& from);
  void MergeFrom(const TRecycleDecomposeMountEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeMountEquipReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeMountEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeMountEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeDirectItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeDirectItemReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeDirectItemReq();
  virtual ~TRecycleDecomposeDirectItemReq();

  TRecycleDecomposeDirectItemReq(const TRecycleDecomposeDirectItemReq& from);

  inline TRecycleDecomposeDirectItemReq& operator=(const TRecycleDecomposeDirectItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeDirectItemReq& default_instance();

  void Swap(TRecycleDecomposeDirectItemReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeDirectItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeDirectItemReq& from);
  void MergeFrom(const TRecycleDecomposeDirectItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeDirectItemReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeDirectItemReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeDirectItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleGoldHeroExchangeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleGoldHeroExchangeReq : public ::google::protobuf::Message {
 public:
  TRecycleGoldHeroExchangeReq();
  virtual ~TRecycleGoldHeroExchangeReq();

  TRecycleGoldHeroExchangeReq(const TRecycleGoldHeroExchangeReq& from);

  inline TRecycleGoldHeroExchangeReq& operator=(const TRecycleGoldHeroExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleGoldHeroExchangeReq& default_instance();

  void Swap(TRecycleGoldHeroExchangeReq* other);

  // implements Message ----------------------------------------------

  TRecycleGoldHeroExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleGoldHeroExchangeReq& from);
  void MergeFrom(const TRecycleGoldHeroExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid1 = 1;
  inline bool has_hid1() const;
  inline void clear_hid1();
  static const int kHid1FieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleGoldHeroExchangeReq</name>
  	<Function>
  		<name>hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid1() const;
  inline void set_hid1(::google::protobuf::uint32 value);

  // optional uint32 Hid2 = 2;
  inline bool has_hid2() const;
  inline void clear_hid2();
  static const int kHid2FieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleGoldHeroExchangeReq</name>
  	<Function>
  		<name>hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid2() const;
  inline void set_hid2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleGoldHeroExchangeReq)
 private:
  inline void set_has_hid1();
  inline void clear_has_hid1();
  inline void set_has_hid2();
  inline void clear_has_hid2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid1_;
  ::google::protobuf::uint32 hid2_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleGoldHeroExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleCountryExchangeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleCountryExchangeReq : public ::google::protobuf::Message {
 public:
  TRecycleCountryExchangeReq();
  virtual ~TRecycleCountryExchangeReq();

  TRecycleCountryExchangeReq(const TRecycleCountryExchangeReq& from);

  inline TRecycleCountryExchangeReq& operator=(const TRecycleCountryExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleCountryExchangeReq& default_instance();

  void Swap(TRecycleCountryExchangeReq* other);

  // implements Message ----------------------------------------------

  TRecycleCountryExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleCountryExchangeReq& from);
  void MergeFrom(const TRecycleCountryExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Country1 = 1;
  inline bool has_country1() const;
  inline void clear_country1();
  static const int kCountry1FieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleCountryExchangeReq</name>
  	<Function>
  		<name>country1</name>
  		<replaceName>Country1</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_country1</name>
  		<replaceName>Country1</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_country1</name>
  		<replaceName>Country1</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 country1() const;
  inline void set_country1(::google::protobuf::uint32 value);

  // optional uint32 Country2 = 2;
  inline bool has_country2() const;
  inline void clear_country2();
  static const int kCountry2FieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleCountryExchangeReq</name>
  	<Function>
  		<name>country2</name>
  		<replaceName>Country2</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_country2</name>
  		<replaceName>Country2</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_country2</name>
  		<replaceName>Country2</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 country2() const;
  inline void set_country2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleCountryExchangeReq)
 private:
  inline void set_has_country1();
  inline void clear_has_country1();
  inline void set_has_country2();
  inline void clear_has_country2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 country1_;
  ::google::protobuf::uint32 country2_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleCountryExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRedHeroExchangeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRedHeroExchangeReq : public ::google::protobuf::Message {
 public:
  TRecycleRedHeroExchangeReq();
  virtual ~TRecycleRedHeroExchangeReq();

  TRecycleRedHeroExchangeReq(const TRecycleRedHeroExchangeReq& from);

  inline TRecycleRedHeroExchangeReq& operator=(const TRecycleRedHeroExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRedHeroExchangeReq& default_instance();

  void Swap(TRecycleRedHeroExchangeReq* other);

  // implements Message ----------------------------------------------

  TRecycleRedHeroExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRedHeroExchangeReq& from);
  void MergeFrom(const TRecycleRedHeroExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid1 = 1;
  inline bool has_hid1() const;
  inline void clear_hid1();
  static const int kHid1FieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRedHeroExchangeReq</name>
  	<Function>
  		<name>hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid1() const;
  inline void set_hid1(::google::protobuf::uint32 value);

  // optional uint32 Hid2 = 2;
  inline bool has_hid2() const;
  inline void clear_hid2();
  static const int kHid2FieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRedHeroExchangeReq</name>
  	<Function>
  		<name>hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid2() const;
  inline void set_hid2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleRedHeroExchangeReq)
 private:
  inline void set_has_hid1();
  inline void clear_has_hid1();
  inline void set_has_hid2();
  inline void clear_has_hid2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid1_;
  ::google::protobuf::uint32 hid2_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRedHeroExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRedHeroExchangeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRedHeroExchangeRsp : public ::google::protobuf::Message {
 public:
  TRecycleRedHeroExchangeRsp();
  virtual ~TRecycleRedHeroExchangeRsp();

  TRecycleRedHeroExchangeRsp(const TRecycleRedHeroExchangeRsp& from);

  inline TRecycleRedHeroExchangeRsp& operator=(const TRecycleRedHeroExchangeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRedHeroExchangeRsp& default_instance();

  void Swap(TRecycleRedHeroExchangeRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRedHeroExchangeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRedHeroExchangeRsp& from);
  void MergeFrom(const TRecycleRedHeroExchangeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRedHeroExchangeRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRedHeroExchangeRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRedHeroExchangeRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeArmFragReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeArmFragReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeArmFragReq();
  virtual ~TRecycleDecomposeArmFragReq();

  TRecycleDecomposeArmFragReq(const TRecycleDecomposeArmFragReq& from);

  inline TRecycleDecomposeArmFragReq& operator=(const TRecycleDecomposeArmFragReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeArmFragReq& default_instance();

  void Swap(TRecycleDecomposeArmFragReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeArmFragReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeArmFragReq& from);
  void MergeFrom(const TRecycleDecomposeArmFragReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TRecycleItemTidInfo ItemArray = 1;
  inline int itemarray_size() const;
  inline void clear_itemarray();
  static const int kItemArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeArmFragReq</name>
  	<Function>
  		<name>itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemarray_size</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRecycleItemTidInfo& itemarray(int index) const;
  inline ::pb::TRecycleItemTidInfo* mutable_itemarray(int index);
  inline ::pb::TRecycleItemTidInfo* add_itemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >&
      itemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >*
      mutable_itemarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeArmFragReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo > itemarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeArmFragReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeAccessoryFragReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeAccessoryFragReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeAccessoryFragReq();
  virtual ~TRecycleDecomposeAccessoryFragReq();

  TRecycleDecomposeAccessoryFragReq(const TRecycleDecomposeAccessoryFragReq& from);

  inline TRecycleDecomposeAccessoryFragReq& operator=(const TRecycleDecomposeAccessoryFragReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeAccessoryFragReq& default_instance();

  void Swap(TRecycleDecomposeAccessoryFragReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeAccessoryFragReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeAccessoryFragReq& from);
  void MergeFrom(const TRecycleDecomposeAccessoryFragReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TRecycleItemTidInfo ItemArray = 1;
  inline int itemarray_size() const;
  inline void clear_itemarray();
  static const int kItemArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeAccessoryFragReq</name>
  	<Function>
  		<name>itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemarray</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemarray_size</name>
  		<replaceName>ItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TRecycleItemTidInfo& itemarray(int index) const;
  inline ::pb::TRecycleItemTidInfo* mutable_itemarray(int index);
  inline ::pb::TRecycleItemTidInfo* add_itemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >&
      itemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >*
      mutable_itemarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeAccessoryFragReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo > itemarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeAccessoryFragReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornSilkBagReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornSilkBagReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornSilkBagReq();
  virtual ~TRecycleRebornSilkBagReq();

  TRecycleRebornSilkBagReq(const TRecycleRebornSilkBagReq& from);

  inline TRecycleRebornSilkBagReq& operator=(const TRecycleRebornSilkBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornSilkBagReq& default_instance();

  void Swap(TRecycleRebornSilkBagReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornSilkBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornSilkBagReq& from);
  void MergeFrom(const TRecycleRebornSilkBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornSilkBagReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornSilkBagReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornSilkBagReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeSilkBagReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeSilkBagReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeSilkBagReq();
  virtual ~TRecycleDecomposeSilkBagReq();

  TRecycleDecomposeSilkBagReq(const TRecycleDecomposeSilkBagReq& from);

  inline TRecycleDecomposeSilkBagReq& operator=(const TRecycleDecomposeSilkBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeSilkBagReq& default_instance();

  void Swap(TRecycleDecomposeSilkBagReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeSilkBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeSilkBagReq& from);
  void MergeFrom(const TRecycleDecomposeSilkBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeSilkBagReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeSilkBagReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeSilkBagReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeTreasureStoneReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeTreasureStoneReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeTreasureStoneReq();
  virtual ~TRecycleDecomposeTreasureStoneReq();

  TRecycleDecomposeTreasureStoneReq(const TRecycleDecomposeTreasureStoneReq& from);

  inline TRecycleDecomposeTreasureStoneReq& operator=(const TRecycleDecomposeTreasureStoneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeTreasureStoneReq& default_instance();

  void Swap(TRecycleDecomposeTreasureStoneReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeTreasureStoneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeTreasureStoneReq& from);
  void MergeFrom(const TRecycleDecomposeTreasureStoneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 StoneTid = 1;
  inline bool has_stonetid() const;
  inline void clear_stonetid();
  static const int kStoneTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeTreasureStoneReq</name>
  	<Function>
  		<name>stonetid</name>
  		<replaceName>StoneTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_stonetid</name>
  		<replaceName>StoneTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_stonetid</name>
  		<replaceName>StoneTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 stonetid() const;
  inline void set_stonetid(::google::protobuf::uint32 value);

  // optional uint32 ConsumNum = 2;
  inline bool has_consumnum() const;
  inline void clear_consumnum();
  static const int kConsumNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeTreasureStoneReq</name>
  	<Function>
  		<name>consumnum</name>
  		<replaceName>ConsumNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_consumnum</name>
  		<replaceName>ConsumNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_consumnum</name>
  		<replaceName>ConsumNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 consumnum() const;
  inline void set_consumnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeTreasureStoneReq)
 private:
  inline void set_has_stonetid();
  inline void clear_has_stonetid();
  inline void set_has_consumnum();
  inline void clear_has_consumnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stonetid_;
  ::google::protobuf::uint32 consumnum_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeTreasureStoneReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeDecorationsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeDecorationsReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeDecorationsReq();
  virtual ~TRecycleDecomposeDecorationsReq();

  TRecycleDecomposeDecorationsReq(const TRecycleDecomposeDecorationsReq& from);

  inline TRecycleDecomposeDecorationsReq& operator=(const TRecycleDecomposeDecorationsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeDecorationsReq& default_instance();

  void Swap(TRecycleDecomposeDecorationsReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeDecorationsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeDecorationsReq& from);
  void MergeFrom(const TRecycleDecomposeDecorationsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeDecorationsReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeDecorationsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeDecorationsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeDecorationsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeDecorationsRsp : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeDecorationsRsp();
  virtual ~TRecycleDecomposeDecorationsRsp();

  TRecycleDecomposeDecorationsRsp(const TRecycleDecomposeDecorationsRsp& from);

  inline TRecycleDecomposeDecorationsRsp& operator=(const TRecycleDecomposeDecorationsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeDecorationsRsp& default_instance();

  void Swap(TRecycleDecomposeDecorationsRsp* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeDecorationsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeDecorationsRsp& from);
  void MergeFrom(const TRecycleDecomposeDecorationsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeDecorationsRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeDecorationsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeDecorationsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornDecorationsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornDecorationsReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornDecorationsReq();
  virtual ~TRecycleRebornDecorationsReq();

  TRecycleRebornDecorationsReq(const TRecycleRebornDecorationsReq& from);

  inline TRecycleRebornDecorationsReq& operator=(const TRecycleRebornDecorationsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornDecorationsReq& default_instance();

  void Swap(TRecycleRebornDecorationsReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornDecorationsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornDecorationsReq& from);
  void MergeFrom(const TRecycleRebornDecorationsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornDecorationsReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornDecorationsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornDecorationsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornDecorationsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornDecorationsRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornDecorationsRsp();
  virtual ~TRecycleRebornDecorationsRsp();

  TRecycleRebornDecorationsRsp(const TRecycleRebornDecorationsRsp& from);

  inline TRecycleRebornDecorationsRsp& operator=(const TRecycleRebornDecorationsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornDecorationsRsp& default_instance();

  void Swap(TRecycleRebornDecorationsRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornDecorationsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornDecorationsRsp& from);
  void MergeFrom(const TRecycleRebornDecorationsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornDecorationsRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornDecorationsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornDecorationsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornForceSoulReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornForceSoulReq : public ::google::protobuf::Message {
 public:
  TRecycleRebornForceSoulReq();
  virtual ~TRecycleRebornForceSoulReq();

  TRecycleRebornForceSoulReq(const TRecycleRebornForceSoulReq& from);

  inline TRecycleRebornForceSoulReq& operator=(const TRecycleRebornForceSoulReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornForceSoulReq& default_instance();

  void Swap(TRecycleRebornForceSoulReq* other);

  // implements Message ----------------------------------------------

  TRecycleRebornForceSoulReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornForceSoulReq& from);
  void MergeFrom(const TRecycleRebornForceSoulReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornForceSoulReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornForceSoulReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornForceSoulReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleRebornForceSoulRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleRebornForceSoulRsp : public ::google::protobuf::Message {
 public:
  TRecycleRebornForceSoulRsp();
  virtual ~TRecycleRebornForceSoulRsp();

  TRecycleRebornForceSoulRsp(const TRecycleRebornForceSoulRsp& from);

  inline TRecycleRebornForceSoulRsp& operator=(const TRecycleRebornForceSoulRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleRebornForceSoulRsp& default_instance();

  void Swap(TRecycleRebornForceSoulRsp* other);

  // implements Message ----------------------------------------------

  TRecycleRebornForceSoulRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleRebornForceSoulRsp& from);
  void MergeFrom(const TRecycleRebornForceSoulRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleRebornForceSoulRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleRebornForceSoulRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleRebornForceSoulRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeForceSoulReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeForceSoulReq : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeForceSoulReq();
  virtual ~TRecycleDecomposeForceSoulReq();

  TRecycleDecomposeForceSoulReq(const TRecycleDecomposeForceSoulReq& from);

  inline TRecycleDecomposeForceSoulReq& operator=(const TRecycleDecomposeForceSoulReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeForceSoulReq& default_instance();

  void Swap(TRecycleDecomposeForceSoulReq* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeForceSoulReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeForceSoulReq& from);
  void MergeFrom(const TRecycleDecomposeForceSoulReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemIdArray = 1;
  inline int itemidarray_size() const;
  inline void clear_itemidarray();
  static const int kItemIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeForceSoulReq</name>
  	<Function>
  		<name>itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemidarray</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemidarray_size</name>
  		<replaceName>ItemIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemidarray(int index) const;
  inline void set_itemidarray(int index, ::google::protobuf::uint32 value);
  inline void add_itemidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemidarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeForceSoulReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemidarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeForceSoulReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRecycleDecomposeForceSoulRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Recycle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRecycleDecomposeForceSoulRsp : public ::google::protobuf::Message {
 public:
  TRecycleDecomposeForceSoulRsp();
  virtual ~TRecycleDecomposeForceSoulRsp();

  TRecycleDecomposeForceSoulRsp(const TRecycleDecomposeForceSoulRsp& from);

  inline TRecycleDecomposeForceSoulRsp& operator=(const TRecycleDecomposeForceSoulRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRecycleDecomposeForceSoulRsp& default_instance();

  void Swap(TRecycleDecomposeForceSoulRsp* other);

  // implements Message ----------------------------------------------

  TRecycleDecomposeForceSoulRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRecycleDecomposeForceSoulRsp& from);
  void MergeFrom(const TRecycleDecomposeForceSoulRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRecycleDecomposeForceSoulRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TRecycleDecomposeForceSoulRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fRecycle_2eproto();
  friend void protobuf_AssignDesc_net_2fRecycle_2eproto();
  friend void protobuf_ShutdownFile_net_2fRecycle_2eproto();

  void InitAsDefaultInstance();
  static TRecycleDecomposeForceSoulRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TRecycleGetInfoRsp

// optional uint64 CountryExchangeTime = 1;
inline bool TRecycleGetInfoRsp::has_countryexchangetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleGetInfoRsp::set_has_countryexchangetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleGetInfoRsp::clear_has_countryexchangetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleGetInfoRsp::clear_countryexchangetime() {
  countryexchangetime_ = GOOGLE_ULONGLONG(0);
  clear_has_countryexchangetime();
}
inline ::google::protobuf::uint64 TRecycleGetInfoRsp::countryexchangetime() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleGetInfoRsp.CountryExchangeTime)
  return countryexchangetime_;
}
inline void TRecycleGetInfoRsp::set_countryexchangetime(::google::protobuf::uint64 value) {
  set_has_countryexchangetime();
  countryexchangetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleGetInfoRsp.CountryExchangeTime)
}

// optional uint32 CountryExchangeNum = 2;
inline bool TRecycleGetInfoRsp::has_countryexchangenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleGetInfoRsp::set_has_countryexchangenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleGetInfoRsp::clear_has_countryexchangenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleGetInfoRsp::clear_countryexchangenum() {
  countryexchangenum_ = 0u;
  clear_has_countryexchangenum();
}
inline ::google::protobuf::uint32 TRecycleGetInfoRsp::countryexchangenum() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleGetInfoRsp.CountryExchangeNum)
  return countryexchangenum_;
}
inline void TRecycleGetInfoRsp::set_countryexchangenum(::google::protobuf::uint32 value) {
  set_has_countryexchangenum();
  countryexchangenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleGetInfoRsp.CountryExchangeNum)
}

// -------------------------------------------------------------------

// TRecycleItemTidInfo

// optional uint32 ItemTid = 1;
inline bool TRecycleItemTidInfo::has_itemtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleItemTidInfo::set_has_itemtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleItemTidInfo::clear_has_itemtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleItemTidInfo::clear_itemtid() {
  itemtid_ = 0u;
  clear_has_itemtid();
}
inline ::google::protobuf::uint32 TRecycleItemTidInfo::itemtid() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleItemTidInfo.ItemTid)
  return itemtid_;
}
inline void TRecycleItemTidInfo::set_itemtid(::google::protobuf::uint32 value) {
  set_has_itemtid();
  itemtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleItemTidInfo.ItemTid)
}

// optional uint32 Num = 2;
inline bool TRecycleItemTidInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleItemTidInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleItemTidInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleItemTidInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TRecycleItemTidInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleItemTidInfo.Num)
  return num_;
}
inline void TRecycleItemTidInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleItemTidInfo.Num)
}

// -------------------------------------------------------------------

// TRecycleRecycleHeroFragReq

// repeated .pb.TRecycleItemTidInfo ItemArray = 1;
inline int TRecycleRecycleHeroFragReq::itemarray_size() const {
  return itemarray_.size();
}
inline void TRecycleRecycleHeroFragReq::clear_itemarray() {
  itemarray_.Clear();
}
inline const ::pb::TRecycleItemTidInfo& TRecycleRecycleHeroFragReq::itemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRecycleHeroFragReq.ItemArray)
  return itemarray_.Get(index);
}
inline ::pb::TRecycleItemTidInfo* TRecycleRecycleHeroFragReq::mutable_itemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRecycleHeroFragReq.ItemArray)
  return itemarray_.Mutable(index);
}
inline ::pb::TRecycleItemTidInfo* TRecycleRecycleHeroFragReq::add_itemarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRecycleHeroFragReq.ItemArray)
  return itemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >&
TRecycleRecycleHeroFragReq::itemarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRecycleHeroFragReq.ItemArray)
  return itemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >*
TRecycleRecycleHeroFragReq::mutable_itemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRecycleHeroFragReq.ItemArray)
  return &itemarray_;
}

// -------------------------------------------------------------------

// TRecycleRecycleHeroFragRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRecycleHeroFragRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRecycleHeroFragRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRecycleHeroFragRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRecycleHeroFragRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRecycleHeroFragRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRecycleHeroFragRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRecycleHeroFragRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRecycleHeroFragRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRecycleHeroFragRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRecycleHeroFragRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRecycleHeroFragRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRecycleHeroFragRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeArmsReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleDecomposeArmsReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleDecomposeArmsReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeArmsReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeArmsReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleDecomposeArmsReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeArmsReq.ItemIdArray)
}
inline void TRecycleDecomposeArmsReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeArmsReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeArmsReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeArmsReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeArmsReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeArmsReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeArmsRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleDecomposeArmsRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleDecomposeArmsRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleDecomposeArmsRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeArmsRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeArmsRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeArmsRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeArmsRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeArmsRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleDecomposeArmsRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeArmsRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleDecomposeArmsRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeArmsRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornArmsReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornArmsReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornArmsReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornArmsReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornArmsReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornArmsReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornArmsReq.ItemIdArray)
}
inline void TRecycleRebornArmsReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornArmsReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornArmsReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornArmsReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornArmsReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornArmsReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornArmsRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornArmsRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornArmsRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornArmsRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornArmsRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornArmsRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornArmsRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornArmsRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornArmsRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornArmsRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornArmsRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornArmsRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornArmsRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornAccessoryReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornAccessoryReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornAccessoryReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornAccessoryReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornAccessoryReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornAccessoryReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornAccessoryReq.ItemIdArray)
}
inline void TRecycleRebornAccessoryReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornAccessoryReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornAccessoryReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornAccessoryReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornAccessoryReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornAccessoryReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornAccessoryRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornAccessoryRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornAccessoryRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornAccessoryRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornAccessoryRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornAccessoryRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornAccessoryRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornAccessoryRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornAccessoryRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornAccessoryRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornAccessoryRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornAccessoryRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornAccessoryRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeAccessoryReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleDecomposeAccessoryReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleDecomposeAccessoryReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeAccessoryReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeAccessoryReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleDecomposeAccessoryReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeAccessoryReq.ItemIdArray)
}
inline void TRecycleDecomposeAccessoryReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeAccessoryReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeAccessoryReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeAccessoryReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeAccessoryReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeAccessoryReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeAccessoryRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleDecomposeAccessoryRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleDecomposeAccessoryRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleDecomposeAccessoryRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeAccessoryRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeAccessoryRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeAccessoryRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeAccessoryRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeAccessoryRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleDecomposeAccessoryRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeAccessoryRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleDecomposeAccessoryRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeAccessoryRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornHeroReq

// optional uint32 Hid = 1;
inline bool TRecycleRebornHeroReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleRebornHeroReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleRebornHeroReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleRebornHeroReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TRecycleRebornHeroReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornHeroReq.Hid)
  return hid_;
}
inline void TRecycleRebornHeroReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornHeroReq.Hid)
}

// optional bool IsPreview = 2;
inline bool TRecycleRebornHeroReq::has_ispreview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleRebornHeroReq::set_has_ispreview() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleRebornHeroReq::clear_has_ispreview() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleRebornHeroReq::clear_ispreview() {
  ispreview_ = false;
  clear_has_ispreview();
}
inline bool TRecycleRebornHeroReq::ispreview() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornHeroReq.IsPreview)
  return ispreview_;
}
inline void TRecycleRebornHeroReq::set_ispreview(bool value) {
  set_has_ispreview();
  ispreview_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornHeroReq.IsPreview)
}

// optional bool IsHall = 3;
inline bool TRecycleRebornHeroReq::has_ishall() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TRecycleRebornHeroReq::set_has_ishall() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TRecycleRebornHeroReq::clear_has_ishall() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TRecycleRebornHeroReq::clear_ishall() {
  ishall_ = false;
  clear_has_ishall();
}
inline bool TRecycleRebornHeroReq::ishall() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornHeroReq.IsHall)
  return ishall_;
}
inline void TRecycleRebornHeroReq::set_ishall(bool value) {
  set_has_ishall();
  ishall_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornHeroReq.IsHall)
}

// -------------------------------------------------------------------

// TRecycleRebornHeroRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornHeroRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornHeroRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornHeroRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornHeroRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornHeroRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornHeroRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornHeroRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornHeroRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornHeroRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornHeroRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornHeroRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornHeroRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleInheritHeroReq

// optional uint32 FromHid = 1;
inline bool TRecycleInheritHeroReq::has_fromhid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleInheritHeroReq::set_has_fromhid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleInheritHeroReq::clear_has_fromhid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleInheritHeroReq::clear_fromhid() {
  fromhid_ = 0u;
  clear_has_fromhid();
}
inline ::google::protobuf::uint32 TRecycleInheritHeroReq::fromhid() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleInheritHeroReq.FromHid)
  return fromhid_;
}
inline void TRecycleInheritHeroReq::set_fromhid(::google::protobuf::uint32 value) {
  set_has_fromhid();
  fromhid_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleInheritHeroReq.FromHid)
}

// optional uint32 ToHid = 2;
inline bool TRecycleInheritHeroReq::has_tohid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleInheritHeroReq::set_has_tohid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleInheritHeroReq::clear_has_tohid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleInheritHeroReq::clear_tohid() {
  tohid_ = 0u;
  clear_has_tohid();
}
inline ::google::protobuf::uint32 TRecycleInheritHeroReq::tohid() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleInheritHeroReq.ToHid)
  return tohid_;
}
inline void TRecycleInheritHeroReq::set_tohid(::google::protobuf::uint32 value) {
  set_has_tohid();
  tohid_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleInheritHeroReq.ToHid)
}

// -------------------------------------------------------------------

// TRecycleInheritHeroRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleInheritHeroRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleInheritHeroRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleInheritHeroRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleInheritHeroRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleInheritHeroRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleInheritHeroRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleInheritHeroRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleInheritHeroRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleInheritHeroRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleInheritHeroRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleInheritHeroRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleInheritHeroRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeExclEquipReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleDecomposeExclEquipReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleDecomposeExclEquipReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeExclEquipReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeExclEquipReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleDecomposeExclEquipReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeExclEquipReq.ItemIdArray)
}
inline void TRecycleDecomposeExclEquipReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeExclEquipReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeExclEquipReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeExclEquipReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeExclEquipReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeExclEquipReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeExclEquipRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleDecomposeExclEquipRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleDecomposeExclEquipRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleDecomposeExclEquipRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeExclEquipRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeExclEquipRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeExclEquipRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeExclEquipRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeExclEquipRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleDecomposeExclEquipRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeExclEquipRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleDecomposeExclEquipRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeExclEquipRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornExclEquipReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornExclEquipReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornExclEquipReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornExclEquipReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornExclEquipReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornExclEquipReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornExclEquipReq.ItemIdArray)
}
inline void TRecycleRebornExclEquipReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornExclEquipReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornExclEquipReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornExclEquipReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornExclEquipReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornExclEquipReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornExclEquipRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornExclEquipRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornExclEquipRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornExclEquipRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornExclEquipRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornExclEquipRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornExclEquipRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornExclEquipRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornExclEquipRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornExclEquipRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornExclEquipRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornExclEquipRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornExclEquipRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornExclEquipRefineReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornExclEquipRefineReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornExclEquipRefineReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornExclEquipRefineReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornExclEquipRefineReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornExclEquipRefineReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornExclEquipRefineReq.ItemIdArray)
}
inline void TRecycleRebornExclEquipRefineReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornExclEquipRefineReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornExclEquipRefineReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornExclEquipRefineReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornExclEquipRefineReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornExclEquipRefineReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornExclEquipRefineRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornExclEquipRefineRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornExclEquipRefineRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornExclEquipRefineRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornExclEquipRefineRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornExclEquipRefineRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornExclEquipRefineRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornExclEquipRefineRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornExclEquipRefineRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornExclEquipRefineRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornExclEquipRefineRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornExclEquipRefineRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornExclEquipRefineRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornWarRidingReq

// repeated uint32 WarRidingTidArray = 1;
inline int TRecycleRebornWarRidingReq::warridingtidarray_size() const {
  return warridingtidarray_.size();
}
inline void TRecycleRebornWarRidingReq::clear_warridingtidarray() {
  warridingtidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornWarRidingReq::warridingtidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornWarRidingReq.WarRidingTidArray)
  return warridingtidarray_.Get(index);
}
inline void TRecycleRebornWarRidingReq::set_warridingtidarray(int index, ::google::protobuf::uint32 value) {
  warridingtidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornWarRidingReq.WarRidingTidArray)
}
inline void TRecycleRebornWarRidingReq::add_warridingtidarray(::google::protobuf::uint32 value) {
  warridingtidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornWarRidingReq.WarRidingTidArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornWarRidingReq::warridingtidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornWarRidingReq.WarRidingTidArray)
  return warridingtidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornWarRidingReq::mutable_warridingtidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornWarRidingReq.WarRidingTidArray)
  return &warridingtidarray_;
}

// optional bool IsPreview = 2;
inline bool TRecycleRebornWarRidingReq::has_ispreview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleRebornWarRidingReq::set_has_ispreview() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleRebornWarRidingReq::clear_has_ispreview() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleRebornWarRidingReq::clear_ispreview() {
  ispreview_ = false;
  clear_has_ispreview();
}
inline bool TRecycleRebornWarRidingReq::ispreview() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornWarRidingReq.IsPreview)
  return ispreview_;
}
inline void TRecycleRebornWarRidingReq::set_ispreview(bool value) {
  set_has_ispreview();
  ispreview_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornWarRidingReq.IsPreview)
}

// -------------------------------------------------------------------

// TRecycleRebornWarRidingRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornWarRidingRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornWarRidingRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornWarRidingRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornWarRidingRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornWarRidingRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornWarRidingRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornWarRidingRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornWarRidingRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornWarRidingRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornWarRidingRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornWarRidingRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornWarRidingRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornBeastReq

// repeated uint32 BeastIdArray = 1;
inline int TRecycleRebornBeastReq::beastidarray_size() const {
  return beastidarray_.size();
}
inline void TRecycleRebornBeastReq::clear_beastidarray() {
  beastidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornBeastReq::beastidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornBeastReq.BeastIdArray)
  return beastidarray_.Get(index);
}
inline void TRecycleRebornBeastReq::set_beastidarray(int index, ::google::protobuf::uint32 value) {
  beastidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornBeastReq.BeastIdArray)
}
inline void TRecycleRebornBeastReq::add_beastidarray(::google::protobuf::uint32 value) {
  beastidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornBeastReq.BeastIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornBeastReq::beastidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornBeastReq.BeastIdArray)
  return beastidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornBeastReq::mutable_beastidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornBeastReq.BeastIdArray)
  return &beastidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornBeastRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornBeastRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornBeastRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornBeastRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornBeastRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornBeastRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornBeastRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornBeastRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornBeastRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornBeastRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornBeastRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornBeastRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornBeastRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornBeastArmReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornBeastArmReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornBeastArmReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornBeastArmReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornBeastArmReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornBeastArmReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornBeastArmReq.ItemIdArray)
}
inline void TRecycleRebornBeastArmReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornBeastArmReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornBeastArmReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornBeastArmReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornBeastArmReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornBeastArmReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornBeastArmRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornBeastArmRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornBeastArmRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornBeastArmRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornBeastArmRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornBeastArmRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornBeastArmRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornBeastArmRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornBeastArmRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornBeastArmRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornBeastArmRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornBeastArmRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornBeastArmRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeBeastArmReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleDecomposeBeastArmReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleDecomposeBeastArmReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeBeastArmReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeBeastArmReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleDecomposeBeastArmReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeBeastArmReq.ItemIdArray)
}
inline void TRecycleDecomposeBeastArmReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeBeastArmReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeBeastArmReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeBeastArmReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeBeastArmReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeBeastArmReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeBeastArmRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleDecomposeBeastArmRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleDecomposeBeastArmRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleDecomposeBeastArmRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeBeastArmRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeBeastArmRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeBeastArmRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeBeastArmRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeBeastArmRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleDecomposeBeastArmRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeBeastArmRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleDecomposeBeastArmRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeBeastArmRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornMountEquipReq

// repeated uint32 ItemId = 1;
inline int TRecycleRebornMountEquipReq::itemid_size() const {
  return itemid_.size();
}
inline void TRecycleRebornMountEquipReq::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornMountEquipReq::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornMountEquipReq.ItemId)
  return itemid_.Get(index);
}
inline void TRecycleRebornMountEquipReq::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornMountEquipReq.ItemId)
}
inline void TRecycleRebornMountEquipReq::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornMountEquipReq.ItemId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornMountEquipReq::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornMountEquipReq.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornMountEquipReq::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornMountEquipReq.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeMountEquipReq

// repeated uint32 ItemId = 1;
inline int TRecycleDecomposeMountEquipReq::itemid_size() const {
  return itemid_.size();
}
inline void TRecycleDecomposeMountEquipReq::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeMountEquipReq::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeMountEquipReq.ItemId)
  return itemid_.Get(index);
}
inline void TRecycleDecomposeMountEquipReq::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeMountEquipReq.ItemId)
}
inline void TRecycleDecomposeMountEquipReq::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeMountEquipReq.ItemId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeMountEquipReq::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeMountEquipReq.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeMountEquipReq::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeMountEquipReq.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeDirectItemReq

// repeated uint32 ItemId = 1;
inline int TRecycleDecomposeDirectItemReq::itemid_size() const {
  return itemid_.size();
}
inline void TRecycleDecomposeDirectItemReq::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeDirectItemReq::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeDirectItemReq.ItemId)
  return itemid_.Get(index);
}
inline void TRecycleDecomposeDirectItemReq::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeDirectItemReq.ItemId)
}
inline void TRecycleDecomposeDirectItemReq::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeDirectItemReq.ItemId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeDirectItemReq::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeDirectItemReq.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeDirectItemReq::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeDirectItemReq.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TRecycleGoldHeroExchangeReq

// optional uint32 Hid1 = 1;
inline bool TRecycleGoldHeroExchangeReq::has_hid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleGoldHeroExchangeReq::set_has_hid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleGoldHeroExchangeReq::clear_has_hid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleGoldHeroExchangeReq::clear_hid1() {
  hid1_ = 0u;
  clear_has_hid1();
}
inline ::google::protobuf::uint32 TRecycleGoldHeroExchangeReq::hid1() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleGoldHeroExchangeReq.Hid1)
  return hid1_;
}
inline void TRecycleGoldHeroExchangeReq::set_hid1(::google::protobuf::uint32 value) {
  set_has_hid1();
  hid1_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleGoldHeroExchangeReq.Hid1)
}

// optional uint32 Hid2 = 2;
inline bool TRecycleGoldHeroExchangeReq::has_hid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleGoldHeroExchangeReq::set_has_hid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleGoldHeroExchangeReq::clear_has_hid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleGoldHeroExchangeReq::clear_hid2() {
  hid2_ = 0u;
  clear_has_hid2();
}
inline ::google::protobuf::uint32 TRecycleGoldHeroExchangeReq::hid2() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleGoldHeroExchangeReq.Hid2)
  return hid2_;
}
inline void TRecycleGoldHeroExchangeReq::set_hid2(::google::protobuf::uint32 value) {
  set_has_hid2();
  hid2_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleGoldHeroExchangeReq.Hid2)
}

// -------------------------------------------------------------------

// TRecycleCountryExchangeReq

// optional uint32 Country1 = 1;
inline bool TRecycleCountryExchangeReq::has_country1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleCountryExchangeReq::set_has_country1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleCountryExchangeReq::clear_has_country1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleCountryExchangeReq::clear_country1() {
  country1_ = 0u;
  clear_has_country1();
}
inline ::google::protobuf::uint32 TRecycleCountryExchangeReq::country1() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleCountryExchangeReq.Country1)
  return country1_;
}
inline void TRecycleCountryExchangeReq::set_country1(::google::protobuf::uint32 value) {
  set_has_country1();
  country1_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleCountryExchangeReq.Country1)
}

// optional uint32 Country2 = 2;
inline bool TRecycleCountryExchangeReq::has_country2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleCountryExchangeReq::set_has_country2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleCountryExchangeReq::clear_has_country2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleCountryExchangeReq::clear_country2() {
  country2_ = 0u;
  clear_has_country2();
}
inline ::google::protobuf::uint32 TRecycleCountryExchangeReq::country2() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleCountryExchangeReq.Country2)
  return country2_;
}
inline void TRecycleCountryExchangeReq::set_country2(::google::protobuf::uint32 value) {
  set_has_country2();
  country2_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleCountryExchangeReq.Country2)
}

// -------------------------------------------------------------------

// TRecycleRedHeroExchangeReq

// optional uint32 Hid1 = 1;
inline bool TRecycleRedHeroExchangeReq::has_hid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleRedHeroExchangeReq::set_has_hid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleRedHeroExchangeReq::clear_has_hid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleRedHeroExchangeReq::clear_hid1() {
  hid1_ = 0u;
  clear_has_hid1();
}
inline ::google::protobuf::uint32 TRecycleRedHeroExchangeReq::hid1() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRedHeroExchangeReq.Hid1)
  return hid1_;
}
inline void TRecycleRedHeroExchangeReq::set_hid1(::google::protobuf::uint32 value) {
  set_has_hid1();
  hid1_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleRedHeroExchangeReq.Hid1)
}

// optional uint32 Hid2 = 2;
inline bool TRecycleRedHeroExchangeReq::has_hid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleRedHeroExchangeReq::set_has_hid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleRedHeroExchangeReq::clear_has_hid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleRedHeroExchangeReq::clear_hid2() {
  hid2_ = 0u;
  clear_has_hid2();
}
inline ::google::protobuf::uint32 TRecycleRedHeroExchangeReq::hid2() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRedHeroExchangeReq.Hid2)
  return hid2_;
}
inline void TRecycleRedHeroExchangeReq::set_hid2(::google::protobuf::uint32 value) {
  set_has_hid2();
  hid2_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleRedHeroExchangeReq.Hid2)
}

// -------------------------------------------------------------------

// TRecycleRedHeroExchangeRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRedHeroExchangeRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRedHeroExchangeRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRedHeroExchangeRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRedHeroExchangeRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRedHeroExchangeRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRedHeroExchangeRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRedHeroExchangeRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRedHeroExchangeRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRedHeroExchangeRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRedHeroExchangeRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRedHeroExchangeRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRedHeroExchangeRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeArmFragReq

// repeated .pb.TRecycleItemTidInfo ItemArray = 1;
inline int TRecycleDecomposeArmFragReq::itemarray_size() const {
  return itemarray_.size();
}
inline void TRecycleDecomposeArmFragReq::clear_itemarray() {
  itemarray_.Clear();
}
inline const ::pb::TRecycleItemTidInfo& TRecycleDecomposeArmFragReq::itemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeArmFragReq.ItemArray)
  return itemarray_.Get(index);
}
inline ::pb::TRecycleItemTidInfo* TRecycleDecomposeArmFragReq::mutable_itemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeArmFragReq.ItemArray)
  return itemarray_.Mutable(index);
}
inline ::pb::TRecycleItemTidInfo* TRecycleDecomposeArmFragReq::add_itemarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeArmFragReq.ItemArray)
  return itemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >&
TRecycleDecomposeArmFragReq::itemarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeArmFragReq.ItemArray)
  return itemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >*
TRecycleDecomposeArmFragReq::mutable_itemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeArmFragReq.ItemArray)
  return &itemarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeAccessoryFragReq

// repeated .pb.TRecycleItemTidInfo ItemArray = 1;
inline int TRecycleDecomposeAccessoryFragReq::itemarray_size() const {
  return itemarray_.size();
}
inline void TRecycleDecomposeAccessoryFragReq::clear_itemarray() {
  itemarray_.Clear();
}
inline const ::pb::TRecycleItemTidInfo& TRecycleDecomposeAccessoryFragReq::itemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeAccessoryFragReq.ItemArray)
  return itemarray_.Get(index);
}
inline ::pb::TRecycleItemTidInfo* TRecycleDecomposeAccessoryFragReq::mutable_itemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeAccessoryFragReq.ItemArray)
  return itemarray_.Mutable(index);
}
inline ::pb::TRecycleItemTidInfo* TRecycleDecomposeAccessoryFragReq::add_itemarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeAccessoryFragReq.ItemArray)
  return itemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >&
TRecycleDecomposeAccessoryFragReq::itemarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeAccessoryFragReq.ItemArray)
  return itemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TRecycleItemTidInfo >*
TRecycleDecomposeAccessoryFragReq::mutable_itemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeAccessoryFragReq.ItemArray)
  return &itemarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornSilkBagReq

// repeated uint32 ItemId = 1;
inline int TRecycleRebornSilkBagReq::itemid_size() const {
  return itemid_.size();
}
inline void TRecycleRebornSilkBagReq::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornSilkBagReq::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornSilkBagReq.ItemId)
  return itemid_.Get(index);
}
inline void TRecycleRebornSilkBagReq::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornSilkBagReq.ItemId)
}
inline void TRecycleRebornSilkBagReq::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornSilkBagReq.ItemId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornSilkBagReq::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornSilkBagReq.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornSilkBagReq::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornSilkBagReq.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeSilkBagReq

// repeated uint32 ItemId = 1;
inline int TRecycleDecomposeSilkBagReq::itemid_size() const {
  return itemid_.size();
}
inline void TRecycleDecomposeSilkBagReq::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeSilkBagReq::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeSilkBagReq.ItemId)
  return itemid_.Get(index);
}
inline void TRecycleDecomposeSilkBagReq::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeSilkBagReq.ItemId)
}
inline void TRecycleDecomposeSilkBagReq::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeSilkBagReq.ItemId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeSilkBagReq::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeSilkBagReq.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeSilkBagReq::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeSilkBagReq.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeTreasureStoneReq

// optional uint32 StoneTid = 1;
inline bool TRecycleDecomposeTreasureStoneReq::has_stonetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRecycleDecomposeTreasureStoneReq::set_has_stonetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRecycleDecomposeTreasureStoneReq::clear_has_stonetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRecycleDecomposeTreasureStoneReq::clear_stonetid() {
  stonetid_ = 0u;
  clear_has_stonetid();
}
inline ::google::protobuf::uint32 TRecycleDecomposeTreasureStoneReq::stonetid() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeTreasureStoneReq.StoneTid)
  return stonetid_;
}
inline void TRecycleDecomposeTreasureStoneReq::set_stonetid(::google::protobuf::uint32 value) {
  set_has_stonetid();
  stonetid_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeTreasureStoneReq.StoneTid)
}

// optional uint32 ConsumNum = 2;
inline bool TRecycleDecomposeTreasureStoneReq::has_consumnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TRecycleDecomposeTreasureStoneReq::set_has_consumnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TRecycleDecomposeTreasureStoneReq::clear_has_consumnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TRecycleDecomposeTreasureStoneReq::clear_consumnum() {
  consumnum_ = 0u;
  clear_has_consumnum();
}
inline ::google::protobuf::uint32 TRecycleDecomposeTreasureStoneReq::consumnum() const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeTreasureStoneReq.ConsumNum)
  return consumnum_;
}
inline void TRecycleDecomposeTreasureStoneReq::set_consumnum(::google::protobuf::uint32 value) {
  set_has_consumnum();
  consumnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeTreasureStoneReq.ConsumNum)
}

// -------------------------------------------------------------------

// TRecycleDecomposeDecorationsReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleDecomposeDecorationsReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleDecomposeDecorationsReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeDecorationsReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeDecorationsReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleDecomposeDecorationsReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeDecorationsReq.ItemIdArray)
}
inline void TRecycleDecomposeDecorationsReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeDecorationsReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeDecorationsReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeDecorationsReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeDecorationsReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeDecorationsReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeDecorationsRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleDecomposeDecorationsRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleDecomposeDecorationsRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleDecomposeDecorationsRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeDecorationsRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeDecorationsRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeDecorationsRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeDecorationsRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeDecorationsRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleDecomposeDecorationsRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeDecorationsRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleDecomposeDecorationsRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeDecorationsRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornDecorationsReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornDecorationsReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornDecorationsReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornDecorationsReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornDecorationsReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornDecorationsReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornDecorationsReq.ItemIdArray)
}
inline void TRecycleRebornDecorationsReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornDecorationsReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornDecorationsReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornDecorationsReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornDecorationsReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornDecorationsReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornDecorationsRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornDecorationsRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornDecorationsRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornDecorationsRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornDecorationsRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornDecorationsRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornDecorationsRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornDecorationsRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornDecorationsRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornDecorationsRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornDecorationsRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornDecorationsRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornDecorationsRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornForceSoulReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleRebornForceSoulReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleRebornForceSoulReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleRebornForceSoulReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornForceSoulReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleRebornForceSoulReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleRebornForceSoulReq.ItemIdArray)
}
inline void TRecycleRebornForceSoulReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornForceSoulReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleRebornForceSoulReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornForceSoulReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleRebornForceSoulReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornForceSoulReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleRebornForceSoulRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleRebornForceSoulRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleRebornForceSoulRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleRebornForceSoulRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleRebornForceSoulRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleRebornForceSoulRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleRebornForceSoulRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleRebornForceSoulRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleRebornForceSoulRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleRebornForceSoulRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleRebornForceSoulRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleRebornForceSoulRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleRebornForceSoulRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeForceSoulReq

// repeated uint32 ItemIdArray = 1;
inline int TRecycleDecomposeForceSoulReq::itemidarray_size() const {
  return itemidarray_.size();
}
inline void TRecycleDecomposeForceSoulReq::clear_itemidarray() {
  itemidarray_.Clear();
}
inline ::google::protobuf::uint32 TRecycleDecomposeForceSoulReq::itemidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeForceSoulReq.ItemIdArray)
  return itemidarray_.Get(index);
}
inline void TRecycleDecomposeForceSoulReq::set_itemidarray(int index, ::google::protobuf::uint32 value) {
  itemidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TRecycleDecomposeForceSoulReq.ItemIdArray)
}
inline void TRecycleDecomposeForceSoulReq::add_itemidarray(::google::protobuf::uint32 value) {
  itemidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeForceSoulReq.ItemIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TRecycleDecomposeForceSoulReq::itemidarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeForceSoulReq.ItemIdArray)
  return itemidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TRecycleDecomposeForceSoulReq::mutable_itemidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeForceSoulReq.ItemIdArray)
  return &itemidarray_;
}

// -------------------------------------------------------------------

// TRecycleDecomposeForceSoulRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TRecycleDecomposeForceSoulRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TRecycleDecomposeForceSoulRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TRecycleDecomposeForceSoulRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TRecycleDecomposeForceSoulRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeForceSoulRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TRecycleDecomposeForceSoulRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TRecycleDecomposeForceSoulRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TRecycleDecomposeForceSoulRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TRecycleDecomposeForceSoulRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TRecycleDecomposeForceSoulRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TRecycleDecomposeForceSoulRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TRecycleDecomposeForceSoulRsp.RewardArray)
  return &rewardarray_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fRecycle_2eproto__INCLUDED
