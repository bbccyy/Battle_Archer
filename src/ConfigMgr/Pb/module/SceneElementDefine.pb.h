// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/SceneElementDefine.proto

#ifndef PROTOBUF_module_2fSceneElementDefine_2eproto__INCLUDED
#define PROTOBUF_module_2fSceneElementDefine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_module_2fSceneElementDefine_2eproto();
void protobuf_AssignDesc_module_2fSceneElementDefine_2eproto();
void protobuf_ShutdownFile_module_2fSceneElementDefine_2eproto();

class SceneElementDefine;

enum ESceneConfType {
  NONE = 1,
  RPG_SCENE = 2,
  SLG_SCENE = 3,
  INSTANCE_SCENE = 4,
  DUNGEON_SCENE = 5,
  GAME_PLAY_SCENE = 6,
  ADVENTURE_SCENE = 7,
  NATIONALWAR_SCENE = 8,
  ADVENTURE_TEMPLATE = 9,
  GUILD_WAR_SCENE = 10,
  ADVENTURE_ROOM = 11
};
bool ESceneConfType_IsValid(int value);
const ESceneConfType ESceneConfType_MIN = NONE;
const ESceneConfType ESceneConfType_MAX = ADVENTURE_ROOM;
const int ESceneConfType_ARRAYSIZE = ESceneConfType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESceneConfType_descriptor();
inline const ::std::string& ESceneConfType_Name(ESceneConfType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESceneConfType_descriptor(), value);
}
inline bool ESceneConfType_Parse(
    const ::std::string& name, ESceneConfType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESceneConfType>(
    ESceneConfType_descriptor(), name, value);
}
enum ESceneElementType {
  SPAWN_SPOT = 1,
  HOLD_SPOT = 2,
  MAP_SPAWN_SPOT = 3,
  SUM_SPOT = 4,
  CENTER_SPOT = 5,
  CAMERA = 101,
  CAMERA_TRACK = 102,
  BATTLE_CAMERA = 103,
  INSTANCE_CAMERA = 104,
  GAME_PLAY_CAMERA = 105,
  BATTLE_PRE_CAMERA = 106,
  BATTLE_CAMERA_2 = 107,
  CAMERA_MOVE_AREA = 201,
  OBSTACLE = 202,
  DUNGEON_ENTRANCE = 203,
  STRONG_HOLD_ENTRANCE = 204,
  TREASURE_BOX = 205,
  ELITE_INSTANCE_ENTRANCE = 206,
  DESTRUCTABLE = 207,
  RPG_MAIN_CITY_ENTRANCE = 208,
  INTERACT_OBJECT = 209,
  FUNNY_GAME_ENTRANCE = 210,
  INSTANCE_EVENT = 211,
  MYSTERY_SHOP = 212,
  HIDDEN_INSTANCE = 214,
  EXIT_HIDDEN_INSTANCE = 215,
  MESSAGE_BOARD = 216,
  TASK_NPC = 217,
  CUT_SCENE_CONF_AREA = 218,
  CROSS_LEVY_TOWER = 219,
  CROSS_LEVY_TEAM_ENTRANCE = 220,
  WALK_AREA = 301,
  BLOW_FLY_AREA = 302,
  TRIGGER_AREA = 303,
  BATTLE_AREA = 304,
  OBSTACLE_INSTANCE_AREA = 305,
  SPAWN_AREA = 306,
  EVENT_AREA = 307,
  ANIM_ASSET_SE = 401,
  STATIC_ASSET_SE = 402,
  EFFECT_ASSET_SE = 403,
  AUDIO = 404,
  BUILDING_ASSET_SE = 405,
  FEATURE_ENTRANCE_ASSET_SE = 406,
  INTERACTE_SCENE_UI = 407,
  ASSET_GROUP = 408,
  BENCH_MARK = 501,
  JUMP_TRACK = 502,
  WAR_MISTY_AREA = 503,
  PATROL_PATH = 504,
  CARRIER_ENT = 505,
  CURVE_TRACK = 506,
  PATROL_PATH_CONF = 507,
  BATTLE_BLOCK_LINE = 508,
  BENCHMARK_PATH_TRACK = 509
};
bool ESceneElementType_IsValid(int value);
const ESceneElementType ESceneElementType_MIN = SPAWN_SPOT;
const ESceneElementType ESceneElementType_MAX = BENCHMARK_PATH_TRACK;
const int ESceneElementType_ARRAYSIZE = ESceneElementType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESceneElementType_descriptor();
inline const ::std::string& ESceneElementType_Name(ESceneElementType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESceneElementType_descriptor(), value);
}
inline bool ESceneElementType_Parse(
    const ::std::string& name, ESceneElementType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESceneElementType>(
    ESceneElementType_descriptor(), name, value);
}
enum EAssetType {
  UNKNOW = 1,
  STATIC_ASSET = 101,
  TEXTURE_ANIM_ASSET = 201,
  SPINE_ANIM_ASSET = 202,
  EFFECT_ASSET = 301
};
bool EAssetType_IsValid(int value);
const EAssetType EAssetType_MIN = UNKNOW;
const EAssetType EAssetType_MAX = EFFECT_ASSET;
const int EAssetType_ARRAYSIZE = EAssetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAssetType_descriptor();
inline const ::std::string& EAssetType_Name(EAssetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAssetType_descriptor(), value);
}
inline bool EAssetType_Parse(
    const ::std::string& name, EAssetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAssetType>(
    EAssetType_descriptor(), name, value);
}
enum EGuardEventType {
  STRONGHOLD_BATTLE = 1,
  RUN_BEHAVIOR = 2
};
bool EGuardEventType_IsValid(int value);
const EGuardEventType EGuardEventType_MIN = STRONGHOLD_BATTLE;
const EGuardEventType EGuardEventType_MAX = RUN_BEHAVIOR;
const int EGuardEventType_ARRAYSIZE = EGuardEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuardEventType_descriptor();
inline const ::std::string& EGuardEventType_Name(EGuardEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuardEventType_descriptor(), value);
}
inline bool EGuardEventType_Parse(
    const ::std::string& name, EGuardEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuardEventType>(
    EGuardEventType_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>SceneElementDefine</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>module/SceneElementDefine.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class SceneElementDefine : public ::google::protobuf::Message {
 public:
  SceneElementDefine();
  virtual ~SceneElementDefine();

  SceneElementDefine(const SceneElementDefine& from);

  inline SceneElementDefine& operator=(const SceneElementDefine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneElementDefine& default_instance();

  void Swap(SceneElementDefine* other);

  // implements Message ----------------------------------------------

  SceneElementDefine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneElementDefine& from);
  void MergeFrom(const SceneElementDefine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.SceneElementDefine)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_module_2fSceneElementDefine_2eproto();
  friend void protobuf_AssignDesc_module_2fSceneElementDefine_2eproto();
  friend void protobuf_ShutdownFile_module_2fSceneElementDefine_2eproto();

  void InitAsDefaultInstance();
  static SceneElementDefine* default_instance_;
};
// ===================================================================


// ===================================================================

// SceneElementDefine


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ESceneConfType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ESceneConfType>() {
  return ::pb::ESceneConfType_descriptor();
}
template <> struct is_proto_enum< ::pb::ESceneElementType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ESceneElementType>() {
  return ::pb::ESceneElementType_descriptor();
}
template <> struct is_proto_enum< ::pb::EAssetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EAssetType>() {
  return ::pb::EAssetType_descriptor();
}
template <> struct is_proto_enum< ::pb::EGuardEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EGuardEventType>() {
  return ::pb::EGuardEventType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_module_2fSceneElementDefine_2eproto__INCLUDED
