// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Artifact.proto

#ifndef PROTOBUF_net_2fArtifact_2eproto__INCLUDED
#define PROTOBUF_net_2fArtifact_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fArtifact_2eproto();
void protobuf_AssignDesc_net_2fArtifact_2eproto();
void protobuf_ShutdownFile_net_2fArtifact_2eproto();

class TArtifactInfo;
class TArtifactFreeRecruitEffect;
class TArtifactEffectInfo;
class TArtifactGetInfoRsp;
class TArtifactStarUpReq;
class TArtifactCombineArtifactReq;
class TArtifactActiveFreeEffect;
class TArtifactActivePubGainReq;
class TArtifactChargeArtifactEnergyReq;
class TArtifactDuplicatingItemReq;
class TArtifactDuplicatingItemRsp;
class TArtifactUpGradeItemReq;
class TArtifactUpGradeItemRsp;
class TArtifactNodify;

enum TArtifactEffectType {
  CAMP_RECRUIT = 1,
  GOLD_RECRUIT = 2,
  ABROAD_GOLD_RECRUIT = 3,
  ABROAD_TIME_RECRUIT = 4,
  ACTLINKSOUL_RECRUIT = 5
};
bool TArtifactEffectType_IsValid(int value);
const TArtifactEffectType TArtifactEffectType_MIN = CAMP_RECRUIT;
const TArtifactEffectType TArtifactEffectType_MAX = ACTLINKSOUL_RECRUIT;
const int TArtifactEffectType_ARRAYSIZE = TArtifactEffectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TArtifactEffectType_descriptor();
inline const ::std::string& TArtifactEffectType_Name(TArtifactEffectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TArtifactEffectType_descriptor(), value);
}
inline bool TArtifactEffectType_Parse(
    const ::std::string& name, TArtifactEffectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TArtifactEffectType>(
    TArtifactEffectType_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TArtifactInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactInfo : public ::google::protobuf::Message {
 public:
  TArtifactInfo();
  virtual ~TArtifactInfo();

  TArtifactInfo(const TArtifactInfo& from);

  inline TArtifactInfo& operator=(const TArtifactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactInfo& default_instance();

  void Swap(TArtifactInfo* other);

  // implements Message ----------------------------------------------

  TArtifactInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactInfo& from);
  void MergeFrom(const TArtifactInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactInfo</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // optional uint32 StarLv = 2;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactInfo</name>
  	<Function>
  		<name>starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starlv() const;
  inline void set_starlv(::google::protobuf::uint32 value);

  // optional uint32 Energy = 3;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TArtifactInfo</name>
  	<Function>
  		<name>energy</name>
  		<replaceName>Energy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_energy</name>
  		<replaceName>Energy</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_energy</name>
  		<replaceName>Energy</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint64 ChargeTime = 4;
  inline bool has_chargetime() const;
  inline void clear_chargetime();
  static const int kChargeTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TArtifactInfo</name>
  	<Function>
  		<name>chargetime</name>
  		<replaceName>ChargeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chargetime</name>
  		<replaceName>ChargeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chargetime</name>
  		<replaceName>ChargeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 chargetime() const;
  inline void set_chargetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactInfo)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_chargetime();
  inline void clear_has_chargetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 artifactid_;
  ::google::protobuf::uint32 starlv_;
  ::google::protobuf::uint64 chargetime_;
  ::google::protobuf::uint32 energy_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactFreeRecruitEffect</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactFreeRecruitEffect : public ::google::protobuf::Message {
 public:
  TArtifactFreeRecruitEffect();
  virtual ~TArtifactFreeRecruitEffect();

  TArtifactFreeRecruitEffect(const TArtifactFreeRecruitEffect& from);

  inline TArtifactFreeRecruitEffect& operator=(const TArtifactFreeRecruitEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactFreeRecruitEffect& default_instance();

  void Swap(TArtifactFreeRecruitEffect* other);

  // implements Message ----------------------------------------------

  TArtifactFreeRecruitEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactFreeRecruitEffect& from);
  void MergeFrom(const TArtifactFreeRecruitEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FreeRecruitTime = 1;
  inline bool has_freerecruittime() const;
  inline void clear_freerecruittime();
  static const int kFreeRecruitTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactFreeRecruitEffect</name>
  	<Function>
  		<name>freerecruittime</name>
  		<replaceName>FreeRecruitTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freerecruittime</name>
  		<replaceName>FreeRecruitTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecruittime</name>
  		<replaceName>FreeRecruitTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 freerecruittime() const;
  inline void set_freerecruittime(::google::protobuf::uint32 value);

  // optional .pb.TArtifactEffectType FreeRecruitType = 2;
  inline bool has_freerecruittype() const;
  inline void clear_freerecruittype();
  static const int kFreeRecruitTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactFreeRecruitEffect</name>
  	<Function>
  		<name>freerecruittype</name>
  		<replaceName>FreeRecruitType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freerecruittype</name>
  		<replaceName>FreeRecruitType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecruittype</name>
  		<replaceName>FreeRecruitType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::TArtifactEffectType freerecruittype() const;
  inline void set_freerecruittype(::pb::TArtifactEffectType value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactFreeRecruitEffect)
 private:
  inline void set_has_freerecruittime();
  inline void clear_has_freerecruittime();
  inline void set_has_freerecruittype();
  inline void clear_has_freerecruittype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 freerecruittime_;
  int freerecruittype_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactFreeRecruitEffect* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactEffectInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactEffectInfo : public ::google::protobuf::Message {
 public:
  TArtifactEffectInfo();
  virtual ~TArtifactEffectInfo();

  TArtifactEffectInfo(const TArtifactEffectInfo& from);

  inline TArtifactEffectInfo& operator=(const TArtifactEffectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactEffectInfo& default_instance();

  void Swap(TArtifactEffectInfo* other);

  // implements Message ----------------------------------------------

  TArtifactEffectInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactEffectInfo& from);
  void MergeFrom(const TArtifactEffectInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactEffectInfo</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // optional uint64 EffectTime = 2;
  inline bool has_effecttime() const;
  inline void clear_effecttime();
  static const int kEffectTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactEffectInfo</name>
  	<Function>
  		<name>effecttime</name>
  		<replaceName>EffectTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_effecttime</name>
  		<replaceName>EffectTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_effecttime</name>
  		<replaceName>EffectTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 effecttime() const;
  inline void set_effecttime(::google::protobuf::uint64 value);

  // optional uint32 Timesleft = 3;
  inline bool has_timesleft() const;
  inline void clear_timesleft();
  static const int kTimesleftFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TArtifactEffectInfo</name>
  	<Function>
  		<name>timesleft</name>
  		<replaceName>Timesleft</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_timesleft</name>
  		<replaceName>Timesleft</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_timesleft</name>
  		<replaceName>Timesleft</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 timesleft() const;
  inline void set_timesleft(::google::protobuf::uint32 value);

  // repeated .pb.TArtifactFreeRecruitEffect FreeRecruitEffect = 4;
  inline int freerecruiteffect_size() const;
  inline void clear_freerecruiteffect();
  static const int kFreeRecruitEffectFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TArtifactEffectInfo</name>
  	<Function>
  		<name>freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>freerecruiteffect_size</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArtifactFreeRecruitEffect& freerecruiteffect(int index) const;
  inline ::pb::TArtifactFreeRecruitEffect* mutable_freerecruiteffect(int index);
  inline ::pb::TArtifactFreeRecruitEffect* add_freerecruiteffect();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactFreeRecruitEffect >&
      freerecruiteffect() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactFreeRecruitEffect >*
      mutable_freerecruiteffect();

  // @@protoc_insertion_point(class_scope:pb.TArtifactEffectInfo)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();
  inline void set_has_effecttime();
  inline void clear_has_effecttime();
  inline void set_has_timesleft();
  inline void clear_has_timesleft();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 effecttime_;
  ::google::protobuf::uint32 artifactid_;
  ::google::protobuf::uint32 timesleft_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArtifactFreeRecruitEffect > freerecruiteffect_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactEffectInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactGetInfoRsp : public ::google::protobuf::Message {
 public:
  TArtifactGetInfoRsp();
  virtual ~TArtifactGetInfoRsp();

  TArtifactGetInfoRsp(const TArtifactGetInfoRsp& from);

  inline TArtifactGetInfoRsp& operator=(const TArtifactGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactGetInfoRsp& default_instance();

  void Swap(TArtifactGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TArtifactGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactGetInfoRsp& from);
  void MergeFrom(const TArtifactGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  inline int artifactinfoarr_size() const;
  inline void clear_artifactinfoarr();
  static const int kArtifactInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactGetInfoRsp</name>
  	<Function>
  		<name>artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>artifactinfoarr_size</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArtifactInfo& artifactinfoarr(int index) const;
  inline ::pb::TArtifactInfo* mutable_artifactinfoarr(int index);
  inline ::pb::TArtifactInfo* add_artifactinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >&
      artifactinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >*
      mutable_artifactinfoarr();

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  inline int artifacteffectinfoarr_size() const;
  inline void clear_artifacteffectinfoarr();
  static const int kArtifactEffectInfoArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactGetInfoRsp</name>
  	<Function>
  		<name>artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>artifacteffectinfoarr_size</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArtifactEffectInfo& artifacteffectinfoarr(int index) const;
  inline ::pb::TArtifactEffectInfo* mutable_artifacteffectinfoarr(int index);
  inline ::pb::TArtifactEffectInfo* add_artifacteffectinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >&
      artifacteffectinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >*
      mutable_artifacteffectinfoarr();

  // optional uint32 ChargeNum = 3;
  inline bool has_chargenum() const;
  inline void clear_chargenum();
  static const int kChargeNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TArtifactGetInfoRsp</name>
  	<Function>
  		<name>chargenum</name>
  		<replaceName>ChargeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chargenum</name>
  		<replaceName>ChargeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chargenum</name>
  		<replaceName>ChargeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chargenum() const;
  inline void set_chargenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactGetInfoRsp)
 private:
  inline void set_has_chargenum();
  inline void clear_has_chargenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo > artifactinfoarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo > artifacteffectinfoarr_;
  ::google::protobuf::uint32 chargenum_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactStarUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactStarUpReq : public ::google::protobuf::Message {
 public:
  TArtifactStarUpReq();
  virtual ~TArtifactStarUpReq();

  TArtifactStarUpReq(const TArtifactStarUpReq& from);

  inline TArtifactStarUpReq& operator=(const TArtifactStarUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactStarUpReq& default_instance();

  void Swap(TArtifactStarUpReq* other);

  // implements Message ----------------------------------------------

  TArtifactStarUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactStarUpReq& from);
  void MergeFrom(const TArtifactStarUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactStarUpReq</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactStarUpReq)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 artifactid_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactStarUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactCombineArtifactReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactCombineArtifactReq : public ::google::protobuf::Message {
 public:
  TArtifactCombineArtifactReq();
  virtual ~TArtifactCombineArtifactReq();

  TArtifactCombineArtifactReq(const TArtifactCombineArtifactReq& from);

  inline TArtifactCombineArtifactReq& operator=(const TArtifactCombineArtifactReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactCombineArtifactReq& default_instance();

  void Swap(TArtifactCombineArtifactReq* other);

  // implements Message ----------------------------------------------

  TArtifactCombineArtifactReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactCombineArtifactReq& from);
  void MergeFrom(const TArtifactCombineArtifactReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Ftid = 1;
  inline bool has_ftid() const;
  inline void clear_ftid();
  static const int kFtidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactCombineArtifactReq</name>
  	<Function>
  		<name>ftid</name>
  		<replaceName>Ftid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_ftid</name>
  		<replaceName>Ftid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ftid</name>
  		<replaceName>Ftid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 ftid() const;
  inline void set_ftid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactCombineArtifactReq)
 private:
  inline void set_has_ftid();
  inline void clear_has_ftid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ftid_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactCombineArtifactReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactActiveFreeEffect</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactActiveFreeEffect : public ::google::protobuf::Message {
 public:
  TArtifactActiveFreeEffect();
  virtual ~TArtifactActiveFreeEffect();

  TArtifactActiveFreeEffect(const TArtifactActiveFreeEffect& from);

  inline TArtifactActiveFreeEffect& operator=(const TArtifactActiveFreeEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactActiveFreeEffect& default_instance();

  void Swap(TArtifactActiveFreeEffect* other);

  // implements Message ----------------------------------------------

  TArtifactActiveFreeEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactActiveFreeEffect& from);
  void MergeFrom(const TArtifactActiveFreeEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FreeRecruitTime = 1;
  inline bool has_freerecruittime() const;
  inline void clear_freerecruittime();
  static const int kFreeRecruitTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactActiveFreeEffect</name>
  	<Function>
  		<name>freerecruittime</name>
  		<replaceName>FreeRecruitTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freerecruittime</name>
  		<replaceName>FreeRecruitTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecruittime</name>
  		<replaceName>FreeRecruitTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 freerecruittime() const;
  inline void set_freerecruittime(::google::protobuf::uint32 value);

  // optional .pb.TArtifactEffectType FreeRecruitType = 2;
  inline bool has_freerecruittype() const;
  inline void clear_freerecruittype();
  static const int kFreeRecruitTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactActiveFreeEffect</name>
  	<Function>
  		<name>freerecruittype</name>
  		<replaceName>FreeRecruitType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freerecruittype</name>
  		<replaceName>FreeRecruitType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecruittype</name>
  		<replaceName>FreeRecruitType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::TArtifactEffectType freerecruittype() const;
  inline void set_freerecruittype(::pb::TArtifactEffectType value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactActiveFreeEffect)
 private:
  inline void set_has_freerecruittime();
  inline void clear_has_freerecruittime();
  inline void set_has_freerecruittype();
  inline void clear_has_freerecruittype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 freerecruittime_;
  int freerecruittype_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactActiveFreeEffect* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactActivePubGainReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactActivePubGainReq : public ::google::protobuf::Message {
 public:
  TArtifactActivePubGainReq();
  virtual ~TArtifactActivePubGainReq();

  TArtifactActivePubGainReq(const TArtifactActivePubGainReq& from);

  inline TArtifactActivePubGainReq& operator=(const TArtifactActivePubGainReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactActivePubGainReq& default_instance();

  void Swap(TArtifactActivePubGainReq* other);

  // implements Message ----------------------------------------------

  TArtifactActivePubGainReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactActivePubGainReq& from);
  void MergeFrom(const TArtifactActivePubGainReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactActivePubGainReq</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // repeated .pb.TArtifactActiveFreeEffect FreeRecruitEffect = 2;
  inline int freerecruiteffect_size() const;
  inline void clear_freerecruiteffect();
  static const int kFreeRecruitEffectFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactActivePubGainReq</name>
  	<Function>
  		<name>freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecruiteffect</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>freerecruiteffect_size</name>
  		<replaceName>FreeRecruitEffect</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArtifactActiveFreeEffect& freerecruiteffect(int index) const;
  inline ::pb::TArtifactActiveFreeEffect* mutable_freerecruiteffect(int index);
  inline ::pb::TArtifactActiveFreeEffect* add_freerecruiteffect();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactActiveFreeEffect >&
      freerecruiteffect() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactActiveFreeEffect >*
      mutable_freerecruiteffect();

  // @@protoc_insertion_point(class_scope:pb.TArtifactActivePubGainReq)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArtifactActiveFreeEffect > freerecruiteffect_;
  ::google::protobuf::uint32 artifactid_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactActivePubGainReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactChargeArtifactEnergyReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactChargeArtifactEnergyReq : public ::google::protobuf::Message {
 public:
  TArtifactChargeArtifactEnergyReq();
  virtual ~TArtifactChargeArtifactEnergyReq();

  TArtifactChargeArtifactEnergyReq(const TArtifactChargeArtifactEnergyReq& from);

  inline TArtifactChargeArtifactEnergyReq& operator=(const TArtifactChargeArtifactEnergyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactChargeArtifactEnergyReq& default_instance();

  void Swap(TArtifactChargeArtifactEnergyReq* other);

  // implements Message ----------------------------------------------

  TArtifactChargeArtifactEnergyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactChargeArtifactEnergyReq& from);
  void MergeFrom(const TArtifactChargeArtifactEnergyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactChargeArtifactEnergyReq</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // optional uint32 ChargeNums = 2;
  inline bool has_chargenums() const;
  inline void clear_chargenums();
  static const int kChargeNumsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactChargeArtifactEnergyReq</name>
  	<Function>
  		<name>chargenums</name>
  		<replaceName>ChargeNums</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chargenums</name>
  		<replaceName>ChargeNums</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chargenums</name>
  		<replaceName>ChargeNums</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chargenums() const;
  inline void set_chargenums(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactChargeArtifactEnergyReq)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();
  inline void set_has_chargenums();
  inline void clear_has_chargenums();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 artifactid_;
  ::google::protobuf::uint32 chargenums_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactChargeArtifactEnergyReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactDuplicatingItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactDuplicatingItemReq : public ::google::protobuf::Message {
 public:
  TArtifactDuplicatingItemReq();
  virtual ~TArtifactDuplicatingItemReq();

  TArtifactDuplicatingItemReq(const TArtifactDuplicatingItemReq& from);

  inline TArtifactDuplicatingItemReq& operator=(const TArtifactDuplicatingItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactDuplicatingItemReq& default_instance();

  void Swap(TArtifactDuplicatingItemReq* other);

  // implements Message ----------------------------------------------

  TArtifactDuplicatingItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactDuplicatingItemReq& from);
  void MergeFrom(const TArtifactDuplicatingItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactDuplicatingItemReq</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // repeated .pb.TCommonReward Items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactDuplicatingItemReq</name>
  	<Function>
  		<name>items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>items_size</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& items(int index) const;
  inline ::pb::TCommonReward* mutable_items(int index);
  inline ::pb::TCommonReward* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:pb.TArtifactDuplicatingItemReq)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > items_;
  ::google::protobuf::uint32 artifactid_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactDuplicatingItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactDuplicatingItemRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactDuplicatingItemRsp : public ::google::protobuf::Message {
 public:
  TArtifactDuplicatingItemRsp();
  virtual ~TArtifactDuplicatingItemRsp();

  TArtifactDuplicatingItemRsp(const TArtifactDuplicatingItemRsp& from);

  inline TArtifactDuplicatingItemRsp& operator=(const TArtifactDuplicatingItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactDuplicatingItemRsp& default_instance();

  void Swap(TArtifactDuplicatingItemRsp* other);

  // implements Message ----------------------------------------------

  TArtifactDuplicatingItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactDuplicatingItemRsp& from);
  void MergeFrom(const TArtifactDuplicatingItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward Items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactDuplicatingItemRsp</name>
  	<Function>
  		<name>items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>items_size</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& items(int index) const;
  inline ::pb::TCommonReward* mutable_items(int index);
  inline ::pb::TCommonReward* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:pb.TArtifactDuplicatingItemRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > items_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactDuplicatingItemRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactUpGradeItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactUpGradeItemReq : public ::google::protobuf::Message {
 public:
  TArtifactUpGradeItemReq();
  virtual ~TArtifactUpGradeItemReq();

  TArtifactUpGradeItemReq(const TArtifactUpGradeItemReq& from);

  inline TArtifactUpGradeItemReq& operator=(const TArtifactUpGradeItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactUpGradeItemReq& default_instance();

  void Swap(TArtifactUpGradeItemReq* other);

  // implements Message ----------------------------------------------

  TArtifactUpGradeItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactUpGradeItemReq& from);
  void MergeFrom(const TArtifactUpGradeItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ArtifactId = 1;
  inline bool has_artifactid() const;
  inline void clear_artifactid();
  static const int kArtifactIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactUpGradeItemReq</name>
  	<Function>
  		<name>artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactid</name>
  		<replaceName>ArtifactId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactid() const;
  inline void set_artifactid(::google::protobuf::uint32 value);

  // repeated .pb.TCommonReward Items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactUpGradeItemReq</name>
  	<Function>
  		<name>items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>items_size</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& items(int index) const;
  inline ::pb::TCommonReward* mutable_items(int index);
  inline ::pb::TCommonReward* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:pb.TArtifactUpGradeItemReq)
 private:
  inline void set_has_artifactid();
  inline void clear_has_artifactid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > items_;
  ::google::protobuf::uint32 artifactid_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactUpGradeItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactUpGradeItemRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactUpGradeItemRsp : public ::google::protobuf::Message {
 public:
  TArtifactUpGradeItemRsp();
  virtual ~TArtifactUpGradeItemRsp();

  TArtifactUpGradeItemRsp(const TArtifactUpGradeItemRsp& from);

  inline TArtifactUpGradeItemRsp& operator=(const TArtifactUpGradeItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactUpGradeItemRsp& default_instance();

  void Swap(TArtifactUpGradeItemRsp* other);

  // implements Message ----------------------------------------------

  TArtifactUpGradeItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactUpGradeItemRsp& from);
  void MergeFrom(const TArtifactUpGradeItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward Items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactUpGradeItemRsp</name>
  	<Function>
  		<name>items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_items</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>items_size</name>
  		<replaceName>Items</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& items(int index) const;
  inline ::pb::TCommonReward* mutable_items(int index);
  inline ::pb::TCommonReward* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:pb.TArtifactUpGradeItemRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > items_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactUpGradeItemRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TArtifactNodify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Artifact.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TArtifactNodify : public ::google::protobuf::Message {
 public:
  TArtifactNodify();
  virtual ~TArtifactNodify();

  TArtifactNodify(const TArtifactNodify& from);

  inline TArtifactNodify& operator=(const TArtifactNodify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TArtifactNodify& default_instance();

  void Swap(TArtifactNodify* other);

  // implements Message ----------------------------------------------

  TArtifactNodify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TArtifactNodify& from);
  void MergeFrom(const TArtifactNodify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  inline int artifactinfoarr_size() const;
  inline void clear_artifactinfoarr();
  static const int kArtifactInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TArtifactNodify</name>
  	<Function>
  		<name>artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactinfoarr</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>artifactinfoarr_size</name>
  		<replaceName>ArtifactInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArtifactInfo& artifactinfoarr(int index) const;
  inline ::pb::TArtifactInfo* mutable_artifactinfoarr(int index);
  inline ::pb::TArtifactInfo* add_artifactinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >&
      artifactinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >*
      mutable_artifactinfoarr();

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  inline int artifacteffectinfoarr_size() const;
  inline void clear_artifacteffectinfoarr();
  static const int kArtifactEffectInfoArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TArtifactNodify</name>
  	<Function>
  		<name>artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifacteffectinfoarr</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>artifacteffectinfoarr_size</name>
  		<replaceName>ArtifactEffectInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TArtifactEffectInfo& artifacteffectinfoarr(int index) const;
  inline ::pb::TArtifactEffectInfo* mutable_artifacteffectinfoarr(int index);
  inline ::pb::TArtifactEffectInfo* add_artifacteffectinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >&
      artifacteffectinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >*
      mutable_artifacteffectinfoarr();

  // optional uint32 ChargeNum = 3;
  inline bool has_chargenum() const;
  inline void clear_chargenum();
  static const int kChargeNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TArtifactNodify</name>
  	<Function>
  		<name>chargenum</name>
  		<replaceName>ChargeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chargenum</name>
  		<replaceName>ChargeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chargenum</name>
  		<replaceName>ChargeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chargenum() const;
  inline void set_chargenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TArtifactNodify)
 private:
  inline void set_has_chargenum();
  inline void clear_has_chargenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo > artifactinfoarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo > artifacteffectinfoarr_;
  ::google::protobuf::uint32 chargenum_;
  friend void  protobuf_AddDesc_net_2fArtifact_2eproto();
  friend void protobuf_AssignDesc_net_2fArtifact_2eproto();
  friend void protobuf_ShutdownFile_net_2fArtifact_2eproto();

  void InitAsDefaultInstance();
  static TArtifactNodify* default_instance_;
};
// ===================================================================


// ===================================================================

// TArtifactInfo

// optional uint32 ArtifactId = 1;
inline bool TArtifactInfo::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactInfo::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactInfo::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactInfo::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactInfo::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactInfo.ArtifactId)
  return artifactid_;
}
inline void TArtifactInfo::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactInfo.ArtifactId)
}

// optional uint32 StarLv = 2;
inline bool TArtifactInfo::has_starlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TArtifactInfo::set_has_starlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TArtifactInfo::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TArtifactInfo::clear_starlv() {
  starlv_ = 0u;
  clear_has_starlv();
}
inline ::google::protobuf::uint32 TArtifactInfo::starlv() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactInfo.StarLv)
  return starlv_;
}
inline void TArtifactInfo::set_starlv(::google::protobuf::uint32 value) {
  set_has_starlv();
  starlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactInfo.StarLv)
}

// optional uint32 Energy = 3;
inline bool TArtifactInfo::has_energy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TArtifactInfo::set_has_energy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TArtifactInfo::clear_has_energy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TArtifactInfo::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 TArtifactInfo::energy() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactInfo.Energy)
  return energy_;
}
inline void TArtifactInfo::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactInfo.Energy)
}

// optional uint64 ChargeTime = 4;
inline bool TArtifactInfo::has_chargetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TArtifactInfo::set_has_chargetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TArtifactInfo::clear_has_chargetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TArtifactInfo::clear_chargetime() {
  chargetime_ = GOOGLE_ULONGLONG(0);
  clear_has_chargetime();
}
inline ::google::protobuf::uint64 TArtifactInfo::chargetime() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactInfo.ChargeTime)
  return chargetime_;
}
inline void TArtifactInfo::set_chargetime(::google::protobuf::uint64 value) {
  set_has_chargetime();
  chargetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactInfo.ChargeTime)
}

// -------------------------------------------------------------------

// TArtifactFreeRecruitEffect

// optional uint32 FreeRecruitTime = 1;
inline bool TArtifactFreeRecruitEffect::has_freerecruittime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactFreeRecruitEffect::set_has_freerecruittime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactFreeRecruitEffect::clear_has_freerecruittime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactFreeRecruitEffect::clear_freerecruittime() {
  freerecruittime_ = 0u;
  clear_has_freerecruittime();
}
inline ::google::protobuf::uint32 TArtifactFreeRecruitEffect::freerecruittime() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactFreeRecruitEffect.FreeRecruitTime)
  return freerecruittime_;
}
inline void TArtifactFreeRecruitEffect::set_freerecruittime(::google::protobuf::uint32 value) {
  set_has_freerecruittime();
  freerecruittime_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactFreeRecruitEffect.FreeRecruitTime)
}

// optional .pb.TArtifactEffectType FreeRecruitType = 2;
inline bool TArtifactFreeRecruitEffect::has_freerecruittype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TArtifactFreeRecruitEffect::set_has_freerecruittype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TArtifactFreeRecruitEffect::clear_has_freerecruittype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TArtifactFreeRecruitEffect::clear_freerecruittype() {
  freerecruittype_ = 1;
  clear_has_freerecruittype();
}
inline ::pb::TArtifactEffectType TArtifactFreeRecruitEffect::freerecruittype() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactFreeRecruitEffect.FreeRecruitType)
  return static_cast< ::pb::TArtifactEffectType >(freerecruittype_);
}
inline void TArtifactFreeRecruitEffect::set_freerecruittype(::pb::TArtifactEffectType value) {
  assert(::pb::TArtifactEffectType_IsValid(value));
  set_has_freerecruittype();
  freerecruittype_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactFreeRecruitEffect.FreeRecruitType)
}

// -------------------------------------------------------------------

// TArtifactEffectInfo

// optional uint32 ArtifactId = 1;
inline bool TArtifactEffectInfo::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactEffectInfo::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactEffectInfo::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactEffectInfo::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactEffectInfo::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactEffectInfo.ArtifactId)
  return artifactid_;
}
inline void TArtifactEffectInfo::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactEffectInfo.ArtifactId)
}

// optional uint64 EffectTime = 2;
inline bool TArtifactEffectInfo::has_effecttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TArtifactEffectInfo::set_has_effecttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TArtifactEffectInfo::clear_has_effecttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TArtifactEffectInfo::clear_effecttime() {
  effecttime_ = GOOGLE_ULONGLONG(0);
  clear_has_effecttime();
}
inline ::google::protobuf::uint64 TArtifactEffectInfo::effecttime() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactEffectInfo.EffectTime)
  return effecttime_;
}
inline void TArtifactEffectInfo::set_effecttime(::google::protobuf::uint64 value) {
  set_has_effecttime();
  effecttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactEffectInfo.EffectTime)
}

// optional uint32 Timesleft = 3;
inline bool TArtifactEffectInfo::has_timesleft() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TArtifactEffectInfo::set_has_timesleft() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TArtifactEffectInfo::clear_has_timesleft() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TArtifactEffectInfo::clear_timesleft() {
  timesleft_ = 0u;
  clear_has_timesleft();
}
inline ::google::protobuf::uint32 TArtifactEffectInfo::timesleft() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactEffectInfo.Timesleft)
  return timesleft_;
}
inline void TArtifactEffectInfo::set_timesleft(::google::protobuf::uint32 value) {
  set_has_timesleft();
  timesleft_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactEffectInfo.Timesleft)
}

// repeated .pb.TArtifactFreeRecruitEffect FreeRecruitEffect = 4;
inline int TArtifactEffectInfo::freerecruiteffect_size() const {
  return freerecruiteffect_.size();
}
inline void TArtifactEffectInfo::clear_freerecruiteffect() {
  freerecruiteffect_.Clear();
}
inline const ::pb::TArtifactFreeRecruitEffect& TArtifactEffectInfo::freerecruiteffect(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactEffectInfo.FreeRecruitEffect)
  return freerecruiteffect_.Get(index);
}
inline ::pb::TArtifactFreeRecruitEffect* TArtifactEffectInfo::mutable_freerecruiteffect(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactEffectInfo.FreeRecruitEffect)
  return freerecruiteffect_.Mutable(index);
}
inline ::pb::TArtifactFreeRecruitEffect* TArtifactEffectInfo::add_freerecruiteffect() {
  // @@protoc_insertion_point(field_add:pb.TArtifactEffectInfo.FreeRecruitEffect)
  return freerecruiteffect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactFreeRecruitEffect >&
TArtifactEffectInfo::freerecruiteffect() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactEffectInfo.FreeRecruitEffect)
  return freerecruiteffect_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactFreeRecruitEffect >*
TArtifactEffectInfo::mutable_freerecruiteffect() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactEffectInfo.FreeRecruitEffect)
  return &freerecruiteffect_;
}

// -------------------------------------------------------------------

// TArtifactGetInfoRsp

// repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
inline int TArtifactGetInfoRsp::artifactinfoarr_size() const {
  return artifactinfoarr_.size();
}
inline void TArtifactGetInfoRsp::clear_artifactinfoarr() {
  artifactinfoarr_.Clear();
}
inline const ::pb::TArtifactInfo& TArtifactGetInfoRsp::artifactinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactGetInfoRsp.ArtifactInfoArr)
  return artifactinfoarr_.Get(index);
}
inline ::pb::TArtifactInfo* TArtifactGetInfoRsp::mutable_artifactinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactGetInfoRsp.ArtifactInfoArr)
  return artifactinfoarr_.Mutable(index);
}
inline ::pb::TArtifactInfo* TArtifactGetInfoRsp::add_artifactinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TArtifactGetInfoRsp.ArtifactInfoArr)
  return artifactinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >&
TArtifactGetInfoRsp::artifactinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactGetInfoRsp.ArtifactInfoArr)
  return artifactinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >*
TArtifactGetInfoRsp::mutable_artifactinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactGetInfoRsp.ArtifactInfoArr)
  return &artifactinfoarr_;
}

// repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
inline int TArtifactGetInfoRsp::artifacteffectinfoarr_size() const {
  return artifacteffectinfoarr_.size();
}
inline void TArtifactGetInfoRsp::clear_artifacteffectinfoarr() {
  artifacteffectinfoarr_.Clear();
}
inline const ::pb::TArtifactEffectInfo& TArtifactGetInfoRsp::artifacteffectinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactGetInfoRsp.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_.Get(index);
}
inline ::pb::TArtifactEffectInfo* TArtifactGetInfoRsp::mutable_artifacteffectinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactGetInfoRsp.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_.Mutable(index);
}
inline ::pb::TArtifactEffectInfo* TArtifactGetInfoRsp::add_artifacteffectinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TArtifactGetInfoRsp.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >&
TArtifactGetInfoRsp::artifacteffectinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactGetInfoRsp.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >*
TArtifactGetInfoRsp::mutable_artifacteffectinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactGetInfoRsp.ArtifactEffectInfoArr)
  return &artifacteffectinfoarr_;
}

// optional uint32 ChargeNum = 3;
inline bool TArtifactGetInfoRsp::has_chargenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TArtifactGetInfoRsp::set_has_chargenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TArtifactGetInfoRsp::clear_has_chargenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TArtifactGetInfoRsp::clear_chargenum() {
  chargenum_ = 0u;
  clear_has_chargenum();
}
inline ::google::protobuf::uint32 TArtifactGetInfoRsp::chargenum() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactGetInfoRsp.ChargeNum)
  return chargenum_;
}
inline void TArtifactGetInfoRsp::set_chargenum(::google::protobuf::uint32 value) {
  set_has_chargenum();
  chargenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactGetInfoRsp.ChargeNum)
}

// -------------------------------------------------------------------

// TArtifactStarUpReq

// optional uint32 ArtifactId = 1;
inline bool TArtifactStarUpReq::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactStarUpReq::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactStarUpReq::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactStarUpReq::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactStarUpReq::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactStarUpReq.ArtifactId)
  return artifactid_;
}
inline void TArtifactStarUpReq::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactStarUpReq.ArtifactId)
}

// -------------------------------------------------------------------

// TArtifactCombineArtifactReq

// optional uint32 Ftid = 1;
inline bool TArtifactCombineArtifactReq::has_ftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactCombineArtifactReq::set_has_ftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactCombineArtifactReq::clear_has_ftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactCombineArtifactReq::clear_ftid() {
  ftid_ = 0u;
  clear_has_ftid();
}
inline ::google::protobuf::uint32 TArtifactCombineArtifactReq::ftid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactCombineArtifactReq.Ftid)
  return ftid_;
}
inline void TArtifactCombineArtifactReq::set_ftid(::google::protobuf::uint32 value) {
  set_has_ftid();
  ftid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactCombineArtifactReq.Ftid)
}

// -------------------------------------------------------------------

// TArtifactActiveFreeEffect

// optional uint32 FreeRecruitTime = 1;
inline bool TArtifactActiveFreeEffect::has_freerecruittime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactActiveFreeEffect::set_has_freerecruittime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactActiveFreeEffect::clear_has_freerecruittime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactActiveFreeEffect::clear_freerecruittime() {
  freerecruittime_ = 0u;
  clear_has_freerecruittime();
}
inline ::google::protobuf::uint32 TArtifactActiveFreeEffect::freerecruittime() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactActiveFreeEffect.FreeRecruitTime)
  return freerecruittime_;
}
inline void TArtifactActiveFreeEffect::set_freerecruittime(::google::protobuf::uint32 value) {
  set_has_freerecruittime();
  freerecruittime_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactActiveFreeEffect.FreeRecruitTime)
}

// optional .pb.TArtifactEffectType FreeRecruitType = 2;
inline bool TArtifactActiveFreeEffect::has_freerecruittype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TArtifactActiveFreeEffect::set_has_freerecruittype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TArtifactActiveFreeEffect::clear_has_freerecruittype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TArtifactActiveFreeEffect::clear_freerecruittype() {
  freerecruittype_ = 1;
  clear_has_freerecruittype();
}
inline ::pb::TArtifactEffectType TArtifactActiveFreeEffect::freerecruittype() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactActiveFreeEffect.FreeRecruitType)
  return static_cast< ::pb::TArtifactEffectType >(freerecruittype_);
}
inline void TArtifactActiveFreeEffect::set_freerecruittype(::pb::TArtifactEffectType value) {
  assert(::pb::TArtifactEffectType_IsValid(value));
  set_has_freerecruittype();
  freerecruittype_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactActiveFreeEffect.FreeRecruitType)
}

// -------------------------------------------------------------------

// TArtifactActivePubGainReq

// optional uint32 ArtifactId = 1;
inline bool TArtifactActivePubGainReq::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactActivePubGainReq::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactActivePubGainReq::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactActivePubGainReq::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactActivePubGainReq::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactActivePubGainReq.ArtifactId)
  return artifactid_;
}
inline void TArtifactActivePubGainReq::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactActivePubGainReq.ArtifactId)
}

// repeated .pb.TArtifactActiveFreeEffect FreeRecruitEffect = 2;
inline int TArtifactActivePubGainReq::freerecruiteffect_size() const {
  return freerecruiteffect_.size();
}
inline void TArtifactActivePubGainReq::clear_freerecruiteffect() {
  freerecruiteffect_.Clear();
}
inline const ::pb::TArtifactActiveFreeEffect& TArtifactActivePubGainReq::freerecruiteffect(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactActivePubGainReq.FreeRecruitEffect)
  return freerecruiteffect_.Get(index);
}
inline ::pb::TArtifactActiveFreeEffect* TArtifactActivePubGainReq::mutable_freerecruiteffect(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactActivePubGainReq.FreeRecruitEffect)
  return freerecruiteffect_.Mutable(index);
}
inline ::pb::TArtifactActiveFreeEffect* TArtifactActivePubGainReq::add_freerecruiteffect() {
  // @@protoc_insertion_point(field_add:pb.TArtifactActivePubGainReq.FreeRecruitEffect)
  return freerecruiteffect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactActiveFreeEffect >&
TArtifactActivePubGainReq::freerecruiteffect() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactActivePubGainReq.FreeRecruitEffect)
  return freerecruiteffect_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactActiveFreeEffect >*
TArtifactActivePubGainReq::mutable_freerecruiteffect() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactActivePubGainReq.FreeRecruitEffect)
  return &freerecruiteffect_;
}

// -------------------------------------------------------------------

// TArtifactChargeArtifactEnergyReq

// optional uint32 ArtifactId = 1;
inline bool TArtifactChargeArtifactEnergyReq::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactChargeArtifactEnergyReq::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactChargeArtifactEnergyReq::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactChargeArtifactEnergyReq::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactChargeArtifactEnergyReq::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactChargeArtifactEnergyReq.ArtifactId)
  return artifactid_;
}
inline void TArtifactChargeArtifactEnergyReq::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactChargeArtifactEnergyReq.ArtifactId)
}

// optional uint32 ChargeNums = 2;
inline bool TArtifactChargeArtifactEnergyReq::has_chargenums() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TArtifactChargeArtifactEnergyReq::set_has_chargenums() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TArtifactChargeArtifactEnergyReq::clear_has_chargenums() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TArtifactChargeArtifactEnergyReq::clear_chargenums() {
  chargenums_ = 0u;
  clear_has_chargenums();
}
inline ::google::protobuf::uint32 TArtifactChargeArtifactEnergyReq::chargenums() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactChargeArtifactEnergyReq.ChargeNums)
  return chargenums_;
}
inline void TArtifactChargeArtifactEnergyReq::set_chargenums(::google::protobuf::uint32 value) {
  set_has_chargenums();
  chargenums_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactChargeArtifactEnergyReq.ChargeNums)
}

// -------------------------------------------------------------------

// TArtifactDuplicatingItemReq

// optional uint32 ArtifactId = 1;
inline bool TArtifactDuplicatingItemReq::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactDuplicatingItemReq::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactDuplicatingItemReq::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactDuplicatingItemReq::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactDuplicatingItemReq::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactDuplicatingItemReq.ArtifactId)
  return artifactid_;
}
inline void TArtifactDuplicatingItemReq::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactDuplicatingItemReq.ArtifactId)
}

// repeated .pb.TCommonReward Items = 2;
inline int TArtifactDuplicatingItemReq::items_size() const {
  return items_.size();
}
inline void TArtifactDuplicatingItemReq::clear_items() {
  items_.Clear();
}
inline const ::pb::TCommonReward& TArtifactDuplicatingItemReq::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactDuplicatingItemReq.Items)
  return items_.Get(index);
}
inline ::pb::TCommonReward* TArtifactDuplicatingItemReq::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactDuplicatingItemReq.Items)
  return items_.Mutable(index);
}
inline ::pb::TCommonReward* TArtifactDuplicatingItemReq::add_items() {
  // @@protoc_insertion_point(field_add:pb.TArtifactDuplicatingItemReq.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TArtifactDuplicatingItemReq::items() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactDuplicatingItemReq.Items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TArtifactDuplicatingItemReq::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactDuplicatingItemReq.Items)
  return &items_;
}

// -------------------------------------------------------------------

// TArtifactDuplicatingItemRsp

// repeated .pb.TCommonReward Items = 1;
inline int TArtifactDuplicatingItemRsp::items_size() const {
  return items_.size();
}
inline void TArtifactDuplicatingItemRsp::clear_items() {
  items_.Clear();
}
inline const ::pb::TCommonReward& TArtifactDuplicatingItemRsp::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactDuplicatingItemRsp.Items)
  return items_.Get(index);
}
inline ::pb::TCommonReward* TArtifactDuplicatingItemRsp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactDuplicatingItemRsp.Items)
  return items_.Mutable(index);
}
inline ::pb::TCommonReward* TArtifactDuplicatingItemRsp::add_items() {
  // @@protoc_insertion_point(field_add:pb.TArtifactDuplicatingItemRsp.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TArtifactDuplicatingItemRsp::items() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactDuplicatingItemRsp.Items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TArtifactDuplicatingItemRsp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactDuplicatingItemRsp.Items)
  return &items_;
}

// -------------------------------------------------------------------

// TArtifactUpGradeItemReq

// optional uint32 ArtifactId = 1;
inline bool TArtifactUpGradeItemReq::has_artifactid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TArtifactUpGradeItemReq::set_has_artifactid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TArtifactUpGradeItemReq::clear_has_artifactid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TArtifactUpGradeItemReq::clear_artifactid() {
  artifactid_ = 0u;
  clear_has_artifactid();
}
inline ::google::protobuf::uint32 TArtifactUpGradeItemReq::artifactid() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactUpGradeItemReq.ArtifactId)
  return artifactid_;
}
inline void TArtifactUpGradeItemReq::set_artifactid(::google::protobuf::uint32 value) {
  set_has_artifactid();
  artifactid_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactUpGradeItemReq.ArtifactId)
}

// repeated .pb.TCommonReward Items = 2;
inline int TArtifactUpGradeItemReq::items_size() const {
  return items_.size();
}
inline void TArtifactUpGradeItemReq::clear_items() {
  items_.Clear();
}
inline const ::pb::TCommonReward& TArtifactUpGradeItemReq::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactUpGradeItemReq.Items)
  return items_.Get(index);
}
inline ::pb::TCommonReward* TArtifactUpGradeItemReq::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactUpGradeItemReq.Items)
  return items_.Mutable(index);
}
inline ::pb::TCommonReward* TArtifactUpGradeItemReq::add_items() {
  // @@protoc_insertion_point(field_add:pb.TArtifactUpGradeItemReq.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TArtifactUpGradeItemReq::items() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactUpGradeItemReq.Items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TArtifactUpGradeItemReq::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactUpGradeItemReq.Items)
  return &items_;
}

// -------------------------------------------------------------------

// TArtifactUpGradeItemRsp

// repeated .pb.TCommonReward Items = 1;
inline int TArtifactUpGradeItemRsp::items_size() const {
  return items_.size();
}
inline void TArtifactUpGradeItemRsp::clear_items() {
  items_.Clear();
}
inline const ::pb::TCommonReward& TArtifactUpGradeItemRsp::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactUpGradeItemRsp.Items)
  return items_.Get(index);
}
inline ::pb::TCommonReward* TArtifactUpGradeItemRsp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactUpGradeItemRsp.Items)
  return items_.Mutable(index);
}
inline ::pb::TCommonReward* TArtifactUpGradeItemRsp::add_items() {
  // @@protoc_insertion_point(field_add:pb.TArtifactUpGradeItemRsp.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TArtifactUpGradeItemRsp::items() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactUpGradeItemRsp.Items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TArtifactUpGradeItemRsp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactUpGradeItemRsp.Items)
  return &items_;
}

// -------------------------------------------------------------------

// TArtifactNodify

// repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
inline int TArtifactNodify::artifactinfoarr_size() const {
  return artifactinfoarr_.size();
}
inline void TArtifactNodify::clear_artifactinfoarr() {
  artifactinfoarr_.Clear();
}
inline const ::pb::TArtifactInfo& TArtifactNodify::artifactinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactNodify.ArtifactInfoArr)
  return artifactinfoarr_.Get(index);
}
inline ::pb::TArtifactInfo* TArtifactNodify::mutable_artifactinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactNodify.ArtifactInfoArr)
  return artifactinfoarr_.Mutable(index);
}
inline ::pb::TArtifactInfo* TArtifactNodify::add_artifactinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TArtifactNodify.ArtifactInfoArr)
  return artifactinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >&
TArtifactNodify::artifactinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactNodify.ArtifactInfoArr)
  return artifactinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactInfo >*
TArtifactNodify::mutable_artifactinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactNodify.ArtifactInfoArr)
  return &artifactinfoarr_;
}

// repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
inline int TArtifactNodify::artifacteffectinfoarr_size() const {
  return artifacteffectinfoarr_.size();
}
inline void TArtifactNodify::clear_artifacteffectinfoarr() {
  artifacteffectinfoarr_.Clear();
}
inline const ::pb::TArtifactEffectInfo& TArtifactNodify::artifacteffectinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TArtifactNodify.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_.Get(index);
}
inline ::pb::TArtifactEffectInfo* TArtifactNodify::mutable_artifacteffectinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TArtifactNodify.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_.Mutable(index);
}
inline ::pb::TArtifactEffectInfo* TArtifactNodify::add_artifacteffectinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TArtifactNodify.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >&
TArtifactNodify::artifacteffectinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TArtifactNodify.ArtifactEffectInfoArr)
  return artifacteffectinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TArtifactEffectInfo >*
TArtifactNodify::mutable_artifacteffectinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TArtifactNodify.ArtifactEffectInfoArr)
  return &artifacteffectinfoarr_;
}

// optional uint32 ChargeNum = 3;
inline bool TArtifactNodify::has_chargenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TArtifactNodify::set_has_chargenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TArtifactNodify::clear_has_chargenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TArtifactNodify::clear_chargenum() {
  chargenum_ = 0u;
  clear_has_chargenum();
}
inline ::google::protobuf::uint32 TArtifactNodify::chargenum() const {
  // @@protoc_insertion_point(field_get:pb.TArtifactNodify.ChargeNum)
  return chargenum_;
}
inline void TArtifactNodify::set_chargenum(::google::protobuf::uint32 value) {
  set_has_chargenum();
  chargenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TArtifactNodify.ChargeNum)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::TArtifactEffectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::TArtifactEffectType>() {
  return ::pb::TArtifactEffectType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fArtifact_2eproto__INCLUDED
