// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Hero.proto

#ifndef PROTOBUF_net_2fHero_2eproto__INCLUDED
#define PROTOBUF_net_2fHero_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Common.pb.h"
#include "net/Battle.pb.h"
#include "module/Attributer.pb.h"
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fHero_2eproto();
void protobuf_AssignDesc_net_2fHero_2eproto();
void protobuf_ShutdownFile_net_2fHero_2eproto();

class THeroAdvanceItem;
class THeroEquipItem;
class TDivineEquipItem;
class THeroCombination;
class THeroSkill;
class THeroSimpleInfo;
class THeroFashionExclEquipInfo;
class TPlugInInfo;
class THeroInfo;
class THeroGetHeroDataArrayReq;
class THeroGetHeroDataArrayRsp;
class THeroUpdateHeroDataNotify;
class THeroLevelUpReq;
class THeroStarActivateReq;
class THeroStarUpReq;
class THeroEquipAdvanceItemReq;
class THeroAdvanceReq;
class THeroRecruitHeroReq;
class THeroCombinationUpReq;
class THeroCombinationActiveReq;
class THeroSkillUpReq;
class THeroResetSkillReq;
class THeroSetMultiEquipReq;
class THeroSetMultiSoulReq;
class THeroSetWarRidingReq;
class THeroSetMultiExclEquipReq;
class THeroSetMultiExclEquipRsp;
class THeroSetMultiSilkBagReq;
class THeroSetDivineEquipReq;
class THeroUpgradeToGoldReq;
class THeroUniversalFragConvertReq;
class THeroGoldBreakReq;
class THeroWhiteGoldBreakReq;
class THeroGoldHeroLinkReq;
class THeroUpgradeToWhiteGoldReq;
class THeroGetPropReq;
class THeroGetPropResp;
class TOtherUserHeroInfo;
class TSetPlugInHeroReq;
class TPlugLevelUpReq;
class TResetPlugReq;
class TResetPlugRsp;
class THeroUpgradeGodLv;
class THeroChainSoulReq;
class THeroChainSoulLvUpReq;
class THeroUpgradeToPurpleGoldLvUpReq;
class THeroUpgradeToPurpleGoldAdvUpReq;
class TForceSoulEquipInfo;
class THeroSetMultiForceSoulReq;
class THeroAwakeRealBodyReq;

enum EPlugOpenType {
  NOTOPEN = 0,
  OPEN = 1
};
bool EPlugOpenType_IsValid(int value);
const EPlugOpenType EPlugOpenType_MIN = NOTOPEN;
const EPlugOpenType EPlugOpenType_MAX = OPEN;
const int EPlugOpenType_ARRAYSIZE = EPlugOpenType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPlugOpenType_descriptor();
inline const ::std::string& EPlugOpenType_Name(EPlugOpenType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPlugOpenType_descriptor(), value);
}
inline bool EPlugOpenType_Parse(
    const ::std::string& name, EPlugOpenType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPlugOpenType>(
    EPlugOpenType_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>THeroAdvanceItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroAdvanceItem : public ::google::protobuf::Message {
 public:
  THeroAdvanceItem();
  virtual ~THeroAdvanceItem();

  THeroAdvanceItem(const THeroAdvanceItem& from);

  inline THeroAdvanceItem& operator=(const THeroAdvanceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroAdvanceItem& default_instance();

  void Swap(THeroAdvanceItem* other);

  // implements Message ----------------------------------------------

  THeroAdvanceItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroAdvanceItem& from);
  void MergeFrom(const THeroAdvanceItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroAdvanceItem</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional .pb.TSimpleItem Item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroAdvanceItem</name>
  	<Function>
  		<name>item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& item() const;
  inline ::pb::TSimpleItem* mutable_item();
  inline ::pb::TSimpleItem* release_item();
  inline void set_allocated_item(::pb::TSimpleItem* item);

  // repeated .pb.TSimpleItem ArrChildItem = 3;
  inline int arrchilditem_size() const;
  inline void clear_arrchilditem();
  static const int kArrChildItemFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroAdvanceItem</name>
  	<Function>
  		<name>arrchilditem</name>
  		<replaceName>ArrChildItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrchilditem</name>
  		<replaceName>ArrChildItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrchilditem</name>
  		<replaceName>ArrChildItem</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrchilditem</name>
  		<replaceName>ArrChildItem</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrchilditem_size</name>
  		<replaceName>ArrChildItem</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& arrchilditem(int index) const;
  inline ::pb::TSimpleItem* mutable_arrchilditem(int index);
  inline ::pb::TSimpleItem* add_arrchilditem();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      arrchilditem() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_arrchilditem();

  // @@protoc_insertion_point(class_scope:pb.THeroAdvanceItem)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TSimpleItem* item_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > arrchilditem_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroAdvanceItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroEquipItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroEquipItem : public ::google::protobuf::Message {
 public:
  THeroEquipItem();
  virtual ~THeroEquipItem();

  THeroEquipItem(const THeroEquipItem& from);

  inline THeroEquipItem& operator=(const THeroEquipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroEquipItem& default_instance();

  void Swap(THeroEquipItem* other);

  // implements Message ----------------------------------------------

  THeroEquipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroEquipItem& from);
  void MergeFrom(const THeroEquipItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroEquipItem</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional .pb.TSimpleItem Item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroEquipItem</name>
  	<Function>
  		<name>item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& item() const;
  inline ::pb::TSimpleItem* mutable_item();
  inline ::pb::TSimpleItem* release_item();
  inline void set_allocated_item(::pb::TSimpleItem* item);

  // @@protoc_insertion_point(class_scope:pb.THeroEquipItem)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TSimpleItem* item_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroEquipItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineEquipItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineEquipItem : public ::google::protobuf::Message {
 public:
  TDivineEquipItem();
  virtual ~TDivineEquipItem();

  TDivineEquipItem(const TDivineEquipItem& from);

  inline TDivineEquipItem& operator=(const TDivineEquipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineEquipItem& default_instance();

  void Swap(TDivineEquipItem* other);

  // implements Message ----------------------------------------------

  TDivineEquipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineEquipItem& from);
  void MergeFrom(const TDivineEquipItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineEquipItem</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional .pb.TSimpleItem Item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineEquipItem</name>
  	<Function>
  		<name>item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_item</name>
  		<replaceName>Item</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& item() const;
  inline ::pb::TSimpleItem* mutable_item();
  inline ::pb::TSimpleItem* release_item();
  inline void set_allocated_item(::pb::TSimpleItem* item);

  // optional uint32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineEquipItem</name>
  	<Function>
  		<name>lv</name>
  		<replaceName>lv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lv</name>
  		<replaceName>lv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lv</name>
  		<replaceName>lv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineEquipItem)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TSimpleItem* item_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 lv_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TDivineEquipItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroCombination</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroCombination : public ::google::protobuf::Message {
 public:
  THeroCombination();
  virtual ~THeroCombination();

  THeroCombination(const THeroCombination& from);

  inline THeroCombination& operator=(const THeroCombination& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroCombination& default_instance();

  void Swap(THeroCombination* other);

  // implements Message ----------------------------------------------

  THeroCombination* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroCombination& from);
  void MergeFrom(const THeroCombination& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroCombination</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroCombination</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroCombination)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroCombination* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSkill</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSkill : public ::google::protobuf::Message {
 public:
  THeroSkill();
  virtual ~THeroSkill();

  THeroSkill(const THeroSkill& from);

  inline THeroSkill& operator=(const THeroSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSkill& default_instance();

  void Swap(THeroSkill* other);

  // implements Message ----------------------------------------------

  THeroSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSkill& from);
  void MergeFrom(const THeroSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSkill</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSkill</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Idx = 3;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroSkill</name>
  	<Function>
  		<name>idx</name>
  		<replaceName>Idx</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_idx</name>
  		<replaceName>Idx</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_idx</name>
  		<replaceName>Idx</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // repeated uint32 ArrSubSkill = 4;
  inline int arrsubskill_size() const;
  inline void clear_arrsubskill();
  static const int kArrSubSkillFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>THeroSkill</name>
  	<Function>
  		<name>arrsubskill</name>
  		<replaceName>ArrSubSkill</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrsubskill</name>
  		<replaceName>ArrSubSkill</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrsubskill</name>
  		<replaceName>ArrSubSkill</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrsubskill</name>
  		<replaceName>ArrSubSkill</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrsubskill_size</name>
  		<replaceName>ArrSubSkill</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrsubskill(int index) const;
  inline void set_arrsubskill(int index, ::google::protobuf::uint32 value);
  inline void add_arrsubskill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrsubskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrsubskill();

  // @@protoc_insertion_point(class_scope:pb.THeroSkill)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrsubskill_;
  ::google::protobuf::uint32 idx_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSkill* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSimpleInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSimpleInfo : public ::google::protobuf::Message {
 public:
  THeroSimpleInfo();
  virtual ~THeroSimpleInfo();

  THeroSimpleInfo(const THeroSimpleInfo& from);

  inline THeroSimpleInfo& operator=(const THeroSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSimpleInfo& default_instance();

  void Swap(THeroSimpleInfo* other);

  // implements Message ----------------------------------------------

  THeroSimpleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSimpleInfo& from);
  void MergeFrom(const THeroSimpleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Htid = 2;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Advance = 4;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>advance</name>
  		<replaceName>Advance</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_advance</name>
  		<replaceName>Advance</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_advance</name>
  		<replaceName>Advance</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 advance() const;
  inline void set_advance(::google::protobuf::uint32 value);

  // optional uint32 Star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  inline int pluginfoarr_size() const;
  inline void clear_pluginfoarr();
  static const int kPlugInfoArrFieldNumber = 23;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>pluginfoarr_size</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPlugInInfo& pluginfoarr(int index) const;
  inline ::pb::TPlugInInfo* mutable_pluginfoarr(int index);
  inline ::pb::TPlugInInfo* add_pluginfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >&
      pluginfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >*
      mutable_pluginfoarr();

  // optional uint32 PluggerHid = 24;
  inline bool has_pluggerhid() const;
  inline void clear_pluggerhid();
  static const int kPluggerHidFieldNumber = 24;
  /*FOR2LUA
  <Record>
  	<name>THeroSimpleInfo</name>
  	<Function>
  		<name>pluggerhid</name>
  		<replaceName>PluggerHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pluggerhid</name>
  		<replaceName>PluggerHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pluggerhid</name>
  		<replaceName>PluggerHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pluggerhid() const;
  inline void set_pluggerhid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroSimpleInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_htid();
  inline void clear_has_htid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_pluggerhid();
  inline void clear_has_pluggerhid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 htid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 advance_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo > pluginfoarr_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 pluggerhid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSimpleInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroFashionExclEquipInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroFashionExclEquipInfo : public ::google::protobuf::Message {
 public:
  THeroFashionExclEquipInfo();
  virtual ~THeroFashionExclEquipInfo();

  THeroFashionExclEquipInfo(const THeroFashionExclEquipInfo& from);

  inline THeroFashionExclEquipInfo& operator=(const THeroFashionExclEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroFashionExclEquipInfo& default_instance();

  void Swap(THeroFashionExclEquipInfo* other);

  // implements Message ----------------------------------------------

  THeroFashionExclEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroFashionExclEquipInfo& from);
  void MergeFrom(const THeroFashionExclEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FashionModelId = 1;
  inline bool has_fashionmodelid() const;
  inline void clear_fashionmodelid();
  static const int kFashionModelIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroFashionExclEquipInfo</name>
  	<Function>
  		<name>fashionmodelid</name>
  		<replaceName>FashionModelId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fashionmodelid</name>
  		<replaceName>FashionModelId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fashionmodelid</name>
  		<replaceName>FashionModelId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 fashionmodelid() const;
  inline void set_fashionmodelid(::google::protobuf::uint32 value);

  // optional uint32 ItemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroFashionExclEquipInfo</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroFashionExclEquipInfo)
 private:
  inline void set_has_fashionmodelid();
  inline void clear_has_fashionmodelid();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 fashionmodelid_;
  ::google::protobuf::uint32 itemid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroFashionExclEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPlugInInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPlugInInfo : public ::google::protobuf::Message {
 public:
  TPlugInInfo();
  virtual ~TPlugInInfo();

  TPlugInInfo(const TPlugInInfo& from);

  inline TPlugInInfo& operator=(const TPlugInInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPlugInInfo& default_instance();

  void Swap(TPlugInInfo* other);

  // implements Message ----------------------------------------------

  TPlugInInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPlugInInfo& from);
  void MergeFrom(const TPlugInInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPlugInInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPlugInInfo</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPlugInInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Htid = 4;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TPlugInInfo</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // optional uint32 StarLv = 5;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TPlugInInfo</name>
  	<Function>
  		<name>starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starlv() const;
  inline void set_starlv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPlugInInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_htid();
  inline void clear_has_htid();
  inline void set_has_starlv();
  inline void clear_has_starlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 htid_;
  ::google::protobuf::uint32 starlv_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TPlugInInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroInfo : public ::google::protobuf::Message {
 public:
  THeroInfo();
  virtual ~THeroInfo();

  THeroInfo(const THeroInfo& from);

  inline THeroInfo& operator=(const THeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroInfo& default_instance();

  void Swap(THeroInfo* other);

  // implements Message ----------------------------------------------

  THeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroInfo& from);
  void MergeFrom(const THeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Htid = 2;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 Advance = 5;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>advance</name>
  		<replaceName>Advance</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_advance</name>
  		<replaceName>Advance</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_advance</name>
  		<replaceName>Advance</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 advance() const;
  inline void set_advance(::google::protobuf::uint32 value);

  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 6;
  inline int advanceitemarray_size() const;
  inline void clear_advanceitemarray();
  static const int kAdvanceItemArrayFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>advanceitemarray_size</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroAdvanceItem& advanceitemarray(int index) const;
  inline ::pb::THeroAdvanceItem* mutable_advanceitemarray(int index);
  inline ::pb::THeroAdvanceItem* add_advanceitemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >&
      advanceitemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >*
      mutable_advanceitemarray();

  // optional uint32 Star = 7;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_star</name>
  		<replaceName>Star</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 StarHole = 8;
  inline bool has_starhole() const;
  inline void clear_starhole();
  static const int kStarHoleFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>starhole</name>
  		<replaceName>StarHole</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starhole</name>
  		<replaceName>StarHole</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starhole</name>
  		<replaceName>StarHole</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starhole() const;
  inline void set_starhole(::google::protobuf::uint32 value);

  // repeated .pb.THeroCombination CombinationArray = 9;
  inline int combinationarray_size() const;
  inline void clear_combinationarray();
  static const int kCombinationArrayFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>combinationarray</name>
  		<replaceName>CombinationArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_combinationarray</name>
  		<replaceName>CombinationArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_combinationarray</name>
  		<replaceName>CombinationArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_combinationarray</name>
  		<replaceName>CombinationArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>combinationarray_size</name>
  		<replaceName>CombinationArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroCombination& combinationarray(int index) const;
  inline ::pb::THeroCombination* mutable_combinationarray(int index);
  inline ::pb::THeroCombination* add_combinationarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroCombination >&
      combinationarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroCombination >*
      mutable_combinationarray();

  // repeated .pb.THeroSkill SkillArray = 10;
  inline int skillarray_size() const;
  inline void clear_skillarray();
  static const int kSkillArrayFieldNumber = 10;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>skillarray</name>
  		<replaceName>SkillArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_skillarray</name>
  		<replaceName>SkillArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_skillarray</name>
  		<replaceName>SkillArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_skillarray</name>
  		<replaceName>SkillArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>skillarray_size</name>
  		<replaceName>SkillArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroSkill& skillarray(int index) const;
  inline ::pb::THeroSkill* mutable_skillarray(int index);
  inline ::pb::THeroSkill* add_skillarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroSkill >&
      skillarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroSkill >*
      mutable_skillarray();

  // repeated .pb.THeroEquipItem EquipItemArr = 11;
  inline int equipitemarr_size() const;
  inline void clear_equipitemarr();
  static const int kEquipItemArrFieldNumber = 11;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>equipitemarr</name>
  		<replaceName>EquipItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_equipitemarr</name>
  		<replaceName>EquipItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_equipitemarr</name>
  		<replaceName>EquipItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipitemarr</name>
  		<replaceName>EquipItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>equipitemarr_size</name>
  		<replaceName>EquipItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& equipitemarr(int index) const;
  inline ::pb::THeroEquipItem* mutable_equipitemarr(int index);
  inline ::pb::THeroEquipItem* add_equipitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      equipitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_equipitemarr();

  // repeated .pb.THeroEquipItem SoulItemArr = 12;
  inline int soulitemarr_size() const;
  inline void clear_soulitemarr();
  static const int kSoulItemArrFieldNumber = 12;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>soulitemarr</name>
  		<replaceName>SoulItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_soulitemarr</name>
  		<replaceName>SoulItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_soulitemarr</name>
  		<replaceName>SoulItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_soulitemarr</name>
  		<replaceName>SoulItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>soulitemarr_size</name>
  		<replaceName>SoulItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& soulitemarr(int index) const;
  inline ::pb::THeroEquipItem* mutable_soulitemarr(int index);
  inline ::pb::THeroEquipItem* add_soulitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      soulitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_soulitemarr();

  // optional uint32 SurplusSkillPointNum = 13;
  inline bool has_surplusskillpointnum() const;
  inline void clear_surplusskillpointnum();
  static const int kSurplusSkillPointNumFieldNumber = 13;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>surplusskillpointnum</name>
  		<replaceName>SurplusSkillPointNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_surplusskillpointnum</name>
  		<replaceName>SurplusSkillPointNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_surplusskillpointnum</name>
  		<replaceName>SurplusSkillPointNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 surplusskillpointnum() const;
  inline void set_surplusskillpointnum(::google::protobuf::uint32 value);

  // repeated uint32 ExclEquipItemIdArr = 14;
  inline int exclequipitemidarr_size() const;
  inline void clear_exclequipitemidarr();
  static const int kExclEquipItemIdArrFieldNumber = 14;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>exclequipitemidarr</name>
  		<replaceName>ExclEquipItemIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_exclequipitemidarr</name>
  		<replaceName>ExclEquipItemIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_exclequipitemidarr</name>
  		<replaceName>ExclEquipItemIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exclequipitemidarr</name>
  		<replaceName>ExclEquipItemIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>exclequipitemidarr_size</name>
  		<replaceName>ExclEquipItemIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exclequipitemidarr(int index) const;
  inline void set_exclequipitemidarr(int index, ::google::protobuf::uint32 value);
  inline void add_exclequipitemidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exclequipitemidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exclequipitemidarr();

  // repeated .pb.THeroFashionExclEquipInfo FashionExclEquipArr = 15;
  inline int fashionexclequiparr_size() const;
  inline void clear_fashionexclequiparr();
  static const int kFashionExclEquipArrFieldNumber = 15;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>fashionexclequiparr</name>
  		<replaceName>FashionExclEquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_fashionexclequiparr</name>
  		<replaceName>FashionExclEquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_fashionexclequiparr</name>
  		<replaceName>FashionExclEquipArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fashionexclequiparr</name>
  		<replaceName>FashionExclEquipArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>fashionexclequiparr_size</name>
  		<replaceName>FashionExclEquipArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroFashionExclEquipInfo& fashionexclequiparr(int index) const;
  inline ::pb::THeroFashionExclEquipInfo* mutable_fashionexclequiparr(int index);
  inline ::pb::THeroFashionExclEquipInfo* add_fashionexclequiparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroFashionExclEquipInfo >&
      fashionexclequiparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroFashionExclEquipInfo >*
      mutable_fashionexclequiparr();

  // optional uint32 GoldLv = 16;
  inline bool has_goldlv() const;
  inline void clear_goldlv();
  static const int kGoldLvFieldNumber = 16;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>goldlv</name>
  		<replaceName>GoldLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goldlv</name>
  		<replaceName>GoldLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goldlv</name>
  		<replaceName>GoldLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goldlv() const;
  inline void set_goldlv(::google::protobuf::uint32 value);

  // optional uint32 GoldBreakLv = 17;
  inline bool has_goldbreaklv() const;
  inline void clear_goldbreaklv();
  static const int kGoldBreakLvFieldNumber = 17;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>goldbreaklv</name>
  		<replaceName>GoldBreakLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goldbreaklv</name>
  		<replaceName>GoldBreakLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goldbreaklv</name>
  		<replaceName>GoldBreakLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goldbreaklv() const;
  inline void set_goldbreaklv(::google::protobuf::uint32 value);

  // optional uint32 LinkedHid = 18;
  inline bool has_linkedhid() const;
  inline void clear_linkedhid();
  static const int kLinkedHidFieldNumber = 18;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>linkedhid</name>
  		<replaceName>LinkedHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_linkedhid</name>
  		<replaceName>LinkedHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_linkedhid</name>
  		<replaceName>LinkedHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 linkedhid() const;
  inline void set_linkedhid(::google::protobuf::uint32 value);

  // optional uint64 ExpireTime = 19;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 19;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // repeated .pb.THeroEquipItem SilkBagItemArr = 20;
  inline int silkbagitemarr_size() const;
  inline void clear_silkbagitemarr();
  static const int kSilkBagItemArrFieldNumber = 20;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>silkbagitemarr</name>
  		<replaceName>SilkBagItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_silkbagitemarr</name>
  		<replaceName>SilkBagItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_silkbagitemarr</name>
  		<replaceName>SilkBagItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_silkbagitemarr</name>
  		<replaceName>SilkBagItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>silkbagitemarr_size</name>
  		<replaceName>SilkBagItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& silkbagitemarr(int index) const;
  inline ::pb::THeroEquipItem* mutable_silkbagitemarr(int index);
  inline ::pb::THeroEquipItem* add_silkbagitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      silkbagitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_silkbagitemarr();

  // optional uint32 WhiteGoldLv = 21;
  inline bool has_whitegoldlv() const;
  inline void clear_whitegoldlv();
  static const int kWhiteGoldLvFieldNumber = 21;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>whitegoldlv</name>
  		<replaceName>WhiteGoldLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_whitegoldlv</name>
  		<replaceName>WhiteGoldLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_whitegoldlv</name>
  		<replaceName>WhiteGoldLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 whitegoldlv() const;
  inline void set_whitegoldlv(::google::protobuf::uint32 value);

  // optional uint32 WhiteGoldBreakLv = 22;
  inline bool has_whitegoldbreaklv() const;
  inline void clear_whitegoldbreaklv();
  static const int kWhiteGoldBreakLvFieldNumber = 22;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>whitegoldbreaklv</name>
  		<replaceName>WhiteGoldBreakLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_whitegoldbreaklv</name>
  		<replaceName>WhiteGoldBreakLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_whitegoldbreaklv</name>
  		<replaceName>WhiteGoldBreakLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 whitegoldbreaklv() const;
  inline void set_whitegoldbreaklv(::google::protobuf::uint32 value);

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  inline int pluginfoarr_size() const;
  inline void clear_pluginfoarr();
  static const int kPlugInfoArrFieldNumber = 23;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pluginfoarr</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>pluginfoarr_size</name>
  		<replaceName>PlugInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPlugInInfo& pluginfoarr(int index) const;
  inline ::pb::TPlugInInfo* mutable_pluginfoarr(int index);
  inline ::pb::TPlugInInfo* add_pluginfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >&
      pluginfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >*
      mutable_pluginfoarr();

  // optional uint32 PluggerHid = 24;
  inline bool has_pluggerhid() const;
  inline void clear_pluggerhid();
  static const int kPluggerHidFieldNumber = 24;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>pluggerhid</name>
  		<replaceName>PluggerHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pluggerhid</name>
  		<replaceName>PluggerHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pluggerhid</name>
  		<replaceName>PluggerHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pluggerhid() const;
  inline void set_pluggerhid(::google::protobuf::uint32 value);

  // optional uint64 HeroPercentage = 25;
  inline bool has_heropercentage() const;
  inline void clear_heropercentage();
  static const int kHeroPercentageFieldNumber = 25;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>heropercentage</name>
  		<replaceName>HeroPercentage</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_heropercentage</name>
  		<replaceName>HeroPercentage</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heropercentage</name>
  		<replaceName>HeroPercentage</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 heropercentage() const;
  inline void set_heropercentage(::google::protobuf::uint64 value);

  // optional uint32 GodLv = 26;
  inline bool has_godlv() const;
  inline void clear_godlv();
  static const int kGodLvFieldNumber = 26;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>godlv</name>
  		<replaceName>GodLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_godlv</name>
  		<replaceName>GodLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_godlv</name>
  		<replaceName>GodLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 godlv() const;
  inline void set_godlv(::google::protobuf::uint32 value);

  // optional uint32 WarRidingTid = 27;
  inline bool has_warridingtid() const;
  inline void clear_warridingtid();
  static const int kWarRidingTidFieldNumber = 27;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>warridingtid</name>
  		<replaceName>WarRidingTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridingtid</name>
  		<replaceName>WarRidingTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridingtid</name>
  		<replaceName>WarRidingTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridingtid() const;
  inline void set_warridingtid(::google::protobuf::uint32 value);

  // optional uint32 ChainSoulHid = 28;
  inline bool has_chainsoulhid() const;
  inline void clear_chainsoulhid();
  static const int kChainSoulHidFieldNumber = 28;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>chainsoulhid</name>
  		<replaceName>ChainSoulHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chainsoulhid</name>
  		<replaceName>ChainSoulHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chainsoulhid</name>
  		<replaceName>ChainSoulHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chainsoulhid() const;
  inline void set_chainsoulhid(::google::protobuf::uint32 value);

  // optional uint32 ChainSoulLv = 29;
  inline bool has_chainsoullv() const;
  inline void clear_chainsoullv();
  static const int kChainSoulLvFieldNumber = 29;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>chainsoullv</name>
  		<replaceName>ChainSoulLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chainsoullv</name>
  		<replaceName>ChainSoulLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chainsoullv</name>
  		<replaceName>ChainSoulLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chainsoullv() const;
  inline void set_chainsoullv(::google::protobuf::uint32 value);

  // optional uint32 PurpleGoldBigLv = 30;
  inline bool has_purplegoldbiglv() const;
  inline void clear_purplegoldbiglv();
  static const int kPurpleGoldBigLvFieldNumber = 30;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>purplegoldbiglv</name>
  		<replaceName>PurpleGoldBigLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_purplegoldbiglv</name>
  		<replaceName>PurpleGoldBigLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_purplegoldbiglv</name>
  		<replaceName>PurpleGoldBigLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 purplegoldbiglv() const;
  inline void set_purplegoldbiglv(::google::protobuf::uint32 value);

  // repeated uint32 PurpleGoldSmallLv = 31;
  inline int purplegoldsmalllv_size() const;
  inline void clear_purplegoldsmalllv();
  static const int kPurpleGoldSmallLvFieldNumber = 31;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>purplegoldsmalllv</name>
  		<replaceName>PurpleGoldSmallLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_purplegoldsmalllv</name>
  		<replaceName>PurpleGoldSmallLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_purplegoldsmalllv</name>
  		<replaceName>PurpleGoldSmallLv</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_purplegoldsmalllv</name>
  		<replaceName>PurpleGoldSmallLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>purplegoldsmalllv_size</name>
  		<replaceName>PurpleGoldSmallLv</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 purplegoldsmalllv(int index) const;
  inline void set_purplegoldsmalllv(int index, ::google::protobuf::uint32 value);
  inline void add_purplegoldsmalllv(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      purplegoldsmalllv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_purplegoldsmalllv();

  // optional uint32 PurpleGoldSoulCost = 32;
  inline bool has_purplegoldsoulcost() const;
  inline void clear_purplegoldsoulcost();
  static const int kPurpleGoldSoulCostFieldNumber = 32;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>purplegoldsoulcost</name>
  		<replaceName>PurpleGoldSoulCost</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_purplegoldsoulcost</name>
  		<replaceName>PurpleGoldSoulCost</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_purplegoldsoulcost</name>
  		<replaceName>PurpleGoldSoulCost</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 purplegoldsoulcost() const;
  inline void set_purplegoldsoulcost(::google::protobuf::uint32 value);

  // repeated .pb.TDivineEquipItem DivineEquipItemArr = 33;
  inline int divineequipitemarr_size() const;
  inline void clear_divineequipitemarr();
  static const int kDivineEquipItemArrFieldNumber = 33;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_divineequipitemarr</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>divineequipitemarr_size</name>
  		<replaceName>DivineEquipItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDivineEquipItem& divineequipitemarr(int index) const;
  inline ::pb::TDivineEquipItem* mutable_divineequipitemarr(int index);
  inline ::pb::TDivineEquipItem* add_divineequipitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >&
      divineequipitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >*
      mutable_divineequipitemarr();

  // repeated .pb.THeroEquipItem ForceSoulArr = 34;
  inline int forcesoularr_size() const;
  inline void clear_forcesoularr();
  static const int kForceSoulArrFieldNumber = 34;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>forcesoularr</name>
  		<replaceName>ForceSoulArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_forcesoularr</name>
  		<replaceName>ForceSoulArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_forcesoularr</name>
  		<replaceName>ForceSoulArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_forcesoularr</name>
  		<replaceName>ForceSoulArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>forcesoularr_size</name>
  		<replaceName>ForceSoulArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& forcesoularr(int index) const;
  inline ::pb::THeroEquipItem* mutable_forcesoularr(int index);
  inline ::pb::THeroEquipItem* add_forcesoularr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      forcesoularr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_forcesoularr();

  // optional uint32 RealBodyLv = 35;
  inline bool has_realbodylv() const;
  inline void clear_realbodylv();
  static const int kRealBodyLvFieldNumber = 35;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>realbodylv</name>
  		<replaceName>RealBodyLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_realbodylv</name>
  		<replaceName>RealBodyLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_realbodylv</name>
  		<replaceName>RealBodyLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 realbodylv() const;
  inline void set_realbodylv(::google::protobuf::uint32 value);

  // optional uint32 ForceSoulStarNum = 36;
  inline bool has_forcesoulstarnum() const;
  inline void clear_forcesoulstarnum();
  static const int kForceSoulStarNumFieldNumber = 36;
  /*FOR2LUA
  <Record>
  	<name>THeroInfo</name>
  	<Function>
  		<name>forcesoulstarnum</name>
  		<replaceName>ForceSoulStarNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_forcesoulstarnum</name>
  		<replaceName>ForceSoulStarNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_forcesoulstarnum</name>
  		<replaceName>ForceSoulStarNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 forcesoulstarnum() const;
  inline void set_forcesoulstarnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_htid();
  inline void clear_has_htid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_starhole();
  inline void clear_has_starhole();
  inline void set_has_surplusskillpointnum();
  inline void clear_has_surplusskillpointnum();
  inline void set_has_goldlv();
  inline void clear_has_goldlv();
  inline void set_has_goldbreaklv();
  inline void clear_has_goldbreaklv();
  inline void set_has_linkedhid();
  inline void clear_has_linkedhid();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_whitegoldlv();
  inline void clear_has_whitegoldlv();
  inline void set_has_whitegoldbreaklv();
  inline void clear_has_whitegoldbreaklv();
  inline void set_has_pluggerhid();
  inline void clear_has_pluggerhid();
  inline void set_has_heropercentage();
  inline void clear_has_heropercentage();
  inline void set_has_godlv();
  inline void clear_has_godlv();
  inline void set_has_warridingtid();
  inline void clear_has_warridingtid();
  inline void set_has_chainsoulhid();
  inline void clear_has_chainsoulhid();
  inline void set_has_chainsoullv();
  inline void clear_has_chainsoullv();
  inline void set_has_purplegoldbiglv();
  inline void clear_has_purplegoldbiglv();
  inline void set_has_purplegoldsoulcost();
  inline void clear_has_purplegoldsoulcost();
  inline void set_has_realbodylv();
  inline void clear_has_realbodylv();
  inline void set_has_forcesoulstarnum();
  inline void clear_has_forcesoulstarnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 htid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem > advanceitemarray_;
  ::google::protobuf::uint32 advance_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroCombination > combinationarray_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroSkill > skillarray_;
  ::google::protobuf::uint32 starhole_;
  ::google::protobuf::uint32 surplusskillpointnum_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > equipitemarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > soulitemarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exclequipitemidarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroFashionExclEquipInfo > fashionexclequiparr_;
  ::google::protobuf::uint32 goldlv_;
  ::google::protobuf::uint32 goldbreaklv_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::uint32 linkedhid_;
  ::google::protobuf::uint32 whitegoldlv_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > silkbagitemarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo > pluginfoarr_;
  ::google::protobuf::uint32 whitegoldbreaklv_;
  ::google::protobuf::uint32 pluggerhid_;
  ::google::protobuf::uint64 heropercentage_;
  ::google::protobuf::uint32 godlv_;
  ::google::protobuf::uint32 warridingtid_;
  ::google::protobuf::uint32 chainsoulhid_;
  ::google::protobuf::uint32 chainsoullv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > purplegoldsmalllv_;
  ::google::protobuf::uint32 purplegoldbiglv_;
  ::google::protobuf::uint32 purplegoldsoulcost_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem > divineequipitemarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > forcesoularr_;
  ::google::protobuf::uint32 realbodylv_;
  ::google::protobuf::uint32 forcesoulstarnum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroGetHeroDataArrayReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroGetHeroDataArrayReq : public ::google::protobuf::Message {
 public:
  THeroGetHeroDataArrayReq();
  virtual ~THeroGetHeroDataArrayReq();

  THeroGetHeroDataArrayReq(const THeroGetHeroDataArrayReq& from);

  inline THeroGetHeroDataArrayReq& operator=(const THeroGetHeroDataArrayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroGetHeroDataArrayReq& default_instance();

  void Swap(THeroGetHeroDataArrayReq* other);

  // implements Message ----------------------------------------------

  THeroGetHeroDataArrayReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroGetHeroDataArrayReq& from);
  void MergeFrom(const THeroGetHeroDataArrayReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.THeroGetHeroDataArrayReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroGetHeroDataArrayReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroGetHeroDataArrayRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroGetHeroDataArrayRsp : public ::google::protobuf::Message {
 public:
  THeroGetHeroDataArrayRsp();
  virtual ~THeroGetHeroDataArrayRsp();

  THeroGetHeroDataArrayRsp(const THeroGetHeroDataArrayRsp& from);

  inline THeroGetHeroDataArrayRsp& operator=(const THeroGetHeroDataArrayRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroGetHeroDataArrayRsp& default_instance();

  void Swap(THeroGetHeroDataArrayRsp* other);

  // implements Message ----------------------------------------------

  THeroGetHeroDataArrayRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroGetHeroDataArrayRsp& from);
  void MergeFrom(const THeroGetHeroDataArrayRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.THeroInfo HeroDataArray = 1;
  inline int herodataarray_size() const;
  inline void clear_herodataarray();
  static const int kHeroDataArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroGetHeroDataArrayRsp</name>
  	<Function>
  		<name>herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>herodataarray_size</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroInfo& herodataarray(int index) const;
  inline ::pb::THeroInfo* mutable_herodataarray(int index);
  inline ::pb::THeroInfo* add_herodataarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >&
      herodataarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >*
      mutable_herodataarray();

  // repeated uint32 HistroyHeroArray = 2;
  inline int histroyheroarray_size() const;
  inline void clear_histroyheroarray();
  static const int kHistroyHeroArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroGetHeroDataArrayRsp</name>
  	<Function>
  		<name>histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>histroyheroarray_size</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 histroyheroarray(int index) const;
  inline void set_histroyheroarray(int index, ::google::protobuf::uint32 value);
  inline void add_histroyheroarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      histroyheroarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_histroyheroarray();

  // optional uint64 UpdateTime = 3;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroGetHeroDataArrayRsp</name>
  	<Function>
  		<name>updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.THeroGetHeroDataArrayRsp)
 private:
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo > herodataarray_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > histroyheroarray_;
  ::google::protobuf::uint64 updatetime_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroGetHeroDataArrayRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUpdateHeroDataNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUpdateHeroDataNotify : public ::google::protobuf::Message {
 public:
  THeroUpdateHeroDataNotify();
  virtual ~THeroUpdateHeroDataNotify();

  THeroUpdateHeroDataNotify(const THeroUpdateHeroDataNotify& from);

  inline THeroUpdateHeroDataNotify& operator=(const THeroUpdateHeroDataNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUpdateHeroDataNotify& default_instance();

  void Swap(THeroUpdateHeroDataNotify* other);

  // implements Message ----------------------------------------------

  THeroUpdateHeroDataNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUpdateHeroDataNotify& from);
  void MergeFrom(const THeroUpdateHeroDataNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.THeroInfo HeroDataArray = 1;
  inline int herodataarray_size() const;
  inline void clear_herodataarray();
  static const int kHeroDataArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUpdateHeroDataNotify</name>
  	<Function>
  		<name>herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herodataarray</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>herodataarray_size</name>
  		<replaceName>HeroDataArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroInfo& herodataarray(int index) const;
  inline ::pb::THeroInfo* mutable_herodataarray(int index);
  inline ::pb::THeroInfo* add_herodataarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >&
      herodataarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >*
      mutable_herodataarray();

  // repeated uint32 HistroyHeroArray = 2;
  inline int histroyheroarray_size() const;
  inline void clear_histroyheroarray();
  static const int kHistroyHeroArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroUpdateHeroDataNotify</name>
  	<Function>
  		<name>histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_histroyheroarray</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>histroyheroarray_size</name>
  		<replaceName>HistroyHeroArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 histroyheroarray(int index) const;
  inline void set_histroyheroarray(int index, ::google::protobuf::uint32 value);
  inline void add_histroyheroarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      histroyheroarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_histroyheroarray();

  // optional uint64 UpdateTime = 3;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroUpdateHeroDataNotify</name>
  	<Function>
  		<name>updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_updatetime</name>
  		<replaceName>UpdateTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.THeroUpdateHeroDataNotify)
 private:
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo > herodataarray_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > histroyheroarray_;
  ::google::protobuf::uint64 updatetime_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUpdateHeroDataNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroLevelUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroLevelUpReq : public ::google::protobuf::Message {
 public:
  THeroLevelUpReq();
  virtual ~THeroLevelUpReq();

  THeroLevelUpReq(const THeroLevelUpReq& from);

  inline THeroLevelUpReq& operator=(const THeroLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroLevelUpReq& default_instance();

  void Swap(THeroLevelUpReq* other);

  // implements Message ----------------------------------------------

  THeroLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroLevelUpReq& from);
  void MergeFrom(const THeroLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroLevelUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem LevelUpItemArray = 2;
  inline int levelupitemarray_size() const;
  inline void clear_levelupitemarray();
  static const int kLevelUpItemArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroLevelUpReq</name>
  	<Function>
  		<name>levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_levelupitemarray</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>levelupitemarray_size</name>
  		<replaceName>LevelUpItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& levelupitemarray(int index) const;
  inline ::pb::TSimpleItem* mutable_levelupitemarray(int index);
  inline ::pb::TSimpleItem* add_levelupitemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      levelupitemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_levelupitemarray();

  // @@protoc_insertion_point(class_scope:pb.THeroLevelUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > levelupitemarray_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroStarActivateReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroStarActivateReq : public ::google::protobuf::Message {
 public:
  THeroStarActivateReq();
  virtual ~THeroStarActivateReq();

  THeroStarActivateReq(const THeroStarActivateReq& from);

  inline THeroStarActivateReq& operator=(const THeroStarActivateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroStarActivateReq& default_instance();

  void Swap(THeroStarActivateReq* other);

  // implements Message ----------------------------------------------

  THeroStarActivateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroStarActivateReq& from);
  void MergeFrom(const THeroStarActivateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroStarActivateReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 TargetHoleIndex = 2;
  inline bool has_targetholeindex() const;
  inline void clear_targetholeindex();
  static const int kTargetHoleIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroStarActivateReq</name>
  	<Function>
  		<name>targetholeindex</name>
  		<replaceName>TargetHoleIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_targetholeindex</name>
  		<replaceName>TargetHoleIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_targetholeindex</name>
  		<replaceName>TargetHoleIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 targetholeindex() const;
  inline void set_targetholeindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroStarActivateReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_targetholeindex();
  inline void clear_has_targetholeindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 targetholeindex_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroStarActivateReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroStarUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroStarUpReq : public ::google::protobuf::Message {
 public:
  THeroStarUpReq();
  virtual ~THeroStarUpReq();

  THeroStarUpReq(const THeroStarUpReq& from);

  inline THeroStarUpReq& operator=(const THeroStarUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroStarUpReq& default_instance();

  void Swap(THeroStarUpReq* other);

  // implements Message ----------------------------------------------

  THeroStarUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroStarUpReq& from);
  void MergeFrom(const THeroStarUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroStarUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroStarUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroStarUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroEquipAdvanceItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroEquipAdvanceItemReq : public ::google::protobuf::Message {
 public:
  THeroEquipAdvanceItemReq();
  virtual ~THeroEquipAdvanceItemReq();

  THeroEquipAdvanceItemReq(const THeroEquipAdvanceItemReq& from);

  inline THeroEquipAdvanceItemReq& operator=(const THeroEquipAdvanceItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroEquipAdvanceItemReq& default_instance();

  void Swap(THeroEquipAdvanceItemReq* other);

  // implements Message ----------------------------------------------

  THeroEquipAdvanceItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroEquipAdvanceItemReq& from);
  void MergeFrom(const THeroEquipAdvanceItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroEquipAdvanceItemReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 2;
  inline int advanceitemarray_size() const;
  inline void clear_advanceitemarray();
  static const int kAdvanceItemArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroEquipAdvanceItemReq</name>
  	<Function>
  		<name>advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_advanceitemarray</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>advanceitemarray_size</name>
  		<replaceName>AdvanceItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroAdvanceItem& advanceitemarray(int index) const;
  inline ::pb::THeroAdvanceItem* mutable_advanceitemarray(int index);
  inline ::pb::THeroAdvanceItem* add_advanceitemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >&
      advanceitemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >*
      mutable_advanceitemarray();

  // @@protoc_insertion_point(class_scope:pb.THeroEquipAdvanceItemReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem > advanceitemarray_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroEquipAdvanceItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroAdvanceReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroAdvanceReq : public ::google::protobuf::Message {
 public:
  THeroAdvanceReq();
  virtual ~THeroAdvanceReq();

  THeroAdvanceReq(const THeroAdvanceReq& from);

  inline THeroAdvanceReq& operator=(const THeroAdvanceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroAdvanceReq& default_instance();

  void Swap(THeroAdvanceReq* other);

  // implements Message ----------------------------------------------

  THeroAdvanceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroAdvanceReq& from);
  void MergeFrom(const THeroAdvanceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroAdvanceReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroAdvanceReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroAdvanceReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroRecruitHeroReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroRecruitHeroReq : public ::google::protobuf::Message {
 public:
  THeroRecruitHeroReq();
  virtual ~THeroRecruitHeroReq();

  THeroRecruitHeroReq(const THeroRecruitHeroReq& from);

  inline THeroRecruitHeroReq& operator=(const THeroRecruitHeroReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroRecruitHeroReq& default_instance();

  void Swap(THeroRecruitHeroReq* other);

  // implements Message ----------------------------------------------

  THeroRecruitHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroRecruitHeroReq& from);
  void MergeFrom(const THeroRecruitHeroReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroRecruitHeroReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroRecruitHeroReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroRecruitHeroReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroCombinationUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroCombinationUpReq : public ::google::protobuf::Message {
 public:
  THeroCombinationUpReq();
  virtual ~THeroCombinationUpReq();

  THeroCombinationUpReq(const THeroCombinationUpReq& from);

  inline THeroCombinationUpReq& operator=(const THeroCombinationUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroCombinationUpReq& default_instance();

  void Swap(THeroCombinationUpReq* other);

  // implements Message ----------------------------------------------

  THeroCombinationUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroCombinationUpReq& from);
  void MergeFrom(const THeroCombinationUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroCombinationUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Tid = 2;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroCombinationUpReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroCombinationUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroCombinationUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroCombinationActiveReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroCombinationActiveReq : public ::google::protobuf::Message {
 public:
  THeroCombinationActiveReq();
  virtual ~THeroCombinationActiveReq();

  THeroCombinationActiveReq(const THeroCombinationActiveReq& from);

  inline THeroCombinationActiveReq& operator=(const THeroCombinationActiveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroCombinationActiveReq& default_instance();

  void Swap(THeroCombinationActiveReq* other);

  // implements Message ----------------------------------------------

  THeroCombinationActiveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroCombinationActiveReq& from);
  void MergeFrom(const THeroCombinationActiveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroCombinationActiveReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Tid = 2;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroCombinationActiveReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroCombinationActiveReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroCombinationActiveReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSkillUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSkillUpReq : public ::google::protobuf::Message {
 public:
  THeroSkillUpReq();
  virtual ~THeroSkillUpReq();

  THeroSkillUpReq(const THeroSkillUpReq& from);

  inline THeroSkillUpReq& operator=(const THeroSkillUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSkillUpReq& default_instance();

  void Swap(THeroSkillUpReq* other);

  // implements Message ----------------------------------------------

  THeroSkillUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSkillUpReq& from);
  void MergeFrom(const THeroSkillUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSkillUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Tid = 2;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSkillUpReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 UpNum = 3;
  inline bool has_upnum() const;
  inline void clear_upnum();
  static const int kUpNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroSkillUpReq</name>
  	<Function>
  		<name>upnum</name>
  		<replaceName>UpNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_upnum</name>
  		<replaceName>UpNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_upnum</name>
  		<replaceName>UpNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 upnum() const;
  inline void set_upnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroSkillUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_upnum();
  inline void clear_has_upnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 upnum_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSkillUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroResetSkillReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroResetSkillReq : public ::google::protobuf::Message {
 public:
  THeroResetSkillReq();
  virtual ~THeroResetSkillReq();

  THeroResetSkillReq(const THeroResetSkillReq& from);

  inline THeroResetSkillReq& operator=(const THeroResetSkillReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroResetSkillReq& default_instance();

  void Swap(THeroResetSkillReq* other);

  // implements Message ----------------------------------------------

  THeroResetSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroResetSkillReq& from);
  void MergeFrom(const THeroResetSkillReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroResetSkillReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroResetSkillReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroResetSkillReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetMultiEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetMultiEquipReq : public ::google::protobuf::Message {
 public:
  THeroSetMultiEquipReq();
  virtual ~THeroSetMultiEquipReq();

  THeroSetMultiEquipReq(const THeroSetMultiEquipReq& from);

  inline THeroSetMultiEquipReq& operator=(const THeroSetMultiEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetMultiEquipReq& default_instance();

  void Swap(THeroSetMultiEquipReq* other);

  // implements Message ----------------------------------------------

  THeroSetMultiEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetMultiEquipReq& from);
  void MergeFrom(const THeroSetMultiEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiEquipReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.THeroEquipItem EquipItems = 2;
  inline int equipitems_size() const;
  inline void clear_equipitems();
  static const int kEquipItemsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiEquipReq</name>
  	<Function>
  		<name>equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>equipitems_size</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& equipitems(int index) const;
  inline ::pb::THeroEquipItem* mutable_equipitems(int index);
  inline ::pb::THeroEquipItem* add_equipitems();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      equipitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_equipitems();

  // @@protoc_insertion_point(class_scope:pb.THeroSetMultiEquipReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > equipitems_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetMultiEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetMultiSoulReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetMultiSoulReq : public ::google::protobuf::Message {
 public:
  THeroSetMultiSoulReq();
  virtual ~THeroSetMultiSoulReq();

  THeroSetMultiSoulReq(const THeroSetMultiSoulReq& from);

  inline THeroSetMultiSoulReq& operator=(const THeroSetMultiSoulReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetMultiSoulReq& default_instance();

  void Swap(THeroSetMultiSoulReq* other);

  // implements Message ----------------------------------------------

  THeroSetMultiSoulReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetMultiSoulReq& from);
  void MergeFrom(const THeroSetMultiSoulReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiSoulReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.THeroEquipItem SoulItems = 2;
  inline int soulitems_size() const;
  inline void clear_soulitems();
  static const int kSoulItemsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiSoulReq</name>
  	<Function>
  		<name>soulitems</name>
  		<replaceName>SoulItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_soulitems</name>
  		<replaceName>SoulItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_soulitems</name>
  		<replaceName>SoulItems</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_soulitems</name>
  		<replaceName>SoulItems</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>soulitems_size</name>
  		<replaceName>SoulItems</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& soulitems(int index) const;
  inline ::pb::THeroEquipItem* mutable_soulitems(int index);
  inline ::pb::THeroEquipItem* add_soulitems();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      soulitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_soulitems();

  // @@protoc_insertion_point(class_scope:pb.THeroSetMultiSoulReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > soulitems_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetMultiSoulReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetWarRidingReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetWarRidingReq : public ::google::protobuf::Message {
 public:
  THeroSetWarRidingReq();
  virtual ~THeroSetWarRidingReq();

  THeroSetWarRidingReq(const THeroSetWarRidingReq& from);

  inline THeroSetWarRidingReq& operator=(const THeroSetWarRidingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetWarRidingReq& default_instance();

  void Swap(THeroSetWarRidingReq* other);

  // implements Message ----------------------------------------------

  THeroSetWarRidingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetWarRidingReq& from);
  void MergeFrom(const THeroSetWarRidingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetWarRidingReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 WarRidingTid = 2;
  inline bool has_warridingtid() const;
  inline void clear_warridingtid();
  static const int kWarRidingTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSetWarRidingReq</name>
  	<Function>
  		<name>warridingtid</name>
  		<replaceName>WarRidingTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warridingtid</name>
  		<replaceName>WarRidingTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warridingtid</name>
  		<replaceName>WarRidingTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warridingtid() const;
  inline void set_warridingtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroSetWarRidingReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_warridingtid();
  inline void clear_has_warridingtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 warridingtid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetWarRidingReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetMultiExclEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetMultiExclEquipReq : public ::google::protobuf::Message {
 public:
  THeroSetMultiExclEquipReq();
  virtual ~THeroSetMultiExclEquipReq();

  THeroSetMultiExclEquipReq(const THeroSetMultiExclEquipReq& from);

  inline THeroSetMultiExclEquipReq& operator=(const THeroSetMultiExclEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetMultiExclEquipReq& default_instance();

  void Swap(THeroSetMultiExclEquipReq* other);

  // implements Message ----------------------------------------------

  THeroSetMultiExclEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetMultiExclEquipReq& from);
  void MergeFrom(const THeroSetMultiExclEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiExclEquipReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroSetMultiExclEquipReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetMultiExclEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetMultiExclEquipRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetMultiExclEquipRsp : public ::google::protobuf::Message {
 public:
  THeroSetMultiExclEquipRsp();
  virtual ~THeroSetMultiExclEquipRsp();

  THeroSetMultiExclEquipRsp(const THeroSetMultiExclEquipRsp& from);

  inline THeroSetMultiExclEquipRsp& operator=(const THeroSetMultiExclEquipRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetMultiExclEquipRsp& default_instance();

  void Swap(THeroSetMultiExclEquipRsp* other);

  // implements Message ----------------------------------------------

  THeroSetMultiExclEquipRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetMultiExclEquipRsp& from);
  void MergeFrom(const THeroSetMultiExclEquipRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiExclEquipRsp</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroSetMultiExclEquipRsp)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetMultiExclEquipRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetMultiSilkBagReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetMultiSilkBagReq : public ::google::protobuf::Message {
 public:
  THeroSetMultiSilkBagReq();
  virtual ~THeroSetMultiSilkBagReq();

  THeroSetMultiSilkBagReq(const THeroSetMultiSilkBagReq& from);

  inline THeroSetMultiSilkBagReq& operator=(const THeroSetMultiSilkBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetMultiSilkBagReq& default_instance();

  void Swap(THeroSetMultiSilkBagReq* other);

  // implements Message ----------------------------------------------

  THeroSetMultiSilkBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetMultiSilkBagReq& from);
  void MergeFrom(const THeroSetMultiSilkBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiSilkBagReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.THeroEquipItem SilkBagItems = 2;
  inline int silkbagitems_size() const;
  inline void clear_silkbagitems();
  static const int kSilkBagItemsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiSilkBagReq</name>
  	<Function>
  		<name>silkbagitems</name>
  		<replaceName>SilkBagItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_silkbagitems</name>
  		<replaceName>SilkBagItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_silkbagitems</name>
  		<replaceName>SilkBagItems</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_silkbagitems</name>
  		<replaceName>SilkBagItems</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>silkbagitems_size</name>
  		<replaceName>SilkBagItems</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroEquipItem& silkbagitems(int index) const;
  inline ::pb::THeroEquipItem* mutable_silkbagitems(int index);
  inline ::pb::THeroEquipItem* add_silkbagitems();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
      silkbagitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
      mutable_silkbagitems();

  // @@protoc_insertion_point(class_scope:pb.THeroSetMultiSilkBagReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem > silkbagitems_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetMultiSilkBagReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetDivineEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetDivineEquipReq : public ::google::protobuf::Message {
 public:
  THeroSetDivineEquipReq();
  virtual ~THeroSetDivineEquipReq();

  THeroSetDivineEquipReq(const THeroSetDivineEquipReq& from);

  inline THeroSetDivineEquipReq& operator=(const THeroSetDivineEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetDivineEquipReq& default_instance();

  void Swap(THeroSetDivineEquipReq* other);

  // implements Message ----------------------------------------------

  THeroSetDivineEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetDivineEquipReq& from);
  void MergeFrom(const THeroSetDivineEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetDivineEquipReq</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSetDivineEquipReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 ItemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroSetDivineEquipReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroSetDivineEquipReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 itemid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetDivineEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUpgradeToGoldReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUpgradeToGoldReq : public ::google::protobuf::Message {
 public:
  THeroUpgradeToGoldReq();
  virtual ~THeroUpgradeToGoldReq();

  THeroUpgradeToGoldReq(const THeroUpgradeToGoldReq& from);

  inline THeroUpgradeToGoldReq& operator=(const THeroUpgradeToGoldReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUpgradeToGoldReq& default_instance();

  void Swap(THeroUpgradeToGoldReq* other);

  // implements Message ----------------------------------------------

  THeroUpgradeToGoldReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUpgradeToGoldReq& from);
  void MergeFrom(const THeroUpgradeToGoldReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToGoldReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem CosItemArray = 2;
  inline int cositemarray_size() const;
  inline void clear_cositemarray();
  static const int kCosItemArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToGoldReq</name>
  	<Function>
  		<name>cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>cositemarray_size</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& cositemarray(int index) const;
  inline ::pb::TSimpleItem* mutable_cositemarray(int index);
  inline ::pb::TSimpleItem* add_cositemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      cositemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_cositemarray();

  // @@protoc_insertion_point(class_scope:pb.THeroUpgradeToGoldReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > cositemarray_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUpgradeToGoldReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUniversalFragConvertReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUniversalFragConvertReq : public ::google::protobuf::Message {
 public:
  THeroUniversalFragConvertReq();
  virtual ~THeroUniversalFragConvertReq();

  THeroUniversalFragConvertReq(const THeroUniversalFragConvertReq& from);

  inline THeroUniversalFragConvertReq& operator=(const THeroUniversalFragConvertReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUniversalFragConvertReq& default_instance();

  void Swap(THeroUniversalFragConvertReq* other);

  // implements Message ----------------------------------------------

  THeroUniversalFragConvertReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUniversalFragConvertReq& from);
  void MergeFrom(const THeroUniversalFragConvertReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemTid = 1;
  inline bool has_itemtid() const;
  inline void clear_itemtid();
  static const int kItemTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUniversalFragConvertReq</name>
  	<Function>
  		<name>itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemtid() const;
  inline void set_itemtid(::google::protobuf::uint32 value);

  // optional uint32 Htid = 2;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroUniversalFragConvertReq</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // optional uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroUniversalFragConvertReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroUniversalFragConvertReq)
 private:
  inline void set_has_itemtid();
  inline void clear_has_itemtid();
  inline void set_has_htid();
  inline void clear_has_htid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemtid_;
  ::google::protobuf::uint32 htid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUniversalFragConvertReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroGoldBreakReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroGoldBreakReq : public ::google::protobuf::Message {
 public:
  THeroGoldBreakReq();
  virtual ~THeroGoldBreakReq();

  THeroGoldBreakReq(const THeroGoldBreakReq& from);

  inline THeroGoldBreakReq& operator=(const THeroGoldBreakReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroGoldBreakReq& default_instance();

  void Swap(THeroGoldBreakReq* other);

  // implements Message ----------------------------------------------

  THeroGoldBreakReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroGoldBreakReq& from);
  void MergeFrom(const THeroGoldBreakReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroGoldBreakReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroGoldBreakReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroGoldBreakReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroWhiteGoldBreakReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroWhiteGoldBreakReq : public ::google::protobuf::Message {
 public:
  THeroWhiteGoldBreakReq();
  virtual ~THeroWhiteGoldBreakReq();

  THeroWhiteGoldBreakReq(const THeroWhiteGoldBreakReq& from);

  inline THeroWhiteGoldBreakReq& operator=(const THeroWhiteGoldBreakReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroWhiteGoldBreakReq& default_instance();

  void Swap(THeroWhiteGoldBreakReq* other);

  // implements Message ----------------------------------------------

  THeroWhiteGoldBreakReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroWhiteGoldBreakReq& from);
  void MergeFrom(const THeroWhiteGoldBreakReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroWhiteGoldBreakReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroWhiteGoldBreakReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroWhiteGoldBreakReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroGoldHeroLinkReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroGoldHeroLinkReq : public ::google::protobuf::Message {
 public:
  THeroGoldHeroLinkReq();
  virtual ~THeroGoldHeroLinkReq();

  THeroGoldHeroLinkReq(const THeroGoldHeroLinkReq& from);

  inline THeroGoldHeroLinkReq& operator=(const THeroGoldHeroLinkReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroGoldHeroLinkReq& default_instance();

  void Swap(THeroGoldHeroLinkReq* other);

  // implements Message ----------------------------------------------

  THeroGoldHeroLinkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroGoldHeroLinkReq& from);
  void MergeFrom(const THeroGoldHeroLinkReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid1 = 1;
  inline bool has_hid1() const;
  inline void clear_hid1();
  static const int kHid1FieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroGoldHeroLinkReq</name>
  	<Function>
  		<name>hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid1() const;
  inline void set_hid1(::google::protobuf::uint32 value);

  // optional uint32 Hid2 = 2;
  inline bool has_hid2() const;
  inline void clear_hid2();
  static const int kHid2FieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroGoldHeroLinkReq</name>
  	<Function>
  		<name>hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid2() const;
  inline void set_hid2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroGoldHeroLinkReq)
 private:
  inline void set_has_hid1();
  inline void clear_has_hid1();
  inline void set_has_hid2();
  inline void clear_has_hid2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid1_;
  ::google::protobuf::uint32 hid2_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroGoldHeroLinkReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUpgradeToWhiteGoldReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUpgradeToWhiteGoldReq : public ::google::protobuf::Message {
 public:
  THeroUpgradeToWhiteGoldReq();
  virtual ~THeroUpgradeToWhiteGoldReq();

  THeroUpgradeToWhiteGoldReq(const THeroUpgradeToWhiteGoldReq& from);

  inline THeroUpgradeToWhiteGoldReq& operator=(const THeroUpgradeToWhiteGoldReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUpgradeToWhiteGoldReq& default_instance();

  void Swap(THeroUpgradeToWhiteGoldReq* other);

  // implements Message ----------------------------------------------

  THeroUpgradeToWhiteGoldReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUpgradeToWhiteGoldReq& from);
  void MergeFrom(const THeroUpgradeToWhiteGoldReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToWhiteGoldReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem CosItemArray = 2;
  inline int cositemarray_size() const;
  inline void clear_cositemarray();
  static const int kCosItemArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToWhiteGoldReq</name>
  	<Function>
  		<name>cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>cositemarray_size</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& cositemarray(int index) const;
  inline ::pb::TSimpleItem* mutable_cositemarray(int index);
  inline ::pb::TSimpleItem* add_cositemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      cositemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_cositemarray();

  // @@protoc_insertion_point(class_scope:pb.THeroUpgradeToWhiteGoldReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > cositemarray_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUpgradeToWhiteGoldReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroGetPropReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroGetPropReq : public ::google::protobuf::Message {
 public:
  THeroGetPropReq();
  virtual ~THeroGetPropReq();

  THeroGetPropReq(const THeroGetPropReq& from);

  inline THeroGetPropReq& operator=(const THeroGetPropReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroGetPropReq& default_instance();

  void Swap(THeroGetPropReq* other);

  // implements Message ----------------------------------------------

  THeroGetPropReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroGetPropReq& from);
  void MergeFrom(const THeroGetPropReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroGetPropReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Htid = 2;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroGetPropReq</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // optional uint64 Uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroGetPropReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.THeroGetPropReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_htid();
  inline void clear_has_htid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 htid_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroGetPropReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroGetPropResp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroGetPropResp : public ::google::protobuf::Message {
 public:
  THeroGetPropResp();
  virtual ~THeroGetPropResp();

  THeroGetPropResp(const THeroGetPropResp& from);

  inline THeroGetPropResp& operator=(const THeroGetPropResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroGetPropResp& default_instance();

  void Swap(THeroGetPropResp* other);

  // implements Message ----------------------------------------------

  THeroGetPropResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroGetPropResp& from);
  void MergeFrom(const THeroGetPropResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUnitInfo PropInfo = 1;
  inline bool has_propinfo() const;
  inline void clear_propinfo();
  static const int kPropInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroGetPropResp</name>
  	<Function>
  		<name>propinfo</name>
  		<replaceName>PropInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_propinfo</name>
  		<replaceName>PropInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_propinfo</name>
  		<replaceName>PropInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_propinfo</name>
  		<replaceName>PropInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUnitInfo& propinfo() const;
  inline ::pb::TUnitInfo* mutable_propinfo();
  inline ::pb::TUnitInfo* release_propinfo();
  inline void set_allocated_propinfo(::pb::TUnitInfo* propinfo);

  // @@protoc_insertion_point(class_scope:pb.THeroGetPropResp)
 private:
  inline void set_has_propinfo();
  inline void clear_has_propinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUnitInfo* propinfo_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroGetPropResp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOtherUserHeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOtherUserHeroInfo : public ::google::protobuf::Message {
 public:
  TOtherUserHeroInfo();
  virtual ~TOtherUserHeroInfo();

  TOtherUserHeroInfo(const TOtherUserHeroInfo& from);

  inline TOtherUserHeroInfo& operator=(const TOtherUserHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOtherUserHeroInfo& default_instance();

  void Swap(TOtherUserHeroInfo* other);

  // implements Message ----------------------------------------------

  TOtherUserHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOtherUserHeroInfo& from);
  void MergeFrom(const TOtherUserHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.THeroInfo HeroInfo = 1;
  inline bool has_heroinfo() const;
  inline void clear_heroinfo();
  static const int kHeroInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOtherUserHeroInfo</name>
  	<Function>
  		<name>heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfo</name>
  		<replaceName>HeroInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroInfo& heroinfo() const;
  inline ::pb::THeroInfo* mutable_heroinfo();
  inline ::pb::THeroInfo* release_heroinfo();
  inline void set_allocated_heroinfo(::pb::THeroInfo* heroinfo);

  // repeated .pb.TAttribute AttrArr = 2;
  inline int attrarr_size() const;
  inline void clear_attrarr();
  static const int kAttrArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOtherUserHeroInfo</name>
  	<Function>
  		<name>attrarr</name>
  		<replaceName>AttrArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_attrarr</name>
  		<replaceName>AttrArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_attrarr</name>
  		<replaceName>AttrArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_attrarr</name>
  		<replaceName>AttrArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>attrarr_size</name>
  		<replaceName>AttrArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAttribute& attrarr(int index) const;
  inline ::pb::TAttribute* mutable_attrarr(int index);
  inline ::pb::TAttribute* add_attrarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttribute >&
      attrarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAttribute >*
      mutable_attrarr();

  // optional .pb.EPlugOpenType OpenType = 6;
  inline bool has_opentype() const;
  inline void clear_opentype();
  static const int kOpenTypeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TOtherUserHeroInfo</name>
  	<Function>
  		<name>opentype</name>
  		<replaceName>OpenType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_opentype</name>
  		<replaceName>OpenType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_opentype</name>
  		<replaceName>OpenType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EPlugOpenType opentype() const;
  inline void set_opentype(::pb::EPlugOpenType value);

  // @@protoc_insertion_point(class_scope:pb.TOtherUserHeroInfo)
 private:
  inline void set_has_heroinfo();
  inline void clear_has_heroinfo();
  inline void set_has_opentype();
  inline void clear_has_opentype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::THeroInfo* heroinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAttribute > attrarr_;
  int opentype_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TOtherUserHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSetPlugInHeroReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSetPlugInHeroReq : public ::google::protobuf::Message {
 public:
  TSetPlugInHeroReq();
  virtual ~TSetPlugInHeroReq();

  TSetPlugInHeroReq(const TSetPlugInHeroReq& from);

  inline TSetPlugInHeroReq& operator=(const TSetPlugInHeroReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSetPlugInHeroReq& default_instance();

  void Swap(TSetPlugInHeroReq* other);

  // implements Message ----------------------------------------------

  TSetPlugInHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSetPlugInHeroReq& from);
  void MergeFrom(const TSetPlugInHeroReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSetPlugInHeroReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 PlugInHid = 2;
  inline bool has_pluginhid() const;
  inline void clear_pluginhid();
  static const int kPlugInHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSetPlugInHeroReq</name>
  	<Function>
  		<name>pluginhid</name>
  		<replaceName>PlugInHid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pluginhid</name>
  		<replaceName>PlugInHid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pluginhid</name>
  		<replaceName>PlugInHid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pluginhid() const;
  inline void set_pluginhid(::google::protobuf::uint32 value);

  // optional uint32 Pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSetPlugInHeroReq</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSetPlugInHeroReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_pluginhid();
  inline void clear_has_pluginhid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 pluginhid_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TSetPlugInHeroReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TPlugLevelUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPlugLevelUpReq : public ::google::protobuf::Message {
 public:
  TPlugLevelUpReq();
  virtual ~TPlugLevelUpReq();

  TPlugLevelUpReq(const TPlugLevelUpReq& from);

  inline TPlugLevelUpReq& operator=(const TPlugLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPlugLevelUpReq& default_instance();

  void Swap(TPlugLevelUpReq* other);

  // implements Message ----------------------------------------------

  TPlugLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPlugLevelUpReq& from);
  void MergeFrom(const TPlugLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPlugLevelUpReq</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPlugLevelUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPlugLevelUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TPlugLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TResetPlugReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TResetPlugReq : public ::google::protobuf::Message {
 public:
  TResetPlugReq();
  virtual ~TResetPlugReq();

  TResetPlugReq(const TResetPlugReq& from);

  inline TResetPlugReq& operator=(const TResetPlugReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TResetPlugReq& default_instance();

  void Swap(TResetPlugReq* other);

  // implements Message ----------------------------------------------

  TResetPlugReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TResetPlugReq& from);
  void MergeFrom(const TResetPlugReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TResetPlugReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TResetPlugReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TResetPlugReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TResetPlugRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TResetPlugRsp : public ::google::protobuf::Message {
 public:
  TResetPlugRsp();
  virtual ~TResetPlugRsp();

  TResetPlugRsp(const TResetPlugRsp& from);

  inline TResetPlugRsp& operator=(const TResetPlugRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TResetPlugRsp& default_instance();

  void Swap(TResetPlugRsp* other);

  // implements Message ----------------------------------------------

  TResetPlugRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TResetPlugRsp& from);
  void MergeFrom(const TResetPlugRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TResetPlugRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TResetPlugRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TResetPlugRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUpgradeGodLv</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUpgradeGodLv : public ::google::protobuf::Message {
 public:
  THeroUpgradeGodLv();
  virtual ~THeroUpgradeGodLv();

  THeroUpgradeGodLv(const THeroUpgradeGodLv& from);

  inline THeroUpgradeGodLv& operator=(const THeroUpgradeGodLv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUpgradeGodLv& default_instance();

  void Swap(THeroUpgradeGodLv* other);

  // implements Message ----------------------------------------------

  THeroUpgradeGodLv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUpgradeGodLv& from);
  void MergeFrom(const THeroUpgradeGodLv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeGodLv</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroUpgradeGodLv)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUpgradeGodLv* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroChainSoulReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroChainSoulReq : public ::google::protobuf::Message {
 public:
  THeroChainSoulReq();
  virtual ~THeroChainSoulReq();

  THeroChainSoulReq(const THeroChainSoulReq& from);

  inline THeroChainSoulReq& operator=(const THeroChainSoulReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroChainSoulReq& default_instance();

  void Swap(THeroChainSoulReq* other);

  // implements Message ----------------------------------------------

  THeroChainSoulReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroChainSoulReq& from);
  void MergeFrom(const THeroChainSoulReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid1 = 1;
  inline bool has_hid1() const;
  inline void clear_hid1();
  static const int kHid1FieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroChainSoulReq</name>
  	<Function>
  		<name>hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid1</name>
  		<replaceName>Hid1</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid1() const;
  inline void set_hid1(::google::protobuf::uint32 value);

  // optional uint32 Hid2 = 2;
  inline bool has_hid2() const;
  inline void clear_hid2();
  static const int kHid2FieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroChainSoulReq</name>
  	<Function>
  		<name>hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid2</name>
  		<replaceName>Hid2</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid2() const;
  inline void set_hid2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroChainSoulReq)
 private:
  inline void set_has_hid1();
  inline void clear_has_hid1();
  inline void set_has_hid2();
  inline void clear_has_hid2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid1_;
  ::google::protobuf::uint32 hid2_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroChainSoulReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroChainSoulLvUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroChainSoulLvUpReq : public ::google::protobuf::Message {
 public:
  THeroChainSoulLvUpReq();
  virtual ~THeroChainSoulLvUpReq();

  THeroChainSoulLvUpReq(const THeroChainSoulLvUpReq& from);

  inline THeroChainSoulLvUpReq& operator=(const THeroChainSoulLvUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroChainSoulLvUpReq& default_instance();

  void Swap(THeroChainSoulLvUpReq* other);

  // implements Message ----------------------------------------------

  THeroChainSoulLvUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroChainSoulLvUpReq& from);
  void MergeFrom(const THeroChainSoulLvUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroChainSoulLvUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroChainSoulLvUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroChainSoulLvUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUpgradeToPurpleGoldLvUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUpgradeToPurpleGoldLvUpReq : public ::google::protobuf::Message {
 public:
  THeroUpgradeToPurpleGoldLvUpReq();
  virtual ~THeroUpgradeToPurpleGoldLvUpReq();

  THeroUpgradeToPurpleGoldLvUpReq(const THeroUpgradeToPurpleGoldLvUpReq& from);

  inline THeroUpgradeToPurpleGoldLvUpReq& operator=(const THeroUpgradeToPurpleGoldLvUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUpgradeToPurpleGoldLvUpReq& default_instance();

  void Swap(THeroUpgradeToPurpleGoldLvUpReq* other);

  // implements Message ----------------------------------------------

  THeroUpgradeToPurpleGoldLvUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUpgradeToPurpleGoldLvUpReq& from);
  void MergeFrom(const THeroUpgradeToPurpleGoldLvUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToPurpleGoldLvUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 LvId = 2;
  inline bool has_lvid() const;
  inline void clear_lvid();
  static const int kLvIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToPurpleGoldLvUpReq</name>
  	<Function>
  		<name>lvid</name>
  		<replaceName>LvId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lvid</name>
  		<replaceName>LvId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lvid</name>
  		<replaceName>LvId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 lvid() const;
  inline void set_lvid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem CosItemArray = 3;
  inline int cositemarray_size() const;
  inline void clear_cositemarray();
  static const int kCosItemArrayFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToPurpleGoldLvUpReq</name>
  	<Function>
  		<name>cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>cositemarray_size</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& cositemarray(int index) const;
  inline ::pb::TSimpleItem* mutable_cositemarray(int index);
  inline ::pb::TSimpleItem* add_cositemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      cositemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_cositemarray();

  // @@protoc_insertion_point(class_scope:pb.THeroUpgradeToPurpleGoldLvUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_lvid();
  inline void clear_has_lvid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 lvid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > cositemarray_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUpgradeToPurpleGoldLvUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroUpgradeToPurpleGoldAdvUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroUpgradeToPurpleGoldAdvUpReq : public ::google::protobuf::Message {
 public:
  THeroUpgradeToPurpleGoldAdvUpReq();
  virtual ~THeroUpgradeToPurpleGoldAdvUpReq();

  THeroUpgradeToPurpleGoldAdvUpReq(const THeroUpgradeToPurpleGoldAdvUpReq& from);

  inline THeroUpgradeToPurpleGoldAdvUpReq& operator=(const THeroUpgradeToPurpleGoldAdvUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroUpgradeToPurpleGoldAdvUpReq& default_instance();

  void Swap(THeroUpgradeToPurpleGoldAdvUpReq* other);

  // implements Message ----------------------------------------------

  THeroUpgradeToPurpleGoldAdvUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroUpgradeToPurpleGoldAdvUpReq& from);
  void MergeFrom(const THeroUpgradeToPurpleGoldAdvUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroUpgradeToPurpleGoldAdvUpReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroUpgradeToPurpleGoldAdvUpReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroUpgradeToPurpleGoldAdvUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TForceSoulEquipInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TForceSoulEquipInfo : public ::google::protobuf::Message {
 public:
  TForceSoulEquipInfo();
  virtual ~TForceSoulEquipInfo();

  TForceSoulEquipInfo(const TForceSoulEquipInfo& from);

  inline TForceSoulEquipInfo& operator=(const TForceSoulEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TForceSoulEquipInfo& default_instance();

  void Swap(TForceSoulEquipInfo* other);

  // implements Message ----------------------------------------------

  TForceSoulEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TForceSoulEquipInfo& from);
  void MergeFrom(const TForceSoulEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TForceSoulEquipInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional int32 ItemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TForceSoulEquipInfo</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TForceSoulEquipInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::int32 itemid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static TForceSoulEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroSetMultiForceSoulReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroSetMultiForceSoulReq : public ::google::protobuf::Message {
 public:
  THeroSetMultiForceSoulReq();
  virtual ~THeroSetMultiForceSoulReq();

  THeroSetMultiForceSoulReq(const THeroSetMultiForceSoulReq& from);

  inline THeroSetMultiForceSoulReq& operator=(const THeroSetMultiForceSoulReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroSetMultiForceSoulReq& default_instance();

  void Swap(THeroSetMultiForceSoulReq* other);

  // implements Message ----------------------------------------------

  THeroSetMultiForceSoulReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroSetMultiForceSoulReq& from);
  void MergeFrom(const THeroSetMultiForceSoulReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiForceSoulReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TForceSoulEquipInfo EquipItems = 2;
  inline int equipitems_size() const;
  inline void clear_equipitems();
  static const int kEquipItemsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroSetMultiForceSoulReq</name>
  	<Function>
  		<name>equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipitems</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>equipitems_size</name>
  		<replaceName>EquipItems</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TForceSoulEquipInfo& equipitems(int index) const;
  inline ::pb::TForceSoulEquipInfo* mutable_equipitems(int index);
  inline ::pb::TForceSoulEquipInfo* add_equipitems();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TForceSoulEquipInfo >&
      equipitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TForceSoulEquipInfo >*
      mutable_equipitems();

  // @@protoc_insertion_point(class_scope:pb.THeroSetMultiForceSoulReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TForceSoulEquipInfo > equipitems_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroSetMultiForceSoulReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroAwakeRealBodyReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Hero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroAwakeRealBodyReq : public ::google::protobuf::Message {
 public:
  THeroAwakeRealBodyReq();
  virtual ~THeroAwakeRealBodyReq();

  THeroAwakeRealBodyReq(const THeroAwakeRealBodyReq& from);

  inline THeroAwakeRealBodyReq& operator=(const THeroAwakeRealBodyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroAwakeRealBodyReq& default_instance();

  void Swap(THeroAwakeRealBodyReq* other);

  // implements Message ----------------------------------------------

  THeroAwakeRealBodyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroAwakeRealBodyReq& from);
  void MergeFrom(const THeroAwakeRealBodyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroAwakeRealBodyReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem CosItemArray = 2;
  inline int cositemarray_size() const;
  inline void clear_cositemarray();
  static const int kCosItemArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroAwakeRealBodyReq</name>
  	<Function>
  		<name>cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cositemarray</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>cositemarray_size</name>
  		<replaceName>CosItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& cositemarray(int index) const;
  inline ::pb::TSimpleItem* mutable_cositemarray(int index);
  inline ::pb::TSimpleItem* add_cositemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      cositemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_cositemarray();

  // @@protoc_insertion_point(class_scope:pb.THeroAwakeRealBodyReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > cositemarray_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fHero_2eproto();
  friend void protobuf_AssignDesc_net_2fHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fHero_2eproto();

  void InitAsDefaultInstance();
  static THeroAwakeRealBodyReq* default_instance_;
};
// ===================================================================


// ===================================================================

// THeroAdvanceItem

// optional uint32 Pos = 1;
inline bool THeroAdvanceItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroAdvanceItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroAdvanceItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroAdvanceItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 THeroAdvanceItem::pos() const {
  // @@protoc_insertion_point(field_get:pb.THeroAdvanceItem.Pos)
  return pos_;
}
inline void THeroAdvanceItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroAdvanceItem.Pos)
}

// optional .pb.TSimpleItem Item = 2;
inline bool THeroAdvanceItem::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroAdvanceItem::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroAdvanceItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroAdvanceItem::clear_item() {
  if (item_ != NULL) item_->::pb::TSimpleItem::Clear();
  clear_has_item();
}
inline const ::pb::TSimpleItem& THeroAdvanceItem::item() const {
  // @@protoc_insertion_point(field_get:pb.THeroAdvanceItem.Item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::pb::TSimpleItem* THeroAdvanceItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::pb::TSimpleItem;
  // @@protoc_insertion_point(field_mutable:pb.THeroAdvanceItem.Item)
  return item_;
}
inline ::pb::TSimpleItem* THeroAdvanceItem::release_item() {
  clear_has_item();
  ::pb::TSimpleItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void THeroAdvanceItem::set_allocated_item(::pb::TSimpleItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.THeroAdvanceItem.Item)
}

// repeated .pb.TSimpleItem ArrChildItem = 3;
inline int THeroAdvanceItem::arrchilditem_size() const {
  return arrchilditem_.size();
}
inline void THeroAdvanceItem::clear_arrchilditem() {
  arrchilditem_.Clear();
}
inline const ::pb::TSimpleItem& THeroAdvanceItem::arrchilditem(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroAdvanceItem.ArrChildItem)
  return arrchilditem_.Get(index);
}
inline ::pb::TSimpleItem* THeroAdvanceItem::mutable_arrchilditem(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroAdvanceItem.ArrChildItem)
  return arrchilditem_.Mutable(index);
}
inline ::pb::TSimpleItem* THeroAdvanceItem::add_arrchilditem() {
  // @@protoc_insertion_point(field_add:pb.THeroAdvanceItem.ArrChildItem)
  return arrchilditem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
THeroAdvanceItem::arrchilditem() const {
  // @@protoc_insertion_point(field_list:pb.THeroAdvanceItem.ArrChildItem)
  return arrchilditem_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
THeroAdvanceItem::mutable_arrchilditem() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroAdvanceItem.ArrChildItem)
  return &arrchilditem_;
}

// -------------------------------------------------------------------

// THeroEquipItem

// optional uint32 Pos = 1;
inline bool THeroEquipItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroEquipItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroEquipItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroEquipItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 THeroEquipItem::pos() const {
  // @@protoc_insertion_point(field_get:pb.THeroEquipItem.Pos)
  return pos_;
}
inline void THeroEquipItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroEquipItem.Pos)
}

// optional .pb.TSimpleItem Item = 2;
inline bool THeroEquipItem::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroEquipItem::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroEquipItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroEquipItem::clear_item() {
  if (item_ != NULL) item_->::pb::TSimpleItem::Clear();
  clear_has_item();
}
inline const ::pb::TSimpleItem& THeroEquipItem::item() const {
  // @@protoc_insertion_point(field_get:pb.THeroEquipItem.Item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::pb::TSimpleItem* THeroEquipItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::pb::TSimpleItem;
  // @@protoc_insertion_point(field_mutable:pb.THeroEquipItem.Item)
  return item_;
}
inline ::pb::TSimpleItem* THeroEquipItem::release_item() {
  clear_has_item();
  ::pb::TSimpleItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void THeroEquipItem::set_allocated_item(::pb::TSimpleItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.THeroEquipItem.Item)
}

// -------------------------------------------------------------------

// TDivineEquipItem

// optional uint32 Pos = 1;
inline bool TDivineEquipItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineEquipItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineEquipItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineEquipItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TDivineEquipItem::pos() const {
  // @@protoc_insertion_point(field_get:pb.TDivineEquipItem.Pos)
  return pos_;
}
inline void TDivineEquipItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineEquipItem.Pos)
}

// optional .pb.TSimpleItem Item = 2;
inline bool TDivineEquipItem::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineEquipItem::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineEquipItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineEquipItem::clear_item() {
  if (item_ != NULL) item_->::pb::TSimpleItem::Clear();
  clear_has_item();
}
inline const ::pb::TSimpleItem& TDivineEquipItem::item() const {
  // @@protoc_insertion_point(field_get:pb.TDivineEquipItem.Item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::pb::TSimpleItem* TDivineEquipItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::pb::TSimpleItem;
  // @@protoc_insertion_point(field_mutable:pb.TDivineEquipItem.Item)
  return item_;
}
inline ::pb::TSimpleItem* TDivineEquipItem::release_item() {
  clear_has_item();
  ::pb::TSimpleItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void TDivineEquipItem::set_allocated_item(::pb::TSimpleItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TDivineEquipItem.Item)
}

// optional uint32 lv = 3;
inline bool TDivineEquipItem::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDivineEquipItem::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDivineEquipItem::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDivineEquipItem::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 TDivineEquipItem::lv() const {
  // @@protoc_insertion_point(field_get:pb.TDivineEquipItem.lv)
  return lv_;
}
inline void TDivineEquipItem::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineEquipItem.lv)
}

// -------------------------------------------------------------------

// THeroCombination

// optional uint32 Tid = 1;
inline bool THeroCombination::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroCombination::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroCombination::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroCombination::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 THeroCombination::tid() const {
  // @@protoc_insertion_point(field_get:pb.THeroCombination.Tid)
  return tid_;
}
inline void THeroCombination::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroCombination.Tid)
}

// optional uint32 Level = 2;
inline bool THeroCombination::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroCombination::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroCombination::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroCombination::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 THeroCombination::level() const {
  // @@protoc_insertion_point(field_get:pb.THeroCombination.Level)
  return level_;
}
inline void THeroCombination::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroCombination.Level)
}

// -------------------------------------------------------------------

// THeroSkill

// optional uint32 Tid = 1;
inline bool THeroSkill::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSkill::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSkill::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSkill::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 THeroSkill::tid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSkill.Tid)
  return tid_;
}
inline void THeroSkill::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSkill.Tid)
}

// optional uint32 Level = 2;
inline bool THeroSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 THeroSkill::level() const {
  // @@protoc_insertion_point(field_get:pb.THeroSkill.Level)
  return level_;
}
inline void THeroSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSkill.Level)
}

// optional uint32 Idx = 3;
inline bool THeroSkill::has_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroSkill::set_has_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroSkill::clear_has_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroSkill::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 THeroSkill::idx() const {
  // @@protoc_insertion_point(field_get:pb.THeroSkill.Idx)
  return idx_;
}
inline void THeroSkill::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSkill.Idx)
}

// repeated uint32 ArrSubSkill = 4;
inline int THeroSkill::arrsubskill_size() const {
  return arrsubskill_.size();
}
inline void THeroSkill::clear_arrsubskill() {
  arrsubskill_.Clear();
}
inline ::google::protobuf::uint32 THeroSkill::arrsubskill(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroSkill.ArrSubSkill)
  return arrsubskill_.Get(index);
}
inline void THeroSkill::set_arrsubskill(int index, ::google::protobuf::uint32 value) {
  arrsubskill_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroSkill.ArrSubSkill)
}
inline void THeroSkill::add_arrsubskill(::google::protobuf::uint32 value) {
  arrsubskill_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroSkill.ArrSubSkill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
THeroSkill::arrsubskill() const {
  // @@protoc_insertion_point(field_list:pb.THeroSkill.ArrSubSkill)
  return arrsubskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
THeroSkill::mutable_arrsubskill() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroSkill.ArrSubSkill)
  return &arrsubskill_;
}

// -------------------------------------------------------------------

// THeroSimpleInfo

// optional uint32 Hid = 1;
inline bool THeroSimpleInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSimpleInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSimpleInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSimpleInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSimpleInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.Hid)
  return hid_;
}
inline void THeroSimpleInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSimpleInfo.Hid)
}

// optional uint32 Htid = 2;
inline bool THeroSimpleInfo::has_htid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroSimpleInfo::set_has_htid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroSimpleInfo::clear_has_htid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroSimpleInfo::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 THeroSimpleInfo::htid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.Htid)
  return htid_;
}
inline void THeroSimpleInfo::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSimpleInfo.Htid)
}

// optional uint32 Level = 3;
inline bool THeroSimpleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroSimpleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroSimpleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroSimpleInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 THeroSimpleInfo::level() const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.Level)
  return level_;
}
inline void THeroSimpleInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSimpleInfo.Level)
}

// optional uint32 Advance = 4;
inline bool THeroSimpleInfo::has_advance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void THeroSimpleInfo::set_has_advance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void THeroSimpleInfo::clear_has_advance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void THeroSimpleInfo::clear_advance() {
  advance_ = 0u;
  clear_has_advance();
}
inline ::google::protobuf::uint32 THeroSimpleInfo::advance() const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.Advance)
  return advance_;
}
inline void THeroSimpleInfo::set_advance(::google::protobuf::uint32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSimpleInfo.Advance)
}

// optional uint32 Star = 5;
inline bool THeroSimpleInfo::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void THeroSimpleInfo::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void THeroSimpleInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void THeroSimpleInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 THeroSimpleInfo::star() const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.Star)
  return star_;
}
inline void THeroSimpleInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSimpleInfo.Star)
}

// repeated .pb.TPlugInInfo PlugInfoArr = 23;
inline int THeroSimpleInfo::pluginfoarr_size() const {
  return pluginfoarr_.size();
}
inline void THeroSimpleInfo::clear_pluginfoarr() {
  pluginfoarr_.Clear();
}
inline const ::pb::TPlugInInfo& THeroSimpleInfo::pluginfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.PlugInfoArr)
  return pluginfoarr_.Get(index);
}
inline ::pb::TPlugInInfo* THeroSimpleInfo::mutable_pluginfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroSimpleInfo.PlugInfoArr)
  return pluginfoarr_.Mutable(index);
}
inline ::pb::TPlugInInfo* THeroSimpleInfo::add_pluginfoarr() {
  // @@protoc_insertion_point(field_add:pb.THeroSimpleInfo.PlugInfoArr)
  return pluginfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >&
THeroSimpleInfo::pluginfoarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroSimpleInfo.PlugInfoArr)
  return pluginfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >*
THeroSimpleInfo::mutable_pluginfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroSimpleInfo.PlugInfoArr)
  return &pluginfoarr_;
}

// optional uint32 PluggerHid = 24;
inline bool THeroSimpleInfo::has_pluggerhid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void THeroSimpleInfo::set_has_pluggerhid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void THeroSimpleInfo::clear_has_pluggerhid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void THeroSimpleInfo::clear_pluggerhid() {
  pluggerhid_ = 0u;
  clear_has_pluggerhid();
}
inline ::google::protobuf::uint32 THeroSimpleInfo::pluggerhid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSimpleInfo.PluggerHid)
  return pluggerhid_;
}
inline void THeroSimpleInfo::set_pluggerhid(::google::protobuf::uint32 value) {
  set_has_pluggerhid();
  pluggerhid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSimpleInfo.PluggerHid)
}

// -------------------------------------------------------------------

// THeroFashionExclEquipInfo

// optional uint32 FashionModelId = 1;
inline bool THeroFashionExclEquipInfo::has_fashionmodelid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroFashionExclEquipInfo::set_has_fashionmodelid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroFashionExclEquipInfo::clear_has_fashionmodelid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroFashionExclEquipInfo::clear_fashionmodelid() {
  fashionmodelid_ = 0u;
  clear_has_fashionmodelid();
}
inline ::google::protobuf::uint32 THeroFashionExclEquipInfo::fashionmodelid() const {
  // @@protoc_insertion_point(field_get:pb.THeroFashionExclEquipInfo.FashionModelId)
  return fashionmodelid_;
}
inline void THeroFashionExclEquipInfo::set_fashionmodelid(::google::protobuf::uint32 value) {
  set_has_fashionmodelid();
  fashionmodelid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroFashionExclEquipInfo.FashionModelId)
}

// optional uint32 ItemId = 2;
inline bool THeroFashionExclEquipInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroFashionExclEquipInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroFashionExclEquipInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroFashionExclEquipInfo::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 THeroFashionExclEquipInfo::itemid() const {
  // @@protoc_insertion_point(field_get:pb.THeroFashionExclEquipInfo.ItemId)
  return itemid_;
}
inline void THeroFashionExclEquipInfo::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroFashionExclEquipInfo.ItemId)
}

// -------------------------------------------------------------------

// TPlugInInfo

// optional uint32 Hid = 1;
inline bool TPlugInInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPlugInInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPlugInInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPlugInInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TPlugInInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TPlugInInfo.Hid)
  return hid_;
}
inline void TPlugInInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugInInfo.Hid)
}

// optional uint32 Level = 2;
inline bool TPlugInInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPlugInInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPlugInInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPlugInInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TPlugInInfo::level() const {
  // @@protoc_insertion_point(field_get:pb.TPlugInInfo.Level)
  return level_;
}
inline void TPlugInInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugInInfo.Level)
}

// optional uint32 Pos = 3;
inline bool TPlugInInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPlugInInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPlugInInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPlugInInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TPlugInInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TPlugInInfo.Pos)
  return pos_;
}
inline void TPlugInInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugInInfo.Pos)
}

// optional uint32 Htid = 4;
inline bool TPlugInInfo::has_htid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TPlugInInfo::set_has_htid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TPlugInInfo::clear_has_htid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TPlugInInfo::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 TPlugInInfo::htid() const {
  // @@protoc_insertion_point(field_get:pb.TPlugInInfo.Htid)
  return htid_;
}
inline void TPlugInInfo::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugInInfo.Htid)
}

// optional uint32 StarLv = 5;
inline bool TPlugInInfo::has_starlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TPlugInInfo::set_has_starlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TPlugInInfo::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TPlugInInfo::clear_starlv() {
  starlv_ = 0u;
  clear_has_starlv();
}
inline ::google::protobuf::uint32 TPlugInInfo::starlv() const {
  // @@protoc_insertion_point(field_get:pb.TPlugInInfo.StarLv)
  return starlv_;
}
inline void TPlugInInfo::set_starlv(::google::protobuf::uint32 value) {
  set_has_starlv();
  starlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugInInfo.StarLv)
}

// -------------------------------------------------------------------

// THeroInfo

// optional uint32 Hid = 1;
inline bool THeroInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.Hid)
  return hid_;
}
inline void THeroInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.Hid)
}

// optional uint32 Htid = 2;
inline bool THeroInfo::has_htid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroInfo::set_has_htid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroInfo::clear_has_htid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroInfo::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 THeroInfo::htid() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.Htid)
  return htid_;
}
inline void THeroInfo::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.Htid)
}

// optional uint32 Level = 3;
inline bool THeroInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 THeroInfo::level() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.Level)
  return level_;
}
inline void THeroInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.Level)
}

// optional uint32 Exp = 4;
inline bool THeroInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void THeroInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void THeroInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void THeroInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 THeroInfo::exp() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.Exp)
  return exp_;
}
inline void THeroInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.Exp)
}

// optional uint32 Advance = 5;
inline bool THeroInfo::has_advance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void THeroInfo::set_has_advance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void THeroInfo::clear_has_advance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void THeroInfo::clear_advance() {
  advance_ = 0u;
  clear_has_advance();
}
inline ::google::protobuf::uint32 THeroInfo::advance() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.Advance)
  return advance_;
}
inline void THeroInfo::set_advance(::google::protobuf::uint32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.Advance)
}

// repeated .pb.THeroAdvanceItem AdvanceItemArray = 6;
inline int THeroInfo::advanceitemarray_size() const {
  return advanceitemarray_.size();
}
inline void THeroInfo::clear_advanceitemarray() {
  advanceitemarray_.Clear();
}
inline const ::pb::THeroAdvanceItem& THeroInfo::advanceitemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.AdvanceItemArray)
  return advanceitemarray_.Get(index);
}
inline ::pb::THeroAdvanceItem* THeroInfo::mutable_advanceitemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.AdvanceItemArray)
  return advanceitemarray_.Mutable(index);
}
inline ::pb::THeroAdvanceItem* THeroInfo::add_advanceitemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.AdvanceItemArray)
  return advanceitemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >&
THeroInfo::advanceitemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.AdvanceItemArray)
  return advanceitemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >*
THeroInfo::mutable_advanceitemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.AdvanceItemArray)
  return &advanceitemarray_;
}

// optional uint32 Star = 7;
inline bool THeroInfo::has_star() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void THeroInfo::set_has_star() {
  _has_bits_[0] |= 0x00000040u;
}
inline void THeroInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void THeroInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 THeroInfo::star() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.Star)
  return star_;
}
inline void THeroInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.Star)
}

// optional uint32 StarHole = 8;
inline bool THeroInfo::has_starhole() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void THeroInfo::set_has_starhole() {
  _has_bits_[0] |= 0x00000080u;
}
inline void THeroInfo::clear_has_starhole() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void THeroInfo::clear_starhole() {
  starhole_ = 0u;
  clear_has_starhole();
}
inline ::google::protobuf::uint32 THeroInfo::starhole() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.StarHole)
  return starhole_;
}
inline void THeroInfo::set_starhole(::google::protobuf::uint32 value) {
  set_has_starhole();
  starhole_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.StarHole)
}

// repeated .pb.THeroCombination CombinationArray = 9;
inline int THeroInfo::combinationarray_size() const {
  return combinationarray_.size();
}
inline void THeroInfo::clear_combinationarray() {
  combinationarray_.Clear();
}
inline const ::pb::THeroCombination& THeroInfo::combinationarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.CombinationArray)
  return combinationarray_.Get(index);
}
inline ::pb::THeroCombination* THeroInfo::mutable_combinationarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.CombinationArray)
  return combinationarray_.Mutable(index);
}
inline ::pb::THeroCombination* THeroInfo::add_combinationarray() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.CombinationArray)
  return combinationarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroCombination >&
THeroInfo::combinationarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.CombinationArray)
  return combinationarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroCombination >*
THeroInfo::mutable_combinationarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.CombinationArray)
  return &combinationarray_;
}

// repeated .pb.THeroSkill SkillArray = 10;
inline int THeroInfo::skillarray_size() const {
  return skillarray_.size();
}
inline void THeroInfo::clear_skillarray() {
  skillarray_.Clear();
}
inline const ::pb::THeroSkill& THeroInfo::skillarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.SkillArray)
  return skillarray_.Get(index);
}
inline ::pb::THeroSkill* THeroInfo::mutable_skillarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.SkillArray)
  return skillarray_.Mutable(index);
}
inline ::pb::THeroSkill* THeroInfo::add_skillarray() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.SkillArray)
  return skillarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroSkill >&
THeroInfo::skillarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.SkillArray)
  return skillarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroSkill >*
THeroInfo::mutable_skillarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.SkillArray)
  return &skillarray_;
}

// repeated .pb.THeroEquipItem EquipItemArr = 11;
inline int THeroInfo::equipitemarr_size() const {
  return equipitemarr_.size();
}
inline void THeroInfo::clear_equipitemarr() {
  equipitemarr_.Clear();
}
inline const ::pb::THeroEquipItem& THeroInfo::equipitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.EquipItemArr)
  return equipitemarr_.Get(index);
}
inline ::pb::THeroEquipItem* THeroInfo::mutable_equipitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.EquipItemArr)
  return equipitemarr_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroInfo::add_equipitemarr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.EquipItemArr)
  return equipitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroInfo::equipitemarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.EquipItemArr)
  return equipitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroInfo::mutable_equipitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.EquipItemArr)
  return &equipitemarr_;
}

// repeated .pb.THeroEquipItem SoulItemArr = 12;
inline int THeroInfo::soulitemarr_size() const {
  return soulitemarr_.size();
}
inline void THeroInfo::clear_soulitemarr() {
  soulitemarr_.Clear();
}
inline const ::pb::THeroEquipItem& THeroInfo::soulitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.SoulItemArr)
  return soulitemarr_.Get(index);
}
inline ::pb::THeroEquipItem* THeroInfo::mutable_soulitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.SoulItemArr)
  return soulitemarr_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroInfo::add_soulitemarr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.SoulItemArr)
  return soulitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroInfo::soulitemarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.SoulItemArr)
  return soulitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroInfo::mutable_soulitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.SoulItemArr)
  return &soulitemarr_;
}

// optional uint32 SurplusSkillPointNum = 13;
inline bool THeroInfo::has_surplusskillpointnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void THeroInfo::set_has_surplusskillpointnum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void THeroInfo::clear_has_surplusskillpointnum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void THeroInfo::clear_surplusskillpointnum() {
  surplusskillpointnum_ = 0u;
  clear_has_surplusskillpointnum();
}
inline ::google::protobuf::uint32 THeroInfo::surplusskillpointnum() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.SurplusSkillPointNum)
  return surplusskillpointnum_;
}
inline void THeroInfo::set_surplusskillpointnum(::google::protobuf::uint32 value) {
  set_has_surplusskillpointnum();
  surplusskillpointnum_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.SurplusSkillPointNum)
}

// repeated uint32 ExclEquipItemIdArr = 14;
inline int THeroInfo::exclequipitemidarr_size() const {
  return exclequipitemidarr_.size();
}
inline void THeroInfo::clear_exclequipitemidarr() {
  exclequipitemidarr_.Clear();
}
inline ::google::protobuf::uint32 THeroInfo::exclequipitemidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.ExclEquipItemIdArr)
  return exclequipitemidarr_.Get(index);
}
inline void THeroInfo::set_exclequipitemidarr(int index, ::google::protobuf::uint32 value) {
  exclequipitemidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroInfo.ExclEquipItemIdArr)
}
inline void THeroInfo::add_exclequipitemidarr(::google::protobuf::uint32 value) {
  exclequipitemidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroInfo.ExclEquipItemIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
THeroInfo::exclequipitemidarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.ExclEquipItemIdArr)
  return exclequipitemidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
THeroInfo::mutable_exclequipitemidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.ExclEquipItemIdArr)
  return &exclequipitemidarr_;
}

// repeated .pb.THeroFashionExclEquipInfo FashionExclEquipArr = 15;
inline int THeroInfo::fashionexclequiparr_size() const {
  return fashionexclequiparr_.size();
}
inline void THeroInfo::clear_fashionexclequiparr() {
  fashionexclequiparr_.Clear();
}
inline const ::pb::THeroFashionExclEquipInfo& THeroInfo::fashionexclequiparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.FashionExclEquipArr)
  return fashionexclequiparr_.Get(index);
}
inline ::pb::THeroFashionExclEquipInfo* THeroInfo::mutable_fashionexclequiparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.FashionExclEquipArr)
  return fashionexclequiparr_.Mutable(index);
}
inline ::pb::THeroFashionExclEquipInfo* THeroInfo::add_fashionexclequiparr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.FashionExclEquipArr)
  return fashionexclequiparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroFashionExclEquipInfo >&
THeroInfo::fashionexclequiparr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.FashionExclEquipArr)
  return fashionexclequiparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroFashionExclEquipInfo >*
THeroInfo::mutable_fashionexclequiparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.FashionExclEquipArr)
  return &fashionexclequiparr_;
}

// optional uint32 GoldLv = 16;
inline bool THeroInfo::has_goldlv() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void THeroInfo::set_has_goldlv() {
  _has_bits_[0] |= 0x00008000u;
}
inline void THeroInfo::clear_has_goldlv() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void THeroInfo::clear_goldlv() {
  goldlv_ = 0u;
  clear_has_goldlv();
}
inline ::google::protobuf::uint32 THeroInfo::goldlv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.GoldLv)
  return goldlv_;
}
inline void THeroInfo::set_goldlv(::google::protobuf::uint32 value) {
  set_has_goldlv();
  goldlv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.GoldLv)
}

// optional uint32 GoldBreakLv = 17;
inline bool THeroInfo::has_goldbreaklv() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void THeroInfo::set_has_goldbreaklv() {
  _has_bits_[0] |= 0x00010000u;
}
inline void THeroInfo::clear_has_goldbreaklv() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void THeroInfo::clear_goldbreaklv() {
  goldbreaklv_ = 0u;
  clear_has_goldbreaklv();
}
inline ::google::protobuf::uint32 THeroInfo::goldbreaklv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.GoldBreakLv)
  return goldbreaklv_;
}
inline void THeroInfo::set_goldbreaklv(::google::protobuf::uint32 value) {
  set_has_goldbreaklv();
  goldbreaklv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.GoldBreakLv)
}

// optional uint32 LinkedHid = 18;
inline bool THeroInfo::has_linkedhid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void THeroInfo::set_has_linkedhid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void THeroInfo::clear_has_linkedhid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void THeroInfo::clear_linkedhid() {
  linkedhid_ = 0u;
  clear_has_linkedhid();
}
inline ::google::protobuf::uint32 THeroInfo::linkedhid() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.LinkedHid)
  return linkedhid_;
}
inline void THeroInfo::set_linkedhid(::google::protobuf::uint32 value) {
  set_has_linkedhid();
  linkedhid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.LinkedHid)
}

// optional uint64 ExpireTime = 19;
inline bool THeroInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void THeroInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void THeroInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void THeroInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 THeroInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.ExpireTime)
  return expiretime_;
}
inline void THeroInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.ExpireTime)
}

// repeated .pb.THeroEquipItem SilkBagItemArr = 20;
inline int THeroInfo::silkbagitemarr_size() const {
  return silkbagitemarr_.size();
}
inline void THeroInfo::clear_silkbagitemarr() {
  silkbagitemarr_.Clear();
}
inline const ::pb::THeroEquipItem& THeroInfo::silkbagitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.SilkBagItemArr)
  return silkbagitemarr_.Get(index);
}
inline ::pb::THeroEquipItem* THeroInfo::mutable_silkbagitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.SilkBagItemArr)
  return silkbagitemarr_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroInfo::add_silkbagitemarr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.SilkBagItemArr)
  return silkbagitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroInfo::silkbagitemarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.SilkBagItemArr)
  return silkbagitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroInfo::mutable_silkbagitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.SilkBagItemArr)
  return &silkbagitemarr_;
}

// optional uint32 WhiteGoldLv = 21;
inline bool THeroInfo::has_whitegoldlv() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void THeroInfo::set_has_whitegoldlv() {
  _has_bits_[0] |= 0x00100000u;
}
inline void THeroInfo::clear_has_whitegoldlv() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void THeroInfo::clear_whitegoldlv() {
  whitegoldlv_ = 0u;
  clear_has_whitegoldlv();
}
inline ::google::protobuf::uint32 THeroInfo::whitegoldlv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.WhiteGoldLv)
  return whitegoldlv_;
}
inline void THeroInfo::set_whitegoldlv(::google::protobuf::uint32 value) {
  set_has_whitegoldlv();
  whitegoldlv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.WhiteGoldLv)
}

// optional uint32 WhiteGoldBreakLv = 22;
inline bool THeroInfo::has_whitegoldbreaklv() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void THeroInfo::set_has_whitegoldbreaklv() {
  _has_bits_[0] |= 0x00200000u;
}
inline void THeroInfo::clear_has_whitegoldbreaklv() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void THeroInfo::clear_whitegoldbreaklv() {
  whitegoldbreaklv_ = 0u;
  clear_has_whitegoldbreaklv();
}
inline ::google::protobuf::uint32 THeroInfo::whitegoldbreaklv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.WhiteGoldBreakLv)
  return whitegoldbreaklv_;
}
inline void THeroInfo::set_whitegoldbreaklv(::google::protobuf::uint32 value) {
  set_has_whitegoldbreaklv();
  whitegoldbreaklv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.WhiteGoldBreakLv)
}

// repeated .pb.TPlugInInfo PlugInfoArr = 23;
inline int THeroInfo::pluginfoarr_size() const {
  return pluginfoarr_.size();
}
inline void THeroInfo::clear_pluginfoarr() {
  pluginfoarr_.Clear();
}
inline const ::pb::TPlugInInfo& THeroInfo::pluginfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.PlugInfoArr)
  return pluginfoarr_.Get(index);
}
inline ::pb::TPlugInInfo* THeroInfo::mutable_pluginfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.PlugInfoArr)
  return pluginfoarr_.Mutable(index);
}
inline ::pb::TPlugInInfo* THeroInfo::add_pluginfoarr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.PlugInfoArr)
  return pluginfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >&
THeroInfo::pluginfoarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.PlugInfoArr)
  return pluginfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPlugInInfo >*
THeroInfo::mutable_pluginfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.PlugInfoArr)
  return &pluginfoarr_;
}

// optional uint32 PluggerHid = 24;
inline bool THeroInfo::has_pluggerhid() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void THeroInfo::set_has_pluggerhid() {
  _has_bits_[0] |= 0x00800000u;
}
inline void THeroInfo::clear_has_pluggerhid() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void THeroInfo::clear_pluggerhid() {
  pluggerhid_ = 0u;
  clear_has_pluggerhid();
}
inline ::google::protobuf::uint32 THeroInfo::pluggerhid() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.PluggerHid)
  return pluggerhid_;
}
inline void THeroInfo::set_pluggerhid(::google::protobuf::uint32 value) {
  set_has_pluggerhid();
  pluggerhid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.PluggerHid)
}

// optional uint64 HeroPercentage = 25;
inline bool THeroInfo::has_heropercentage() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void THeroInfo::set_has_heropercentage() {
  _has_bits_[0] |= 0x01000000u;
}
inline void THeroInfo::clear_has_heropercentage() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void THeroInfo::clear_heropercentage() {
  heropercentage_ = GOOGLE_ULONGLONG(0);
  clear_has_heropercentage();
}
inline ::google::protobuf::uint64 THeroInfo::heropercentage() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.HeroPercentage)
  return heropercentage_;
}
inline void THeroInfo::set_heropercentage(::google::protobuf::uint64 value) {
  set_has_heropercentage();
  heropercentage_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.HeroPercentage)
}

// optional uint32 GodLv = 26;
inline bool THeroInfo::has_godlv() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void THeroInfo::set_has_godlv() {
  _has_bits_[0] |= 0x02000000u;
}
inline void THeroInfo::clear_has_godlv() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void THeroInfo::clear_godlv() {
  godlv_ = 0u;
  clear_has_godlv();
}
inline ::google::protobuf::uint32 THeroInfo::godlv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.GodLv)
  return godlv_;
}
inline void THeroInfo::set_godlv(::google::protobuf::uint32 value) {
  set_has_godlv();
  godlv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.GodLv)
}

// optional uint32 WarRidingTid = 27;
inline bool THeroInfo::has_warridingtid() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void THeroInfo::set_has_warridingtid() {
  _has_bits_[0] |= 0x04000000u;
}
inline void THeroInfo::clear_has_warridingtid() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void THeroInfo::clear_warridingtid() {
  warridingtid_ = 0u;
  clear_has_warridingtid();
}
inline ::google::protobuf::uint32 THeroInfo::warridingtid() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.WarRidingTid)
  return warridingtid_;
}
inline void THeroInfo::set_warridingtid(::google::protobuf::uint32 value) {
  set_has_warridingtid();
  warridingtid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.WarRidingTid)
}

// optional uint32 ChainSoulHid = 28;
inline bool THeroInfo::has_chainsoulhid() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void THeroInfo::set_has_chainsoulhid() {
  _has_bits_[0] |= 0x08000000u;
}
inline void THeroInfo::clear_has_chainsoulhid() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void THeroInfo::clear_chainsoulhid() {
  chainsoulhid_ = 0u;
  clear_has_chainsoulhid();
}
inline ::google::protobuf::uint32 THeroInfo::chainsoulhid() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.ChainSoulHid)
  return chainsoulhid_;
}
inline void THeroInfo::set_chainsoulhid(::google::protobuf::uint32 value) {
  set_has_chainsoulhid();
  chainsoulhid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.ChainSoulHid)
}

// optional uint32 ChainSoulLv = 29;
inline bool THeroInfo::has_chainsoullv() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void THeroInfo::set_has_chainsoullv() {
  _has_bits_[0] |= 0x10000000u;
}
inline void THeroInfo::clear_has_chainsoullv() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void THeroInfo::clear_chainsoullv() {
  chainsoullv_ = 0u;
  clear_has_chainsoullv();
}
inline ::google::protobuf::uint32 THeroInfo::chainsoullv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.ChainSoulLv)
  return chainsoullv_;
}
inline void THeroInfo::set_chainsoullv(::google::protobuf::uint32 value) {
  set_has_chainsoullv();
  chainsoullv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.ChainSoulLv)
}

// optional uint32 PurpleGoldBigLv = 30;
inline bool THeroInfo::has_purplegoldbiglv() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void THeroInfo::set_has_purplegoldbiglv() {
  _has_bits_[0] |= 0x20000000u;
}
inline void THeroInfo::clear_has_purplegoldbiglv() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void THeroInfo::clear_purplegoldbiglv() {
  purplegoldbiglv_ = 0u;
  clear_has_purplegoldbiglv();
}
inline ::google::protobuf::uint32 THeroInfo::purplegoldbiglv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.PurpleGoldBigLv)
  return purplegoldbiglv_;
}
inline void THeroInfo::set_purplegoldbiglv(::google::protobuf::uint32 value) {
  set_has_purplegoldbiglv();
  purplegoldbiglv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.PurpleGoldBigLv)
}

// repeated uint32 PurpleGoldSmallLv = 31;
inline int THeroInfo::purplegoldsmalllv_size() const {
  return purplegoldsmalllv_.size();
}
inline void THeroInfo::clear_purplegoldsmalllv() {
  purplegoldsmalllv_.Clear();
}
inline ::google::protobuf::uint32 THeroInfo::purplegoldsmalllv(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.PurpleGoldSmallLv)
  return purplegoldsmalllv_.Get(index);
}
inline void THeroInfo::set_purplegoldsmalllv(int index, ::google::protobuf::uint32 value) {
  purplegoldsmalllv_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroInfo.PurpleGoldSmallLv)
}
inline void THeroInfo::add_purplegoldsmalllv(::google::protobuf::uint32 value) {
  purplegoldsmalllv_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroInfo.PurpleGoldSmallLv)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
THeroInfo::purplegoldsmalllv() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.PurpleGoldSmallLv)
  return purplegoldsmalllv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
THeroInfo::mutable_purplegoldsmalllv() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.PurpleGoldSmallLv)
  return &purplegoldsmalllv_;
}

// optional uint32 PurpleGoldSoulCost = 32;
inline bool THeroInfo::has_purplegoldsoulcost() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void THeroInfo::set_has_purplegoldsoulcost() {
  _has_bits_[0] |= 0x80000000u;
}
inline void THeroInfo::clear_has_purplegoldsoulcost() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void THeroInfo::clear_purplegoldsoulcost() {
  purplegoldsoulcost_ = 0u;
  clear_has_purplegoldsoulcost();
}
inline ::google::protobuf::uint32 THeroInfo::purplegoldsoulcost() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.PurpleGoldSoulCost)
  return purplegoldsoulcost_;
}
inline void THeroInfo::set_purplegoldsoulcost(::google::protobuf::uint32 value) {
  set_has_purplegoldsoulcost();
  purplegoldsoulcost_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.PurpleGoldSoulCost)
}

// repeated .pb.TDivineEquipItem DivineEquipItemArr = 33;
inline int THeroInfo::divineequipitemarr_size() const {
  return divineequipitemarr_.size();
}
inline void THeroInfo::clear_divineequipitemarr() {
  divineequipitemarr_.Clear();
}
inline const ::pb::TDivineEquipItem& THeroInfo::divineequipitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.DivineEquipItemArr)
  return divineequipitemarr_.Get(index);
}
inline ::pb::TDivineEquipItem* THeroInfo::mutable_divineequipitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.DivineEquipItemArr)
  return divineequipitemarr_.Mutable(index);
}
inline ::pb::TDivineEquipItem* THeroInfo::add_divineequipitemarr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.DivineEquipItemArr)
  return divineequipitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >&
THeroInfo::divineequipitemarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.DivineEquipItemArr)
  return divineequipitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDivineEquipItem >*
THeroInfo::mutable_divineequipitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.DivineEquipItemArr)
  return &divineequipitemarr_;
}

// repeated .pb.THeroEquipItem ForceSoulArr = 34;
inline int THeroInfo::forcesoularr_size() const {
  return forcesoularr_.size();
}
inline void THeroInfo::clear_forcesoularr() {
  forcesoularr_.Clear();
}
inline const ::pb::THeroEquipItem& THeroInfo::forcesoularr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.ForceSoulArr)
  return forcesoularr_.Get(index);
}
inline ::pb::THeroEquipItem* THeroInfo::mutable_forcesoularr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroInfo.ForceSoulArr)
  return forcesoularr_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroInfo::add_forcesoularr() {
  // @@protoc_insertion_point(field_add:pb.THeroInfo.ForceSoulArr)
  return forcesoularr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroInfo::forcesoularr() const {
  // @@protoc_insertion_point(field_list:pb.THeroInfo.ForceSoulArr)
  return forcesoularr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroInfo::mutable_forcesoularr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroInfo.ForceSoulArr)
  return &forcesoularr_;
}

// optional uint32 RealBodyLv = 35;
inline bool THeroInfo::has_realbodylv() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void THeroInfo::set_has_realbodylv() {
  _has_bits_[1] |= 0x00000004u;
}
inline void THeroInfo::clear_has_realbodylv() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void THeroInfo::clear_realbodylv() {
  realbodylv_ = 0u;
  clear_has_realbodylv();
}
inline ::google::protobuf::uint32 THeroInfo::realbodylv() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.RealBodyLv)
  return realbodylv_;
}
inline void THeroInfo::set_realbodylv(::google::protobuf::uint32 value) {
  set_has_realbodylv();
  realbodylv_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.RealBodyLv)
}

// optional uint32 ForceSoulStarNum = 36;
inline bool THeroInfo::has_forcesoulstarnum() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void THeroInfo::set_has_forcesoulstarnum() {
  _has_bits_[1] |= 0x00000008u;
}
inline void THeroInfo::clear_has_forcesoulstarnum() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void THeroInfo::clear_forcesoulstarnum() {
  forcesoulstarnum_ = 0u;
  clear_has_forcesoulstarnum();
}
inline ::google::protobuf::uint32 THeroInfo::forcesoulstarnum() const {
  // @@protoc_insertion_point(field_get:pb.THeroInfo.ForceSoulStarNum)
  return forcesoulstarnum_;
}
inline void THeroInfo::set_forcesoulstarnum(::google::protobuf::uint32 value) {
  set_has_forcesoulstarnum();
  forcesoulstarnum_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroInfo.ForceSoulStarNum)
}

// -------------------------------------------------------------------

// THeroGetHeroDataArrayReq

// -------------------------------------------------------------------

// THeroGetHeroDataArrayRsp

// repeated .pb.THeroInfo HeroDataArray = 1;
inline int THeroGetHeroDataArrayRsp::herodataarray_size() const {
  return herodataarray_.size();
}
inline void THeroGetHeroDataArrayRsp::clear_herodataarray() {
  herodataarray_.Clear();
}
inline const ::pb::THeroInfo& THeroGetHeroDataArrayRsp::herodataarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroGetHeroDataArrayRsp.HeroDataArray)
  return herodataarray_.Get(index);
}
inline ::pb::THeroInfo* THeroGetHeroDataArrayRsp::mutable_herodataarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroGetHeroDataArrayRsp.HeroDataArray)
  return herodataarray_.Mutable(index);
}
inline ::pb::THeroInfo* THeroGetHeroDataArrayRsp::add_herodataarray() {
  // @@protoc_insertion_point(field_add:pb.THeroGetHeroDataArrayRsp.HeroDataArray)
  return herodataarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >&
THeroGetHeroDataArrayRsp::herodataarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroGetHeroDataArrayRsp.HeroDataArray)
  return herodataarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >*
THeroGetHeroDataArrayRsp::mutable_herodataarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroGetHeroDataArrayRsp.HeroDataArray)
  return &herodataarray_;
}

// repeated uint32 HistroyHeroArray = 2;
inline int THeroGetHeroDataArrayRsp::histroyheroarray_size() const {
  return histroyheroarray_.size();
}
inline void THeroGetHeroDataArrayRsp::clear_histroyheroarray() {
  histroyheroarray_.Clear();
}
inline ::google::protobuf::uint32 THeroGetHeroDataArrayRsp::histroyheroarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroGetHeroDataArrayRsp.HistroyHeroArray)
  return histroyheroarray_.Get(index);
}
inline void THeroGetHeroDataArrayRsp::set_histroyheroarray(int index, ::google::protobuf::uint32 value) {
  histroyheroarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroGetHeroDataArrayRsp.HistroyHeroArray)
}
inline void THeroGetHeroDataArrayRsp::add_histroyheroarray(::google::protobuf::uint32 value) {
  histroyheroarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroGetHeroDataArrayRsp.HistroyHeroArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
THeroGetHeroDataArrayRsp::histroyheroarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroGetHeroDataArrayRsp.HistroyHeroArray)
  return histroyheroarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
THeroGetHeroDataArrayRsp::mutable_histroyheroarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroGetHeroDataArrayRsp.HistroyHeroArray)
  return &histroyheroarray_;
}

// optional uint64 UpdateTime = 3;
inline bool THeroGetHeroDataArrayRsp::has_updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroGetHeroDataArrayRsp::set_has_updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroGetHeroDataArrayRsp::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroGetHeroDataArrayRsp::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 THeroGetHeroDataArrayRsp::updatetime() const {
  // @@protoc_insertion_point(field_get:pb.THeroGetHeroDataArrayRsp.UpdateTime)
  return updatetime_;
}
inline void THeroGetHeroDataArrayRsp::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGetHeroDataArrayRsp.UpdateTime)
}

// -------------------------------------------------------------------

// THeroUpdateHeroDataNotify

// repeated .pb.THeroInfo HeroDataArray = 1;
inline int THeroUpdateHeroDataNotify::herodataarray_size() const {
  return herodataarray_.size();
}
inline void THeroUpdateHeroDataNotify::clear_herodataarray() {
  herodataarray_.Clear();
}
inline const ::pb::THeroInfo& THeroUpdateHeroDataNotify::herodataarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroUpdateHeroDataNotify.HeroDataArray)
  return herodataarray_.Get(index);
}
inline ::pb::THeroInfo* THeroUpdateHeroDataNotify::mutable_herodataarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroUpdateHeroDataNotify.HeroDataArray)
  return herodataarray_.Mutable(index);
}
inline ::pb::THeroInfo* THeroUpdateHeroDataNotify::add_herodataarray() {
  // @@protoc_insertion_point(field_add:pb.THeroUpdateHeroDataNotify.HeroDataArray)
  return herodataarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >&
THeroUpdateHeroDataNotify::herodataarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroUpdateHeroDataNotify.HeroDataArray)
  return herodataarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroInfo >*
THeroUpdateHeroDataNotify::mutable_herodataarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroUpdateHeroDataNotify.HeroDataArray)
  return &herodataarray_;
}

// repeated uint32 HistroyHeroArray = 2;
inline int THeroUpdateHeroDataNotify::histroyheroarray_size() const {
  return histroyheroarray_.size();
}
inline void THeroUpdateHeroDataNotify::clear_histroyheroarray() {
  histroyheroarray_.Clear();
}
inline ::google::protobuf::uint32 THeroUpdateHeroDataNotify::histroyheroarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroUpdateHeroDataNotify.HistroyHeroArray)
  return histroyheroarray_.Get(index);
}
inline void THeroUpdateHeroDataNotify::set_histroyheroarray(int index, ::google::protobuf::uint32 value) {
  histroyheroarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroUpdateHeroDataNotify.HistroyHeroArray)
}
inline void THeroUpdateHeroDataNotify::add_histroyheroarray(::google::protobuf::uint32 value) {
  histroyheroarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroUpdateHeroDataNotify.HistroyHeroArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
THeroUpdateHeroDataNotify::histroyheroarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroUpdateHeroDataNotify.HistroyHeroArray)
  return histroyheroarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
THeroUpdateHeroDataNotify::mutable_histroyheroarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroUpdateHeroDataNotify.HistroyHeroArray)
  return &histroyheroarray_;
}

// optional uint64 UpdateTime = 3;
inline bool THeroUpdateHeroDataNotify::has_updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroUpdateHeroDataNotify::set_has_updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroUpdateHeroDataNotify::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroUpdateHeroDataNotify::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 THeroUpdateHeroDataNotify::updatetime() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpdateHeroDataNotify.UpdateTime)
  return updatetime_;
}
inline void THeroUpdateHeroDataNotify::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpdateHeroDataNotify.UpdateTime)
}

// -------------------------------------------------------------------

// THeroLevelUpReq

// optional uint32 Hid = 1;
inline bool THeroLevelUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroLevelUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroLevelUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroLevelUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroLevelUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroLevelUpReq.Hid)
  return hid_;
}
inline void THeroLevelUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroLevelUpReq.Hid)
}

// repeated .pb.TSimpleItem LevelUpItemArray = 2;
inline int THeroLevelUpReq::levelupitemarray_size() const {
  return levelupitemarray_.size();
}
inline void THeroLevelUpReq::clear_levelupitemarray() {
  levelupitemarray_.Clear();
}
inline const ::pb::TSimpleItem& THeroLevelUpReq::levelupitemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroLevelUpReq.LevelUpItemArray)
  return levelupitemarray_.Get(index);
}
inline ::pb::TSimpleItem* THeroLevelUpReq::mutable_levelupitemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroLevelUpReq.LevelUpItemArray)
  return levelupitemarray_.Mutable(index);
}
inline ::pb::TSimpleItem* THeroLevelUpReq::add_levelupitemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroLevelUpReq.LevelUpItemArray)
  return levelupitemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
THeroLevelUpReq::levelupitemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroLevelUpReq.LevelUpItemArray)
  return levelupitemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
THeroLevelUpReq::mutable_levelupitemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroLevelUpReq.LevelUpItemArray)
  return &levelupitemarray_;
}

// -------------------------------------------------------------------

// THeroStarActivateReq

// optional uint32 Hid = 1;
inline bool THeroStarActivateReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroStarActivateReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroStarActivateReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroStarActivateReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroStarActivateReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroStarActivateReq.Hid)
  return hid_;
}
inline void THeroStarActivateReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroStarActivateReq.Hid)
}

// optional uint32 TargetHoleIndex = 2;
inline bool THeroStarActivateReq::has_targetholeindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroStarActivateReq::set_has_targetholeindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroStarActivateReq::clear_has_targetholeindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroStarActivateReq::clear_targetholeindex() {
  targetholeindex_ = 0u;
  clear_has_targetholeindex();
}
inline ::google::protobuf::uint32 THeroStarActivateReq::targetholeindex() const {
  // @@protoc_insertion_point(field_get:pb.THeroStarActivateReq.TargetHoleIndex)
  return targetholeindex_;
}
inline void THeroStarActivateReq::set_targetholeindex(::google::protobuf::uint32 value) {
  set_has_targetholeindex();
  targetholeindex_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroStarActivateReq.TargetHoleIndex)
}

// -------------------------------------------------------------------

// THeroStarUpReq

// optional uint32 Hid = 1;
inline bool THeroStarUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroStarUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroStarUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroStarUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroStarUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroStarUpReq.Hid)
  return hid_;
}
inline void THeroStarUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroStarUpReq.Hid)
}

// -------------------------------------------------------------------

// THeroEquipAdvanceItemReq

// optional uint32 Hid = 1;
inline bool THeroEquipAdvanceItemReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroEquipAdvanceItemReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroEquipAdvanceItemReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroEquipAdvanceItemReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroEquipAdvanceItemReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroEquipAdvanceItemReq.Hid)
  return hid_;
}
inline void THeroEquipAdvanceItemReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroEquipAdvanceItemReq.Hid)
}

// repeated .pb.THeroAdvanceItem AdvanceItemArray = 2;
inline int THeroEquipAdvanceItemReq::advanceitemarray_size() const {
  return advanceitemarray_.size();
}
inline void THeroEquipAdvanceItemReq::clear_advanceitemarray() {
  advanceitemarray_.Clear();
}
inline const ::pb::THeroAdvanceItem& THeroEquipAdvanceItemReq::advanceitemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroEquipAdvanceItemReq.AdvanceItemArray)
  return advanceitemarray_.Get(index);
}
inline ::pb::THeroAdvanceItem* THeroEquipAdvanceItemReq::mutable_advanceitemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroEquipAdvanceItemReq.AdvanceItemArray)
  return advanceitemarray_.Mutable(index);
}
inline ::pb::THeroAdvanceItem* THeroEquipAdvanceItemReq::add_advanceitemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroEquipAdvanceItemReq.AdvanceItemArray)
  return advanceitemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >&
THeroEquipAdvanceItemReq::advanceitemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroEquipAdvanceItemReq.AdvanceItemArray)
  return advanceitemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroAdvanceItem >*
THeroEquipAdvanceItemReq::mutable_advanceitemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroEquipAdvanceItemReq.AdvanceItemArray)
  return &advanceitemarray_;
}

// -------------------------------------------------------------------

// THeroAdvanceReq

// optional uint32 Hid = 1;
inline bool THeroAdvanceReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroAdvanceReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroAdvanceReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroAdvanceReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroAdvanceReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroAdvanceReq.Hid)
  return hid_;
}
inline void THeroAdvanceReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroAdvanceReq.Hid)
}

// -------------------------------------------------------------------

// THeroRecruitHeroReq

// optional uint32 Tid = 1;
inline bool THeroRecruitHeroReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroRecruitHeroReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroRecruitHeroReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroRecruitHeroReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 THeroRecruitHeroReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.THeroRecruitHeroReq.Tid)
  return tid_;
}
inline void THeroRecruitHeroReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroRecruitHeroReq.Tid)
}

// -------------------------------------------------------------------

// THeroCombinationUpReq

// optional uint32 Hid = 1;
inline bool THeroCombinationUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroCombinationUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroCombinationUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroCombinationUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroCombinationUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroCombinationUpReq.Hid)
  return hid_;
}
inline void THeroCombinationUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroCombinationUpReq.Hid)
}

// optional uint32 Tid = 2;
inline bool THeroCombinationUpReq::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroCombinationUpReq::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroCombinationUpReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroCombinationUpReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 THeroCombinationUpReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.THeroCombinationUpReq.Tid)
  return tid_;
}
inline void THeroCombinationUpReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroCombinationUpReq.Tid)
}

// -------------------------------------------------------------------

// THeroCombinationActiveReq

// optional uint32 Hid = 1;
inline bool THeroCombinationActiveReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroCombinationActiveReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroCombinationActiveReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroCombinationActiveReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroCombinationActiveReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroCombinationActiveReq.Hid)
  return hid_;
}
inline void THeroCombinationActiveReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroCombinationActiveReq.Hid)
}

// optional uint32 Tid = 2;
inline bool THeroCombinationActiveReq::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroCombinationActiveReq::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroCombinationActiveReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroCombinationActiveReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 THeroCombinationActiveReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.THeroCombinationActiveReq.Tid)
  return tid_;
}
inline void THeroCombinationActiveReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroCombinationActiveReq.Tid)
}

// -------------------------------------------------------------------

// THeroSkillUpReq

// optional uint32 Hid = 1;
inline bool THeroSkillUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSkillUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSkillUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSkillUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSkillUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSkillUpReq.Hid)
  return hid_;
}
inline void THeroSkillUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSkillUpReq.Hid)
}

// optional uint32 Tid = 2;
inline bool THeroSkillUpReq::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroSkillUpReq::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroSkillUpReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroSkillUpReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 THeroSkillUpReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSkillUpReq.Tid)
  return tid_;
}
inline void THeroSkillUpReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSkillUpReq.Tid)
}

// optional uint32 UpNum = 3;
inline bool THeroSkillUpReq::has_upnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroSkillUpReq::set_has_upnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroSkillUpReq::clear_has_upnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroSkillUpReq::clear_upnum() {
  upnum_ = 0u;
  clear_has_upnum();
}
inline ::google::protobuf::uint32 THeroSkillUpReq::upnum() const {
  // @@protoc_insertion_point(field_get:pb.THeroSkillUpReq.UpNum)
  return upnum_;
}
inline void THeroSkillUpReq::set_upnum(::google::protobuf::uint32 value) {
  set_has_upnum();
  upnum_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSkillUpReq.UpNum)
}

// -------------------------------------------------------------------

// THeroResetSkillReq

// optional uint32 Hid = 1;
inline bool THeroResetSkillReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroResetSkillReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroResetSkillReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroResetSkillReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroResetSkillReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroResetSkillReq.Hid)
  return hid_;
}
inline void THeroResetSkillReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroResetSkillReq.Hid)
}

// -------------------------------------------------------------------

// THeroSetMultiEquipReq

// optional uint32 Hid = 1;
inline bool THeroSetMultiEquipReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetMultiEquipReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetMultiEquipReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetMultiEquipReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetMultiEquipReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiEquipReq.Hid)
  return hid_;
}
inline void THeroSetMultiEquipReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetMultiEquipReq.Hid)
}

// repeated .pb.THeroEquipItem EquipItems = 2;
inline int THeroSetMultiEquipReq::equipitems_size() const {
  return equipitems_.size();
}
inline void THeroSetMultiEquipReq::clear_equipitems() {
  equipitems_.Clear();
}
inline const ::pb::THeroEquipItem& THeroSetMultiEquipReq::equipitems(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiEquipReq.EquipItems)
  return equipitems_.Get(index);
}
inline ::pb::THeroEquipItem* THeroSetMultiEquipReq::mutable_equipitems(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroSetMultiEquipReq.EquipItems)
  return equipitems_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroSetMultiEquipReq::add_equipitems() {
  // @@protoc_insertion_point(field_add:pb.THeroSetMultiEquipReq.EquipItems)
  return equipitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroSetMultiEquipReq::equipitems() const {
  // @@protoc_insertion_point(field_list:pb.THeroSetMultiEquipReq.EquipItems)
  return equipitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroSetMultiEquipReq::mutable_equipitems() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroSetMultiEquipReq.EquipItems)
  return &equipitems_;
}

// -------------------------------------------------------------------

// THeroSetMultiSoulReq

// optional uint32 Hid = 1;
inline bool THeroSetMultiSoulReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetMultiSoulReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetMultiSoulReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetMultiSoulReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetMultiSoulReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiSoulReq.Hid)
  return hid_;
}
inline void THeroSetMultiSoulReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetMultiSoulReq.Hid)
}

// repeated .pb.THeroEquipItem SoulItems = 2;
inline int THeroSetMultiSoulReq::soulitems_size() const {
  return soulitems_.size();
}
inline void THeroSetMultiSoulReq::clear_soulitems() {
  soulitems_.Clear();
}
inline const ::pb::THeroEquipItem& THeroSetMultiSoulReq::soulitems(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiSoulReq.SoulItems)
  return soulitems_.Get(index);
}
inline ::pb::THeroEquipItem* THeroSetMultiSoulReq::mutable_soulitems(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroSetMultiSoulReq.SoulItems)
  return soulitems_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroSetMultiSoulReq::add_soulitems() {
  // @@protoc_insertion_point(field_add:pb.THeroSetMultiSoulReq.SoulItems)
  return soulitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroSetMultiSoulReq::soulitems() const {
  // @@protoc_insertion_point(field_list:pb.THeroSetMultiSoulReq.SoulItems)
  return soulitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroSetMultiSoulReq::mutable_soulitems() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroSetMultiSoulReq.SoulItems)
  return &soulitems_;
}

// -------------------------------------------------------------------

// THeroSetWarRidingReq

// optional uint32 Hid = 1;
inline bool THeroSetWarRidingReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetWarRidingReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetWarRidingReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetWarRidingReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetWarRidingReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetWarRidingReq.Hid)
  return hid_;
}
inline void THeroSetWarRidingReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetWarRidingReq.Hid)
}

// optional uint32 WarRidingTid = 2;
inline bool THeroSetWarRidingReq::has_warridingtid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroSetWarRidingReq::set_has_warridingtid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroSetWarRidingReq::clear_has_warridingtid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroSetWarRidingReq::clear_warridingtid() {
  warridingtid_ = 0u;
  clear_has_warridingtid();
}
inline ::google::protobuf::uint32 THeroSetWarRidingReq::warridingtid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetWarRidingReq.WarRidingTid)
  return warridingtid_;
}
inline void THeroSetWarRidingReq::set_warridingtid(::google::protobuf::uint32 value) {
  set_has_warridingtid();
  warridingtid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetWarRidingReq.WarRidingTid)
}

// -------------------------------------------------------------------

// THeroSetMultiExclEquipReq

// optional uint32 Hid = 1;
inline bool THeroSetMultiExclEquipReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetMultiExclEquipReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetMultiExclEquipReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetMultiExclEquipReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetMultiExclEquipReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiExclEquipReq.Hid)
  return hid_;
}
inline void THeroSetMultiExclEquipReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetMultiExclEquipReq.Hid)
}

// -------------------------------------------------------------------

// THeroSetMultiExclEquipRsp

// optional uint32 ItemId = 1;
inline bool THeroSetMultiExclEquipRsp::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetMultiExclEquipRsp::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetMultiExclEquipRsp::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetMultiExclEquipRsp::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 THeroSetMultiExclEquipRsp::itemid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiExclEquipRsp.ItemId)
  return itemid_;
}
inline void THeroSetMultiExclEquipRsp::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetMultiExclEquipRsp.ItemId)
}

// -------------------------------------------------------------------

// THeroSetMultiSilkBagReq

// optional uint32 Hid = 1;
inline bool THeroSetMultiSilkBagReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetMultiSilkBagReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetMultiSilkBagReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetMultiSilkBagReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetMultiSilkBagReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiSilkBagReq.Hid)
  return hid_;
}
inline void THeroSetMultiSilkBagReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetMultiSilkBagReq.Hid)
}

// repeated .pb.THeroEquipItem SilkBagItems = 2;
inline int THeroSetMultiSilkBagReq::silkbagitems_size() const {
  return silkbagitems_.size();
}
inline void THeroSetMultiSilkBagReq::clear_silkbagitems() {
  silkbagitems_.Clear();
}
inline const ::pb::THeroEquipItem& THeroSetMultiSilkBagReq::silkbagitems(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiSilkBagReq.SilkBagItems)
  return silkbagitems_.Get(index);
}
inline ::pb::THeroEquipItem* THeroSetMultiSilkBagReq::mutable_silkbagitems(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroSetMultiSilkBagReq.SilkBagItems)
  return silkbagitems_.Mutable(index);
}
inline ::pb::THeroEquipItem* THeroSetMultiSilkBagReq::add_silkbagitems() {
  // @@protoc_insertion_point(field_add:pb.THeroSetMultiSilkBagReq.SilkBagItems)
  return silkbagitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >&
THeroSetMultiSilkBagReq::silkbagitems() const {
  // @@protoc_insertion_point(field_list:pb.THeroSetMultiSilkBagReq.SilkBagItems)
  return silkbagitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroEquipItem >*
THeroSetMultiSilkBagReq::mutable_silkbagitems() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroSetMultiSilkBagReq.SilkBagItems)
  return &silkbagitems_;
}

// -------------------------------------------------------------------

// THeroSetDivineEquipReq

// optional uint32 Pos = 1;
inline bool THeroSetDivineEquipReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetDivineEquipReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetDivineEquipReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetDivineEquipReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 THeroSetDivineEquipReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetDivineEquipReq.Pos)
  return pos_;
}
inline void THeroSetDivineEquipReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetDivineEquipReq.Pos)
}

// optional uint32 Hid = 2;
inline bool THeroSetDivineEquipReq::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroSetDivineEquipReq::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroSetDivineEquipReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroSetDivineEquipReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetDivineEquipReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetDivineEquipReq.Hid)
  return hid_;
}
inline void THeroSetDivineEquipReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetDivineEquipReq.Hid)
}

// optional uint32 ItemId = 3;
inline bool THeroSetDivineEquipReq::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroSetDivineEquipReq::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroSetDivineEquipReq::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroSetDivineEquipReq::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 THeroSetDivineEquipReq::itemid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetDivineEquipReq.ItemId)
  return itemid_;
}
inline void THeroSetDivineEquipReq::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetDivineEquipReq.ItemId)
}

// -------------------------------------------------------------------

// THeroUpgradeToGoldReq

// optional uint32 Hid = 1;
inline bool THeroUpgradeToGoldReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroUpgradeToGoldReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroUpgradeToGoldReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroUpgradeToGoldReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroUpgradeToGoldReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToGoldReq.Hid)
  return hid_;
}
inline void THeroUpgradeToGoldReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpgradeToGoldReq.Hid)
}

// repeated .pb.TSimpleItem CosItemArray = 2;
inline int THeroUpgradeToGoldReq::cositemarray_size() const {
  return cositemarray_.size();
}
inline void THeroUpgradeToGoldReq::clear_cositemarray() {
  cositemarray_.Clear();
}
inline const ::pb::TSimpleItem& THeroUpgradeToGoldReq::cositemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToGoldReq.CosItemArray)
  return cositemarray_.Get(index);
}
inline ::pb::TSimpleItem* THeroUpgradeToGoldReq::mutable_cositemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroUpgradeToGoldReq.CosItemArray)
  return cositemarray_.Mutable(index);
}
inline ::pb::TSimpleItem* THeroUpgradeToGoldReq::add_cositemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroUpgradeToGoldReq.CosItemArray)
  return cositemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
THeroUpgradeToGoldReq::cositemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroUpgradeToGoldReq.CosItemArray)
  return cositemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
THeroUpgradeToGoldReq::mutable_cositemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroUpgradeToGoldReq.CosItemArray)
  return &cositemarray_;
}

// -------------------------------------------------------------------

// THeroUniversalFragConvertReq

// optional uint32 ItemTid = 1;
inline bool THeroUniversalFragConvertReq::has_itemtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroUniversalFragConvertReq::set_has_itemtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroUniversalFragConvertReq::clear_has_itemtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroUniversalFragConvertReq::clear_itemtid() {
  itemtid_ = 0u;
  clear_has_itemtid();
}
inline ::google::protobuf::uint32 THeroUniversalFragConvertReq::itemtid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUniversalFragConvertReq.ItemTid)
  return itemtid_;
}
inline void THeroUniversalFragConvertReq::set_itemtid(::google::protobuf::uint32 value) {
  set_has_itemtid();
  itemtid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUniversalFragConvertReq.ItemTid)
}

// optional uint32 Htid = 2;
inline bool THeroUniversalFragConvertReq::has_htid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroUniversalFragConvertReq::set_has_htid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroUniversalFragConvertReq::clear_has_htid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroUniversalFragConvertReq::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 THeroUniversalFragConvertReq::htid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUniversalFragConvertReq.Htid)
  return htid_;
}
inline void THeroUniversalFragConvertReq::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUniversalFragConvertReq.Htid)
}

// optional uint32 Num = 3;
inline bool THeroUniversalFragConvertReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroUniversalFragConvertReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroUniversalFragConvertReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroUniversalFragConvertReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 THeroUniversalFragConvertReq::num() const {
  // @@protoc_insertion_point(field_get:pb.THeroUniversalFragConvertReq.Num)
  return num_;
}
inline void THeroUniversalFragConvertReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUniversalFragConvertReq.Num)
}

// -------------------------------------------------------------------

// THeroGoldBreakReq

// optional uint32 Hid = 1;
inline bool THeroGoldBreakReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroGoldBreakReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroGoldBreakReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroGoldBreakReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroGoldBreakReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroGoldBreakReq.Hid)
  return hid_;
}
inline void THeroGoldBreakReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGoldBreakReq.Hid)
}

// -------------------------------------------------------------------

// THeroWhiteGoldBreakReq

// optional uint32 Hid = 1;
inline bool THeroWhiteGoldBreakReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroWhiteGoldBreakReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroWhiteGoldBreakReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroWhiteGoldBreakReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroWhiteGoldBreakReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroWhiteGoldBreakReq.Hid)
  return hid_;
}
inline void THeroWhiteGoldBreakReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroWhiteGoldBreakReq.Hid)
}

// -------------------------------------------------------------------

// THeroGoldHeroLinkReq

// optional uint32 Hid1 = 1;
inline bool THeroGoldHeroLinkReq::has_hid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroGoldHeroLinkReq::set_has_hid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroGoldHeroLinkReq::clear_has_hid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroGoldHeroLinkReq::clear_hid1() {
  hid1_ = 0u;
  clear_has_hid1();
}
inline ::google::protobuf::uint32 THeroGoldHeroLinkReq::hid1() const {
  // @@protoc_insertion_point(field_get:pb.THeroGoldHeroLinkReq.Hid1)
  return hid1_;
}
inline void THeroGoldHeroLinkReq::set_hid1(::google::protobuf::uint32 value) {
  set_has_hid1();
  hid1_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGoldHeroLinkReq.Hid1)
}

// optional uint32 Hid2 = 2;
inline bool THeroGoldHeroLinkReq::has_hid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroGoldHeroLinkReq::set_has_hid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroGoldHeroLinkReq::clear_has_hid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroGoldHeroLinkReq::clear_hid2() {
  hid2_ = 0u;
  clear_has_hid2();
}
inline ::google::protobuf::uint32 THeroGoldHeroLinkReq::hid2() const {
  // @@protoc_insertion_point(field_get:pb.THeroGoldHeroLinkReq.Hid2)
  return hid2_;
}
inline void THeroGoldHeroLinkReq::set_hid2(::google::protobuf::uint32 value) {
  set_has_hid2();
  hid2_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGoldHeroLinkReq.Hid2)
}

// -------------------------------------------------------------------

// THeroUpgradeToWhiteGoldReq

// optional uint32 Hid = 1;
inline bool THeroUpgradeToWhiteGoldReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroUpgradeToWhiteGoldReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroUpgradeToWhiteGoldReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroUpgradeToWhiteGoldReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroUpgradeToWhiteGoldReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToWhiteGoldReq.Hid)
  return hid_;
}
inline void THeroUpgradeToWhiteGoldReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpgradeToWhiteGoldReq.Hid)
}

// repeated .pb.TSimpleItem CosItemArray = 2;
inline int THeroUpgradeToWhiteGoldReq::cositemarray_size() const {
  return cositemarray_.size();
}
inline void THeroUpgradeToWhiteGoldReq::clear_cositemarray() {
  cositemarray_.Clear();
}
inline const ::pb::TSimpleItem& THeroUpgradeToWhiteGoldReq::cositemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToWhiteGoldReq.CosItemArray)
  return cositemarray_.Get(index);
}
inline ::pb::TSimpleItem* THeroUpgradeToWhiteGoldReq::mutable_cositemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroUpgradeToWhiteGoldReq.CosItemArray)
  return cositemarray_.Mutable(index);
}
inline ::pb::TSimpleItem* THeroUpgradeToWhiteGoldReq::add_cositemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroUpgradeToWhiteGoldReq.CosItemArray)
  return cositemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
THeroUpgradeToWhiteGoldReq::cositemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroUpgradeToWhiteGoldReq.CosItemArray)
  return cositemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
THeroUpgradeToWhiteGoldReq::mutable_cositemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroUpgradeToWhiteGoldReq.CosItemArray)
  return &cositemarray_;
}

// -------------------------------------------------------------------

// THeroGetPropReq

// optional uint32 Hid = 1;
inline bool THeroGetPropReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroGetPropReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroGetPropReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroGetPropReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroGetPropReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroGetPropReq.Hid)
  return hid_;
}
inline void THeroGetPropReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGetPropReq.Hid)
}

// optional uint32 Htid = 2;
inline bool THeroGetPropReq::has_htid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroGetPropReq::set_has_htid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroGetPropReq::clear_has_htid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroGetPropReq::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 THeroGetPropReq::htid() const {
  // @@protoc_insertion_point(field_get:pb.THeroGetPropReq.Htid)
  return htid_;
}
inline void THeroGetPropReq::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGetPropReq.Htid)
}

// optional uint64 Uid = 3;
inline bool THeroGetPropReq::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroGetPropReq::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroGetPropReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroGetPropReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 THeroGetPropReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.THeroGetPropReq.Uid)
  return uid_;
}
inline void THeroGetPropReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroGetPropReq.Uid)
}

// -------------------------------------------------------------------

// THeroGetPropResp

// optional .pb.TUnitInfo PropInfo = 1;
inline bool THeroGetPropResp::has_propinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroGetPropResp::set_has_propinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroGetPropResp::clear_has_propinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroGetPropResp::clear_propinfo() {
  if (propinfo_ != NULL) propinfo_->::pb::TUnitInfo::Clear();
  clear_has_propinfo();
}
inline const ::pb::TUnitInfo& THeroGetPropResp::propinfo() const {
  // @@protoc_insertion_point(field_get:pb.THeroGetPropResp.PropInfo)
  return propinfo_ != NULL ? *propinfo_ : *default_instance_->propinfo_;
}
inline ::pb::TUnitInfo* THeroGetPropResp::mutable_propinfo() {
  set_has_propinfo();
  if (propinfo_ == NULL) propinfo_ = new ::pb::TUnitInfo;
  // @@protoc_insertion_point(field_mutable:pb.THeroGetPropResp.PropInfo)
  return propinfo_;
}
inline ::pb::TUnitInfo* THeroGetPropResp::release_propinfo() {
  clear_has_propinfo();
  ::pb::TUnitInfo* temp = propinfo_;
  propinfo_ = NULL;
  return temp;
}
inline void THeroGetPropResp::set_allocated_propinfo(::pb::TUnitInfo* propinfo) {
  delete propinfo_;
  propinfo_ = propinfo;
  if (propinfo) {
    set_has_propinfo();
  } else {
    clear_has_propinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.THeroGetPropResp.PropInfo)
}

// -------------------------------------------------------------------

// TOtherUserHeroInfo

// optional .pb.THeroInfo HeroInfo = 1;
inline bool TOtherUserHeroInfo::has_heroinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOtherUserHeroInfo::set_has_heroinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOtherUserHeroInfo::clear_has_heroinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOtherUserHeroInfo::clear_heroinfo() {
  if (heroinfo_ != NULL) heroinfo_->::pb::THeroInfo::Clear();
  clear_has_heroinfo();
}
inline const ::pb::THeroInfo& TOtherUserHeroInfo::heroinfo() const {
  // @@protoc_insertion_point(field_get:pb.TOtherUserHeroInfo.HeroInfo)
  return heroinfo_ != NULL ? *heroinfo_ : *default_instance_->heroinfo_;
}
inline ::pb::THeroInfo* TOtherUserHeroInfo::mutable_heroinfo() {
  set_has_heroinfo();
  if (heroinfo_ == NULL) heroinfo_ = new ::pb::THeroInfo;
  // @@protoc_insertion_point(field_mutable:pb.TOtherUserHeroInfo.HeroInfo)
  return heroinfo_;
}
inline ::pb::THeroInfo* TOtherUserHeroInfo::release_heroinfo() {
  clear_has_heroinfo();
  ::pb::THeroInfo* temp = heroinfo_;
  heroinfo_ = NULL;
  return temp;
}
inline void TOtherUserHeroInfo::set_allocated_heroinfo(::pb::THeroInfo* heroinfo) {
  delete heroinfo_;
  heroinfo_ = heroinfo;
  if (heroinfo) {
    set_has_heroinfo();
  } else {
    clear_has_heroinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TOtherUserHeroInfo.HeroInfo)
}

// repeated .pb.TAttribute AttrArr = 2;
inline int TOtherUserHeroInfo::attrarr_size() const {
  return attrarr_.size();
}
inline void TOtherUserHeroInfo::clear_attrarr() {
  attrarr_.Clear();
}
inline const ::pb::TAttribute& TOtherUserHeroInfo::attrarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOtherUserHeroInfo.AttrArr)
  return attrarr_.Get(index);
}
inline ::pb::TAttribute* TOtherUserHeroInfo::mutable_attrarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOtherUserHeroInfo.AttrArr)
  return attrarr_.Mutable(index);
}
inline ::pb::TAttribute* TOtherUserHeroInfo::add_attrarr() {
  // @@protoc_insertion_point(field_add:pb.TOtherUserHeroInfo.AttrArr)
  return attrarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttribute >&
TOtherUserHeroInfo::attrarr() const {
  // @@protoc_insertion_point(field_list:pb.TOtherUserHeroInfo.AttrArr)
  return attrarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAttribute >*
TOtherUserHeroInfo::mutable_attrarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOtherUserHeroInfo.AttrArr)
  return &attrarr_;
}

// optional .pb.EPlugOpenType OpenType = 6;
inline bool TOtherUserHeroInfo::has_opentype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOtherUserHeroInfo::set_has_opentype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOtherUserHeroInfo::clear_has_opentype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOtherUserHeroInfo::clear_opentype() {
  opentype_ = 0;
  clear_has_opentype();
}
inline ::pb::EPlugOpenType TOtherUserHeroInfo::opentype() const {
  // @@protoc_insertion_point(field_get:pb.TOtherUserHeroInfo.OpenType)
  return static_cast< ::pb::EPlugOpenType >(opentype_);
}
inline void TOtherUserHeroInfo::set_opentype(::pb::EPlugOpenType value) {
  assert(::pb::EPlugOpenType_IsValid(value));
  set_has_opentype();
  opentype_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherUserHeroInfo.OpenType)
}

// -------------------------------------------------------------------

// TSetPlugInHeroReq

// optional uint32 Hid = 1;
inline bool TSetPlugInHeroReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSetPlugInHeroReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSetPlugInHeroReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSetPlugInHeroReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TSetPlugInHeroReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TSetPlugInHeroReq.Hid)
  return hid_;
}
inline void TSetPlugInHeroReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSetPlugInHeroReq.Hid)
}

// optional uint32 PlugInHid = 2;
inline bool TSetPlugInHeroReq::has_pluginhid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSetPlugInHeroReq::set_has_pluginhid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSetPlugInHeroReq::clear_has_pluginhid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSetPlugInHeroReq::clear_pluginhid() {
  pluginhid_ = 0u;
  clear_has_pluginhid();
}
inline ::google::protobuf::uint32 TSetPlugInHeroReq::pluginhid() const {
  // @@protoc_insertion_point(field_get:pb.TSetPlugInHeroReq.PlugInHid)
  return pluginhid_;
}
inline void TSetPlugInHeroReq::set_pluginhid(::google::protobuf::uint32 value) {
  set_has_pluginhid();
  pluginhid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSetPlugInHeroReq.PlugInHid)
}

// optional uint32 Pos = 3;
inline bool TSetPlugInHeroReq::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSetPlugInHeroReq::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSetPlugInHeroReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSetPlugInHeroReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TSetPlugInHeroReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.TSetPlugInHeroReq.Pos)
  return pos_;
}
inline void TSetPlugInHeroReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TSetPlugInHeroReq.Pos)
}

// -------------------------------------------------------------------

// TPlugLevelUpReq

// optional uint32 Pos = 1;
inline bool TPlugLevelUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPlugLevelUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPlugLevelUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPlugLevelUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TPlugLevelUpReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.TPlugLevelUpReq.Pos)
  return pos_;
}
inline void TPlugLevelUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugLevelUpReq.Pos)
}

// optional uint32 Hid = 2;
inline bool TPlugLevelUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPlugLevelUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPlugLevelUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPlugLevelUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TPlugLevelUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TPlugLevelUpReq.Hid)
  return hid_;
}
inline void TPlugLevelUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TPlugLevelUpReq.Hid)
}

// -------------------------------------------------------------------

// TResetPlugReq

// optional uint32 Hid = 1;
inline bool TResetPlugReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TResetPlugReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TResetPlugReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TResetPlugReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TResetPlugReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TResetPlugReq.Hid)
  return hid_;
}
inline void TResetPlugReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TResetPlugReq.Hid)
}

// -------------------------------------------------------------------

// TResetPlugRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TResetPlugRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TResetPlugRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TResetPlugRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TResetPlugRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TResetPlugRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TResetPlugRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TResetPlugRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TResetPlugRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TResetPlugRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TResetPlugRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TResetPlugRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TResetPlugRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// THeroUpgradeGodLv

// optional uint32 Hid = 1;
inline bool THeroUpgradeGodLv::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroUpgradeGodLv::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroUpgradeGodLv::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroUpgradeGodLv::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroUpgradeGodLv::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeGodLv.Hid)
  return hid_;
}
inline void THeroUpgradeGodLv::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpgradeGodLv.Hid)
}

// -------------------------------------------------------------------

// THeroChainSoulReq

// optional uint32 Hid1 = 1;
inline bool THeroChainSoulReq::has_hid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroChainSoulReq::set_has_hid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroChainSoulReq::clear_has_hid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroChainSoulReq::clear_hid1() {
  hid1_ = 0u;
  clear_has_hid1();
}
inline ::google::protobuf::uint32 THeroChainSoulReq::hid1() const {
  // @@protoc_insertion_point(field_get:pb.THeroChainSoulReq.Hid1)
  return hid1_;
}
inline void THeroChainSoulReq::set_hid1(::google::protobuf::uint32 value) {
  set_has_hid1();
  hid1_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroChainSoulReq.Hid1)
}

// optional uint32 Hid2 = 2;
inline bool THeroChainSoulReq::has_hid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroChainSoulReq::set_has_hid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroChainSoulReq::clear_has_hid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroChainSoulReq::clear_hid2() {
  hid2_ = 0u;
  clear_has_hid2();
}
inline ::google::protobuf::uint32 THeroChainSoulReq::hid2() const {
  // @@protoc_insertion_point(field_get:pb.THeroChainSoulReq.Hid2)
  return hid2_;
}
inline void THeroChainSoulReq::set_hid2(::google::protobuf::uint32 value) {
  set_has_hid2();
  hid2_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroChainSoulReq.Hid2)
}

// -------------------------------------------------------------------

// THeroChainSoulLvUpReq

// optional uint32 Hid = 1;
inline bool THeroChainSoulLvUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroChainSoulLvUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroChainSoulLvUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroChainSoulLvUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroChainSoulLvUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroChainSoulLvUpReq.Hid)
  return hid_;
}
inline void THeroChainSoulLvUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroChainSoulLvUpReq.Hid)
}

// -------------------------------------------------------------------

// THeroUpgradeToPurpleGoldLvUpReq

// optional uint32 Hid = 1;
inline bool THeroUpgradeToPurpleGoldLvUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroUpgradeToPurpleGoldLvUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToPurpleGoldLvUpReq.Hid)
  return hid_;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpgradeToPurpleGoldLvUpReq.Hid)
}

// optional uint32 LvId = 2;
inline bool THeroUpgradeToPurpleGoldLvUpReq::has_lvid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::set_has_lvid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::clear_has_lvid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::clear_lvid() {
  lvid_ = 0u;
  clear_has_lvid();
}
inline ::google::protobuf::uint32 THeroUpgradeToPurpleGoldLvUpReq::lvid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToPurpleGoldLvUpReq.LvId)
  return lvid_;
}
inline void THeroUpgradeToPurpleGoldLvUpReq::set_lvid(::google::protobuf::uint32 value) {
  set_has_lvid();
  lvid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpgradeToPurpleGoldLvUpReq.LvId)
}

// repeated .pb.TSimpleItem CosItemArray = 3;
inline int THeroUpgradeToPurpleGoldLvUpReq::cositemarray_size() const {
  return cositemarray_.size();
}
inline void THeroUpgradeToPurpleGoldLvUpReq::clear_cositemarray() {
  cositemarray_.Clear();
}
inline const ::pb::TSimpleItem& THeroUpgradeToPurpleGoldLvUpReq::cositemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToPurpleGoldLvUpReq.CosItemArray)
  return cositemarray_.Get(index);
}
inline ::pb::TSimpleItem* THeroUpgradeToPurpleGoldLvUpReq::mutable_cositemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroUpgradeToPurpleGoldLvUpReq.CosItemArray)
  return cositemarray_.Mutable(index);
}
inline ::pb::TSimpleItem* THeroUpgradeToPurpleGoldLvUpReq::add_cositemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroUpgradeToPurpleGoldLvUpReq.CosItemArray)
  return cositemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
THeroUpgradeToPurpleGoldLvUpReq::cositemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroUpgradeToPurpleGoldLvUpReq.CosItemArray)
  return cositemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
THeroUpgradeToPurpleGoldLvUpReq::mutable_cositemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroUpgradeToPurpleGoldLvUpReq.CosItemArray)
  return &cositemarray_;
}

// -------------------------------------------------------------------

// THeroUpgradeToPurpleGoldAdvUpReq

// optional uint32 Hid = 1;
inline bool THeroUpgradeToPurpleGoldAdvUpReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroUpgradeToPurpleGoldAdvUpReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroUpgradeToPurpleGoldAdvUpReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroUpgradeToPurpleGoldAdvUpReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroUpgradeToPurpleGoldAdvUpReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroUpgradeToPurpleGoldAdvUpReq.Hid)
  return hid_;
}
inline void THeroUpgradeToPurpleGoldAdvUpReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroUpgradeToPurpleGoldAdvUpReq.Hid)
}

// -------------------------------------------------------------------

// TForceSoulEquipInfo

// optional uint32 Pos = 1;
inline bool TForceSoulEquipInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TForceSoulEquipInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TForceSoulEquipInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TForceSoulEquipInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TForceSoulEquipInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TForceSoulEquipInfo.Pos)
  return pos_;
}
inline void TForceSoulEquipInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TForceSoulEquipInfo.Pos)
}

// optional int32 ItemId = 2;
inline bool TForceSoulEquipInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TForceSoulEquipInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TForceSoulEquipInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TForceSoulEquipInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 TForceSoulEquipInfo::itemid() const {
  // @@protoc_insertion_point(field_get:pb.TForceSoulEquipInfo.ItemId)
  return itemid_;
}
inline void TForceSoulEquipInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TForceSoulEquipInfo.ItemId)
}

// -------------------------------------------------------------------

// THeroSetMultiForceSoulReq

// optional uint32 Hid = 1;
inline bool THeroSetMultiForceSoulReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroSetMultiForceSoulReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroSetMultiForceSoulReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroSetMultiForceSoulReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroSetMultiForceSoulReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiForceSoulReq.Hid)
  return hid_;
}
inline void THeroSetMultiForceSoulReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroSetMultiForceSoulReq.Hid)
}

// repeated .pb.TForceSoulEquipInfo EquipItems = 2;
inline int THeroSetMultiForceSoulReq::equipitems_size() const {
  return equipitems_.size();
}
inline void THeroSetMultiForceSoulReq::clear_equipitems() {
  equipitems_.Clear();
}
inline const ::pb::TForceSoulEquipInfo& THeroSetMultiForceSoulReq::equipitems(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroSetMultiForceSoulReq.EquipItems)
  return equipitems_.Get(index);
}
inline ::pb::TForceSoulEquipInfo* THeroSetMultiForceSoulReq::mutable_equipitems(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroSetMultiForceSoulReq.EquipItems)
  return equipitems_.Mutable(index);
}
inline ::pb::TForceSoulEquipInfo* THeroSetMultiForceSoulReq::add_equipitems() {
  // @@protoc_insertion_point(field_add:pb.THeroSetMultiForceSoulReq.EquipItems)
  return equipitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TForceSoulEquipInfo >&
THeroSetMultiForceSoulReq::equipitems() const {
  // @@protoc_insertion_point(field_list:pb.THeroSetMultiForceSoulReq.EquipItems)
  return equipitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TForceSoulEquipInfo >*
THeroSetMultiForceSoulReq::mutable_equipitems() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroSetMultiForceSoulReq.EquipItems)
  return &equipitems_;
}

// -------------------------------------------------------------------

// THeroAwakeRealBodyReq

// optional uint32 Hid = 1;
inline bool THeroAwakeRealBodyReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroAwakeRealBodyReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroAwakeRealBodyReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroAwakeRealBodyReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroAwakeRealBodyReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroAwakeRealBodyReq.Hid)
  return hid_;
}
inline void THeroAwakeRealBodyReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroAwakeRealBodyReq.Hid)
}

// repeated .pb.TSimpleItem CosItemArray = 2;
inline int THeroAwakeRealBodyReq::cositemarray_size() const {
  return cositemarray_.size();
}
inline void THeroAwakeRealBodyReq::clear_cositemarray() {
  cositemarray_.Clear();
}
inline const ::pb::TSimpleItem& THeroAwakeRealBodyReq::cositemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroAwakeRealBodyReq.CosItemArray)
  return cositemarray_.Get(index);
}
inline ::pb::TSimpleItem* THeroAwakeRealBodyReq::mutable_cositemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroAwakeRealBodyReq.CosItemArray)
  return cositemarray_.Mutable(index);
}
inline ::pb::TSimpleItem* THeroAwakeRealBodyReq::add_cositemarray() {
  // @@protoc_insertion_point(field_add:pb.THeroAwakeRealBodyReq.CosItemArray)
  return cositemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
THeroAwakeRealBodyReq::cositemarray() const {
  // @@protoc_insertion_point(field_list:pb.THeroAwakeRealBodyReq.CosItemArray)
  return cositemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
THeroAwakeRealBodyReq::mutable_cositemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroAwakeRealBodyReq.CosItemArray)
  return &cositemarray_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EPlugOpenType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EPlugOpenType>() {
  return ::pb::EPlugOpenType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fHero_2eproto__INCLUDED
