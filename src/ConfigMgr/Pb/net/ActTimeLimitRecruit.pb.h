// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActTimeLimitRecruit.proto

#ifndef PROTOBUF_net_2fActTimeLimitRecruit_2eproto__INCLUDED
#define PROTOBUF_net_2fActTimeLimitRecruit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/Common.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

class TActTimeLimitRecruitHeroRecInfo;
class TActTimeLimitRecruitGetInfoRsp;
class TActTimeLimitRecruitDoRecruitReq;
class TActTimeLimitRecruitDoRecruitRsp;
class TActTimeLimitRecruitReward;
class TActTimeLimitRecruitReceiveRewardReq;
class TActTimeLimitRecruitGoodsInfo;
class TActTimeLimitRecruitGetGoodsInfoRsp;
class TActTimeLimitRecruitBuyGoodsReq;
class TActTimeLimitRecruitSendGiftReq;
class TActTimeLimitRecruitReceiveFriendshipRewardReq;
class TActTimeLimitRecruitBuyGoodsNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitHeroRecInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitHeroRecInfo : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitHeroRecInfo();
  virtual ~TActTimeLimitRecruitHeroRecInfo();

  TActTimeLimitRecruitHeroRecInfo(const TActTimeLimitRecruitHeroRecInfo& from);

  inline TActTimeLimitRecruitHeroRecInfo& operator=(const TActTimeLimitRecruitHeroRecInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitHeroRecInfo& default_instance();

  void Swap(TActTimeLimitRecruitHeroRecInfo* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitHeroRecInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitHeroRecInfo& from);
  void MergeFrom(const TActTimeLimitRecruitHeroRecInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitHeroRecInfo</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 RecNum = 2;
  inline bool has_recnum() const;
  inline void clear_recnum();
  static const int kRecNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitHeroRecInfo</name>
  	<Function>
  		<name>recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recnum() const;
  inline void set_recnum(::google::protobuf::uint32 value);

  // repeated uint32 RewardIdArr = 3;
  inline int rewardidarr_size() const;
  inline void clear_rewardidarr();
  static const int kRewardIdArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitHeroRecInfo</name>
  	<Function>
  		<name>rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardidarr_size</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardidarr(int index) const;
  inline void set_rewardidarr(int index, ::google::protobuf::uint32 value);
  inline void add_rewardidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardidarr();

  // optional uint32 FriendshipValue = 4;
  inline bool has_friendshipvalue() const;
  inline void clear_friendshipvalue();
  static const int kFriendshipValueFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitHeroRecInfo</name>
  	<Function>
  		<name>friendshipvalue</name>
  		<replaceName>FriendshipValue</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_friendshipvalue</name>
  		<replaceName>FriendshipValue</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_friendshipvalue</name>
  		<replaceName>FriendshipValue</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 friendshipvalue() const;
  inline void set_friendshipvalue(::google::protobuf::uint32 value);

  // repeated uint32 FriendshipRewardIdArr = 5;
  inline int friendshiprewardidarr_size() const;
  inline void clear_friendshiprewardidarr();
  static const int kFriendshipRewardIdArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitHeroRecInfo</name>
  	<Function>
  		<name>friendshiprewardidarr</name>
  		<replaceName>FriendshipRewardIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_friendshiprewardidarr</name>
  		<replaceName>FriendshipRewardIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_friendshiprewardidarr</name>
  		<replaceName>FriendshipRewardIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_friendshiprewardidarr</name>
  		<replaceName>FriendshipRewardIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>friendshiprewardidarr_size</name>
  		<replaceName>FriendshipRewardIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 friendshiprewardidarr(int index) const;
  inline void set_friendshiprewardidarr(int index, ::google::protobuf::uint32 value);
  inline void add_friendshiprewardidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      friendshiprewardidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_friendshiprewardidarr();

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitHeroRecInfo)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_recnum();
  inline void clear_has_recnum();
  inline void set_has_friendshipvalue();
  inline void clear_has_friendshipvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 recnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardidarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > friendshiprewardidarr_;
  ::google::protobuf::uint32 friendshipvalue_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitHeroRecInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitGetInfoRsp();
  virtual ~TActTimeLimitRecruitGetInfoRsp();

  TActTimeLimitRecruitGetInfoRsp(const TActTimeLimitRecruitGetInfoRsp& from);

  inline TActTimeLimitRecruitGetInfoRsp& operator=(const TActTimeLimitRecruitGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitGetInfoRsp& default_instance();

  void Swap(TActTimeLimitRecruitGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitGetInfoRsp& from);
  void MergeFrom(const TActTimeLimitRecruitGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActTimeLimitRecruitHeroRecInfo HeroRecInfoArr = 1;
  inline int herorecinfoarr_size() const;
  inline void clear_herorecinfoarr();
  static const int kHeroRecInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitGetInfoRsp</name>
  	<Function>
  		<name>herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>herorecinfoarr_size</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTimeLimitRecruitHeroRecInfo& herorecinfoarr(int index) const;
  inline ::pb::TActTimeLimitRecruitHeroRecInfo* mutable_herorecinfoarr(int index);
  inline ::pb::TActTimeLimitRecruitHeroRecInfo* add_herorecinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitHeroRecInfo >&
      herorecinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitHeroRecInfo >*
      mutable_herorecinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitHeroRecInfo > herorecinfoarr_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitDoRecruitReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitDoRecruitReq : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitDoRecruitReq();
  virtual ~TActTimeLimitRecruitDoRecruitReq();

  TActTimeLimitRecruitDoRecruitReq(const TActTimeLimitRecruitDoRecruitReq& from);

  inline TActTimeLimitRecruitDoRecruitReq& operator=(const TActTimeLimitRecruitDoRecruitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitDoRecruitReq& default_instance();

  void Swap(TActTimeLimitRecruitDoRecruitReq* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitDoRecruitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitDoRecruitReq& from);
  void MergeFrom(const TActTimeLimitRecruitDoRecruitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitDoRecruitReq</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 RecNum = 2;
  inline bool has_recnum() const;
  inline void clear_recnum();
  static const int kRecNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitDoRecruitReq</name>
  	<Function>
  		<name>recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recnum() const;
  inline void set_recnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitDoRecruitReq)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_recnum();
  inline void clear_has_recnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 recnum_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitDoRecruitReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitDoRecruitRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitDoRecruitRsp : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitDoRecruitRsp();
  virtual ~TActTimeLimitRecruitDoRecruitRsp();

  TActTimeLimitRecruitDoRecruitRsp(const TActTimeLimitRecruitDoRecruitRsp& from);

  inline TActTimeLimitRecruitDoRecruitRsp& operator=(const TActTimeLimitRecruitDoRecruitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitDoRecruitRsp& default_instance();

  void Swap(TActTimeLimitRecruitDoRecruitRsp* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitDoRecruitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitDoRecruitRsp& from);
  void MergeFrom(const TActTimeLimitRecruitDoRecruitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActTimeLimitRecruitReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitDoRecruitRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTimeLimitRecruitReward& rewardarr(int index) const;
  inline ::pb::TActTimeLimitRecruitReward* mutable_rewardarr(int index);
  inline ::pb::TActTimeLimitRecruitReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitReward >*
      mutable_rewardarr();

  // optional uint32 ArtifactLeftNum = 2;
  inline bool has_artifactleftnum() const;
  inline void clear_artifactleftnum();
  static const int kArtifactLeftNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitDoRecruitRsp</name>
  	<Function>
  		<name>artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactleftnum() const;
  inline void set_artifactleftnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitDoRecruitRsp)
 private:
  inline void set_has_artifactleftnum();
  inline void clear_has_artifactleftnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitReward > rewardarr_;
  ::google::protobuf::uint32 artifactleftnum_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitDoRecruitRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitReward</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitReward : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitReward();
  virtual ~TActTimeLimitRecruitReward();

  TActTimeLimitRecruitReward(const TActTimeLimitRecruitReward& from);

  inline TActTimeLimitRecruitReward& operator=(const TActTimeLimitRecruitReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitReward& default_instance();

  void Swap(TActTimeLimitRecruitReward* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitReward& from);
  void MergeFrom(const TActTimeLimitRecruitReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TCommonReward Reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitReward</name>
  	<Function>
  		<name>reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& reward() const;
  inline ::pb::TCommonReward* mutable_reward();
  inline ::pb::TCommonReward* release_reward();
  inline void set_allocated_reward(::pb::TCommonReward* reward);

  // optional uint32 CritRatio = 2;
  inline bool has_critratio() const;
  inline void clear_critratio();
  static const int kCritRatioFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitReward</name>
  	<Function>
  		<name>critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 critratio() const;
  inline void set_critratio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitReward)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_critratio();
  inline void clear_has_critratio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TCommonReward* reward_;
  ::google::protobuf::uint32 critratio_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitReward* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitReceiveRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitReceiveRewardReq : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitReceiveRewardReq();
  virtual ~TActTimeLimitRecruitReceiveRewardReq();

  TActTimeLimitRecruitReceiveRewardReq(const TActTimeLimitRecruitReceiveRewardReq& from);

  inline TActTimeLimitRecruitReceiveRewardReq& operator=(const TActTimeLimitRecruitReceiveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitReceiveRewardReq& default_instance();

  void Swap(TActTimeLimitRecruitReceiveRewardReq* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitReceiveRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitReceiveRewardReq& from);
  void MergeFrom(const TActTimeLimitRecruitReceiveRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitReceiveRewardReq</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 RewardIndex = 2;
  inline bool has_rewardindex() const;
  inline void clear_rewardindex();
  static const int kRewardIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitReceiveRewardReq</name>
  	<Function>
  		<name>rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardindex() const;
  inline void set_rewardindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitReceiveRewardReq)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_rewardindex();
  inline void clear_has_rewardindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 rewardindex_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitReceiveRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitGoodsInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitGoodsInfo : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitGoodsInfo();
  virtual ~TActTimeLimitRecruitGoodsInfo();

  TActTimeLimitRecruitGoodsInfo(const TActTimeLimitRecruitGoodsInfo& from);

  inline TActTimeLimitRecruitGoodsInfo& operator=(const TActTimeLimitRecruitGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitGoodsInfo& default_instance();

  void Swap(TActTimeLimitRecruitGoodsInfo* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitGoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitGoodsInfo& from);
  void MergeFrom(const TActTimeLimitRecruitGoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitGoodsInfo</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 GoodsId = 2;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitGoodsInfo</name>
  	<Function>
  		<name>goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // optional uint32 BoughtNum = 3;
  inline bool has_boughtnum() const;
  inline void clear_boughtnum();
  static const int kBoughtNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitGoodsInfo</name>
  	<Function>
  		<name>boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boughtnum() const;
  inline void set_boughtnum(::google::protobuf::uint32 value);

  // optional uint64 BoughtTime = 4;
  inline bool has_boughttime() const;
  inline void clear_boughttime();
  static const int kBoughtTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitGoodsInfo</name>
  	<Function>
  		<name>boughttime</name>
  		<replaceName>BoughtTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boughttime</name>
  		<replaceName>BoughtTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughttime</name>
  		<replaceName>BoughtTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 boughttime() const;
  inline void set_boughttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitGoodsInfo)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_boughtnum();
  inline void clear_has_boughtnum();
  inline void set_has_boughttime();
  inline void clear_has_boughttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint64 boughttime_;
  ::google::protobuf::uint32 boughtnum_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitGoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitGetGoodsInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitGetGoodsInfoRsp : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitGetGoodsInfoRsp();
  virtual ~TActTimeLimitRecruitGetGoodsInfoRsp();

  TActTimeLimitRecruitGetGoodsInfoRsp(const TActTimeLimitRecruitGetGoodsInfoRsp& from);

  inline TActTimeLimitRecruitGetGoodsInfoRsp& operator=(const TActTimeLimitRecruitGetGoodsInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitGetGoodsInfoRsp& default_instance();

  void Swap(TActTimeLimitRecruitGetGoodsInfoRsp* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitGetGoodsInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitGetGoodsInfoRsp& from);
  void MergeFrom(const TActTimeLimitRecruitGetGoodsInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  inline int goodsbuyarr_size() const;
  inline void clear_goodsbuyarr();
  static const int kGoodsBuyArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitGetGoodsInfoRsp</name>
  	<Function>
  		<name>goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>goodsbuyarr_size</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTimeLimitRecruitGoodsInfo& goodsbuyarr(int index) const;
  inline ::pb::TActTimeLimitRecruitGoodsInfo* mutable_goodsbuyarr(int index);
  inline ::pb::TActTimeLimitRecruitGoodsInfo* add_goodsbuyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >&
      goodsbuyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >*
      mutable_goodsbuyarr();

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo > goodsbuyarr_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitGetGoodsInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitBuyGoodsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitBuyGoodsReq : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitBuyGoodsReq();
  virtual ~TActTimeLimitRecruitBuyGoodsReq();

  TActTimeLimitRecruitBuyGoodsReq(const TActTimeLimitRecruitBuyGoodsReq& from);

  inline TActTimeLimitRecruitBuyGoodsReq& operator=(const TActTimeLimitRecruitBuyGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitBuyGoodsReq& default_instance();

  void Swap(TActTimeLimitRecruitBuyGoodsReq* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitBuyGoodsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitBuyGoodsReq& from);
  void MergeFrom(const TActTimeLimitRecruitBuyGoodsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitBuyGoodsReq</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 GoodsId = 2;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitBuyGoodsReq</name>
  	<Function>
  		<name>goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // optional uint32 BuyNum = 3;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitBuyGoodsReq</name>
  	<Function>
  		<name>buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitBuyGoodsReq)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 buynum_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitBuyGoodsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitSendGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitSendGiftReq : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitSendGiftReq();
  virtual ~TActTimeLimitRecruitSendGiftReq();

  TActTimeLimitRecruitSendGiftReq(const TActTimeLimitRecruitSendGiftReq& from);

  inline TActTimeLimitRecruitSendGiftReq& operator=(const TActTimeLimitRecruitSendGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitSendGiftReq& default_instance();

  void Swap(TActTimeLimitRecruitSendGiftReq* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitSendGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitSendGiftReq& from);
  void MergeFrom(const TActTimeLimitRecruitSendGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitSendGiftReq</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // repeated .pb.TSimpleItem ItemArr = 2;
  inline int itemarr_size() const;
  inline void clear_itemarr();
  static const int kItemArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitSendGiftReq</name>
  	<Function>
  		<name>itemarr</name>
  		<replaceName>ItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemarr</name>
  		<replaceName>ItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemarr</name>
  		<replaceName>ItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemarr</name>
  		<replaceName>ItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemarr_size</name>
  		<replaceName>ItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& itemarr(int index) const;
  inline ::pb::TSimpleItem* mutable_itemarr(int index);
  inline ::pb::TSimpleItem* add_itemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
      itemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
      mutable_itemarr();

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitSendGiftReq)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem > itemarr_;
  ::google::protobuf::uint32 recid_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitSendGiftReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitReceiveFriendshipRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitReceiveFriendshipRewardReq : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitReceiveFriendshipRewardReq();
  virtual ~TActTimeLimitRecruitReceiveFriendshipRewardReq();

  TActTimeLimitRecruitReceiveFriendshipRewardReq(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from);

  inline TActTimeLimitRecruitReceiveFriendshipRewardReq& operator=(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitReceiveFriendshipRewardReq& default_instance();

  void Swap(TActTimeLimitRecruitReceiveFriendshipRewardReq* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitReceiveFriendshipRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from);
  void MergeFrom(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitReceiveFriendshipRewardReq</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 RewardIndex = 2;
  inline bool has_rewardindex() const;
  inline void clear_rewardindex();
  static const int kRewardIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitReceiveFriendshipRewardReq</name>
  	<Function>
  		<name>rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardindex</name>
  		<replaceName>RewardIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardindex() const;
  inline void set_rewardindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_rewardindex();
  inline void clear_has_rewardindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 rewardindex_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitReceiveFriendshipRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActTimeLimitRecruitBuyGoodsNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActTimeLimitRecruit.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActTimeLimitRecruitBuyGoodsNotify : public ::google::protobuf::Message {
 public:
  TActTimeLimitRecruitBuyGoodsNotify();
  virtual ~TActTimeLimitRecruitBuyGoodsNotify();

  TActTimeLimitRecruitBuyGoodsNotify(const TActTimeLimitRecruitBuyGoodsNotify& from);

  inline TActTimeLimitRecruitBuyGoodsNotify& operator=(const TActTimeLimitRecruitBuyGoodsNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActTimeLimitRecruitBuyGoodsNotify& default_instance();

  void Swap(TActTimeLimitRecruitBuyGoodsNotify* other);

  // implements Message ----------------------------------------------

  TActTimeLimitRecruitBuyGoodsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActTimeLimitRecruitBuyGoodsNotify& from);
  void MergeFrom(const TActTimeLimitRecruitBuyGoodsNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  inline int goodsbuyarr_size() const;
  inline void clear_goodsbuyarr();
  static const int kGoodsBuyArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActTimeLimitRecruitBuyGoodsNotify</name>
  	<Function>
  		<name>goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>goodsbuyarr_size</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActTimeLimitRecruitGoodsInfo& goodsbuyarr(int index) const;
  inline ::pb::TActTimeLimitRecruitGoodsInfo* mutable_goodsbuyarr(int index);
  inline ::pb::TActTimeLimitRecruitGoodsInfo* add_goodsbuyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >&
      goodsbuyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >*
      mutable_goodsbuyarr();

  // @@protoc_insertion_point(class_scope:pb.TActTimeLimitRecruitBuyGoodsNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo > goodsbuyarr_;
  friend void  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto();
  friend void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto();

  void InitAsDefaultInstance();
  static TActTimeLimitRecruitBuyGoodsNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActTimeLimitRecruitHeroRecInfo

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitHeroRecInfo::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitHeroRecInfo::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitHeroRecInfo::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitHeroRecInfo.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitHeroRecInfo::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitHeroRecInfo.RecId)
}

// optional uint32 RecNum = 2;
inline bool TActTimeLimitRecruitHeroRecInfo::has_recnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitHeroRecInfo::set_has_recnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_has_recnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_recnum() {
  recnum_ = 0u;
  clear_has_recnum();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitHeroRecInfo::recnum() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitHeroRecInfo.RecNum)
  return recnum_;
}
inline void TActTimeLimitRecruitHeroRecInfo::set_recnum(::google::protobuf::uint32 value) {
  set_has_recnum();
  recnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitHeroRecInfo.RecNum)
}

// repeated uint32 RewardIdArr = 3;
inline int TActTimeLimitRecruitHeroRecInfo::rewardidarr_size() const {
  return rewardidarr_.size();
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_rewardidarr() {
  rewardidarr_.Clear();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitHeroRecInfo::rewardidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitHeroRecInfo.RewardIdArr)
  return rewardidarr_.Get(index);
}
inline void TActTimeLimitRecruitHeroRecInfo::set_rewardidarr(int index, ::google::protobuf::uint32 value) {
  rewardidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitHeroRecInfo.RewardIdArr)
}
inline void TActTimeLimitRecruitHeroRecInfo::add_rewardidarr(::google::protobuf::uint32 value) {
  rewardidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitHeroRecInfo.RewardIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActTimeLimitRecruitHeroRecInfo::rewardidarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitHeroRecInfo.RewardIdArr)
  return rewardidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActTimeLimitRecruitHeroRecInfo::mutable_rewardidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitHeroRecInfo.RewardIdArr)
  return &rewardidarr_;
}

// optional uint32 FriendshipValue = 4;
inline bool TActTimeLimitRecruitHeroRecInfo::has_friendshipvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActTimeLimitRecruitHeroRecInfo::set_has_friendshipvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_has_friendshipvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_friendshipvalue() {
  friendshipvalue_ = 0u;
  clear_has_friendshipvalue();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitHeroRecInfo::friendshipvalue() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipValue)
  return friendshipvalue_;
}
inline void TActTimeLimitRecruitHeroRecInfo::set_friendshipvalue(::google::protobuf::uint32 value) {
  set_has_friendshipvalue();
  friendshipvalue_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipValue)
}

// repeated uint32 FriendshipRewardIdArr = 5;
inline int TActTimeLimitRecruitHeroRecInfo::friendshiprewardidarr_size() const {
  return friendshiprewardidarr_.size();
}
inline void TActTimeLimitRecruitHeroRecInfo::clear_friendshiprewardidarr() {
  friendshiprewardidarr_.Clear();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitHeroRecInfo::friendshiprewardidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipRewardIdArr)
  return friendshiprewardidarr_.Get(index);
}
inline void TActTimeLimitRecruitHeroRecInfo::set_friendshiprewardidarr(int index, ::google::protobuf::uint32 value) {
  friendshiprewardidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipRewardIdArr)
}
inline void TActTimeLimitRecruitHeroRecInfo::add_friendshiprewardidarr(::google::protobuf::uint32 value) {
  friendshiprewardidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipRewardIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActTimeLimitRecruitHeroRecInfo::friendshiprewardidarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipRewardIdArr)
  return friendshiprewardidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActTimeLimitRecruitHeroRecInfo::mutable_friendshiprewardidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitHeroRecInfo.FriendshipRewardIdArr)
  return &friendshiprewardidarr_;
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitGetInfoRsp

// repeated .pb.TActTimeLimitRecruitHeroRecInfo HeroRecInfoArr = 1;
inline int TActTimeLimitRecruitGetInfoRsp::herorecinfoarr_size() const {
  return herorecinfoarr_.size();
}
inline void TActTimeLimitRecruitGetInfoRsp::clear_herorecinfoarr() {
  herorecinfoarr_.Clear();
}
inline const ::pb::TActTimeLimitRecruitHeroRecInfo& TActTimeLimitRecruitGetInfoRsp::herorecinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_.Get(index);
}
inline ::pb::TActTimeLimitRecruitHeroRecInfo* TActTimeLimitRecruitGetInfoRsp::mutable_herorecinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTimeLimitRecruitGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_.Mutable(index);
}
inline ::pb::TActTimeLimitRecruitHeroRecInfo* TActTimeLimitRecruitGetInfoRsp::add_herorecinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitHeroRecInfo >&
TActTimeLimitRecruitGetInfoRsp::herorecinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitHeroRecInfo >*
TActTimeLimitRecruitGetInfoRsp::mutable_herorecinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitGetInfoRsp.HeroRecInfoArr)
  return &herorecinfoarr_;
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitDoRecruitReq

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitDoRecruitReq::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitDoRecruitReq::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitDoRecruitReq::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitDoRecruitReq::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitDoRecruitReq::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitDoRecruitReq.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitDoRecruitReq::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitDoRecruitReq.RecId)
}

// optional uint32 RecNum = 2;
inline bool TActTimeLimitRecruitDoRecruitReq::has_recnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitDoRecruitReq::set_has_recnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitDoRecruitReq::clear_has_recnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitDoRecruitReq::clear_recnum() {
  recnum_ = 0u;
  clear_has_recnum();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitDoRecruitReq::recnum() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitDoRecruitReq.RecNum)
  return recnum_;
}
inline void TActTimeLimitRecruitDoRecruitReq::set_recnum(::google::protobuf::uint32 value) {
  set_has_recnum();
  recnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitDoRecruitReq.RecNum)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitDoRecruitRsp

// repeated .pb.TActTimeLimitRecruitReward RewardArr = 1;
inline int TActTimeLimitRecruitDoRecruitRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TActTimeLimitRecruitDoRecruitRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TActTimeLimitRecruitReward& TActTimeLimitRecruitDoRecruitRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitDoRecruitRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TActTimeLimitRecruitReward* TActTimeLimitRecruitDoRecruitRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTimeLimitRecruitDoRecruitRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TActTimeLimitRecruitReward* TActTimeLimitRecruitDoRecruitRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitDoRecruitRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitReward >&
TActTimeLimitRecruitDoRecruitRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitDoRecruitRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitReward >*
TActTimeLimitRecruitDoRecruitRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitDoRecruitRsp.RewardArr)
  return &rewardarr_;
}

// optional uint32 ArtifactLeftNum = 2;
inline bool TActTimeLimitRecruitDoRecruitRsp::has_artifactleftnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitDoRecruitRsp::set_has_artifactleftnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitDoRecruitRsp::clear_has_artifactleftnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitDoRecruitRsp::clear_artifactleftnum() {
  artifactleftnum_ = 0u;
  clear_has_artifactleftnum();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitDoRecruitRsp::artifactleftnum() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitDoRecruitRsp.ArtifactLeftNum)
  return artifactleftnum_;
}
inline void TActTimeLimitRecruitDoRecruitRsp::set_artifactleftnum(::google::protobuf::uint32 value) {
  set_has_artifactleftnum();
  artifactleftnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitDoRecruitRsp.ArtifactLeftNum)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitReward

// optional .pb.TCommonReward Reward = 1;
inline bool TActTimeLimitRecruitReward::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitReward::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitReward::clear_reward() {
  if (reward_ != NULL) reward_->::pb::TCommonReward::Clear();
  clear_has_reward();
}
inline const ::pb::TCommonReward& TActTimeLimitRecruitReward::reward() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitReward.Reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::pb::TCommonReward* TActTimeLimitRecruitReward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::pb::TCommonReward;
  // @@protoc_insertion_point(field_mutable:pb.TActTimeLimitRecruitReward.Reward)
  return reward_;
}
inline ::pb::TCommonReward* TActTimeLimitRecruitReward::release_reward() {
  clear_has_reward();
  ::pb::TCommonReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void TActTimeLimitRecruitReward::set_allocated_reward(::pb::TCommonReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActTimeLimitRecruitReward.Reward)
}

// optional uint32 CritRatio = 2;
inline bool TActTimeLimitRecruitReward::has_critratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitReward::set_has_critratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitReward::clear_has_critratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitReward::clear_critratio() {
  critratio_ = 0u;
  clear_has_critratio();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitReward::critratio() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitReward.CritRatio)
  return critratio_;
}
inline void TActTimeLimitRecruitReward::set_critratio(::google::protobuf::uint32 value) {
  set_has_critratio();
  critratio_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitReward.CritRatio)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitReceiveRewardReq

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitReceiveRewardReq::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitReceiveRewardReq::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitReceiveRewardReq::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitReceiveRewardReq::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitReceiveRewardReq::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitReceiveRewardReq.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitReceiveRewardReq::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitReceiveRewardReq.RecId)
}

// optional uint32 RewardIndex = 2;
inline bool TActTimeLimitRecruitReceiveRewardReq::has_rewardindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitReceiveRewardReq::set_has_rewardindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitReceiveRewardReq::clear_has_rewardindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitReceiveRewardReq::clear_rewardindex() {
  rewardindex_ = 0u;
  clear_has_rewardindex();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitReceiveRewardReq::rewardindex() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitReceiveRewardReq.RewardIndex)
  return rewardindex_;
}
inline void TActTimeLimitRecruitReceiveRewardReq::set_rewardindex(::google::protobuf::uint32 value) {
  set_has_rewardindex();
  rewardindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitReceiveRewardReq.RewardIndex)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitGoodsInfo

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitGoodsInfo::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitGoodsInfo::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitGoodsInfo::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitGoodsInfo.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitGoodsInfo::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitGoodsInfo.RecId)
}

// optional uint32 GoodsId = 2;
inline bool TActTimeLimitRecruitGoodsInfo::has_goodsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitGoodsInfo::set_has_goodsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitGoodsInfo::goodsid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitGoodsInfo.GoodsId)
  return goodsid_;
}
inline void TActTimeLimitRecruitGoodsInfo::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitGoodsInfo.GoodsId)
}

// optional uint32 BoughtNum = 3;
inline bool TActTimeLimitRecruitGoodsInfo::has_boughtnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActTimeLimitRecruitGoodsInfo::set_has_boughtnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_has_boughtnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_boughtnum() {
  boughtnum_ = 0u;
  clear_has_boughtnum();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitGoodsInfo::boughtnum() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitGoodsInfo.BoughtNum)
  return boughtnum_;
}
inline void TActTimeLimitRecruitGoodsInfo::set_boughtnum(::google::protobuf::uint32 value) {
  set_has_boughtnum();
  boughtnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitGoodsInfo.BoughtNum)
}

// optional uint64 BoughtTime = 4;
inline bool TActTimeLimitRecruitGoodsInfo::has_boughttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActTimeLimitRecruitGoodsInfo::set_has_boughttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_has_boughttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActTimeLimitRecruitGoodsInfo::clear_boughttime() {
  boughttime_ = GOOGLE_ULONGLONG(0);
  clear_has_boughttime();
}
inline ::google::protobuf::uint64 TActTimeLimitRecruitGoodsInfo::boughttime() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitGoodsInfo.BoughtTime)
  return boughttime_;
}
inline void TActTimeLimitRecruitGoodsInfo::set_boughttime(::google::protobuf::uint64 value) {
  set_has_boughttime();
  boughttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitGoodsInfo.BoughtTime)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitGetGoodsInfoRsp

// repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
inline int TActTimeLimitRecruitGetGoodsInfoRsp::goodsbuyarr_size() const {
  return goodsbuyarr_.size();
}
inline void TActTimeLimitRecruitGetGoodsInfoRsp::clear_goodsbuyarr() {
  goodsbuyarr_.Clear();
}
inline const ::pb::TActTimeLimitRecruitGoodsInfo& TActTimeLimitRecruitGetGoodsInfoRsp::goodsbuyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitGetGoodsInfoRsp.GoodsBuyArr)
  return goodsbuyarr_.Get(index);
}
inline ::pb::TActTimeLimitRecruitGoodsInfo* TActTimeLimitRecruitGetGoodsInfoRsp::mutable_goodsbuyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTimeLimitRecruitGetGoodsInfoRsp.GoodsBuyArr)
  return goodsbuyarr_.Mutable(index);
}
inline ::pb::TActTimeLimitRecruitGoodsInfo* TActTimeLimitRecruitGetGoodsInfoRsp::add_goodsbuyarr() {
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitGetGoodsInfoRsp.GoodsBuyArr)
  return goodsbuyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >&
TActTimeLimitRecruitGetGoodsInfoRsp::goodsbuyarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitGetGoodsInfoRsp.GoodsBuyArr)
  return goodsbuyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >*
TActTimeLimitRecruitGetGoodsInfoRsp::mutable_goodsbuyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitGetGoodsInfoRsp.GoodsBuyArr)
  return &goodsbuyarr_;
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitBuyGoodsReq

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitBuyGoodsReq::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitBuyGoodsReq::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitBuyGoodsReq::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitBuyGoodsReq::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitBuyGoodsReq::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitBuyGoodsReq.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitBuyGoodsReq::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitBuyGoodsReq.RecId)
}

// optional uint32 GoodsId = 2;
inline bool TActTimeLimitRecruitBuyGoodsReq::has_goodsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitBuyGoodsReq::set_has_goodsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitBuyGoodsReq::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitBuyGoodsReq::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitBuyGoodsReq::goodsid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitBuyGoodsReq.GoodsId)
  return goodsid_;
}
inline void TActTimeLimitRecruitBuyGoodsReq::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitBuyGoodsReq.GoodsId)
}

// optional uint32 BuyNum = 3;
inline bool TActTimeLimitRecruitBuyGoodsReq::has_buynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActTimeLimitRecruitBuyGoodsReq::set_has_buynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActTimeLimitRecruitBuyGoodsReq::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActTimeLimitRecruitBuyGoodsReq::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitBuyGoodsReq::buynum() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitBuyGoodsReq.BuyNum)
  return buynum_;
}
inline void TActTimeLimitRecruitBuyGoodsReq::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitBuyGoodsReq.BuyNum)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitSendGiftReq

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitSendGiftReq::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitSendGiftReq::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitSendGiftReq::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitSendGiftReq::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitSendGiftReq::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitSendGiftReq.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitSendGiftReq::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitSendGiftReq.RecId)
}

// repeated .pb.TSimpleItem ItemArr = 2;
inline int TActTimeLimitRecruitSendGiftReq::itemarr_size() const {
  return itemarr_.size();
}
inline void TActTimeLimitRecruitSendGiftReq::clear_itemarr() {
  itemarr_.Clear();
}
inline const ::pb::TSimpleItem& TActTimeLimitRecruitSendGiftReq::itemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitSendGiftReq.ItemArr)
  return itemarr_.Get(index);
}
inline ::pb::TSimpleItem* TActTimeLimitRecruitSendGiftReq::mutable_itemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTimeLimitRecruitSendGiftReq.ItemArr)
  return itemarr_.Mutable(index);
}
inline ::pb::TSimpleItem* TActTimeLimitRecruitSendGiftReq::add_itemarr() {
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitSendGiftReq.ItemArr)
  return itemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >&
TActTimeLimitRecruitSendGiftReq::itemarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitSendGiftReq.ItemArr)
  return itemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleItem >*
TActTimeLimitRecruitSendGiftReq::mutable_itemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitSendGiftReq.ItemArr)
  return &itemarr_;
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitReceiveFriendshipRewardReq

// optional uint32 RecId = 1;
inline bool TActTimeLimitRecruitReceiveFriendshipRewardReq::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitReceiveFriendshipRewardReq::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq.RecId)
  return recid_;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq.RecId)
}

// optional uint32 RewardIndex = 2;
inline bool TActTimeLimitRecruitReceiveFriendshipRewardReq::has_rewardindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::set_has_rewardindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::clear_has_rewardindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::clear_rewardindex() {
  rewardindex_ = 0u;
  clear_has_rewardindex();
}
inline ::google::protobuf::uint32 TActTimeLimitRecruitReceiveFriendshipRewardReq::rewardindex() const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq.RewardIndex)
  return rewardindex_;
}
inline void TActTimeLimitRecruitReceiveFriendshipRewardReq::set_rewardindex(::google::protobuf::uint32 value) {
  set_has_rewardindex();
  rewardindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq.RewardIndex)
}

// -------------------------------------------------------------------

// TActTimeLimitRecruitBuyGoodsNotify

// repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
inline int TActTimeLimitRecruitBuyGoodsNotify::goodsbuyarr_size() const {
  return goodsbuyarr_.size();
}
inline void TActTimeLimitRecruitBuyGoodsNotify::clear_goodsbuyarr() {
  goodsbuyarr_.Clear();
}
inline const ::pb::TActTimeLimitRecruitGoodsInfo& TActTimeLimitRecruitBuyGoodsNotify::goodsbuyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActTimeLimitRecruitBuyGoodsNotify.GoodsBuyArr)
  return goodsbuyarr_.Get(index);
}
inline ::pb::TActTimeLimitRecruitGoodsInfo* TActTimeLimitRecruitBuyGoodsNotify::mutable_goodsbuyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActTimeLimitRecruitBuyGoodsNotify.GoodsBuyArr)
  return goodsbuyarr_.Mutable(index);
}
inline ::pb::TActTimeLimitRecruitGoodsInfo* TActTimeLimitRecruitBuyGoodsNotify::add_goodsbuyarr() {
  // @@protoc_insertion_point(field_add:pb.TActTimeLimitRecruitBuyGoodsNotify.GoodsBuyArr)
  return goodsbuyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >&
TActTimeLimitRecruitBuyGoodsNotify::goodsbuyarr() const {
  // @@protoc_insertion_point(field_list:pb.TActTimeLimitRecruitBuyGoodsNotify.GoodsBuyArr)
  return goodsbuyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActTimeLimitRecruitGoodsInfo >*
TActTimeLimitRecruitBuyGoodsNotify::mutable_goodsbuyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActTimeLimitRecruitBuyGoodsNotify.GoodsBuyArr)
  return &goodsbuyarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActTimeLimitRecruit_2eproto__INCLUDED
