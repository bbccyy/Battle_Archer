// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActSoulChainActivity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActSoulChainActivity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActSoulChainActivityBattleArmyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityBattleArmyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityStrongHoldInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityStrongHoldInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityChapterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityChapterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityHidPosInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityHidPosInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityStrongHoldInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityStrongHoldInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityStrongHoldInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityStrongHoldInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityGetBattleArgsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityGetBattleArgsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityGetBattleArgsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityGetBattleArgsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivitySetAtkFormationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivitySetAtkFormationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActSoulChainActivityGetAtkFormationRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActSoulChainActivityGetAtkFormationRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActSoulChainActivity_2eproto() {
  protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActSoulChainActivity.proto");
  GOOGLE_CHECK(file != NULL);
  TActSoulChainActivityBattleArmyInfo_descriptor_ = file->message_type(0);
  static const int TActSoulChainActivityBattleArmyInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityBattleArmyInfo, armyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityBattleArmyInfo, fightforce_),
  };
  TActSoulChainActivityBattleArmyInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityBattleArmyInfo_descriptor_,
      TActSoulChainActivityBattleArmyInfo::default_instance_,
      TActSoulChainActivityBattleArmyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityBattleArmyInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityBattleArmyInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityBattleArmyInfo));
  TActSoulChainActivityStrongHoldInfo_descriptor_ = file->message_type(1);
  static const int TActSoulChainActivityStrongHoldInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfo, stronghold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfo, battlearmyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfo, ispass_),
  };
  TActSoulChainActivityStrongHoldInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityStrongHoldInfo_descriptor_,
      TActSoulChainActivityStrongHoldInfo::default_instance_,
      TActSoulChainActivityStrongHoldInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityStrongHoldInfo));
  TActSoulChainActivityChapterInfo_descriptor_ = file->message_type(2);
  static const int TActSoulChainActivityChapterInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityChapterInfo, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityChapterInfo, ispass_),
  };
  TActSoulChainActivityChapterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityChapterInfo_descriptor_,
      TActSoulChainActivityChapterInfo::default_instance_,
      TActSoulChainActivityChapterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityChapterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityChapterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityChapterInfo));
  TActSoulChainActivityHidPosInfo_descriptor_ = file->message_type(3);
  static const int TActSoulChainActivityHidPosInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityHidPosInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityHidPosInfo, pos_),
  };
  TActSoulChainActivityHidPosInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityHidPosInfo_descriptor_,
      TActSoulChainActivityHidPosInfo::default_instance_,
      TActSoulChainActivityHidPosInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityHidPosInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityHidPosInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityHidPosInfo));
  TActSoulChainActivityGetInfoRsp_descriptor_ = file->message_type(4);
  static const int TActSoulChainActivityGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetInfoRsp, chapterinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetInfoRsp, isplayanimation_),
  };
  TActSoulChainActivityGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityGetInfoRsp_descriptor_,
      TActSoulChainActivityGetInfoRsp::default_instance_,
      TActSoulChainActivityGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityGetInfoRsp));
  TActSoulChainActivityStrongHoldInfoReq_descriptor_ = file->message_type(5);
  static const int TActSoulChainActivityStrongHoldInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfoReq, chapterid_),
  };
  TActSoulChainActivityStrongHoldInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityStrongHoldInfoReq_descriptor_,
      TActSoulChainActivityStrongHoldInfoReq::default_instance_,
      TActSoulChainActivityStrongHoldInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityStrongHoldInfoReq));
  TActSoulChainActivityStrongHoldInfoRsp_descriptor_ = file->message_type(6);
  static const int TActSoulChainActivityStrongHoldInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfoRsp, strongholdinfoarray_),
  };
  TActSoulChainActivityStrongHoldInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityStrongHoldInfoRsp_descriptor_,
      TActSoulChainActivityStrongHoldInfoRsp::default_instance_,
      TActSoulChainActivityStrongHoldInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityStrongHoldInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityStrongHoldInfoRsp));
  TActSoulChainActivityGetBattleArgsReq_descriptor_ = file->message_type(7);
  static const int TActSoulChainActivityGetBattleArgsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsReq, stronghold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsReq, battlecheckparam_),
  };
  TActSoulChainActivityGetBattleArgsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityGetBattleArgsReq_descriptor_,
      TActSoulChainActivityGetBattleArgsReq::default_instance_,
      TActSoulChainActivityGetBattleArgsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityGetBattleArgsReq));
  TActSoulChainActivityGetBattleArgsRsp_descriptor_ = file->message_type(8);
  static const int TActSoulChainActivityGetBattleArgsRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsRsp, droparray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsRsp, battleargs_),
  };
  TActSoulChainActivityGetBattleArgsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityGetBattleArgsRsp_descriptor_,
      TActSoulChainActivityGetBattleArgsRsp::default_instance_,
      TActSoulChainActivityGetBattleArgsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetBattleArgsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityGetBattleArgsRsp));
  TActSoulChainActivityReportBattleReq_descriptor_ = file->message_type(9);
  static const int TActSoulChainActivityReportBattleReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleReq, stronghold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleReq, battleresultbytes_),
  };
  TActSoulChainActivityReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityReportBattleReq_descriptor_,
      TActSoulChainActivityReportBattleReq::default_instance_,
      TActSoulChainActivityReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityReportBattleReq));
  TActSoulChainActivityReportBattleRsp_descriptor_ = file->message_type(10);
  static const int TActSoulChainActivityReportBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleRsp, droparray_),
  };
  TActSoulChainActivityReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityReportBattleRsp_descriptor_,
      TActSoulChainActivityReportBattleRsp::default_instance_,
      TActSoulChainActivityReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityReportBattleRsp));
  TActSoulChainActivitySetAtkFormationReq_descriptor_ = file->message_type(11);
  static const int TActSoulChainActivitySetAtkFormationReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivitySetAtkFormationReq, hidposarr_),
  };
  TActSoulChainActivitySetAtkFormationReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivitySetAtkFormationReq_descriptor_,
      TActSoulChainActivitySetAtkFormationReq::default_instance_,
      TActSoulChainActivitySetAtkFormationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivitySetAtkFormationReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivitySetAtkFormationReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivitySetAtkFormationReq));
  TActSoulChainActivityGetAtkFormationRsp_descriptor_ = file->message_type(12);
  static const int TActSoulChainActivityGetAtkFormationRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetAtkFormationRsp, hidposarr_),
  };
  TActSoulChainActivityGetAtkFormationRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActSoulChainActivityGetAtkFormationRsp_descriptor_,
      TActSoulChainActivityGetAtkFormationRsp::default_instance_,
      TActSoulChainActivityGetAtkFormationRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetAtkFormationRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActSoulChainActivityGetAtkFormationRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActSoulChainActivityGetAtkFormationRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActSoulChainActivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityBattleArmyInfo_descriptor_, &TActSoulChainActivityBattleArmyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityStrongHoldInfo_descriptor_, &TActSoulChainActivityStrongHoldInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityChapterInfo_descriptor_, &TActSoulChainActivityChapterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityHidPosInfo_descriptor_, &TActSoulChainActivityHidPosInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityGetInfoRsp_descriptor_, &TActSoulChainActivityGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityStrongHoldInfoReq_descriptor_, &TActSoulChainActivityStrongHoldInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityStrongHoldInfoRsp_descriptor_, &TActSoulChainActivityStrongHoldInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityGetBattleArgsReq_descriptor_, &TActSoulChainActivityGetBattleArgsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityGetBattleArgsRsp_descriptor_, &TActSoulChainActivityGetBattleArgsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityReportBattleReq_descriptor_, &TActSoulChainActivityReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityReportBattleRsp_descriptor_, &TActSoulChainActivityReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivitySetAtkFormationReq_descriptor_, &TActSoulChainActivitySetAtkFormationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActSoulChainActivityGetAtkFormationRsp_descriptor_, &TActSoulChainActivityGetAtkFormationRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActSoulChainActivity_2eproto() {
  delete TActSoulChainActivityBattleArmyInfo::default_instance_;
  delete TActSoulChainActivityBattleArmyInfo_reflection_;
  delete TActSoulChainActivityStrongHoldInfo::default_instance_;
  delete TActSoulChainActivityStrongHoldInfo_reflection_;
  delete TActSoulChainActivityChapterInfo::default_instance_;
  delete TActSoulChainActivityChapterInfo_reflection_;
  delete TActSoulChainActivityHidPosInfo::default_instance_;
  delete TActSoulChainActivityHidPosInfo_reflection_;
  delete TActSoulChainActivityGetInfoRsp::default_instance_;
  delete TActSoulChainActivityGetInfoRsp_reflection_;
  delete TActSoulChainActivityStrongHoldInfoReq::default_instance_;
  delete TActSoulChainActivityStrongHoldInfoReq_reflection_;
  delete TActSoulChainActivityStrongHoldInfoRsp::default_instance_;
  delete TActSoulChainActivityStrongHoldInfoRsp_reflection_;
  delete TActSoulChainActivityGetBattleArgsReq::default_instance_;
  delete TActSoulChainActivityGetBattleArgsReq_reflection_;
  delete TActSoulChainActivityGetBattleArgsRsp::default_instance_;
  delete TActSoulChainActivityGetBattleArgsRsp_reflection_;
  delete TActSoulChainActivityReportBattleReq::default_instance_;
  delete TActSoulChainActivityReportBattleReq_reflection_;
  delete TActSoulChainActivityReportBattleRsp::default_instance_;
  delete TActSoulChainActivityReportBattleRsp_reflection_;
  delete TActSoulChainActivitySetAtkFormationReq::default_instance_;
  delete TActSoulChainActivitySetAtkFormationReq_reflection_;
  delete TActSoulChainActivityGetAtkFormationRsp::default_instance_;
  delete TActSoulChainActivityGetAtkFormationRsp_reflection_;
}

void protobuf_AddDesc_net_2fActSoulChainActivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036net/ActSoulChainActivity.proto\022\002pb\032\026ne"
    "t/CommonReward.proto\032\020net/Battle.proto\032\016"
    "net/User.proto\"Y\n#TActSoulChainActivityB"
    "attleArmyInfo\022\036\n\007ArmyArr\030\001 \003(\0132\r.pb.TArm"
    "yInfo\022\022\n\nFightForce\030\002 \001(\004\"\211\001\n#TActSoulCh"
    "ainActivityStrongHoldInfo\022\022\n\nstronghold\030"
    "\001 \001(\r\022>\n\rBattleArmyArr\030\002 \003(\0132\'.pb.TActSo"
    "ulChainActivityBattleArmyInfo\022\016\n\006IsPass\030"
    "\003 \001(\010\"E\n TActSoulChainActivityChapterInf"
    "o\022\021\n\tChapterId\030\001 \001(\r\022\016\n\006IsPass\030\002 \001(\010\";\n\037"
    "TActSoulChainActivityHidPosInfo\022\013\n\003Hid\030\001"
    " \001(\r\022\013\n\003Pos\030\002 \001(\r\"z\n\037TActSoulChainActivi"
    "tyGetInfoRsp\022>\n\020ChapterInfoArray\030\001 \003(\0132$"
    ".pb.TActSoulChainActivityChapterInfo\022\027\n\017"
    "IsPlayAnimation\030\002 \001(\010\";\n&TActSoulChainAc"
    "tivityStrongHoldInfoReq\022\021\n\tChapterId\030\001 \001"
    "(\r\"n\n&TActSoulChainActivityStrongHoldInf"
    "oRsp\022D\n\023StrongHoldInfoArray\030\001 \003(\0132\'.pb.T"
    "ActSoulChainActivityStrongHoldInfo\"\177\n%TA"
    "ctSoulChainActivityGetBattleArgsReq\022\021\n\tC"
    "hapterId\030\001 \001(\r\022\022\n\nstronghold\030\002 \001(\r\022/\n\020Ba"
    "ttleCheckParam\030\003 \001(\0132\025.pb.TBattleCheckPa"
    "ram\"r\n%TActSoulChainActivityGetBattleArg"
    "sRsp\022$\n\tDropArray\030\001 \003(\0132\021.pb.TCommonRewa"
    "rd\022#\n\nBattleArgs\030\002 \001(\0132\017.pb.TBattleArgs\""
    "h\n$TActSoulChainActivityReportBattleReq\022"
    "\021\n\tChapterId\030\001 \001(\r\022\022\n\nstronghold\030\002 \001(\r\022\031"
    "\n\021BattleResultBytes\030\003 \001(\014\"L\n$TActSoulCha"
    "inActivityReportBattleRsp\022$\n\tDropArray\030\001"
    " \003(\0132\021.pb.TCommonReward\"a\n\'TActSoulChain"
    "ActivitySetAtkFormationReq\0226\n\tHidPosArr\030"
    "\001 \003(\0132#.pb.TActSoulChainActivityHidPosIn"
    "fo\"a\n\'TActSoulChainActivityGetAtkFormati"
    "onRsp\0226\n\tHidPosArr\030\001 \003(\0132#.pb.TActSoulCh"
    "ainActivityHidPosInfo", 1381);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActSoulChainActivity.proto", &protobuf_RegisterTypes);
  TActSoulChainActivityBattleArmyInfo::default_instance_ = new TActSoulChainActivityBattleArmyInfo();
  TActSoulChainActivityStrongHoldInfo::default_instance_ = new TActSoulChainActivityStrongHoldInfo();
  TActSoulChainActivityChapterInfo::default_instance_ = new TActSoulChainActivityChapterInfo();
  TActSoulChainActivityHidPosInfo::default_instance_ = new TActSoulChainActivityHidPosInfo();
  TActSoulChainActivityGetInfoRsp::default_instance_ = new TActSoulChainActivityGetInfoRsp();
  TActSoulChainActivityStrongHoldInfoReq::default_instance_ = new TActSoulChainActivityStrongHoldInfoReq();
  TActSoulChainActivityStrongHoldInfoRsp::default_instance_ = new TActSoulChainActivityStrongHoldInfoRsp();
  TActSoulChainActivityGetBattleArgsReq::default_instance_ = new TActSoulChainActivityGetBattleArgsReq();
  TActSoulChainActivityGetBattleArgsRsp::default_instance_ = new TActSoulChainActivityGetBattleArgsRsp();
  TActSoulChainActivityReportBattleReq::default_instance_ = new TActSoulChainActivityReportBattleReq();
  TActSoulChainActivityReportBattleRsp::default_instance_ = new TActSoulChainActivityReportBattleRsp();
  TActSoulChainActivitySetAtkFormationReq::default_instance_ = new TActSoulChainActivitySetAtkFormationReq();
  TActSoulChainActivityGetAtkFormationRsp::default_instance_ = new TActSoulChainActivityGetAtkFormationRsp();
  TActSoulChainActivityBattleArmyInfo::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityStrongHoldInfo::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityChapterInfo::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityHidPosInfo::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityStrongHoldInfoReq::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityStrongHoldInfoRsp::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityGetBattleArgsReq::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityGetBattleArgsRsp::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityReportBattleReq::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivitySetAtkFormationReq::default_instance_->InitAsDefaultInstance();
  TActSoulChainActivityGetAtkFormationRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActSoulChainActivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActSoulChainActivity_2eproto {
  StaticDescriptorInitializer_net_2fActSoulChainActivity_2eproto() {
    protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  }
} static_descriptor_initializer_net_2fActSoulChainActivity_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityBattleArmyInfo::kArmyArrFieldNumber;
const int TActSoulChainActivityBattleArmyInfo::kFightForceFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityBattleArmyInfo::TActSoulChainActivityBattleArmyInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityBattleArmyInfo)
}

void TActSoulChainActivityBattleArmyInfo::InitAsDefaultInstance() {
}

TActSoulChainActivityBattleArmyInfo::TActSoulChainActivityBattleArmyInfo(const TActSoulChainActivityBattleArmyInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityBattleArmyInfo)
}

void TActSoulChainActivityBattleArmyInfo::SharedCtor() {
  _cached_size_ = 0;
  fightforce_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityBattleArmyInfo::~TActSoulChainActivityBattleArmyInfo() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityBattleArmyInfo)
  SharedDtor();
}

void TActSoulChainActivityBattleArmyInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityBattleArmyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityBattleArmyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityBattleArmyInfo_descriptor_;
}

const TActSoulChainActivityBattleArmyInfo& TActSoulChainActivityBattleArmyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityBattleArmyInfo* TActSoulChainActivityBattleArmyInfo::default_instance_ = NULL;

TActSoulChainActivityBattleArmyInfo* TActSoulChainActivityBattleArmyInfo::New() const {
  return new TActSoulChainActivityBattleArmyInfo;
}

void TActSoulChainActivityBattleArmyInfo::Clear() {
  fightforce_ = GOOGLE_ULONGLONG(0);
  armyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityBattleArmyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityBattleArmyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TArmyInfo ArmyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_ArmyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_armyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArmyArr;
        if (input->ExpectTag(16)) goto parse_FightForce;
        break;
      }

      // optional uint64 FightForce = 2;
      case 2: {
        if (tag == 16) {
         parse_FightForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fightforce_)));
          set_has_fightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityBattleArmyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityBattleArmyInfo)
  return false;
#undef DO_
}

void TActSoulChainActivityBattleArmyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityBattleArmyInfo)
  // repeated .pb.TArmyInfo ArmyArr = 1;
  for (int i = 0; i < this->armyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->armyarr(i), output);
  }

  // optional uint64 FightForce = 2;
  if (has_fightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fightforce(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityBattleArmyInfo)
}

::google::protobuf::uint8* TActSoulChainActivityBattleArmyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityBattleArmyInfo)
  // repeated .pb.TArmyInfo ArmyArr = 1;
  for (int i = 0; i < this->armyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->armyarr(i), target);
  }

  // optional uint64 FightForce = 2;
  if (has_fightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fightforce(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityBattleArmyInfo)
  return target;
}

int TActSoulChainActivityBattleArmyInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint64 FightForce = 2;
    if (has_fightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fightforce());
    }

  }
  // repeated .pb.TArmyInfo ArmyArr = 1;
  total_size += 1 * this->armyarr_size();
  for (int i = 0; i < this->armyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->armyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityBattleArmyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityBattleArmyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityBattleArmyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityBattleArmyInfo::MergeFrom(const TActSoulChainActivityBattleArmyInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  armyarr_.MergeFrom(from.armyarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_fightforce()) {
      set_fightforce(from.fightforce());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityBattleArmyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityBattleArmyInfo::CopyFrom(const TActSoulChainActivityBattleArmyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityBattleArmyInfo::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->armyarr())) return false;
  return true;
}

void TActSoulChainActivityBattleArmyInfo::Swap(TActSoulChainActivityBattleArmyInfo* other) {
  if (other != this) {
    armyarr_.Swap(&other->armyarr_);
    std::swap(fightforce_, other->fightforce_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityBattleArmyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityBattleArmyInfo_descriptor_;
  metadata.reflection = TActSoulChainActivityBattleArmyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityStrongHoldInfo::kStrongholdFieldNumber;
const int TActSoulChainActivityStrongHoldInfo::kBattleArmyArrFieldNumber;
const int TActSoulChainActivityStrongHoldInfo::kIsPassFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityStrongHoldInfo::TActSoulChainActivityStrongHoldInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityStrongHoldInfo)
}

void TActSoulChainActivityStrongHoldInfo::InitAsDefaultInstance() {
}

TActSoulChainActivityStrongHoldInfo::TActSoulChainActivityStrongHoldInfo(const TActSoulChainActivityStrongHoldInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityStrongHoldInfo)
}

void TActSoulChainActivityStrongHoldInfo::SharedCtor() {
  _cached_size_ = 0;
  stronghold_ = 0u;
  ispass_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityStrongHoldInfo::~TActSoulChainActivityStrongHoldInfo() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityStrongHoldInfo)
  SharedDtor();
}

void TActSoulChainActivityStrongHoldInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityStrongHoldInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityStrongHoldInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityStrongHoldInfo_descriptor_;
}

const TActSoulChainActivityStrongHoldInfo& TActSoulChainActivityStrongHoldInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityStrongHoldInfo* TActSoulChainActivityStrongHoldInfo::default_instance_ = NULL;

TActSoulChainActivityStrongHoldInfo* TActSoulChainActivityStrongHoldInfo::New() const {
  return new TActSoulChainActivityStrongHoldInfo;
}

void TActSoulChainActivityStrongHoldInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActSoulChainActivityStrongHoldInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(stronghold_, ispass_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  battlearmyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityStrongHoldInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityStrongHoldInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stronghold = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stronghold_)));
          set_has_stronghold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleArmyArr;
        break;
      }

      // repeated .pb.TActSoulChainActivityBattleArmyInfo BattleArmyArr = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArmyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_battlearmyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleArmyArr;
        if (input->ExpectTag(24)) goto parse_IsPass;
        break;
      }

      // optional bool IsPass = 3;
      case 3: {
        if (tag == 24) {
         parse_IsPass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispass_)));
          set_has_ispass();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityStrongHoldInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityStrongHoldInfo)
  return false;
#undef DO_
}

void TActSoulChainActivityStrongHoldInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityStrongHoldInfo)
  // optional uint32 stronghold = 1;
  if (has_stronghold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stronghold(), output);
  }

  // repeated .pb.TActSoulChainActivityBattleArmyInfo BattleArmyArr = 2;
  for (int i = 0; i < this->battlearmyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battlearmyarr(i), output);
  }

  // optional bool IsPass = 3;
  if (has_ispass()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ispass(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityStrongHoldInfo)
}

::google::protobuf::uint8* TActSoulChainActivityStrongHoldInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityStrongHoldInfo)
  // optional uint32 stronghold = 1;
  if (has_stronghold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stronghold(), target);
  }

  // repeated .pb.TActSoulChainActivityBattleArmyInfo BattleArmyArr = 2;
  for (int i = 0; i < this->battlearmyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battlearmyarr(i), target);
  }

  // optional bool IsPass = 3;
  if (has_ispass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ispass(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityStrongHoldInfo)
  return target;
}

int TActSoulChainActivityStrongHoldInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 stronghold = 1;
    if (has_stronghold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stronghold());
    }

    // optional bool IsPass = 3;
    if (has_ispass()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pb.TActSoulChainActivityBattleArmyInfo BattleArmyArr = 2;
  total_size += 1 * this->battlearmyarr_size();
  for (int i = 0; i < this->battlearmyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->battlearmyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityStrongHoldInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityStrongHoldInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityStrongHoldInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityStrongHoldInfo::MergeFrom(const TActSoulChainActivityStrongHoldInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  battlearmyarr_.MergeFrom(from.battlearmyarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stronghold()) {
      set_stronghold(from.stronghold());
    }
    if (from.has_ispass()) {
      set_ispass(from.ispass());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityStrongHoldInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityStrongHoldInfo::CopyFrom(const TActSoulChainActivityStrongHoldInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityStrongHoldInfo::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->battlearmyarr())) return false;
  return true;
}

void TActSoulChainActivityStrongHoldInfo::Swap(TActSoulChainActivityStrongHoldInfo* other) {
  if (other != this) {
    std::swap(stronghold_, other->stronghold_);
    battlearmyarr_.Swap(&other->battlearmyarr_);
    std::swap(ispass_, other->ispass_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityStrongHoldInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityStrongHoldInfo_descriptor_;
  metadata.reflection = TActSoulChainActivityStrongHoldInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityChapterInfo::kChapterIdFieldNumber;
const int TActSoulChainActivityChapterInfo::kIsPassFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityChapterInfo::TActSoulChainActivityChapterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityChapterInfo)
}

void TActSoulChainActivityChapterInfo::InitAsDefaultInstance() {
}

TActSoulChainActivityChapterInfo::TActSoulChainActivityChapterInfo(const TActSoulChainActivityChapterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityChapterInfo)
}

void TActSoulChainActivityChapterInfo::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  ispass_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityChapterInfo::~TActSoulChainActivityChapterInfo() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityChapterInfo)
  SharedDtor();
}

void TActSoulChainActivityChapterInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityChapterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityChapterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityChapterInfo_descriptor_;
}

const TActSoulChainActivityChapterInfo& TActSoulChainActivityChapterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityChapterInfo* TActSoulChainActivityChapterInfo::default_instance_ = NULL;

TActSoulChainActivityChapterInfo* TActSoulChainActivityChapterInfo::New() const {
  return new TActSoulChainActivityChapterInfo;
}

void TActSoulChainActivityChapterInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActSoulChainActivityChapterInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, ispass_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityChapterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityChapterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsPass;
        break;
      }

      // optional bool IsPass = 2;
      case 2: {
        if (tag == 16) {
         parse_IsPass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispass_)));
          set_has_ispass();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityChapterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityChapterInfo)
  return false;
#undef DO_
}

void TActSoulChainActivityChapterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional bool IsPass = 2;
  if (has_ispass()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ispass(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityChapterInfo)
}

::google::protobuf::uint8* TActSoulChainActivityChapterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional bool IsPass = 2;
  if (has_ispass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ispass(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityChapterInfo)
  return target;
}

int TActSoulChainActivityChapterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional bool IsPass = 2;
    if (has_ispass()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityChapterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityChapterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityChapterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityChapterInfo::MergeFrom(const TActSoulChainActivityChapterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_ispass()) {
      set_ispass(from.ispass());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityChapterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityChapterInfo::CopyFrom(const TActSoulChainActivityChapterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityChapterInfo::IsInitialized() const {

  return true;
}

void TActSoulChainActivityChapterInfo::Swap(TActSoulChainActivityChapterInfo* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(ispass_, other->ispass_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityChapterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityChapterInfo_descriptor_;
  metadata.reflection = TActSoulChainActivityChapterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityHidPosInfo::kHidFieldNumber;
const int TActSoulChainActivityHidPosInfo::kPosFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityHidPosInfo::TActSoulChainActivityHidPosInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityHidPosInfo)
}

void TActSoulChainActivityHidPosInfo::InitAsDefaultInstance() {
}

TActSoulChainActivityHidPosInfo::TActSoulChainActivityHidPosInfo(const TActSoulChainActivityHidPosInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityHidPosInfo)
}

void TActSoulChainActivityHidPosInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityHidPosInfo::~TActSoulChainActivityHidPosInfo() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityHidPosInfo)
  SharedDtor();
}

void TActSoulChainActivityHidPosInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityHidPosInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityHidPosInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityHidPosInfo_descriptor_;
}

const TActSoulChainActivityHidPosInfo& TActSoulChainActivityHidPosInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityHidPosInfo* TActSoulChainActivityHidPosInfo::default_instance_ = NULL;

TActSoulChainActivityHidPosInfo* TActSoulChainActivityHidPosInfo::New() const {
  return new TActSoulChainActivityHidPosInfo;
}

void TActSoulChainActivityHidPosInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActSoulChainActivityHidPosInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityHidPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityHidPosInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityHidPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityHidPosInfo)
  return false;
#undef DO_
}

void TActSoulChainActivityHidPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityHidPosInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityHidPosInfo)
}

::google::protobuf::uint8* TActSoulChainActivityHidPosInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityHidPosInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityHidPosInfo)
  return target;
}

int TActSoulChainActivityHidPosInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityHidPosInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityHidPosInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityHidPosInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityHidPosInfo::MergeFrom(const TActSoulChainActivityHidPosInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityHidPosInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityHidPosInfo::CopyFrom(const TActSoulChainActivityHidPosInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityHidPosInfo::IsInitialized() const {

  return true;
}

void TActSoulChainActivityHidPosInfo::Swap(TActSoulChainActivityHidPosInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityHidPosInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityHidPosInfo_descriptor_;
  metadata.reflection = TActSoulChainActivityHidPosInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityGetInfoRsp::kChapterInfoArrayFieldNumber;
const int TActSoulChainActivityGetInfoRsp::kIsPlayAnimationFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityGetInfoRsp::TActSoulChainActivityGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityGetInfoRsp)
}

void TActSoulChainActivityGetInfoRsp::InitAsDefaultInstance() {
}

TActSoulChainActivityGetInfoRsp::TActSoulChainActivityGetInfoRsp(const TActSoulChainActivityGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityGetInfoRsp)
}

void TActSoulChainActivityGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  isplayanimation_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityGetInfoRsp::~TActSoulChainActivityGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityGetInfoRsp)
  SharedDtor();
}

void TActSoulChainActivityGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityGetInfoRsp_descriptor_;
}

const TActSoulChainActivityGetInfoRsp& TActSoulChainActivityGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityGetInfoRsp* TActSoulChainActivityGetInfoRsp::default_instance_ = NULL;

TActSoulChainActivityGetInfoRsp* TActSoulChainActivityGetInfoRsp::New() const {
  return new TActSoulChainActivityGetInfoRsp;
}

void TActSoulChainActivityGetInfoRsp::Clear() {
  isplayanimation_ = false;
  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActSoulChainActivityChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectTag(16)) goto parse_IsPlayAnimation;
        break;
      }

      // optional bool IsPlayAnimation = 2;
      case 2: {
        if (tag == 16) {
         parse_IsPlayAnimation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isplayanimation_)));
          set_has_isplayanimation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityGetInfoRsp)
  return false;
#undef DO_
}

void TActSoulChainActivityGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityGetInfoRsp)
  // repeated .pb.TActSoulChainActivityChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  // optional bool IsPlayAnimation = 2;
  if (has_isplayanimation()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isplayanimation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityGetInfoRsp)
}

::google::protobuf::uint8* TActSoulChainActivityGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityGetInfoRsp)
  // repeated .pb.TActSoulChainActivityChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  // optional bool IsPlayAnimation = 2;
  if (has_isplayanimation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isplayanimation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityGetInfoRsp)
  return target;
}

int TActSoulChainActivityGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bool IsPlayAnimation = 2;
    if (has_isplayanimation()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pb.TActSoulChainActivityChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityGetInfoRsp::MergeFrom(const TActSoulChainActivityGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_isplayanimation()) {
      set_isplayanimation(from.isplayanimation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityGetInfoRsp::CopyFrom(const TActSoulChainActivityGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityGetInfoRsp::IsInitialized() const {

  return true;
}

void TActSoulChainActivityGetInfoRsp::Swap(TActSoulChainActivityGetInfoRsp* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(isplayanimation_, other->isplayanimation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityGetInfoRsp_descriptor_;
  metadata.reflection = TActSoulChainActivityGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityStrongHoldInfoReq::kChapterIdFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityStrongHoldInfoReq::TActSoulChainActivityStrongHoldInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityStrongHoldInfoReq)
}

void TActSoulChainActivityStrongHoldInfoReq::InitAsDefaultInstance() {
}

TActSoulChainActivityStrongHoldInfoReq::TActSoulChainActivityStrongHoldInfoReq(const TActSoulChainActivityStrongHoldInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityStrongHoldInfoReq)
}

void TActSoulChainActivityStrongHoldInfoReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityStrongHoldInfoReq::~TActSoulChainActivityStrongHoldInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityStrongHoldInfoReq)
  SharedDtor();
}

void TActSoulChainActivityStrongHoldInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityStrongHoldInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityStrongHoldInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityStrongHoldInfoReq_descriptor_;
}

const TActSoulChainActivityStrongHoldInfoReq& TActSoulChainActivityStrongHoldInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityStrongHoldInfoReq* TActSoulChainActivityStrongHoldInfoReq::default_instance_ = NULL;

TActSoulChainActivityStrongHoldInfoReq* TActSoulChainActivityStrongHoldInfoReq::New() const {
  return new TActSoulChainActivityStrongHoldInfoReq;
}

void TActSoulChainActivityStrongHoldInfoReq::Clear() {
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityStrongHoldInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityStrongHoldInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityStrongHoldInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityStrongHoldInfoReq)
  return false;
#undef DO_
}

void TActSoulChainActivityStrongHoldInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityStrongHoldInfoReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityStrongHoldInfoReq)
}

::google::protobuf::uint8* TActSoulChainActivityStrongHoldInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityStrongHoldInfoReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityStrongHoldInfoReq)
  return target;
}

int TActSoulChainActivityStrongHoldInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityStrongHoldInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityStrongHoldInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityStrongHoldInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityStrongHoldInfoReq::MergeFrom(const TActSoulChainActivityStrongHoldInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityStrongHoldInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityStrongHoldInfoReq::CopyFrom(const TActSoulChainActivityStrongHoldInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityStrongHoldInfoReq::IsInitialized() const {

  return true;
}

void TActSoulChainActivityStrongHoldInfoReq::Swap(TActSoulChainActivityStrongHoldInfoReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityStrongHoldInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityStrongHoldInfoReq_descriptor_;
  metadata.reflection = TActSoulChainActivityStrongHoldInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityStrongHoldInfoRsp::kStrongHoldInfoArrayFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityStrongHoldInfoRsp::TActSoulChainActivityStrongHoldInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityStrongHoldInfoRsp)
}

void TActSoulChainActivityStrongHoldInfoRsp::InitAsDefaultInstance() {
}

TActSoulChainActivityStrongHoldInfoRsp::TActSoulChainActivityStrongHoldInfoRsp(const TActSoulChainActivityStrongHoldInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityStrongHoldInfoRsp)
}

void TActSoulChainActivityStrongHoldInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityStrongHoldInfoRsp::~TActSoulChainActivityStrongHoldInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityStrongHoldInfoRsp)
  SharedDtor();
}

void TActSoulChainActivityStrongHoldInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityStrongHoldInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityStrongHoldInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityStrongHoldInfoRsp_descriptor_;
}

const TActSoulChainActivityStrongHoldInfoRsp& TActSoulChainActivityStrongHoldInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityStrongHoldInfoRsp* TActSoulChainActivityStrongHoldInfoRsp::default_instance_ = NULL;

TActSoulChainActivityStrongHoldInfoRsp* TActSoulChainActivityStrongHoldInfoRsp::New() const {
  return new TActSoulChainActivityStrongHoldInfoRsp;
}

void TActSoulChainActivityStrongHoldInfoRsp::Clear() {
  strongholdinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityStrongHoldInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityStrongHoldInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActSoulChainActivityStrongHoldInfo StrongHoldInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_StrongHoldInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_strongholdinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_StrongHoldInfoArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityStrongHoldInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityStrongHoldInfoRsp)
  return false;
#undef DO_
}

void TActSoulChainActivityStrongHoldInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityStrongHoldInfoRsp)
  // repeated .pb.TActSoulChainActivityStrongHoldInfo StrongHoldInfoArray = 1;
  for (int i = 0; i < this->strongholdinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->strongholdinfoarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityStrongHoldInfoRsp)
}

::google::protobuf::uint8* TActSoulChainActivityStrongHoldInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityStrongHoldInfoRsp)
  // repeated .pb.TActSoulChainActivityStrongHoldInfo StrongHoldInfoArray = 1;
  for (int i = 0; i < this->strongholdinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->strongholdinfoarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityStrongHoldInfoRsp)
  return target;
}

int TActSoulChainActivityStrongHoldInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActSoulChainActivityStrongHoldInfo StrongHoldInfoArray = 1;
  total_size += 1 * this->strongholdinfoarray_size();
  for (int i = 0; i < this->strongholdinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strongholdinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityStrongHoldInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityStrongHoldInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityStrongHoldInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityStrongHoldInfoRsp::MergeFrom(const TActSoulChainActivityStrongHoldInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  strongholdinfoarray_.MergeFrom(from.strongholdinfoarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityStrongHoldInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityStrongHoldInfoRsp::CopyFrom(const TActSoulChainActivityStrongHoldInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityStrongHoldInfoRsp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->strongholdinfoarray())) return false;
  return true;
}

void TActSoulChainActivityStrongHoldInfoRsp::Swap(TActSoulChainActivityStrongHoldInfoRsp* other) {
  if (other != this) {
    strongholdinfoarray_.Swap(&other->strongholdinfoarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityStrongHoldInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityStrongHoldInfoRsp_descriptor_;
  metadata.reflection = TActSoulChainActivityStrongHoldInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityGetBattleArgsReq::kChapterIdFieldNumber;
const int TActSoulChainActivityGetBattleArgsReq::kStrongholdFieldNumber;
const int TActSoulChainActivityGetBattleArgsReq::kBattleCheckParamFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityGetBattleArgsReq::TActSoulChainActivityGetBattleArgsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityGetBattleArgsReq)
}

void TActSoulChainActivityGetBattleArgsReq::InitAsDefaultInstance() {
  battlecheckparam_ = const_cast< ::pb::TBattleCheckParam*>(&::pb::TBattleCheckParam::default_instance());
}

TActSoulChainActivityGetBattleArgsReq::TActSoulChainActivityGetBattleArgsReq(const TActSoulChainActivityGetBattleArgsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityGetBattleArgsReq)
}

void TActSoulChainActivityGetBattleArgsReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  stronghold_ = 0u;
  battlecheckparam_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityGetBattleArgsReq::~TActSoulChainActivityGetBattleArgsReq() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityGetBattleArgsReq)
  SharedDtor();
}

void TActSoulChainActivityGetBattleArgsReq::SharedDtor() {
  if (this != default_instance_) {
    delete battlecheckparam_;
  }
}

void TActSoulChainActivityGetBattleArgsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityGetBattleArgsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityGetBattleArgsReq_descriptor_;
}

const TActSoulChainActivityGetBattleArgsReq& TActSoulChainActivityGetBattleArgsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityGetBattleArgsReq* TActSoulChainActivityGetBattleArgsReq::default_instance_ = NULL;

TActSoulChainActivityGetBattleArgsReq* TActSoulChainActivityGetBattleArgsReq::New() const {
  return new TActSoulChainActivityGetBattleArgsReq;
}

void TActSoulChainActivityGetBattleArgsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActSoulChainActivityGetBattleArgsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(chapterid_, stronghold_);
    if (has_battlecheckparam()) {
      if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityGetBattleArgsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityGetBattleArgsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stronghold;
        break;
      }

      // optional uint32 stronghold = 2;
      case 2: {
        if (tag == 16) {
         parse_stronghold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stronghold_)));
          set_has_stronghold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleCheckParam;
        break;
      }

      // optional .pb.TBattleCheckParam BattleCheckParam = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleCheckParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlecheckparam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityGetBattleArgsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityGetBattleArgsReq)
  return false;
#undef DO_
}

void TActSoulChainActivityGetBattleArgsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityGetBattleArgsReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 stronghold = 2;
  if (has_stronghold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stronghold(), output);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 3;
  if (has_battlecheckparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->battlecheckparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityGetBattleArgsReq)
}

::google::protobuf::uint8* TActSoulChainActivityGetBattleArgsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityGetBattleArgsReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 stronghold = 2;
  if (has_stronghold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stronghold(), target);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 3;
  if (has_battlecheckparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->battlecheckparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityGetBattleArgsReq)
  return target;
}

int TActSoulChainActivityGetBattleArgsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 stronghold = 2;
    if (has_stronghold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stronghold());
    }

    // optional .pb.TBattleCheckParam BattleCheckParam = 3;
    if (has_battlecheckparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlecheckparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityGetBattleArgsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityGetBattleArgsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityGetBattleArgsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityGetBattleArgsReq::MergeFrom(const TActSoulChainActivityGetBattleArgsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_stronghold()) {
      set_stronghold(from.stronghold());
    }
    if (from.has_battlecheckparam()) {
      mutable_battlecheckparam()->::pb::TBattleCheckParam::MergeFrom(from.battlecheckparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityGetBattleArgsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityGetBattleArgsReq::CopyFrom(const TActSoulChainActivityGetBattleArgsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityGetBattleArgsReq::IsInitialized() const {

  return true;
}

void TActSoulChainActivityGetBattleArgsReq::Swap(TActSoulChainActivityGetBattleArgsReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(stronghold_, other->stronghold_);
    std::swap(battlecheckparam_, other->battlecheckparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityGetBattleArgsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityGetBattleArgsReq_descriptor_;
  metadata.reflection = TActSoulChainActivityGetBattleArgsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityGetBattleArgsRsp::kDropArrayFieldNumber;
const int TActSoulChainActivityGetBattleArgsRsp::kBattleArgsFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityGetBattleArgsRsp::TActSoulChainActivityGetBattleArgsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityGetBattleArgsRsp)
}

void TActSoulChainActivityGetBattleArgsRsp::InitAsDefaultInstance() {
  battleargs_ = const_cast< ::pb::TBattleArgs*>(&::pb::TBattleArgs::default_instance());
}

TActSoulChainActivityGetBattleArgsRsp::TActSoulChainActivityGetBattleArgsRsp(const TActSoulChainActivityGetBattleArgsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityGetBattleArgsRsp)
}

void TActSoulChainActivityGetBattleArgsRsp::SharedCtor() {
  _cached_size_ = 0;
  battleargs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityGetBattleArgsRsp::~TActSoulChainActivityGetBattleArgsRsp() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityGetBattleArgsRsp)
  SharedDtor();
}

void TActSoulChainActivityGetBattleArgsRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleargs_;
  }
}

void TActSoulChainActivityGetBattleArgsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityGetBattleArgsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityGetBattleArgsRsp_descriptor_;
}

const TActSoulChainActivityGetBattleArgsRsp& TActSoulChainActivityGetBattleArgsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityGetBattleArgsRsp* TActSoulChainActivityGetBattleArgsRsp::default_instance_ = NULL;

TActSoulChainActivityGetBattleArgsRsp* TActSoulChainActivityGetBattleArgsRsp::New() const {
  return new TActSoulChainActivityGetBattleArgsRsp;
}

void TActSoulChainActivityGetBattleArgsRsp::Clear() {
  if (has_battleargs()) {
    if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  }
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityGetBattleArgsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityGetBattleArgsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectTag(18)) goto parse_BattleArgs;
        break;
      }

      // optional .pb.TBattleArgs BattleArgs = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityGetBattleArgsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityGetBattleArgsRsp)
  return false;
#undef DO_
}

void TActSoulChainActivityGetBattleArgsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityGetBattleArgsRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battleargs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityGetBattleArgsRsp)
}

::google::protobuf::uint8* TActSoulChainActivityGetBattleArgsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityGetBattleArgsRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battleargs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityGetBattleArgsRsp)
  return target;
}

int TActSoulChainActivityGetBattleArgsRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .pb.TBattleArgs BattleArgs = 2;
    if (has_battleargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleargs());
    }

  }
  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityGetBattleArgsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityGetBattleArgsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityGetBattleArgsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityGetBattleArgsRsp::MergeFrom(const TActSoulChainActivityGetBattleArgsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_battleargs()) {
      mutable_battleargs()->::pb::TBattleArgs::MergeFrom(from.battleargs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityGetBattleArgsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityGetBattleArgsRsp::CopyFrom(const TActSoulChainActivityGetBattleArgsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityGetBattleArgsRsp::IsInitialized() const {

  if (has_battleargs()) {
    if (!this->battleargs().IsInitialized()) return false;
  }
  return true;
}

void TActSoulChainActivityGetBattleArgsRsp::Swap(TActSoulChainActivityGetBattleArgsRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(battleargs_, other->battleargs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityGetBattleArgsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityGetBattleArgsRsp_descriptor_;
  metadata.reflection = TActSoulChainActivityGetBattleArgsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityReportBattleReq::kChapterIdFieldNumber;
const int TActSoulChainActivityReportBattleReq::kStrongholdFieldNumber;
const int TActSoulChainActivityReportBattleReq::kBattleResultBytesFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityReportBattleReq::TActSoulChainActivityReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityReportBattleReq)
}

void TActSoulChainActivityReportBattleReq::InitAsDefaultInstance() {
}

TActSoulChainActivityReportBattleReq::TActSoulChainActivityReportBattleReq(const TActSoulChainActivityReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityReportBattleReq)
}

void TActSoulChainActivityReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  chapterid_ = 0u;
  stronghold_ = 0u;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityReportBattleReq::~TActSoulChainActivityReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityReportBattleReq)
  SharedDtor();
}

void TActSoulChainActivityReportBattleReq::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityReportBattleReq_descriptor_;
}

const TActSoulChainActivityReportBattleReq& TActSoulChainActivityReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityReportBattleReq* TActSoulChainActivityReportBattleReq::default_instance_ = NULL;

TActSoulChainActivityReportBattleReq* TActSoulChainActivityReportBattleReq::New() const {
  return new TActSoulChainActivityReportBattleReq;
}

void TActSoulChainActivityReportBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActSoulChainActivityReportBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(chapterid_, stronghold_);
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stronghold;
        break;
      }

      // optional uint32 stronghold = 2;
      case 2: {
        if (tag == 16) {
         parse_stronghold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stronghold_)));
          set_has_stronghold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityReportBattleReq)
  return false;
#undef DO_
}

void TActSoulChainActivityReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 stronghold = 2;
  if (has_stronghold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stronghold(), output);
  }

  // optional bytes BattleResultBytes = 3;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->battleresultbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityReportBattleReq)
}

::google::protobuf::uint8* TActSoulChainActivityReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 stronghold = 2;
  if (has_stronghold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stronghold(), target);
  }

  // optional bytes BattleResultBytes = 3;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->battleresultbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityReportBattleReq)
  return target;
}

int TActSoulChainActivityReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 stronghold = 2;
    if (has_stronghold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stronghold());
    }

    // optional bytes BattleResultBytes = 3;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityReportBattleReq::MergeFrom(const TActSoulChainActivityReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_stronghold()) {
      set_stronghold(from.stronghold());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityReportBattleReq::CopyFrom(const TActSoulChainActivityReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityReportBattleReq::IsInitialized() const {

  return true;
}

void TActSoulChainActivityReportBattleReq::Swap(TActSoulChainActivityReportBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(stronghold_, other->stronghold_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityReportBattleReq_descriptor_;
  metadata.reflection = TActSoulChainActivityReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityReportBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityReportBattleRsp::TActSoulChainActivityReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityReportBattleRsp)
}

void TActSoulChainActivityReportBattleRsp::InitAsDefaultInstance() {
}

TActSoulChainActivityReportBattleRsp::TActSoulChainActivityReportBattleRsp(const TActSoulChainActivityReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityReportBattleRsp)
}

void TActSoulChainActivityReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityReportBattleRsp::~TActSoulChainActivityReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityReportBattleRsp)
  SharedDtor();
}

void TActSoulChainActivityReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityReportBattleRsp_descriptor_;
}

const TActSoulChainActivityReportBattleRsp& TActSoulChainActivityReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityReportBattleRsp* TActSoulChainActivityReportBattleRsp::default_instance_ = NULL;

TActSoulChainActivityReportBattleRsp* TActSoulChainActivityReportBattleRsp::New() const {
  return new TActSoulChainActivityReportBattleRsp;
}

void TActSoulChainActivityReportBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityReportBattleRsp)
  return false;
#undef DO_
}

void TActSoulChainActivityReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityReportBattleRsp)
}

::google::protobuf::uint8* TActSoulChainActivityReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityReportBattleRsp)
  return target;
}

int TActSoulChainActivityReportBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityReportBattleRsp::MergeFrom(const TActSoulChainActivityReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityReportBattleRsp::CopyFrom(const TActSoulChainActivityReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityReportBattleRsp::IsInitialized() const {

  return true;
}

void TActSoulChainActivityReportBattleRsp::Swap(TActSoulChainActivityReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityReportBattleRsp_descriptor_;
  metadata.reflection = TActSoulChainActivityReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivitySetAtkFormationReq::kHidPosArrFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivitySetAtkFormationReq::TActSoulChainActivitySetAtkFormationReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivitySetAtkFormationReq)
}

void TActSoulChainActivitySetAtkFormationReq::InitAsDefaultInstance() {
}

TActSoulChainActivitySetAtkFormationReq::TActSoulChainActivitySetAtkFormationReq(const TActSoulChainActivitySetAtkFormationReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivitySetAtkFormationReq)
}

void TActSoulChainActivitySetAtkFormationReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivitySetAtkFormationReq::~TActSoulChainActivitySetAtkFormationReq() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivitySetAtkFormationReq)
  SharedDtor();
}

void TActSoulChainActivitySetAtkFormationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivitySetAtkFormationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivitySetAtkFormationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivitySetAtkFormationReq_descriptor_;
}

const TActSoulChainActivitySetAtkFormationReq& TActSoulChainActivitySetAtkFormationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivitySetAtkFormationReq* TActSoulChainActivitySetAtkFormationReq::default_instance_ = NULL;

TActSoulChainActivitySetAtkFormationReq* TActSoulChainActivitySetAtkFormationReq::New() const {
  return new TActSoulChainActivitySetAtkFormationReq;
}

void TActSoulChainActivitySetAtkFormationReq::Clear() {
  hidposarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivitySetAtkFormationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivitySetAtkFormationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HidPosArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hidposarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HidPosArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivitySetAtkFormationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivitySetAtkFormationReq)
  return false;
#undef DO_
}

void TActSoulChainActivitySetAtkFormationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivitySetAtkFormationReq)
  // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
  for (int i = 0; i < this->hidposarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hidposarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivitySetAtkFormationReq)
}

::google::protobuf::uint8* TActSoulChainActivitySetAtkFormationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivitySetAtkFormationReq)
  // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
  for (int i = 0; i < this->hidposarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hidposarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivitySetAtkFormationReq)
  return target;
}

int TActSoulChainActivitySetAtkFormationReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
  total_size += 1 * this->hidposarr_size();
  for (int i = 0; i < this->hidposarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hidposarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivitySetAtkFormationReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivitySetAtkFormationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivitySetAtkFormationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivitySetAtkFormationReq::MergeFrom(const TActSoulChainActivitySetAtkFormationReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  hidposarr_.MergeFrom(from.hidposarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivitySetAtkFormationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivitySetAtkFormationReq::CopyFrom(const TActSoulChainActivitySetAtkFormationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivitySetAtkFormationReq::IsInitialized() const {

  return true;
}

void TActSoulChainActivitySetAtkFormationReq::Swap(TActSoulChainActivitySetAtkFormationReq* other) {
  if (other != this) {
    hidposarr_.Swap(&other->hidposarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivitySetAtkFormationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivitySetAtkFormationReq_descriptor_;
  metadata.reflection = TActSoulChainActivitySetAtkFormationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActSoulChainActivityGetAtkFormationRsp::kHidPosArrFieldNumber;
#endif  // !_MSC_VER

TActSoulChainActivityGetAtkFormationRsp::TActSoulChainActivityGetAtkFormationRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActSoulChainActivityGetAtkFormationRsp)
}

void TActSoulChainActivityGetAtkFormationRsp::InitAsDefaultInstance() {
}

TActSoulChainActivityGetAtkFormationRsp::TActSoulChainActivityGetAtkFormationRsp(const TActSoulChainActivityGetAtkFormationRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActSoulChainActivityGetAtkFormationRsp)
}

void TActSoulChainActivityGetAtkFormationRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActSoulChainActivityGetAtkFormationRsp::~TActSoulChainActivityGetAtkFormationRsp() {
  // @@protoc_insertion_point(destructor:pb.TActSoulChainActivityGetAtkFormationRsp)
  SharedDtor();
}

void TActSoulChainActivityGetAtkFormationRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActSoulChainActivityGetAtkFormationRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActSoulChainActivityGetAtkFormationRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActSoulChainActivityGetAtkFormationRsp_descriptor_;
}

const TActSoulChainActivityGetAtkFormationRsp& TActSoulChainActivityGetAtkFormationRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActSoulChainActivity_2eproto();
  return *default_instance_;
}

TActSoulChainActivityGetAtkFormationRsp* TActSoulChainActivityGetAtkFormationRsp::default_instance_ = NULL;

TActSoulChainActivityGetAtkFormationRsp* TActSoulChainActivityGetAtkFormationRsp::New() const {
  return new TActSoulChainActivityGetAtkFormationRsp;
}

void TActSoulChainActivityGetAtkFormationRsp::Clear() {
  hidposarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActSoulChainActivityGetAtkFormationRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActSoulChainActivityGetAtkFormationRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HidPosArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hidposarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HidPosArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActSoulChainActivityGetAtkFormationRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActSoulChainActivityGetAtkFormationRsp)
  return false;
#undef DO_
}

void TActSoulChainActivityGetAtkFormationRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActSoulChainActivityGetAtkFormationRsp)
  // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
  for (int i = 0; i < this->hidposarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hidposarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActSoulChainActivityGetAtkFormationRsp)
}

::google::protobuf::uint8* TActSoulChainActivityGetAtkFormationRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActSoulChainActivityGetAtkFormationRsp)
  // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
  for (int i = 0; i < this->hidposarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hidposarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActSoulChainActivityGetAtkFormationRsp)
  return target;
}

int TActSoulChainActivityGetAtkFormationRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActSoulChainActivityHidPosInfo HidPosArr = 1;
  total_size += 1 * this->hidposarr_size();
  for (int i = 0; i < this->hidposarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hidposarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActSoulChainActivityGetAtkFormationRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActSoulChainActivityGetAtkFormationRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActSoulChainActivityGetAtkFormationRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActSoulChainActivityGetAtkFormationRsp::MergeFrom(const TActSoulChainActivityGetAtkFormationRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  hidposarr_.MergeFrom(from.hidposarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActSoulChainActivityGetAtkFormationRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActSoulChainActivityGetAtkFormationRsp::CopyFrom(const TActSoulChainActivityGetAtkFormationRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActSoulChainActivityGetAtkFormationRsp::IsInitialized() const {

  return true;
}

void TActSoulChainActivityGetAtkFormationRsp::Swap(TActSoulChainActivityGetAtkFormationRsp* other) {
  if (other != this) {
    hidposarr_.Swap(&other->hidposarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActSoulChainActivityGetAtkFormationRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActSoulChainActivityGetAtkFormationRsp_descriptor_;
  metadata.reflection = TActSoulChainActivityGetAtkFormationRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
