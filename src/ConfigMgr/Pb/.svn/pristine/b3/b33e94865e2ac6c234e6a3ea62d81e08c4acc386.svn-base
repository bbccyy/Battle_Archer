// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/CardBuff.proto

#ifndef PROTOBUF_net_2fCardBuff_2eproto__INCLUDED
#define PROTOBUF_net_2fCardBuff_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fCardBuff_2eproto();
void protobuf_AssignDesc_net_2fCardBuff_2eproto();
void protobuf_ShutdownFile_net_2fCardBuff_2eproto();

class TCardInfo;
class TCardBuffGetInfoRsp;
class TCardBuffActivateReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TCardInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CardBuff.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCardInfo : public ::google::protobuf::Message {
 public:
  TCardInfo();
  virtual ~TCardInfo();

  TCardInfo(const TCardInfo& from);

  inline TCardInfo& operator=(const TCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCardInfo& default_instance();

  void Swap(TCardInfo* other);

  // implements Message ----------------------------------------------

  TCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCardInfo& from);
  void MergeFrom(const TCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCardInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 State = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCardInfo</name>
  	<Function>
  		<name>state</name>
  		<replaceName>State</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_state</name>
  		<replaceName>State</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_state</name>
  		<replaceName>State</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint64 EndTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TCardInfo</name>
  	<Function>
  		<name>endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TCardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint64 endtime_;
  friend void  protobuf_AddDesc_net_2fCardBuff_2eproto();
  friend void protobuf_AssignDesc_net_2fCardBuff_2eproto();
  friend void protobuf_ShutdownFile_net_2fCardBuff_2eproto();

  void InitAsDefaultInstance();
  static TCardInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCardBuffGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CardBuff.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCardBuffGetInfoRsp : public ::google::protobuf::Message {
 public:
  TCardBuffGetInfoRsp();
  virtual ~TCardBuffGetInfoRsp();

  TCardBuffGetInfoRsp(const TCardBuffGetInfoRsp& from);

  inline TCardBuffGetInfoRsp& operator=(const TCardBuffGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCardBuffGetInfoRsp& default_instance();

  void Swap(TCardBuffGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TCardBuffGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCardBuffGetInfoRsp& from);
  void MergeFrom(const TCardBuffGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCardInfo CardBuffInfoArr = 1;
  inline int cardbuffinfoarr_size() const;
  inline void clear_cardbuffinfoarr();
  static const int kCardBuffInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCardBuffGetInfoRsp</name>
  	<Function>
  		<name>cardbuffinfoarr</name>
  		<replaceName>CardBuffInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_cardbuffinfoarr</name>
  		<replaceName>CardBuffInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_cardbuffinfoarr</name>
  		<replaceName>CardBuffInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cardbuffinfoarr</name>
  		<replaceName>CardBuffInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>cardbuffinfoarr_size</name>
  		<replaceName>CardBuffInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCardInfo& cardbuffinfoarr(int index) const;
  inline ::pb::TCardInfo* mutable_cardbuffinfoarr(int index);
  inline ::pb::TCardInfo* add_cardbuffinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCardInfo >&
      cardbuffinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCardInfo >*
      mutable_cardbuffinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TCardBuffGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCardInfo > cardbuffinfoarr_;
  friend void  protobuf_AddDesc_net_2fCardBuff_2eproto();
  friend void protobuf_AssignDesc_net_2fCardBuff_2eproto();
  friend void protobuf_ShutdownFile_net_2fCardBuff_2eproto();

  void InitAsDefaultInstance();
  static TCardBuffGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCardBuffActivateReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CardBuff.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCardBuffActivateReq : public ::google::protobuf::Message {
 public:
  TCardBuffActivateReq();
  virtual ~TCardBuffActivateReq();

  TCardBuffActivateReq(const TCardBuffActivateReq& from);

  inline TCardBuffActivateReq& operator=(const TCardBuffActivateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCardBuffActivateReq& default_instance();

  void Swap(TCardBuffActivateReq* other);

  // implements Message ----------------------------------------------

  TCardBuffActivateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCardBuffActivateReq& from);
  void MergeFrom(const TCardBuffActivateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCardBuffActivateReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TCardBuffActivateReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fCardBuff_2eproto();
  friend void protobuf_AssignDesc_net_2fCardBuff_2eproto();
  friend void protobuf_ShutdownFile_net_2fCardBuff_2eproto();

  void InitAsDefaultInstance();
  static TCardBuffActivateReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TCardInfo

// optional uint32 Id = 1;
inline bool TCardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCardInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TCardInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TCardInfo.Id)
  return id_;
}
inline void TCardInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TCardInfo.Id)
}

// optional uint32 State = 2;
inline bool TCardInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCardInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCardInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCardInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 TCardInfo::state() const {
  // @@protoc_insertion_point(field_get:pb.TCardInfo.State)
  return state_;
}
inline void TCardInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:pb.TCardInfo.State)
}

// optional uint64 EndTime = 3;
inline bool TCardInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TCardInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TCardInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TCardInfo::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 TCardInfo::endtime() const {
  // @@protoc_insertion_point(field_get:pb.TCardInfo.EndTime)
  return endtime_;
}
inline void TCardInfo::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCardInfo.EndTime)
}

// -------------------------------------------------------------------

// TCardBuffGetInfoRsp

// repeated .pb.TCardInfo CardBuffInfoArr = 1;
inline int TCardBuffGetInfoRsp::cardbuffinfoarr_size() const {
  return cardbuffinfoarr_.size();
}
inline void TCardBuffGetInfoRsp::clear_cardbuffinfoarr() {
  cardbuffinfoarr_.Clear();
}
inline const ::pb::TCardInfo& TCardBuffGetInfoRsp::cardbuffinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TCardBuffGetInfoRsp.CardBuffInfoArr)
  return cardbuffinfoarr_.Get(index);
}
inline ::pb::TCardInfo* TCardBuffGetInfoRsp::mutable_cardbuffinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TCardBuffGetInfoRsp.CardBuffInfoArr)
  return cardbuffinfoarr_.Mutable(index);
}
inline ::pb::TCardInfo* TCardBuffGetInfoRsp::add_cardbuffinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TCardBuffGetInfoRsp.CardBuffInfoArr)
  return cardbuffinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCardInfo >&
TCardBuffGetInfoRsp::cardbuffinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TCardBuffGetInfoRsp.CardBuffInfoArr)
  return cardbuffinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCardInfo >*
TCardBuffGetInfoRsp::mutable_cardbuffinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TCardBuffGetInfoRsp.CardBuffInfoArr)
  return &cardbuffinfoarr_;
}

// -------------------------------------------------------------------

// TCardBuffActivateReq

// optional uint32 Id = 1;
inline bool TCardBuffActivateReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCardBuffActivateReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCardBuffActivateReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCardBuffActivateReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TCardBuffActivateReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TCardBuffActivateReq.Id)
  return id_;
}
inline void TCardBuffActivateReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TCardBuffActivateReq.Id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fCardBuff_2eproto__INCLUDED
