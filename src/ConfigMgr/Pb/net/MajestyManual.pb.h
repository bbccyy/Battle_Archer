// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/MajestyManual.proto

#ifndef PROTOBUF_net_2fMajestyManual_2eproto__INCLUDED
#define PROTOBUF_net_2fMajestyManual_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fMajestyManual_2eproto();
void protobuf_AssignDesc_net_2fMajestyManual_2eproto();
void protobuf_ShutdownFile_net_2fMajestyManual_2eproto();

class TMajestyManualOpenNextData;
class TMajestyManualGetMajestyManualInfoRsp;
class TMajestyManualMajestyManualNotify;
class TMajestyManualAcceptRewardReq;

enum EMajestyManualOpenNextStatus {
  EMajestyManualOpenNext_UnCompleted = 1,
  EMajestyManualOpenNext_Completed = 2,
  EMajestyManualOpenNext_Reward = 3
};
bool EMajestyManualOpenNextStatus_IsValid(int value);
const EMajestyManualOpenNextStatus EMajestyManualOpenNextStatus_MIN = EMajestyManualOpenNext_UnCompleted;
const EMajestyManualOpenNextStatus EMajestyManualOpenNextStatus_MAX = EMajestyManualOpenNext_Reward;
const int EMajestyManualOpenNextStatus_ARRAYSIZE = EMajestyManualOpenNextStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMajestyManualOpenNextStatus_descriptor();
inline const ::std::string& EMajestyManualOpenNextStatus_Name(EMajestyManualOpenNextStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMajestyManualOpenNextStatus_descriptor(), value);
}
inline bool EMajestyManualOpenNextStatus_Parse(
    const ::std::string& name, EMajestyManualOpenNextStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMajestyManualOpenNextStatus>(
    EMajestyManualOpenNextStatus_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TMajestyManualOpenNextData</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/MajestyManual.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMajestyManualOpenNextData : public ::google::protobuf::Message {
 public:
  TMajestyManualOpenNextData();
  virtual ~TMajestyManualOpenNextData();

  TMajestyManualOpenNextData(const TMajestyManualOpenNextData& from);

  inline TMajestyManualOpenNextData& operator=(const TMajestyManualOpenNextData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMajestyManualOpenNextData& default_instance();

  void Swap(TMajestyManualOpenNextData* other);

  // implements Message ----------------------------------------------

  TMajestyManualOpenNextData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMajestyManualOpenNextData& from);
  void MergeFrom(const TMajestyManualOpenNextData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMajestyManualOpenNextData</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional .pb.EMajestyManualOpenNextStatus Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMajestyManualOpenNextData</name>
  	<Function>
  		<name>status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EMajestyManualOpenNextStatus status() const;
  inline void set_status(::pb::EMajestyManualOpenNextStatus value);

  // @@protoc_insertion_point(class_scope:pb.TMajestyManualOpenNextData)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  int status_;
  friend void  protobuf_AddDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_AssignDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_ShutdownFile_net_2fMajestyManual_2eproto();

  void InitAsDefaultInstance();
  static TMajestyManualOpenNextData* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMajestyManualGetMajestyManualInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/MajestyManual.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMajestyManualGetMajestyManualInfoRsp : public ::google::protobuf::Message {
 public:
  TMajestyManualGetMajestyManualInfoRsp();
  virtual ~TMajestyManualGetMajestyManualInfoRsp();

  TMajestyManualGetMajestyManualInfoRsp(const TMajestyManualGetMajestyManualInfoRsp& from);

  inline TMajestyManualGetMajestyManualInfoRsp& operator=(const TMajestyManualGetMajestyManualInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMajestyManualGetMajestyManualInfoRsp& default_instance();

  void Swap(TMajestyManualGetMajestyManualInfoRsp* other);

  // implements Message ----------------------------------------------

  TMajestyManualGetMajestyManualInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMajestyManualGetMajestyManualInfoRsp& from);
  void MergeFrom(const TMajestyManualGetMajestyManualInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  inline int openarr_size() const;
  inline void clear_openarr();
  static const int kOpenArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMajestyManualGetMajestyManualInfoRsp</name>
  	<Function>
  		<name>openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>openarr_size</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMajestyManualOpenNextData& openarr(int index) const;
  inline ::pb::TMajestyManualOpenNextData* mutable_openarr(int index);
  inline ::pb::TMajestyManualOpenNextData* add_openarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >&
      openarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >*
      mutable_openarr();

  // @@protoc_insertion_point(class_scope:pb.TMajestyManualGetMajestyManualInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData > openarr_;
  friend void  protobuf_AddDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_AssignDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_ShutdownFile_net_2fMajestyManual_2eproto();

  void InitAsDefaultInstance();
  static TMajestyManualGetMajestyManualInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMajestyManualMajestyManualNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/MajestyManual.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMajestyManualMajestyManualNotify : public ::google::protobuf::Message {
 public:
  TMajestyManualMajestyManualNotify();
  virtual ~TMajestyManualMajestyManualNotify();

  TMajestyManualMajestyManualNotify(const TMajestyManualMajestyManualNotify& from);

  inline TMajestyManualMajestyManualNotify& operator=(const TMajestyManualMajestyManualNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMajestyManualMajestyManualNotify& default_instance();

  void Swap(TMajestyManualMajestyManualNotify* other);

  // implements Message ----------------------------------------------

  TMajestyManualMajestyManualNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMajestyManualMajestyManualNotify& from);
  void MergeFrom(const TMajestyManualMajestyManualNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  inline int openarr_size() const;
  inline void clear_openarr();
  static const int kOpenArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMajestyManualMajestyManualNotify</name>
  	<Function>
  		<name>openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_openarr</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>openarr_size</name>
  		<replaceName>OpenArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMajestyManualOpenNextData& openarr(int index) const;
  inline ::pb::TMajestyManualOpenNextData* mutable_openarr(int index);
  inline ::pb::TMajestyManualOpenNextData* add_openarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >&
      openarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >*
      mutable_openarr();

  // @@protoc_insertion_point(class_scope:pb.TMajestyManualMajestyManualNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData > openarr_;
  friend void  protobuf_AddDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_AssignDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_ShutdownFile_net_2fMajestyManual_2eproto();

  void InitAsDefaultInstance();
  static TMajestyManualMajestyManualNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMajestyManualAcceptRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/MajestyManual.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMajestyManualAcceptRewardReq : public ::google::protobuf::Message {
 public:
  TMajestyManualAcceptRewardReq();
  virtual ~TMajestyManualAcceptRewardReq();

  TMajestyManualAcceptRewardReq(const TMajestyManualAcceptRewardReq& from);

  inline TMajestyManualAcceptRewardReq& operator=(const TMajestyManualAcceptRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMajestyManualAcceptRewardReq& default_instance();

  void Swap(TMajestyManualAcceptRewardReq* other);

  // implements Message ----------------------------------------------

  TMajestyManualAcceptRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMajestyManualAcceptRewardReq& from);
  void MergeFrom(const TMajestyManualAcceptRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMajestyManualAcceptRewardReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMajestyManualAcceptRewardReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_AssignDesc_net_2fMajestyManual_2eproto();
  friend void protobuf_ShutdownFile_net_2fMajestyManual_2eproto();

  void InitAsDefaultInstance();
  static TMajestyManualAcceptRewardReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TMajestyManualOpenNextData

// optional uint32 Tid = 1;
inline bool TMajestyManualOpenNextData::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMajestyManualOpenNextData::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMajestyManualOpenNextData::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMajestyManualOpenNextData::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TMajestyManualOpenNextData::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMajestyManualOpenNextData.Tid)
  return tid_;
}
inline void TMajestyManualOpenNextData::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMajestyManualOpenNextData.Tid)
}

// optional .pb.EMajestyManualOpenNextStatus Status = 2;
inline bool TMajestyManualOpenNextData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMajestyManualOpenNextData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMajestyManualOpenNextData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMajestyManualOpenNextData::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::pb::EMajestyManualOpenNextStatus TMajestyManualOpenNextData::status() const {
  // @@protoc_insertion_point(field_get:pb.TMajestyManualOpenNextData.Status)
  return static_cast< ::pb::EMajestyManualOpenNextStatus >(status_);
}
inline void TMajestyManualOpenNextData::set_status(::pb::EMajestyManualOpenNextStatus value) {
  assert(::pb::EMajestyManualOpenNextStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:pb.TMajestyManualOpenNextData.Status)
}

// -------------------------------------------------------------------

// TMajestyManualGetMajestyManualInfoRsp

// repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
inline int TMajestyManualGetMajestyManualInfoRsp::openarr_size() const {
  return openarr_.size();
}
inline void TMajestyManualGetMajestyManualInfoRsp::clear_openarr() {
  openarr_.Clear();
}
inline const ::pb::TMajestyManualOpenNextData& TMajestyManualGetMajestyManualInfoRsp::openarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMajestyManualGetMajestyManualInfoRsp.OpenArr)
  return openarr_.Get(index);
}
inline ::pb::TMajestyManualOpenNextData* TMajestyManualGetMajestyManualInfoRsp::mutable_openarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMajestyManualGetMajestyManualInfoRsp.OpenArr)
  return openarr_.Mutable(index);
}
inline ::pb::TMajestyManualOpenNextData* TMajestyManualGetMajestyManualInfoRsp::add_openarr() {
  // @@protoc_insertion_point(field_add:pb.TMajestyManualGetMajestyManualInfoRsp.OpenArr)
  return openarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >&
TMajestyManualGetMajestyManualInfoRsp::openarr() const {
  // @@protoc_insertion_point(field_list:pb.TMajestyManualGetMajestyManualInfoRsp.OpenArr)
  return openarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >*
TMajestyManualGetMajestyManualInfoRsp::mutable_openarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMajestyManualGetMajestyManualInfoRsp.OpenArr)
  return &openarr_;
}

// -------------------------------------------------------------------

// TMajestyManualMajestyManualNotify

// repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
inline int TMajestyManualMajestyManualNotify::openarr_size() const {
  return openarr_.size();
}
inline void TMajestyManualMajestyManualNotify::clear_openarr() {
  openarr_.Clear();
}
inline const ::pb::TMajestyManualOpenNextData& TMajestyManualMajestyManualNotify::openarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMajestyManualMajestyManualNotify.OpenArr)
  return openarr_.Get(index);
}
inline ::pb::TMajestyManualOpenNextData* TMajestyManualMajestyManualNotify::mutable_openarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMajestyManualMajestyManualNotify.OpenArr)
  return openarr_.Mutable(index);
}
inline ::pb::TMajestyManualOpenNextData* TMajestyManualMajestyManualNotify::add_openarr() {
  // @@protoc_insertion_point(field_add:pb.TMajestyManualMajestyManualNotify.OpenArr)
  return openarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >&
TMajestyManualMajestyManualNotify::openarr() const {
  // @@protoc_insertion_point(field_list:pb.TMajestyManualMajestyManualNotify.OpenArr)
  return openarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TMajestyManualOpenNextData >*
TMajestyManualMajestyManualNotify::mutable_openarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMajestyManualMajestyManualNotify.OpenArr)
  return &openarr_;
}

// -------------------------------------------------------------------

// TMajestyManualAcceptRewardReq

// optional uint32 Tid = 1;
inline bool TMajestyManualAcceptRewardReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMajestyManualAcceptRewardReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMajestyManualAcceptRewardReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMajestyManualAcceptRewardReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TMajestyManualAcceptRewardReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TMajestyManualAcceptRewardReq.Tid)
  return tid_;
}
inline void TMajestyManualAcceptRewardReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMajestyManualAcceptRewardReq.Tid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EMajestyManualOpenNextStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EMajestyManualOpenNextStatus>() {
  return ::pb::EMajestyManualOpenNextStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fMajestyManual_2eproto__INCLUDED
