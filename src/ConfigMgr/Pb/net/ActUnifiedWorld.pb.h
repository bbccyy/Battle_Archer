// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActUnifiedWorld.proto

#ifndef PROTOBUF_net_2fActUnifiedWorld_2eproto__INCLUDED
#define PROTOBUF_net_2fActUnifiedWorld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
#include "net/CommonReward.pb.h"
#include "net/OpenActivity.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

class TActUnifiedWorldGiftInfo;
class TActUnifiedWorldTaskInfo;
class TActUnifiedWorldGetInfoRsp;
class TActUnifiedWorldGetArrScoreRewardReq;
class TActUnifiedWorldGetArrScoreRewardRsp;
class TActUnifiedWorldRankInfo;
class TActUnifiedWorldGetStageRankReq;
class TActUnifiedWorldGetStageRankRsp;
class TActUnifiedWorldGetTotalRankReq;
class TActUnifiedWorldGetTotalRankRsp;
class TActUnifiedWorldGetLastTotalRankReq;
class TActUnifiedWorldGetLastTotalRankRsp;
class TActUnifiedWorldNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGiftInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGiftInfo : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGiftInfo();
  virtual ~TActUnifiedWorldGiftInfo();

  TActUnifiedWorldGiftInfo(const TActUnifiedWorldGiftInfo& from);

  inline TActUnifiedWorldGiftInfo& operator=(const TActUnifiedWorldGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGiftInfo& default_instance();

  void Swap(TActUnifiedWorldGiftInfo* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGiftInfo& from);
  void MergeFrom(const TActUnifiedWorldGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGiftInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGiftInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 3;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGiftInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGiftInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buytime();
  inline void clear_has_buytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint64 buytime_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldTaskInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldTaskInfo : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldTaskInfo();
  virtual ~TActUnifiedWorldTaskInfo();

  TActUnifiedWorldTaskInfo(const TActUnifiedWorldTaskInfo& from);

  inline TActUnifiedWorldTaskInfo& operator=(const TActUnifiedWorldTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldTaskInfo& default_instance();

  void Swap(TActUnifiedWorldTaskInfo* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldTaskInfo& from);
  void MergeFrom(const TActUnifiedWorldTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldTaskInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldTaskInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldTaskInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 num_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetInfoRsp();
  virtual ~TActUnifiedWorldGetInfoRsp();

  TActUnifiedWorldGetInfoRsp(const TActUnifiedWorldGetInfoRsp& from);

  inline TActUnifiedWorldGetInfoRsp& operator=(const TActUnifiedWorldGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetInfoRsp& default_instance();

  void Swap(TActUnifiedWorldGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetInfoRsp& from);
  void MergeFrom(const TActUnifiedWorldGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // optional uint64 TotalScore = 3;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalScoreFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>totalscore</name>
  		<replaceName>TotalScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscore</name>
  		<replaceName>TotalScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscore</name>
  		<replaceName>TotalScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 totalscore() const;
  inline void set_totalscore(::google::protobuf::uint64 value);

  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  inline int arrgiftinfo_size() const;
  inline void clear_arrgiftinfo();
  static const int kArrGiftInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgiftinfo_size</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldGiftInfo& arrgiftinfo(int index) const;
  inline ::pb::TActUnifiedWorldGiftInfo* mutable_arrgiftinfo(int index);
  inline ::pb::TActUnifiedWorldGiftInfo* add_arrgiftinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >&
      arrgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >*
      mutable_arrgiftinfo();

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  inline int arrtaskinfo_size() const;
  inline void clear_arrtaskinfo();
  static const int kArrTaskInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskinfo_size</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldTaskInfo& arrtaskinfo(int index) const;
  inline ::pb::TActUnifiedWorldTaskInfo* mutable_arrtaskinfo(int index);
  inline ::pb::TActUnifiedWorldTaskInfo* add_arrtaskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >&
      arrtaskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >*
      mutable_arrtaskinfo();

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 6;
  inline int arrscorerewardinfo_size() const;
  inline void clear_arrscorerewardinfo();
  static const int kArrScoreRewardInfoFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrscorerewardinfo_size</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrscorerewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrscorerewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrscorerewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrscorerewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrscorerewardinfo();

  // repeated int32 StageRankArr = 7;
  inline int stagerankarr_size() const;
  inline void clear_stagerankarr();
  static const int kStageRankArrFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>stagerankarr_size</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 stagerankarr(int index) const;
  inline void set_stagerankarr(int index, ::google::protobuf::int32 value);
  inline void add_stagerankarr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stagerankarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stagerankarr();

  // optional uint32 TotalRank = 8;
  inline bool has_totalrank() const;
  inline void clear_totalrank();
  static const int kTotalRankFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>totalrank</name>
  		<replaceName>TotalRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalrank</name>
  		<replaceName>TotalRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalrank</name>
  		<replaceName>TotalRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalrank() const;
  inline void set_totalrank(::google::protobuf::uint32 value);

  // optional uint32 GroupId = 9;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>groupid</name>
  		<replaceName>GroupId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupid</name>
  		<replaceName>GroupId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupid</name>
  		<replaceName>GroupId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // repeated int32 MaxStageRankArr = 10;
  inline int maxstagerankarr_size() const;
  inline void clear_maxstagerankarr();
  static const int kMaxStageRankArrFieldNumber = 10;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>maxstagerankarr_size</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 maxstagerankarr(int index) const;
  inline void set_maxstagerankarr(int index, ::google::protobuf::int32 value);
  inline void add_maxstagerankarr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      maxstagerankarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_maxstagerankarr();

  // optional uint32 MaxTotalRank = 11;
  inline bool has_maxtotalrank() const;
  inline void clear_maxtotalrank();
  static const int kMaxTotalRankFieldNumber = 11;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetInfoRsp</name>
  	<Function>
  		<name>maxtotalrank</name>
  		<replaceName>MaxTotalRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxtotalrank</name>
  		<replaceName>MaxTotalRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxtotalrank</name>
  		<replaceName>MaxTotalRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxtotalrank() const;
  inline void set_maxtotalrank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_totalrank();
  inline void clear_has_totalrank();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_maxtotalrank();
  inline void clear_has_maxtotalrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint64 totalscore_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo > arrgiftinfo_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 totalrank_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo > arrtaskinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrscorerewardinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stagerankarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > maxstagerankarr_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 maxtotalrank_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetArrScoreRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetArrScoreRewardReq : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetArrScoreRewardReq();
  virtual ~TActUnifiedWorldGetArrScoreRewardReq();

  TActUnifiedWorldGetArrScoreRewardReq(const TActUnifiedWorldGetArrScoreRewardReq& from);

  inline TActUnifiedWorldGetArrScoreRewardReq& operator=(const TActUnifiedWorldGetArrScoreRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetArrScoreRewardReq& default_instance();

  void Swap(TActUnifiedWorldGetArrScoreRewardReq* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetArrScoreRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetArrScoreRewardReq& from);
  void MergeFrom(const TActUnifiedWorldGetArrScoreRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ArrId = 1;
  inline int arrid_size() const;
  inline void clear_arrid();
  static const int kArrIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetArrScoreRewardReq</name>
  	<Function>
  		<name>arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrid_size</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrid(int index) const;
  inline void set_arrid(int index, ::google::protobuf::uint32 value);
  inline void add_arrid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrid();

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetArrScoreRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrid_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetArrScoreRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetArrScoreRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetArrScoreRewardRsp : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetArrScoreRewardRsp();
  virtual ~TActUnifiedWorldGetArrScoreRewardRsp();

  TActUnifiedWorldGetArrScoreRewardRsp(const TActUnifiedWorldGetArrScoreRewardRsp& from);

  inline TActUnifiedWorldGetArrScoreRewardRsp& operator=(const TActUnifiedWorldGetArrScoreRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetArrScoreRewardRsp& default_instance();

  void Swap(TActUnifiedWorldGetArrScoreRewardRsp* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetArrScoreRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetArrScoreRewardRsp& from);
  void MergeFrom(const TActUnifiedWorldGetArrScoreRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetArrScoreRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetArrScoreRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetArrScoreRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldRankInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldRankInfo : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldRankInfo();
  virtual ~TActUnifiedWorldRankInfo();

  TActUnifiedWorldRankInfo(const TActUnifiedWorldRankInfo& from);

  inline TActUnifiedWorldRankInfo& operator=(const TActUnifiedWorldRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldRankInfo& default_instance();

  void Swap(TActUnifiedWorldRankInfo* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldRankInfo& from);
  void MergeFrom(const TActUnifiedWorldRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldRankInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldRankInfo</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint64 Score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldRankInfo</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldRankInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldRankInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetStageRankReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetStageRankReq : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetStageRankReq();
  virtual ~TActUnifiedWorldGetStageRankReq();

  TActUnifiedWorldGetStageRankReq(const TActUnifiedWorldGetStageRankReq& from);

  inline TActUnifiedWorldGetStageRankReq& operator=(const TActUnifiedWorldGetStageRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetStageRankReq& default_instance();

  void Swap(TActUnifiedWorldGetStageRankReq* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetStageRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetStageRankReq& from);
  void MergeFrom(const TActUnifiedWorldGetStageRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetStageRankReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetStageRankReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetStageRankReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetStageRankReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetStageRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetStageRankRsp : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetStageRankRsp();
  virtual ~TActUnifiedWorldGetStageRankRsp();

  TActUnifiedWorldGetStageRankRsp(const TActUnifiedWorldGetStageRankRsp& from);

  inline TActUnifiedWorldGetStageRankRsp& operator=(const TActUnifiedWorldGetStageRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetStageRankRsp& default_instance();

  void Swap(TActUnifiedWorldGetStageRankRsp* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetStageRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetStageRankRsp& from);
  void MergeFrom(const TActUnifiedWorldGetStageRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  inline int arrrankinfo_size() const;
  inline void clear_arrrankinfo();
  static const int kArrRankInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetStageRankRsp</name>
  	<Function>
  		<name>arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrankinfo_size</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldRankInfo& arrrankinfo(int index) const;
  inline ::pb::TActUnifiedWorldRankInfo* mutable_arrrankinfo(int index);
  inline ::pb::TActUnifiedWorldRankInfo* add_arrrankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >&
      arrrankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >*
      mutable_arrrankinfo();

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetStageRankRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo > arrrankinfo_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetStageRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetTotalRankReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetTotalRankReq : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetTotalRankReq();
  virtual ~TActUnifiedWorldGetTotalRankReq();

  TActUnifiedWorldGetTotalRankReq(const TActUnifiedWorldGetTotalRankReq& from);

  inline TActUnifiedWorldGetTotalRankReq& operator=(const TActUnifiedWorldGetTotalRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetTotalRankReq& default_instance();

  void Swap(TActUnifiedWorldGetTotalRankReq* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetTotalRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetTotalRankReq& from);
  void MergeFrom(const TActUnifiedWorldGetTotalRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetTotalRankReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetTotalRankReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetTotalRankReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetTotalRankReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetTotalRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetTotalRankRsp : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetTotalRankRsp();
  virtual ~TActUnifiedWorldGetTotalRankRsp();

  TActUnifiedWorldGetTotalRankRsp(const TActUnifiedWorldGetTotalRankRsp& from);

  inline TActUnifiedWorldGetTotalRankRsp& operator=(const TActUnifiedWorldGetTotalRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetTotalRankRsp& default_instance();

  void Swap(TActUnifiedWorldGetTotalRankRsp* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetTotalRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetTotalRankRsp& from);
  void MergeFrom(const TActUnifiedWorldGetTotalRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  inline int arrrankinfo_size() const;
  inline void clear_arrrankinfo();
  static const int kArrRankInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetTotalRankRsp</name>
  	<Function>
  		<name>arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrankinfo_size</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldRankInfo& arrrankinfo(int index) const;
  inline ::pb::TActUnifiedWorldRankInfo* mutable_arrrankinfo(int index);
  inline ::pb::TActUnifiedWorldRankInfo* add_arrrankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >&
      arrrankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >*
      mutable_arrrankinfo();

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetTotalRankRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo > arrrankinfo_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetTotalRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetLastTotalRankReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetLastTotalRankReq : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetLastTotalRankReq();
  virtual ~TActUnifiedWorldGetLastTotalRankReq();

  TActUnifiedWorldGetLastTotalRankReq(const TActUnifiedWorldGetLastTotalRankReq& from);

  inline TActUnifiedWorldGetLastTotalRankReq& operator=(const TActUnifiedWorldGetLastTotalRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetLastTotalRankReq& default_instance();

  void Swap(TActUnifiedWorldGetLastTotalRankReq* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetLastTotalRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetLastTotalRankReq& from);
  void MergeFrom(const TActUnifiedWorldGetLastTotalRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetLastTotalRankReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetLastTotalRankReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetLastTotalRankReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetLastTotalRankReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldGetLastTotalRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldGetLastTotalRankRsp : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldGetLastTotalRankRsp();
  virtual ~TActUnifiedWorldGetLastTotalRankRsp();

  TActUnifiedWorldGetLastTotalRankRsp(const TActUnifiedWorldGetLastTotalRankRsp& from);

  inline TActUnifiedWorldGetLastTotalRankRsp& operator=(const TActUnifiedWorldGetLastTotalRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldGetLastTotalRankRsp& default_instance();

  void Swap(TActUnifiedWorldGetLastTotalRankRsp* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldGetLastTotalRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldGetLastTotalRankRsp& from);
  void MergeFrom(const TActUnifiedWorldGetLastTotalRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MyRank = 1;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyRankFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetLastTotalRankRsp</name>
  	<Function>
  		<name>myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 myrank() const;
  inline void set_myrank(::google::protobuf::uint32 value);

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 2;
  inline int arrrankinfo_size() const;
  inline void clear_arrrankinfo();
  static const int kArrRankInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldGetLastTotalRankRsp</name>
  	<Function>
  		<name>arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrankinfo_size</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldRankInfo& arrrankinfo(int index) const;
  inline ::pb::TActUnifiedWorldRankInfo* mutable_arrrankinfo(int index);
  inline ::pb::TActUnifiedWorldRankInfo* add_arrrankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >&
      arrrankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >*
      mutable_arrrankinfo();

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldGetLastTotalRankRsp)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo > arrrankinfo_;
  ::google::protobuf::uint32 myrank_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldGetLastTotalRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnifiedWorldNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnifiedWorld.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnifiedWorldNotify : public ::google::protobuf::Message {
 public:
  TActUnifiedWorldNotify();
  virtual ~TActUnifiedWorldNotify();

  TActUnifiedWorldNotify(const TActUnifiedWorldNotify& from);

  inline TActUnifiedWorldNotify& operator=(const TActUnifiedWorldNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnifiedWorldNotify& default_instance();

  void Swap(TActUnifiedWorldNotify* other);

  // implements Message ----------------------------------------------

  TActUnifiedWorldNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnifiedWorldNotify& from);
  void MergeFrom(const TActUnifiedWorldNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // optional uint64 TotalScore = 3;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalScoreFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>totalscore</name>
  		<replaceName>TotalScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscore</name>
  		<replaceName>TotalScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscore</name>
  		<replaceName>TotalScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 totalscore() const;
  inline void set_totalscore(::google::protobuf::uint64 value);

  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  inline int arrgiftinfo_size() const;
  inline void clear_arrgiftinfo();
  static const int kArrGiftInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgiftinfo_size</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldGiftInfo& arrgiftinfo(int index) const;
  inline ::pb::TActUnifiedWorldGiftInfo* mutable_arrgiftinfo(int index);
  inline ::pb::TActUnifiedWorldGiftInfo* add_arrgiftinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >&
      arrgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >*
      mutable_arrgiftinfo();

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  inline int arrtaskinfo_size() const;
  inline void clear_arrtaskinfo();
  static const int kArrTaskInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskinfo_size</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnifiedWorldTaskInfo& arrtaskinfo(int index) const;
  inline ::pb::TActUnifiedWorldTaskInfo* mutable_arrtaskinfo(int index);
  inline ::pb::TActUnifiedWorldTaskInfo* add_arrtaskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >&
      arrtaskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >*
      mutable_arrtaskinfo();

  // optional uint32 StageRank = 6;
  inline bool has_stagerank() const;
  inline void clear_stagerank();
  static const int kStageRankFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>stagerank</name>
  		<replaceName>StageRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_stagerank</name>
  		<replaceName>StageRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_stagerank</name>
  		<replaceName>StageRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 stagerank() const;
  inline void set_stagerank(::google::protobuf::uint32 value);

  // optional uint32 TotalRank = 7;
  inline bool has_totalrank() const;
  inline void clear_totalrank();
  static const int kTotalRankFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>totalrank</name>
  		<replaceName>TotalRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalrank</name>
  		<replaceName>TotalRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalrank</name>
  		<replaceName>TotalRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalrank() const;
  inline void set_totalrank(::google::protobuf::uint32 value);

  // optional uint32 MaxStageRank = 8;
  inline bool has_maxstagerank() const;
  inline void clear_maxstagerank();
  static const int kMaxStageRankFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>maxstagerank</name>
  		<replaceName>MaxStageRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxstagerank</name>
  		<replaceName>MaxStageRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxstagerank</name>
  		<replaceName>MaxStageRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxstagerank() const;
  inline void set_maxstagerank(::google::protobuf::uint32 value);

  // optional uint32 MaxTotalRank = 9;
  inline bool has_maxtotalrank() const;
  inline void clear_maxtotalrank();
  static const int kMaxTotalRankFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TActUnifiedWorldNotify</name>
  	<Function>
  		<name>maxtotalrank</name>
  		<replaceName>MaxTotalRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxtotalrank</name>
  		<replaceName>MaxTotalRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxtotalrank</name>
  		<replaceName>MaxTotalRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxtotalrank() const;
  inline void set_maxtotalrank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnifiedWorldNotify)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_stagerank();
  inline void clear_has_stagerank();
  inline void set_has_totalrank();
  inline void clear_has_totalrank();
  inline void set_has_maxstagerank();
  inline void clear_has_maxstagerank();
  inline void set_has_maxtotalrank();
  inline void clear_has_maxtotalrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint64 totalscore_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 stagerank_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo > arrgiftinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo > arrtaskinfo_;
  ::google::protobuf::uint32 totalrank_;
  ::google::protobuf::uint32 maxstagerank_;
  ::google::protobuf::uint32 maxtotalrank_;
  friend void  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto();

  void InitAsDefaultInstance();
  static TActUnifiedWorldNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActUnifiedWorldGiftInfo

// optional uint32 Id = 1;
inline bool TActUnifiedWorldGiftInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldGiftInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldGiftInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldGiftInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGiftInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGiftInfo.Id)
  return id_;
}
inline void TActUnifiedWorldGiftInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGiftInfo.Id)
}

// optional uint32 Num = 2;
inline bool TActUnifiedWorldGiftInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldGiftInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldGiftInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldGiftInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGiftInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGiftInfo.Num)
  return num_;
}
inline void TActUnifiedWorldGiftInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGiftInfo.Num)
}

// optional uint64 BuyTime = 3;
inline bool TActUnifiedWorldGiftInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActUnifiedWorldGiftInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActUnifiedWorldGiftInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActUnifiedWorldGiftInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TActUnifiedWorldGiftInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGiftInfo.BuyTime)
  return buytime_;
}
inline void TActUnifiedWorldGiftInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGiftInfo.BuyTime)
}

// -------------------------------------------------------------------

// TActUnifiedWorldTaskInfo

// optional uint32 Id = 1;
inline bool TActUnifiedWorldTaskInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldTaskInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldTaskInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldTaskInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnifiedWorldTaskInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldTaskInfo.Id)
  return id_;
}
inline void TActUnifiedWorldTaskInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldTaskInfo.Id)
}

// optional uint64 Num = 2;
inline bool TActUnifiedWorldTaskInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldTaskInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldTaskInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldTaskInfo::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 TActUnifiedWorldTaskInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldTaskInfo.Num)
  return num_;
}
inline void TActUnifiedWorldTaskInfo::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldTaskInfo.Num)
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetInfoRsp

// optional uint32 Id = 1;
inline bool TActUnifiedWorldGetInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldGetInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetInfoRsp::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.Id)
  return id_;
}
inline void TActUnifiedWorldGetInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.Id)
}

// optional uint64 Score = 2;
inline bool TActUnifiedWorldGetInfoRsp::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldGetInfoRsp::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 TActUnifiedWorldGetInfoRsp::score() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.Score)
  return score_;
}
inline void TActUnifiedWorldGetInfoRsp::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.Score)
}

// optional uint64 TotalScore = 3;
inline bool TActUnifiedWorldGetInfoRsp::has_totalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActUnifiedWorldGetInfoRsp::set_has_totalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_totalscore() {
  totalscore_ = GOOGLE_ULONGLONG(0);
  clear_has_totalscore();
}
inline ::google::protobuf::uint64 TActUnifiedWorldGetInfoRsp::totalscore() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.TotalScore)
  return totalscore_;
}
inline void TActUnifiedWorldGetInfoRsp::set_totalscore(::google::protobuf::uint64 value) {
  set_has_totalscore();
  totalscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.TotalScore)
}

// repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
inline int TActUnifiedWorldGetInfoRsp::arrgiftinfo_size() const {
  return arrgiftinfo_.size();
}
inline void TActUnifiedWorldGetInfoRsp::clear_arrgiftinfo() {
  arrgiftinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldGiftInfo& TActUnifiedWorldGetInfoRsp::arrgiftinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldGiftInfo* TActUnifiedWorldGetInfoRsp::mutable_arrgiftinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldGiftInfo* TActUnifiedWorldGetInfoRsp::add_arrgiftinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >&
TActUnifiedWorldGetInfoRsp::arrgiftinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >*
TActUnifiedWorldGetInfoRsp::mutable_arrgiftinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetInfoRsp.ArrGiftInfo)
  return &arrgiftinfo_;
}

// repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
inline int TActUnifiedWorldGetInfoRsp::arrtaskinfo_size() const {
  return arrtaskinfo_.size();
}
inline void TActUnifiedWorldGetInfoRsp::clear_arrtaskinfo() {
  arrtaskinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldTaskInfo& TActUnifiedWorldGetInfoRsp::arrtaskinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldTaskInfo* TActUnifiedWorldGetInfoRsp::mutable_arrtaskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldTaskInfo* TActUnifiedWorldGetInfoRsp::add_arrtaskinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >&
TActUnifiedWorldGetInfoRsp::arrtaskinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >*
TActUnifiedWorldGetInfoRsp::mutable_arrtaskinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetInfoRsp.ArrTaskInfo)
  return &arrtaskinfo_;
}

// repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 6;
inline int TActUnifiedWorldGetInfoRsp::arrscorerewardinfo_size() const {
  return arrscorerewardinfo_.size();
}
inline void TActUnifiedWorldGetInfoRsp::clear_arrscorerewardinfo() {
  arrscorerewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TActUnifiedWorldGetInfoRsp::arrscorerewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TActUnifiedWorldGetInfoRsp::mutable_arrscorerewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TActUnifiedWorldGetInfoRsp::add_arrscorerewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TActUnifiedWorldGetInfoRsp::arrscorerewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TActUnifiedWorldGetInfoRsp::mutable_arrscorerewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetInfoRsp.ArrScoreRewardInfo)
  return &arrscorerewardinfo_;
}

// repeated int32 StageRankArr = 7;
inline int TActUnifiedWorldGetInfoRsp::stagerankarr_size() const {
  return stagerankarr_.size();
}
inline void TActUnifiedWorldGetInfoRsp::clear_stagerankarr() {
  stagerankarr_.Clear();
}
inline ::google::protobuf::int32 TActUnifiedWorldGetInfoRsp::stagerankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.StageRankArr)
  return stagerankarr_.Get(index);
}
inline void TActUnifiedWorldGetInfoRsp::set_stagerankarr(int index, ::google::protobuf::int32 value) {
  stagerankarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.StageRankArr)
}
inline void TActUnifiedWorldGetInfoRsp::add_stagerankarr(::google::protobuf::int32 value) {
  stagerankarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetInfoRsp.StageRankArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TActUnifiedWorldGetInfoRsp::stagerankarr() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetInfoRsp.StageRankArr)
  return stagerankarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TActUnifiedWorldGetInfoRsp::mutable_stagerankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetInfoRsp.StageRankArr)
  return &stagerankarr_;
}

// optional uint32 TotalRank = 8;
inline bool TActUnifiedWorldGetInfoRsp::has_totalrank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TActUnifiedWorldGetInfoRsp::set_has_totalrank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_has_totalrank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_totalrank() {
  totalrank_ = 0u;
  clear_has_totalrank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetInfoRsp::totalrank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.TotalRank)
  return totalrank_;
}
inline void TActUnifiedWorldGetInfoRsp::set_totalrank(::google::protobuf::uint32 value) {
  set_has_totalrank();
  totalrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.TotalRank)
}

// optional uint32 GroupId = 9;
inline bool TActUnifiedWorldGetInfoRsp::has_groupid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TActUnifiedWorldGetInfoRsp::set_has_groupid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetInfoRsp::groupid() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.GroupId)
  return groupid_;
}
inline void TActUnifiedWorldGetInfoRsp::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.GroupId)
}

// repeated int32 MaxStageRankArr = 10;
inline int TActUnifiedWorldGetInfoRsp::maxstagerankarr_size() const {
  return maxstagerankarr_.size();
}
inline void TActUnifiedWorldGetInfoRsp::clear_maxstagerankarr() {
  maxstagerankarr_.Clear();
}
inline ::google::protobuf::int32 TActUnifiedWorldGetInfoRsp::maxstagerankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.MaxStageRankArr)
  return maxstagerankarr_.Get(index);
}
inline void TActUnifiedWorldGetInfoRsp::set_maxstagerankarr(int index, ::google::protobuf::int32 value) {
  maxstagerankarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.MaxStageRankArr)
}
inline void TActUnifiedWorldGetInfoRsp::add_maxstagerankarr(::google::protobuf::int32 value) {
  maxstagerankarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetInfoRsp.MaxStageRankArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TActUnifiedWorldGetInfoRsp::maxstagerankarr() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetInfoRsp.MaxStageRankArr)
  return maxstagerankarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TActUnifiedWorldGetInfoRsp::mutable_maxstagerankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetInfoRsp.MaxStageRankArr)
  return &maxstagerankarr_;
}

// optional uint32 MaxTotalRank = 11;
inline bool TActUnifiedWorldGetInfoRsp::has_maxtotalrank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TActUnifiedWorldGetInfoRsp::set_has_maxtotalrank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_has_maxtotalrank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TActUnifiedWorldGetInfoRsp::clear_maxtotalrank() {
  maxtotalrank_ = 0u;
  clear_has_maxtotalrank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetInfoRsp::maxtotalrank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetInfoRsp.MaxTotalRank)
  return maxtotalrank_;
}
inline void TActUnifiedWorldGetInfoRsp::set_maxtotalrank(::google::protobuf::uint32 value) {
  set_has_maxtotalrank();
  maxtotalrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetInfoRsp.MaxTotalRank)
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetArrScoreRewardReq

// repeated uint32 ArrId = 1;
inline int TActUnifiedWorldGetArrScoreRewardReq::arrid_size() const {
  return arrid_.size();
}
inline void TActUnifiedWorldGetArrScoreRewardReq::clear_arrid() {
  arrid_.Clear();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetArrScoreRewardReq::arrid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetArrScoreRewardReq.ArrId)
  return arrid_.Get(index);
}
inline void TActUnifiedWorldGetArrScoreRewardReq::set_arrid(int index, ::google::protobuf::uint32 value) {
  arrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetArrScoreRewardReq.ArrId)
}
inline void TActUnifiedWorldGetArrScoreRewardReq::add_arrid(::google::protobuf::uint32 value) {
  arrid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetArrScoreRewardReq.ArrId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActUnifiedWorldGetArrScoreRewardReq::arrid() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetArrScoreRewardReq.ArrId)
  return arrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActUnifiedWorldGetArrScoreRewardReq::mutable_arrid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetArrScoreRewardReq.ArrId)
  return &arrid_;
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetArrScoreRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActUnifiedWorldGetArrScoreRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActUnifiedWorldGetArrScoreRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActUnifiedWorldGetArrScoreRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetArrScoreRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActUnifiedWorldGetArrScoreRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetArrScoreRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActUnifiedWorldGetArrScoreRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetArrScoreRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActUnifiedWorldGetArrScoreRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetArrScoreRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActUnifiedWorldGetArrScoreRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetArrScoreRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActUnifiedWorldRankInfo

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TActUnifiedWorldRankInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldRankInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldRankInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldRankInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TActUnifiedWorldRankInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldRankInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TActUnifiedWorldRankInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldRankInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TActUnifiedWorldRankInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TActUnifiedWorldRankInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActUnifiedWorldRankInfo.UserInfo)
}

// optional uint32 Rank = 2;
inline bool TActUnifiedWorldRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldRankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldRankInfo.Rank)
  return rank_;
}
inline void TActUnifiedWorldRankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldRankInfo.Rank)
}

// optional uint64 Score = 3;
inline bool TActUnifiedWorldRankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActUnifiedWorldRankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActUnifiedWorldRankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActUnifiedWorldRankInfo::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 TActUnifiedWorldRankInfo::score() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldRankInfo.Score)
  return score_;
}
inline void TActUnifiedWorldRankInfo::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldRankInfo.Score)
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetStageRankReq

// optional uint32 Offset = 1;
inline bool TActUnifiedWorldGetStageRankReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldGetStageRankReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldGetStageRankReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldGetStageRankReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetStageRankReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetStageRankReq.Offset)
  return offset_;
}
inline void TActUnifiedWorldGetStageRankReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetStageRankReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TActUnifiedWorldGetStageRankReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldGetStageRankReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldGetStageRankReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldGetStageRankReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetStageRankReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetStageRankReq.Limit)
  return limit_;
}
inline void TActUnifiedWorldGetStageRankReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetStageRankReq.Limit)
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetStageRankRsp

// repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
inline int TActUnifiedWorldGetStageRankRsp::arrrankinfo_size() const {
  return arrrankinfo_.size();
}
inline void TActUnifiedWorldGetStageRankRsp::clear_arrrankinfo() {
  arrrankinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldRankInfo& TActUnifiedWorldGetStageRankRsp::arrrankinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldRankInfo* TActUnifiedWorldGetStageRankRsp::mutable_arrrankinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldRankInfo* TActUnifiedWorldGetStageRankRsp::add_arrrankinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >&
TActUnifiedWorldGetStageRankRsp::arrrankinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >*
TActUnifiedWorldGetStageRankRsp::mutable_arrrankinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetStageRankRsp.ArrRankInfo)
  return &arrrankinfo_;
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetTotalRankReq

// optional uint32 Offset = 1;
inline bool TActUnifiedWorldGetTotalRankReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldGetTotalRankReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldGetTotalRankReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldGetTotalRankReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetTotalRankReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetTotalRankReq.Offset)
  return offset_;
}
inline void TActUnifiedWorldGetTotalRankReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetTotalRankReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TActUnifiedWorldGetTotalRankReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldGetTotalRankReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldGetTotalRankReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldGetTotalRankReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetTotalRankReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetTotalRankReq.Limit)
  return limit_;
}
inline void TActUnifiedWorldGetTotalRankReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetTotalRankReq.Limit)
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetTotalRankRsp

// repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
inline int TActUnifiedWorldGetTotalRankRsp::arrrankinfo_size() const {
  return arrrankinfo_.size();
}
inline void TActUnifiedWorldGetTotalRankRsp::clear_arrrankinfo() {
  arrrankinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldRankInfo& TActUnifiedWorldGetTotalRankRsp::arrrankinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetTotalRankRsp.ArrRankInfo)
  return arrrankinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldRankInfo* TActUnifiedWorldGetTotalRankRsp::mutable_arrrankinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetTotalRankRsp.ArrRankInfo)
  return arrrankinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldRankInfo* TActUnifiedWorldGetTotalRankRsp::add_arrrankinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetTotalRankRsp.ArrRankInfo)
  return arrrankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >&
TActUnifiedWorldGetTotalRankRsp::arrrankinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetTotalRankRsp.ArrRankInfo)
  return arrrankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >*
TActUnifiedWorldGetTotalRankRsp::mutable_arrrankinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetTotalRankRsp.ArrRankInfo)
  return &arrrankinfo_;
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetLastTotalRankReq

// optional uint32 Offset = 1;
inline bool TActUnifiedWorldGetLastTotalRankReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldGetLastTotalRankReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldGetLastTotalRankReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldGetLastTotalRankReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetLastTotalRankReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetLastTotalRankReq.Offset)
  return offset_;
}
inline void TActUnifiedWorldGetLastTotalRankReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetLastTotalRankReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TActUnifiedWorldGetLastTotalRankReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldGetLastTotalRankReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldGetLastTotalRankReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldGetLastTotalRankReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetLastTotalRankReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetLastTotalRankReq.Limit)
  return limit_;
}
inline void TActUnifiedWorldGetLastTotalRankReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetLastTotalRankReq.Limit)
}

// -------------------------------------------------------------------

// TActUnifiedWorldGetLastTotalRankRsp

// optional uint32 MyRank = 1;
inline bool TActUnifiedWorldGetLastTotalRankRsp::has_myrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldGetLastTotalRankRsp::set_has_myrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldGetLastTotalRankRsp::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldGetLastTotalRankRsp::clear_myrank() {
  myrank_ = 0u;
  clear_has_myrank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldGetLastTotalRankRsp::myrank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetLastTotalRankRsp.MyRank)
  return myrank_;
}
inline void TActUnifiedWorldGetLastTotalRankRsp::set_myrank(::google::protobuf::uint32 value) {
  set_has_myrank();
  myrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldGetLastTotalRankRsp.MyRank)
}

// repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 2;
inline int TActUnifiedWorldGetLastTotalRankRsp::arrrankinfo_size() const {
  return arrrankinfo_.size();
}
inline void TActUnifiedWorldGetLastTotalRankRsp::clear_arrrankinfo() {
  arrrankinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldRankInfo& TActUnifiedWorldGetLastTotalRankRsp::arrrankinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldGetLastTotalRankRsp.ArrRankInfo)
  return arrrankinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldRankInfo* TActUnifiedWorldGetLastTotalRankRsp::mutable_arrrankinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldGetLastTotalRankRsp.ArrRankInfo)
  return arrrankinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldRankInfo* TActUnifiedWorldGetLastTotalRankRsp::add_arrrankinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldGetLastTotalRankRsp.ArrRankInfo)
  return arrrankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >&
TActUnifiedWorldGetLastTotalRankRsp::arrrankinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldGetLastTotalRankRsp.ArrRankInfo)
  return arrrankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldRankInfo >*
TActUnifiedWorldGetLastTotalRankRsp::mutable_arrrankinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldGetLastTotalRankRsp.ArrRankInfo)
  return &arrrankinfo_;
}

// -------------------------------------------------------------------

// TActUnifiedWorldNotify

// optional uint32 Id = 1;
inline bool TActUnifiedWorldNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnifiedWorldNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnifiedWorldNotify::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnifiedWorldNotify::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.Id)
  return id_;
}
inline void TActUnifiedWorldNotify::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.Id)
}

// optional uint64 Score = 2;
inline bool TActUnifiedWorldNotify::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnifiedWorldNotify::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnifiedWorldNotify::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 TActUnifiedWorldNotify::score() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.Score)
  return score_;
}
inline void TActUnifiedWorldNotify::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.Score)
}

// optional uint64 TotalScore = 3;
inline bool TActUnifiedWorldNotify::has_totalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_totalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActUnifiedWorldNotify::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActUnifiedWorldNotify::clear_totalscore() {
  totalscore_ = GOOGLE_ULONGLONG(0);
  clear_has_totalscore();
}
inline ::google::protobuf::uint64 TActUnifiedWorldNotify::totalscore() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.TotalScore)
  return totalscore_;
}
inline void TActUnifiedWorldNotify::set_totalscore(::google::protobuf::uint64 value) {
  set_has_totalscore();
  totalscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.TotalScore)
}

// repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
inline int TActUnifiedWorldNotify::arrgiftinfo_size() const {
  return arrgiftinfo_.size();
}
inline void TActUnifiedWorldNotify::clear_arrgiftinfo() {
  arrgiftinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldGiftInfo& TActUnifiedWorldNotify::arrgiftinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.ArrGiftInfo)
  return arrgiftinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldGiftInfo* TActUnifiedWorldNotify::mutable_arrgiftinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldNotify.ArrGiftInfo)
  return arrgiftinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldGiftInfo* TActUnifiedWorldNotify::add_arrgiftinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldNotify.ArrGiftInfo)
  return arrgiftinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >&
TActUnifiedWorldNotify::arrgiftinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldNotify.ArrGiftInfo)
  return arrgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldGiftInfo >*
TActUnifiedWorldNotify::mutable_arrgiftinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldNotify.ArrGiftInfo)
  return &arrgiftinfo_;
}

// repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
inline int TActUnifiedWorldNotify::arrtaskinfo_size() const {
  return arrtaskinfo_.size();
}
inline void TActUnifiedWorldNotify::clear_arrtaskinfo() {
  arrtaskinfo_.Clear();
}
inline const ::pb::TActUnifiedWorldTaskInfo& TActUnifiedWorldNotify::arrtaskinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.ArrTaskInfo)
  return arrtaskinfo_.Get(index);
}
inline ::pb::TActUnifiedWorldTaskInfo* TActUnifiedWorldNotify::mutable_arrtaskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnifiedWorldNotify.ArrTaskInfo)
  return arrtaskinfo_.Mutable(index);
}
inline ::pb::TActUnifiedWorldTaskInfo* TActUnifiedWorldNotify::add_arrtaskinfo() {
  // @@protoc_insertion_point(field_add:pb.TActUnifiedWorldNotify.ArrTaskInfo)
  return arrtaskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >&
TActUnifiedWorldNotify::arrtaskinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActUnifiedWorldNotify.ArrTaskInfo)
  return arrtaskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnifiedWorldTaskInfo >*
TActUnifiedWorldNotify::mutable_arrtaskinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnifiedWorldNotify.ArrTaskInfo)
  return &arrtaskinfo_;
}

// optional uint32 StageRank = 6;
inline bool TActUnifiedWorldNotify::has_stagerank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_stagerank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TActUnifiedWorldNotify::clear_has_stagerank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TActUnifiedWorldNotify::clear_stagerank() {
  stagerank_ = 0u;
  clear_has_stagerank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldNotify::stagerank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.StageRank)
  return stagerank_;
}
inline void TActUnifiedWorldNotify::set_stagerank(::google::protobuf::uint32 value) {
  set_has_stagerank();
  stagerank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.StageRank)
}

// optional uint32 TotalRank = 7;
inline bool TActUnifiedWorldNotify::has_totalrank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_totalrank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TActUnifiedWorldNotify::clear_has_totalrank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TActUnifiedWorldNotify::clear_totalrank() {
  totalrank_ = 0u;
  clear_has_totalrank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldNotify::totalrank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.TotalRank)
  return totalrank_;
}
inline void TActUnifiedWorldNotify::set_totalrank(::google::protobuf::uint32 value) {
  set_has_totalrank();
  totalrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.TotalRank)
}

// optional uint32 MaxStageRank = 8;
inline bool TActUnifiedWorldNotify::has_maxstagerank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_maxstagerank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TActUnifiedWorldNotify::clear_has_maxstagerank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TActUnifiedWorldNotify::clear_maxstagerank() {
  maxstagerank_ = 0u;
  clear_has_maxstagerank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldNotify::maxstagerank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.MaxStageRank)
  return maxstagerank_;
}
inline void TActUnifiedWorldNotify::set_maxstagerank(::google::protobuf::uint32 value) {
  set_has_maxstagerank();
  maxstagerank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.MaxStageRank)
}

// optional uint32 MaxTotalRank = 9;
inline bool TActUnifiedWorldNotify::has_maxtotalrank() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TActUnifiedWorldNotify::set_has_maxtotalrank() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TActUnifiedWorldNotify::clear_has_maxtotalrank() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TActUnifiedWorldNotify::clear_maxtotalrank() {
  maxtotalrank_ = 0u;
  clear_has_maxtotalrank();
}
inline ::google::protobuf::uint32 TActUnifiedWorldNotify::maxtotalrank() const {
  // @@protoc_insertion_point(field_get:pb.TActUnifiedWorldNotify.MaxTotalRank)
  return maxtotalrank_;
}
inline void TActUnifiedWorldNotify::set_maxtotalrank(::google::protobuf::uint32 value) {
  set_has_maxtotalrank();
  maxtotalrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnifiedWorldNotify.MaxTotalRank)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActUnifiedWorld_2eproto__INCLUDED
