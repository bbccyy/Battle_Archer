// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActHolidaySign.proto

#ifndef PROTOBUF_net_2fActHolidaySign_2eproto__INCLUDED
#define PROTOBUF_net_2fActHolidaySign_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActHolidaySign_2eproto();
void protobuf_AssignDesc_net_2fActHolidaySign_2eproto();
void protobuf_ShutdownFile_net_2fActHolidaySign_2eproto();

class TActHolidaySignGetInfoReq;
class TActHolidaySignGetInfoRsp;
class TActHolidaySignGetRewardReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActHolidaySignGetInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActHolidaySign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActHolidaySignGetInfoReq : public ::google::protobuf::Message {
 public:
  TActHolidaySignGetInfoReq();
  virtual ~TActHolidaySignGetInfoReq();

  TActHolidaySignGetInfoReq(const TActHolidaySignGetInfoReq& from);

  inline TActHolidaySignGetInfoReq& operator=(const TActHolidaySignGetInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActHolidaySignGetInfoReq& default_instance();

  void Swap(TActHolidaySignGetInfoReq* other);

  // implements Message ----------------------------------------------

  TActHolidaySignGetInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActHolidaySignGetInfoReq& from);
  void MergeFrom(const TActHolidaySignGetInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ActId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActHolidaySignGetInfoReq</name>
  	<Function>
  		<name>actid</name>
  		<replaceName>ActId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_actid</name>
  		<replaceName>ActId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_actid</name>
  		<replaceName>ActId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 actid() const;
  inline void set_actid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActHolidaySignGetInfoReq)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 actid_;
  friend void  protobuf_AddDesc_net_2fActHolidaySign_2eproto();
  friend void protobuf_AssignDesc_net_2fActHolidaySign_2eproto();
  friend void protobuf_ShutdownFile_net_2fActHolidaySign_2eproto();

  void InitAsDefaultInstance();
  static TActHolidaySignGetInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActHolidaySignGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActHolidaySign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActHolidaySignGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActHolidaySignGetInfoRsp();
  virtual ~TActHolidaySignGetInfoRsp();

  TActHolidaySignGetInfoRsp(const TActHolidaySignGetInfoRsp& from);

  inline TActHolidaySignGetInfoRsp& operator=(const TActHolidaySignGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActHolidaySignGetInfoRsp& default_instance();

  void Swap(TActHolidaySignGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActHolidaySignGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActHolidaySignGetInfoRsp& from);
  void MergeFrom(const TActHolidaySignGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AccuDayNum = 1;
  inline bool has_accudaynum() const;
  inline void clear_accudaynum();
  static const int kAccuDayNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActHolidaySignGetInfoRsp</name>
  	<Function>
  		<name>accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 accudaynum() const;
  inline void set_accudaynum(::google::protobuf::uint32 value);

  // repeated uint32 arrRewardDay = 2;
  inline int arrrewardday_size() const;
  inline void clear_arrrewardday();
  static const int kArrRewardDayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActHolidaySignGetInfoRsp</name>
  	<Function>
  		<name>arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardday_size</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrrewardday(int index) const;
  inline void set_arrrewardday(int index, ::google::protobuf::uint32 value);
  inline void add_arrrewardday(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrrewardday() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrrewardday();

  // @@protoc_insertion_point(class_scope:pb.TActHolidaySignGetInfoRsp)
 private:
  inline void set_has_accudaynum();
  inline void clear_has_accudaynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrrewardday_;
  ::google::protobuf::uint32 accudaynum_;
  friend void  protobuf_AddDesc_net_2fActHolidaySign_2eproto();
  friend void protobuf_AssignDesc_net_2fActHolidaySign_2eproto();
  friend void protobuf_ShutdownFile_net_2fActHolidaySign_2eproto();

  void InitAsDefaultInstance();
  static TActHolidaySignGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActHolidaySignGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActHolidaySign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActHolidaySignGetRewardReq : public ::google::protobuf::Message {
 public:
  TActHolidaySignGetRewardReq();
  virtual ~TActHolidaySignGetRewardReq();

  TActHolidaySignGetRewardReq(const TActHolidaySignGetRewardReq& from);

  inline TActHolidaySignGetRewardReq& operator=(const TActHolidaySignGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActHolidaySignGetRewardReq& default_instance();

  void Swap(TActHolidaySignGetRewardReq* other);

  // implements Message ----------------------------------------------

  TActHolidaySignGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActHolidaySignGetRewardReq& from);
  void MergeFrom(const TActHolidaySignGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ActId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActHolidaySignGetRewardReq</name>
  	<Function>
  		<name>actid</name>
  		<replaceName>ActId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_actid</name>
  		<replaceName>ActId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_actid</name>
  		<replaceName>ActId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 actid() const;
  inline void set_actid(::google::protobuf::uint32 value);

  // optional uint32 Day = 2;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActHolidaySignGetRewardReq</name>
  	<Function>
  		<name>day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActHolidaySignGetRewardReq)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 actid_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_net_2fActHolidaySign_2eproto();
  friend void protobuf_AssignDesc_net_2fActHolidaySign_2eproto();
  friend void protobuf_ShutdownFile_net_2fActHolidaySign_2eproto();

  void InitAsDefaultInstance();
  static TActHolidaySignGetRewardReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TActHolidaySignGetInfoReq

// optional uint32 ActId = 1;
inline bool TActHolidaySignGetInfoReq::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActHolidaySignGetInfoReq::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActHolidaySignGetInfoReq::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActHolidaySignGetInfoReq::clear_actid() {
  actid_ = 0u;
  clear_has_actid();
}
inline ::google::protobuf::uint32 TActHolidaySignGetInfoReq::actid() const {
  // @@protoc_insertion_point(field_get:pb.TActHolidaySignGetInfoReq.ActId)
  return actid_;
}
inline void TActHolidaySignGetInfoReq::set_actid(::google::protobuf::uint32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActHolidaySignGetInfoReq.ActId)
}

// -------------------------------------------------------------------

// TActHolidaySignGetInfoRsp

// optional uint32 AccuDayNum = 1;
inline bool TActHolidaySignGetInfoRsp::has_accudaynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActHolidaySignGetInfoRsp::set_has_accudaynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActHolidaySignGetInfoRsp::clear_has_accudaynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActHolidaySignGetInfoRsp::clear_accudaynum() {
  accudaynum_ = 0u;
  clear_has_accudaynum();
}
inline ::google::protobuf::uint32 TActHolidaySignGetInfoRsp::accudaynum() const {
  // @@protoc_insertion_point(field_get:pb.TActHolidaySignGetInfoRsp.AccuDayNum)
  return accudaynum_;
}
inline void TActHolidaySignGetInfoRsp::set_accudaynum(::google::protobuf::uint32 value) {
  set_has_accudaynum();
  accudaynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActHolidaySignGetInfoRsp.AccuDayNum)
}

// repeated uint32 arrRewardDay = 2;
inline int TActHolidaySignGetInfoRsp::arrrewardday_size() const {
  return arrrewardday_.size();
}
inline void TActHolidaySignGetInfoRsp::clear_arrrewardday() {
  arrrewardday_.Clear();
}
inline ::google::protobuf::uint32 TActHolidaySignGetInfoRsp::arrrewardday(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActHolidaySignGetInfoRsp.arrRewardDay)
  return arrrewardday_.Get(index);
}
inline void TActHolidaySignGetInfoRsp::set_arrrewardday(int index, ::google::protobuf::uint32 value) {
  arrrewardday_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActHolidaySignGetInfoRsp.arrRewardDay)
}
inline void TActHolidaySignGetInfoRsp::add_arrrewardday(::google::protobuf::uint32 value) {
  arrrewardday_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActHolidaySignGetInfoRsp.arrRewardDay)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActHolidaySignGetInfoRsp::arrrewardday() const {
  // @@protoc_insertion_point(field_list:pb.TActHolidaySignGetInfoRsp.arrRewardDay)
  return arrrewardday_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActHolidaySignGetInfoRsp::mutable_arrrewardday() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActHolidaySignGetInfoRsp.arrRewardDay)
  return &arrrewardday_;
}

// -------------------------------------------------------------------

// TActHolidaySignGetRewardReq

// optional uint32 ActId = 1;
inline bool TActHolidaySignGetRewardReq::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActHolidaySignGetRewardReq::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActHolidaySignGetRewardReq::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActHolidaySignGetRewardReq::clear_actid() {
  actid_ = 0u;
  clear_has_actid();
}
inline ::google::protobuf::uint32 TActHolidaySignGetRewardReq::actid() const {
  // @@protoc_insertion_point(field_get:pb.TActHolidaySignGetRewardReq.ActId)
  return actid_;
}
inline void TActHolidaySignGetRewardReq::set_actid(::google::protobuf::uint32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActHolidaySignGetRewardReq.ActId)
}

// optional uint32 Day = 2;
inline bool TActHolidaySignGetRewardReq::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActHolidaySignGetRewardReq::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActHolidaySignGetRewardReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActHolidaySignGetRewardReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 TActHolidaySignGetRewardReq::day() const {
  // @@protoc_insertion_point(field_get:pb.TActHolidaySignGetRewardReq.Day)
  return day_;
}
inline void TActHolidaySignGetRewardReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:pb.TActHolidaySignGetRewardReq.Day)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActHolidaySign_2eproto__INCLUDED
