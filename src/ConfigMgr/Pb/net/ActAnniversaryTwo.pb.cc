// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActAnniversaryTwo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActAnniversaryTwo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActAnniversaryTwoTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoGetArrRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoGetArrRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrCostRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoGetArrCostRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrCostRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoGetArrCostRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryTwoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryTwoNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActAnniversaryTwo_2eproto() {
  protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActAnniversaryTwo.proto");
  GOOGLE_CHECK(file != NULL);
  TActAnniversaryTwoTaskInfo_descriptor_ = file->message_type(0);
  static const int TActAnniversaryTwoTaskInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoTaskInfo, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoTaskInfo, num_),
  };
  TActAnniversaryTwoTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoTaskInfo_descriptor_,
      TActAnniversaryTwoTaskInfo::default_instance_,
      TActAnniversaryTwoTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoTaskInfo));
  TActAnniversaryTwoGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TActAnniversaryTwoGetInfoRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, buytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, totalscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, arrrewardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, arrcostrewardinfo_),
  };
  TActAnniversaryTwoGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoGetInfoRsp_descriptor_,
      TActAnniversaryTwoGetInfoRsp::default_instance_,
      TActAnniversaryTwoGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoGetInfoRsp));
  TActAnniversaryTwoGetArrRewardReq_descriptor_ = file->message_type(2);
  static const int TActAnniversaryTwoGetArrRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrRewardReq, arrid_),
  };
  TActAnniversaryTwoGetArrRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoGetArrRewardReq_descriptor_,
      TActAnniversaryTwoGetArrRewardReq::default_instance_,
      TActAnniversaryTwoGetArrRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoGetArrRewardReq));
  TActAnniversaryTwoGetArrRewardRsp_descriptor_ = file->message_type(3);
  static const int TActAnniversaryTwoGetArrRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrRewardRsp, arrreward_),
  };
  TActAnniversaryTwoGetArrRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoGetArrRewardRsp_descriptor_,
      TActAnniversaryTwoGetArrRewardRsp::default_instance_,
      TActAnniversaryTwoGetArrRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoGetArrRewardRsp));
  TActAnniversaryTwoGetArrCostRewardReq_descriptor_ = file->message_type(4);
  static const int TActAnniversaryTwoGetArrCostRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrCostRewardReq, arrid_),
  };
  TActAnniversaryTwoGetArrCostRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoGetArrCostRewardReq_descriptor_,
      TActAnniversaryTwoGetArrCostRewardReq::default_instance_,
      TActAnniversaryTwoGetArrCostRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrCostRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrCostRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoGetArrCostRewardReq));
  TActAnniversaryTwoGetArrCostRewardRsp_descriptor_ = file->message_type(5);
  static const int TActAnniversaryTwoGetArrCostRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrCostRewardRsp, arrreward_),
  };
  TActAnniversaryTwoGetArrCostRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoGetArrCostRewardRsp_descriptor_,
      TActAnniversaryTwoGetArrCostRewardRsp::default_instance_,
      TActAnniversaryTwoGetArrCostRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrCostRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoGetArrCostRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoGetArrCostRewardRsp));
  TActAnniversaryTwoNotify_descriptor_ = file->message_type(6);
  static const int TActAnniversaryTwoNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoNotify, buytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoNotify, totalscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoNotify, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoNotify, arrcostrewardinfo_),
  };
  TActAnniversaryTwoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryTwoNotify_descriptor_,
      TActAnniversaryTwoNotify::default_instance_,
      TActAnniversaryTwoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryTwoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryTwoNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActAnniversaryTwo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoTaskInfo_descriptor_, &TActAnniversaryTwoTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoGetInfoRsp_descriptor_, &TActAnniversaryTwoGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoGetArrRewardReq_descriptor_, &TActAnniversaryTwoGetArrRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoGetArrRewardRsp_descriptor_, &TActAnniversaryTwoGetArrRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoGetArrCostRewardReq_descriptor_, &TActAnniversaryTwoGetArrCostRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoGetArrCostRewardRsp_descriptor_, &TActAnniversaryTwoGetArrCostRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryTwoNotify_descriptor_, &TActAnniversaryTwoNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActAnniversaryTwo_2eproto() {
  delete TActAnniversaryTwoTaskInfo::default_instance_;
  delete TActAnniversaryTwoTaskInfo_reflection_;
  delete TActAnniversaryTwoGetInfoRsp::default_instance_;
  delete TActAnniversaryTwoGetInfoRsp_reflection_;
  delete TActAnniversaryTwoGetArrRewardReq::default_instance_;
  delete TActAnniversaryTwoGetArrRewardReq_reflection_;
  delete TActAnniversaryTwoGetArrRewardRsp::default_instance_;
  delete TActAnniversaryTwoGetArrRewardRsp_reflection_;
  delete TActAnniversaryTwoGetArrCostRewardReq::default_instance_;
  delete TActAnniversaryTwoGetArrCostRewardReq_reflection_;
  delete TActAnniversaryTwoGetArrCostRewardRsp::default_instance_;
  delete TActAnniversaryTwoGetArrCostRewardRsp_reflection_;
  delete TActAnniversaryTwoNotify::default_instance_;
  delete TActAnniversaryTwoNotify_reflection_;
}

void protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fOpenActivity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033net/ActAnniversaryTwo.proto\022\002pb\032\026net/C"
    "ommonReward.proto\032\026net/OpenActivity.prot"
    "o\";\n\032TActAnniversaryTwoTaskInfo\022\020\n\010TaskT"
    "ype\030\001 \001(\r\022\013\n\003Num\030\002 \001(\004\"\334\001\n\034TActAnniversa"
    "ryTwoGetInfoRsp\022\017\n\007BuyTime\030\001 \001(\004\022\022\n\nTota"
    "lScore\030\002 \001(\r\0223\n\013ArrTaskInfo\030\003 \003(\0132\036.pb.T"
    "ActAnniversaryTwoTaskInfo\022.\n\rArrRewardIn"
    "fo\030\004 \003(\0132\027.pb.TActivityRewardInfo\0222\n\021Arr"
    "CostRewardInfo\030\005 \003(\0132\027.pb.TActivityRewar"
    "dInfo\"2\n!TActAnniversaryTwoGetArrRewardR"
    "eq\022\r\n\005ArrId\030\001 \003(\r\"I\n!TActAnniversaryTwoG"
    "etArrRewardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.T"
    "CommonReward\"6\n%TActAnniversaryTwoGetArr"
    "CostRewardReq\022\r\n\005ArrId\030\001 \003(\r\"M\n%TActAnni"
    "versaryTwoGetArrCostRewardRsp\022$\n\tArrRewa"
    "rd\030\001 \003(\0132\021.pb.TCommonReward\"\250\001\n\030TActAnni"
    "versaryTwoNotify\022\017\n\007BuyTime\030\001 \001(\004\022\022\n\nTot"
    "alScore\030\002 \001(\r\0223\n\013ArrTaskInfo\030\003 \003(\0132\036.pb."
    "TActAnniversaryTwoTaskInfo\0222\n\021ArrCostRew"
    "ardInfo\030\004 \003(\0132\027.pb.TActivityRewardInfo", 798);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActAnniversaryTwo.proto", &protobuf_RegisterTypes);
  TActAnniversaryTwoTaskInfo::default_instance_ = new TActAnniversaryTwoTaskInfo();
  TActAnniversaryTwoGetInfoRsp::default_instance_ = new TActAnniversaryTwoGetInfoRsp();
  TActAnniversaryTwoGetArrRewardReq::default_instance_ = new TActAnniversaryTwoGetArrRewardReq();
  TActAnniversaryTwoGetArrRewardRsp::default_instance_ = new TActAnniversaryTwoGetArrRewardRsp();
  TActAnniversaryTwoGetArrCostRewardReq::default_instance_ = new TActAnniversaryTwoGetArrCostRewardReq();
  TActAnniversaryTwoGetArrCostRewardRsp::default_instance_ = new TActAnniversaryTwoGetArrCostRewardRsp();
  TActAnniversaryTwoNotify::default_instance_ = new TActAnniversaryTwoNotify();
  TActAnniversaryTwoTaskInfo::default_instance_->InitAsDefaultInstance();
  TActAnniversaryTwoGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActAnniversaryTwoGetArrRewardReq::default_instance_->InitAsDefaultInstance();
  TActAnniversaryTwoGetArrRewardRsp::default_instance_->InitAsDefaultInstance();
  TActAnniversaryTwoGetArrCostRewardReq::default_instance_->InitAsDefaultInstance();
  TActAnniversaryTwoGetArrCostRewardRsp::default_instance_->InitAsDefaultInstance();
  TActAnniversaryTwoNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActAnniversaryTwo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActAnniversaryTwo_2eproto {
  StaticDescriptorInitializer_net_2fActAnniversaryTwo_2eproto() {
    protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  }
} static_descriptor_initializer_net_2fActAnniversaryTwo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoTaskInfo::kTaskTypeFieldNumber;
const int TActAnniversaryTwoTaskInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoTaskInfo::TActAnniversaryTwoTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoTaskInfo)
}

void TActAnniversaryTwoTaskInfo::InitAsDefaultInstance() {
}

TActAnniversaryTwoTaskInfo::TActAnniversaryTwoTaskInfo(const TActAnniversaryTwoTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoTaskInfo)
}

void TActAnniversaryTwoTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  tasktype_ = 0u;
  num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoTaskInfo::~TActAnniversaryTwoTaskInfo() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoTaskInfo)
  SharedDtor();
}

void TActAnniversaryTwoTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoTaskInfo_descriptor_;
}

const TActAnniversaryTwoTaskInfo& TActAnniversaryTwoTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoTaskInfo* TActAnniversaryTwoTaskInfo::default_instance_ = NULL;

TActAnniversaryTwoTaskInfo* TActAnniversaryTwoTaskInfo::New() const {
  return new TActAnniversaryTwoTaskInfo;
}

void TActAnniversaryTwoTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActAnniversaryTwoTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(num_, tasktype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tasktype_)));
          set_has_tasktype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint64 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoTaskInfo)
  return false;
#undef DO_
}

void TActAnniversaryTwoTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoTaskInfo)
  // optional uint32 TaskType = 1;
  if (has_tasktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tasktype(), output);
  }

  // optional uint64 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoTaskInfo)
}

::google::protobuf::uint8* TActAnniversaryTwoTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoTaskInfo)
  // optional uint32 TaskType = 1;
  if (has_tasktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tasktype(), target);
  }

  // optional uint64 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoTaskInfo)
  return target;
}

int TActAnniversaryTwoTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskType = 1;
    if (has_tasktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tasktype());
    }

    // optional uint64 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoTaskInfo::MergeFrom(const TActAnniversaryTwoTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tasktype()) {
      set_tasktype(from.tasktype());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoTaskInfo::CopyFrom(const TActAnniversaryTwoTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoTaskInfo::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoTaskInfo::Swap(TActAnniversaryTwoTaskInfo* other) {
  if (other != this) {
    std::swap(tasktype_, other->tasktype_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoTaskInfo_descriptor_;
  metadata.reflection = TActAnniversaryTwoTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoGetInfoRsp::kBuyTimeFieldNumber;
const int TActAnniversaryTwoGetInfoRsp::kTotalScoreFieldNumber;
const int TActAnniversaryTwoGetInfoRsp::kArrTaskInfoFieldNumber;
const int TActAnniversaryTwoGetInfoRsp::kArrRewardInfoFieldNumber;
const int TActAnniversaryTwoGetInfoRsp::kArrCostRewardInfoFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoGetInfoRsp::TActAnniversaryTwoGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoGetInfoRsp)
}

void TActAnniversaryTwoGetInfoRsp::InitAsDefaultInstance() {
}

TActAnniversaryTwoGetInfoRsp::TActAnniversaryTwoGetInfoRsp(const TActAnniversaryTwoGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoGetInfoRsp)
}

void TActAnniversaryTwoGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  buytime_ = GOOGLE_ULONGLONG(0);
  totalscore_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoGetInfoRsp::~TActAnniversaryTwoGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoGetInfoRsp)
  SharedDtor();
}

void TActAnniversaryTwoGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoGetInfoRsp_descriptor_;
}

const TActAnniversaryTwoGetInfoRsp& TActAnniversaryTwoGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoGetInfoRsp* TActAnniversaryTwoGetInfoRsp::default_instance_ = NULL;

TActAnniversaryTwoGetInfoRsp* TActAnniversaryTwoGetInfoRsp::New() const {
  return new TActAnniversaryTwoGetInfoRsp;
}

void TActAnniversaryTwoGetInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    buytime_ = GOOGLE_ULONGLONG(0);
    totalscore_ = 0u;
  }
  arrtaskinfo_.Clear();
  arrrewardinfo_.Clear();
  arrcostrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 BuyTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TotalScore;
        break;
      }

      // optional uint32 TotalScore = 2;
      case 2: {
        if (tag == 16) {
         parse_TotalScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalscore_)));
          set_has_totalscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(34)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrRewardInfo;
        if (input->ExpectTag(42)) goto parse_ArrCostRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrCostRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrcostrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrCostRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoGetInfoRsp)
  return false;
#undef DO_
}

void TActAnniversaryTwoGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoGetInfoRsp)
  // optional uint64 BuyTime = 1;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->buytime(), output);
  }

  // optional uint32 TotalScore = 2;
  if (has_totalscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->totalscore(), output);
  }

  // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrtaskinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 4;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrrewardinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 5;
  for (int i = 0; i < this->arrcostrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrcostrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoGetInfoRsp)
}

::google::protobuf::uint8* TActAnniversaryTwoGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoGetInfoRsp)
  // optional uint64 BuyTime = 1;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->buytime(), target);
  }

  // optional uint32 TotalScore = 2;
  if (has_totalscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->totalscore(), target);
  }

  // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrtaskinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 4;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrrewardinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 5;
  for (int i = 0; i < this->arrcostrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrcostrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoGetInfoRsp)
  return target;
}

int TActAnniversaryTwoGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 BuyTime = 1;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

    // optional uint32 TotalScore = 2;
    if (has_totalscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalscore());
    }

  }
  // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 4;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 5;
  total_size += 1 * this->arrcostrewardinfo_size();
  for (int i = 0; i < this->arrcostrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrcostrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoGetInfoRsp::MergeFrom(const TActAnniversaryTwoGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  arrcostrewardinfo_.MergeFrom(from.arrcostrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
    if (from.has_totalscore()) {
      set_totalscore(from.totalscore());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoGetInfoRsp::CopyFrom(const TActAnniversaryTwoGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoGetInfoRsp::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoGetInfoRsp::Swap(TActAnniversaryTwoGetInfoRsp* other) {
  if (other != this) {
    std::swap(buytime_, other->buytime_);
    std::swap(totalscore_, other->totalscore_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    arrcostrewardinfo_.Swap(&other->arrcostrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoGetInfoRsp_descriptor_;
  metadata.reflection = TActAnniversaryTwoGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoGetArrRewardReq::kArrIdFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoGetArrRewardReq::TActAnniversaryTwoGetArrRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoGetArrRewardReq)
}

void TActAnniversaryTwoGetArrRewardReq::InitAsDefaultInstance() {
}

TActAnniversaryTwoGetArrRewardReq::TActAnniversaryTwoGetArrRewardReq(const TActAnniversaryTwoGetArrRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoGetArrRewardReq)
}

void TActAnniversaryTwoGetArrRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoGetArrRewardReq::~TActAnniversaryTwoGetArrRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoGetArrRewardReq)
  SharedDtor();
}

void TActAnniversaryTwoGetArrRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoGetArrRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoGetArrRewardReq_descriptor_;
}

const TActAnniversaryTwoGetArrRewardReq& TActAnniversaryTwoGetArrRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoGetArrRewardReq* TActAnniversaryTwoGetArrRewardReq::default_instance_ = NULL;

TActAnniversaryTwoGetArrRewardReq* TActAnniversaryTwoGetArrRewardReq::New() const {
  return new TActAnniversaryTwoGetArrRewardReq;
}

void TActAnniversaryTwoGetArrRewardReq::Clear() {
  arrid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoGetArrRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoGetArrRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arrid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoGetArrRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoGetArrRewardReq)
  return false;
#undef DO_
}

void TActAnniversaryTwoGetArrRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoGetArrRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arrid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoGetArrRewardReq)
}

::google::protobuf::uint8* TActAnniversaryTwoGetArrRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoGetArrRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arrid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoGetArrRewardReq)
  return target;
}

int TActAnniversaryTwoGetArrRewardReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrid(i));
    }
    total_size += 1 * this->arrid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoGetArrRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoGetArrRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoGetArrRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoGetArrRewardReq::MergeFrom(const TActAnniversaryTwoGetArrRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrid_.MergeFrom(from.arrid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoGetArrRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoGetArrRewardReq::CopyFrom(const TActAnniversaryTwoGetArrRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoGetArrRewardReq::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoGetArrRewardReq::Swap(TActAnniversaryTwoGetArrRewardReq* other) {
  if (other != this) {
    arrid_.Swap(&other->arrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoGetArrRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoGetArrRewardReq_descriptor_;
  metadata.reflection = TActAnniversaryTwoGetArrRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoGetArrRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoGetArrRewardRsp::TActAnniversaryTwoGetArrRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoGetArrRewardRsp)
}

void TActAnniversaryTwoGetArrRewardRsp::InitAsDefaultInstance() {
}

TActAnniversaryTwoGetArrRewardRsp::TActAnniversaryTwoGetArrRewardRsp(const TActAnniversaryTwoGetArrRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoGetArrRewardRsp)
}

void TActAnniversaryTwoGetArrRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoGetArrRewardRsp::~TActAnniversaryTwoGetArrRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoGetArrRewardRsp)
  SharedDtor();
}

void TActAnniversaryTwoGetArrRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoGetArrRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoGetArrRewardRsp_descriptor_;
}

const TActAnniversaryTwoGetArrRewardRsp& TActAnniversaryTwoGetArrRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoGetArrRewardRsp* TActAnniversaryTwoGetArrRewardRsp::default_instance_ = NULL;

TActAnniversaryTwoGetArrRewardRsp* TActAnniversaryTwoGetArrRewardRsp::New() const {
  return new TActAnniversaryTwoGetArrRewardRsp;
}

void TActAnniversaryTwoGetArrRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoGetArrRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoGetArrRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoGetArrRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoGetArrRewardRsp)
  return false;
#undef DO_
}

void TActAnniversaryTwoGetArrRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoGetArrRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoGetArrRewardRsp)
}

::google::protobuf::uint8* TActAnniversaryTwoGetArrRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoGetArrRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoGetArrRewardRsp)
  return target;
}

int TActAnniversaryTwoGetArrRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoGetArrRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoGetArrRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoGetArrRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoGetArrRewardRsp::MergeFrom(const TActAnniversaryTwoGetArrRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoGetArrRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoGetArrRewardRsp::CopyFrom(const TActAnniversaryTwoGetArrRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoGetArrRewardRsp::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoGetArrRewardRsp::Swap(TActAnniversaryTwoGetArrRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoGetArrRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoGetArrRewardRsp_descriptor_;
  metadata.reflection = TActAnniversaryTwoGetArrRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoGetArrCostRewardReq::kArrIdFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoGetArrCostRewardReq::TActAnniversaryTwoGetArrCostRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoGetArrCostRewardReq)
}

void TActAnniversaryTwoGetArrCostRewardReq::InitAsDefaultInstance() {
}

TActAnniversaryTwoGetArrCostRewardReq::TActAnniversaryTwoGetArrCostRewardReq(const TActAnniversaryTwoGetArrCostRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoGetArrCostRewardReq)
}

void TActAnniversaryTwoGetArrCostRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoGetArrCostRewardReq::~TActAnniversaryTwoGetArrCostRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoGetArrCostRewardReq)
  SharedDtor();
}

void TActAnniversaryTwoGetArrCostRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoGetArrCostRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrCostRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoGetArrCostRewardReq_descriptor_;
}

const TActAnniversaryTwoGetArrCostRewardReq& TActAnniversaryTwoGetArrCostRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoGetArrCostRewardReq* TActAnniversaryTwoGetArrCostRewardReq::default_instance_ = NULL;

TActAnniversaryTwoGetArrCostRewardReq* TActAnniversaryTwoGetArrCostRewardReq::New() const {
  return new TActAnniversaryTwoGetArrCostRewardReq;
}

void TActAnniversaryTwoGetArrCostRewardReq::Clear() {
  arrid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoGetArrCostRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoGetArrCostRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arrid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoGetArrCostRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoGetArrCostRewardReq)
  return false;
#undef DO_
}

void TActAnniversaryTwoGetArrCostRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoGetArrCostRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arrid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoGetArrCostRewardReq)
}

::google::protobuf::uint8* TActAnniversaryTwoGetArrCostRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoGetArrCostRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arrid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoGetArrCostRewardReq)
  return target;
}

int TActAnniversaryTwoGetArrCostRewardReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrid(i));
    }
    total_size += 1 * this->arrid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoGetArrCostRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoGetArrCostRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoGetArrCostRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoGetArrCostRewardReq::MergeFrom(const TActAnniversaryTwoGetArrCostRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrid_.MergeFrom(from.arrid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoGetArrCostRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoGetArrCostRewardReq::CopyFrom(const TActAnniversaryTwoGetArrCostRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoGetArrCostRewardReq::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoGetArrCostRewardReq::Swap(TActAnniversaryTwoGetArrCostRewardReq* other) {
  if (other != this) {
    arrid_.Swap(&other->arrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoGetArrCostRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoGetArrCostRewardReq_descriptor_;
  metadata.reflection = TActAnniversaryTwoGetArrCostRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoGetArrCostRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoGetArrCostRewardRsp::TActAnniversaryTwoGetArrCostRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoGetArrCostRewardRsp)
}

void TActAnniversaryTwoGetArrCostRewardRsp::InitAsDefaultInstance() {
}

TActAnniversaryTwoGetArrCostRewardRsp::TActAnniversaryTwoGetArrCostRewardRsp(const TActAnniversaryTwoGetArrCostRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoGetArrCostRewardRsp)
}

void TActAnniversaryTwoGetArrCostRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoGetArrCostRewardRsp::~TActAnniversaryTwoGetArrCostRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  SharedDtor();
}

void TActAnniversaryTwoGetArrCostRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoGetArrCostRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoGetArrCostRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoGetArrCostRewardRsp_descriptor_;
}

const TActAnniversaryTwoGetArrCostRewardRsp& TActAnniversaryTwoGetArrCostRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoGetArrCostRewardRsp* TActAnniversaryTwoGetArrCostRewardRsp::default_instance_ = NULL;

TActAnniversaryTwoGetArrCostRewardRsp* TActAnniversaryTwoGetArrCostRewardRsp::New() const {
  return new TActAnniversaryTwoGetArrCostRewardRsp;
}

void TActAnniversaryTwoGetArrCostRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoGetArrCostRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  return false;
#undef DO_
}

void TActAnniversaryTwoGetArrCostRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoGetArrCostRewardRsp)
}

::google::protobuf::uint8* TActAnniversaryTwoGetArrCostRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoGetArrCostRewardRsp)
  return target;
}

int TActAnniversaryTwoGetArrCostRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoGetArrCostRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoGetArrCostRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoGetArrCostRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoGetArrCostRewardRsp::MergeFrom(const TActAnniversaryTwoGetArrCostRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoGetArrCostRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoGetArrCostRewardRsp::CopyFrom(const TActAnniversaryTwoGetArrCostRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoGetArrCostRewardRsp::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoGetArrCostRewardRsp::Swap(TActAnniversaryTwoGetArrCostRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoGetArrCostRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoGetArrCostRewardRsp_descriptor_;
  metadata.reflection = TActAnniversaryTwoGetArrCostRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryTwoNotify::kBuyTimeFieldNumber;
const int TActAnniversaryTwoNotify::kTotalScoreFieldNumber;
const int TActAnniversaryTwoNotify::kArrTaskInfoFieldNumber;
const int TActAnniversaryTwoNotify::kArrCostRewardInfoFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryTwoNotify::TActAnniversaryTwoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryTwoNotify)
}

void TActAnniversaryTwoNotify::InitAsDefaultInstance() {
}

TActAnniversaryTwoNotify::TActAnniversaryTwoNotify(const TActAnniversaryTwoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryTwoNotify)
}

void TActAnniversaryTwoNotify::SharedCtor() {
  _cached_size_ = 0;
  buytime_ = GOOGLE_ULONGLONG(0);
  totalscore_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryTwoNotify::~TActAnniversaryTwoNotify() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryTwoNotify)
  SharedDtor();
}

void TActAnniversaryTwoNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryTwoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryTwoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryTwoNotify_descriptor_;
}

const TActAnniversaryTwoNotify& TActAnniversaryTwoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversaryTwo_2eproto();
  return *default_instance_;
}

TActAnniversaryTwoNotify* TActAnniversaryTwoNotify::default_instance_ = NULL;

TActAnniversaryTwoNotify* TActAnniversaryTwoNotify::New() const {
  return new TActAnniversaryTwoNotify;
}

void TActAnniversaryTwoNotify::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    buytime_ = GOOGLE_ULONGLONG(0);
    totalscore_ = 0u;
  }
  arrtaskinfo_.Clear();
  arrcostrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryTwoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryTwoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 BuyTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TotalScore;
        break;
      }

      // optional uint32 TotalScore = 2;
      case 2: {
        if (tag == 16) {
         parse_TotalScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalscore_)));
          set_has_totalscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(34)) goto parse_ArrCostRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrCostRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrcostrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrCostRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryTwoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryTwoNotify)
  return false;
#undef DO_
}

void TActAnniversaryTwoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryTwoNotify)
  // optional uint64 BuyTime = 1;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->buytime(), output);
  }

  // optional uint32 TotalScore = 2;
  if (has_totalscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->totalscore(), output);
  }

  // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrtaskinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 4;
  for (int i = 0; i < this->arrcostrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrcostrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryTwoNotify)
}

::google::protobuf::uint8* TActAnniversaryTwoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryTwoNotify)
  // optional uint64 BuyTime = 1;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->buytime(), target);
  }

  // optional uint32 TotalScore = 2;
  if (has_totalscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->totalscore(), target);
  }

  // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrtaskinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 4;
  for (int i = 0; i < this->arrcostrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrcostrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryTwoNotify)
  return target;
}

int TActAnniversaryTwoNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 BuyTime = 1;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

    // optional uint32 TotalScore = 2;
    if (has_totalscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalscore());
    }

  }
  // repeated .pb.TActAnniversaryTwoTaskInfo ArrTaskInfo = 3;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrCostRewardInfo = 4;
  total_size += 1 * this->arrcostrewardinfo_size();
  for (int i = 0; i < this->arrcostrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrcostrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryTwoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryTwoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryTwoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryTwoNotify::MergeFrom(const TActAnniversaryTwoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  arrcostrewardinfo_.MergeFrom(from.arrcostrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
    if (from.has_totalscore()) {
      set_totalscore(from.totalscore());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryTwoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryTwoNotify::CopyFrom(const TActAnniversaryTwoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryTwoNotify::IsInitialized() const {

  return true;
}

void TActAnniversaryTwoNotify::Swap(TActAnniversaryTwoNotify* other) {
  if (other != this) {
    std::swap(buytime_, other->buytime_);
    std::swap(totalscore_, other->totalscore_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    arrcostrewardinfo_.Swap(&other->arrcostrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryTwoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryTwoNotify_descriptor_;
  metadata.reflection = TActAnniversaryTwoNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
