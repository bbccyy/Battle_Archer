// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Instance.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Instance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TInstanceChapterDetailInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceChapterDetailInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceChapterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceChapterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceTriggerFirstEnterEventReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceTriggerFirstEnterEventReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceChapterInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceChapterInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceChapterInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceChapterInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceArrChapterInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceArrChapterInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceArrChapterInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceArrChapterInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceCloseChapterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceCloseChapterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceDoBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceDoBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceDoBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceDoBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceRaidStrongholdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceRaidStrongholdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceRaidStrongholdSingleDrop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceRaidStrongholdSingleDrop_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceRaidStrongholdRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceRaidStrongholdRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceReceiveStarRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceReceiveStarRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceReceiveStarRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceReceiveStarRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceTriggerInstanceItemExtraArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceTriggerInstanceItemExtraArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceTriggerInstanceItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceTriggerInstanceItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceTriggerInstanceItemRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceTriggerInstanceItemRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceProgressRankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceProgressRankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceGetProgressRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceGetProgressRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceGetProgressRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceGetProgressRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceGetBattleReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceGetBattleReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceGetBattleReportRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceGetBattleReportRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TInstanceInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TInstanceInfoNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fInstance_2eproto() {
  protobuf_AddDesc_net_2fInstance_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Instance.proto");
  GOOGLE_CHECK(file != NULL);
  TInstanceChapterDetailInfo_descriptor_ = file->message_type(0);
  static const int TInstanceChapterDetailInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterDetailInfo, rewardinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterDetailInfo, strongholdarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterDetailInfo, instanceitemarray_),
  };
  TInstanceChapterDetailInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceChapterDetailInfo_descriptor_,
      TInstanceChapterDetailInfo::default_instance_,
      TInstanceChapterDetailInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterDetailInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterDetailInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceChapterDetailInfo));
  TInstanceChapterInfo_descriptor_ = file->message_type(1);
  static const int TInstanceChapterInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, ispass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, receivedstarrewardnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, detailinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, passstrongholdidarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, istriggeredfirstenterevent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, triggeredinstanceitemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, bossstarnum_),
  };
  TInstanceChapterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceChapterInfo_descriptor_,
      TInstanceChapterInfo::default_instance_,
      TInstanceChapterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceChapterInfo));
  TInstanceItemInfo_descriptor_ = file->message_type(2);
  static const int TInstanceItemInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceItemInfo, itemname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceItemInfo, itemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceItemInfo, triggertime_),
  };
  TInstanceItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceItemInfo_descriptor_,
      TInstanceItemInfo::default_instance_,
      TInstanceItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceItemInfo));
  TInstanceTriggerFirstEnterEventReq_descriptor_ = file->message_type(3);
  static const int TInstanceTriggerFirstEnterEventReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerFirstEnterEventReq, chapterid_),
  };
  TInstanceTriggerFirstEnterEventReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceTriggerFirstEnterEventReq_descriptor_,
      TInstanceTriggerFirstEnterEventReq::default_instance_,
      TInstanceTriggerFirstEnterEventReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerFirstEnterEventReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerFirstEnterEventReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceTriggerFirstEnterEventReq));
  TInstanceInfoReq_descriptor_ = file->message_type(4);
  static const int TInstanceInfoReq_offsets_[1] = {
  };
  TInstanceInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceInfoReq_descriptor_,
      TInstanceInfoReq::default_instance_,
      TInstanceInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceInfoReq));
  TInstanceInfoRsp_descriptor_ = file->message_type(5);
  static const int TInstanceInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoRsp, chapterinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoRsp, activetreasureitem_),
  };
  TInstanceInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceInfoRsp_descriptor_,
      TInstanceInfoRsp::default_instance_,
      TInstanceInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceInfoRsp));
  TInstanceChapterInfoReq_descriptor_ = file->message_type(6);
  static const int TInstanceChapterInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfoReq, chapterid_),
  };
  TInstanceChapterInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceChapterInfoReq_descriptor_,
      TInstanceChapterInfoReq::default_instance_,
      TInstanceChapterInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceChapterInfoReq));
  TInstanceChapterInfoRsp_descriptor_ = file->message_type(7);
  static const int TInstanceChapterInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfoRsp, chapterinfo_),
  };
  TInstanceChapterInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceChapterInfoRsp_descriptor_,
      TInstanceChapterInfoRsp::default_instance_,
      TInstanceChapterInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceChapterInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceChapterInfoRsp));
  TInstanceArrChapterInfoReq_descriptor_ = file->message_type(8);
  static const int TInstanceArrChapterInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceArrChapterInfoReq, chapteridarray_),
  };
  TInstanceArrChapterInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceArrChapterInfoReq_descriptor_,
      TInstanceArrChapterInfoReq::default_instance_,
      TInstanceArrChapterInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceArrChapterInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceArrChapterInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceArrChapterInfoReq));
  TInstanceArrChapterInfoRsp_descriptor_ = file->message_type(9);
  static const int TInstanceArrChapterInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceArrChapterInfoRsp, chapterinfoarray_),
  };
  TInstanceArrChapterInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceArrChapterInfoRsp_descriptor_,
      TInstanceArrChapterInfoRsp::default_instance_,
      TInstanceArrChapterInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceArrChapterInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceArrChapterInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceArrChapterInfoRsp));
  TInstanceCloseChapterReq_descriptor_ = file->message_type(10);
  static const int TInstanceCloseChapterReq_offsets_[1] = {
  };
  TInstanceCloseChapterReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceCloseChapterReq_descriptor_,
      TInstanceCloseChapterReq::default_instance_,
      TInstanceCloseChapterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceCloseChapterReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceCloseChapterReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceCloseChapterReq));
  TInstanceDoBattleReq_descriptor_ = file->message_type(11);
  static const int TInstanceDoBattleReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleReq, strongholdbattleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleReq, battlecheckparam_),
  };
  TInstanceDoBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceDoBattleReq_descriptor_,
      TInstanceDoBattleReq::default_instance_,
      TInstanceDoBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceDoBattleReq));
  TInstanceDoBattleRsp_descriptor_ = file->message_type(12);
  static const int TInstanceDoBattleRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleRsp, droparray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleRsp, battleargs_),
  };
  TInstanceDoBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceDoBattleRsp_descriptor_,
      TInstanceDoBattleRsp::default_instance_,
      TInstanceDoBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceDoBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceDoBattleRsp));
  TInstanceRaidStrongholdReq_descriptor_ = file->message_type(13);
  static const int TInstanceRaidStrongholdReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdReq, raidnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdReq, neediteminfo_),
  };
  TInstanceRaidStrongholdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceRaidStrongholdReq_descriptor_,
      TInstanceRaidStrongholdReq::default_instance_,
      TInstanceRaidStrongholdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceRaidStrongholdReq));
  TInstanceRaidStrongholdSingleDrop_descriptor_ = file->message_type(14);
  static const int TInstanceRaidStrongholdSingleDrop_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdSingleDrop, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdSingleDrop, rewardarray_),
  };
  TInstanceRaidStrongholdSingleDrop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceRaidStrongholdSingleDrop_descriptor_,
      TInstanceRaidStrongholdSingleDrop::default_instance_,
      TInstanceRaidStrongholdSingleDrop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdSingleDrop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdSingleDrop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceRaidStrongholdSingleDrop));
  TInstanceRaidStrongholdRsp_descriptor_ = file->message_type(15);
  static const int TInstanceRaidStrongholdRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdRsp, droparray_),
  };
  TInstanceRaidStrongholdRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceRaidStrongholdRsp_descriptor_,
      TInstanceRaidStrongholdRsp::default_instance_,
      TInstanceRaidStrongholdRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceRaidStrongholdRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceRaidStrongholdRsp));
  TInstanceReportBattleReq_descriptor_ = file->message_type(16);
  static const int TInstanceReportBattleReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, strongholdbattleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, battleresultbytes_),
  };
  TInstanceReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceReportBattleReq_descriptor_,
      TInstanceReportBattleReq::default_instance_,
      TInstanceReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceReportBattleReq));
  TInstanceReportBattleRsp_descriptor_ = file->message_type(17);
  static const int TInstanceReportBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleRsp, droparray_),
  };
  TInstanceReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceReportBattleRsp_descriptor_,
      TInstanceReportBattleRsp::default_instance_,
      TInstanceReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceReportBattleRsp));
  TInstanceReceiveStarRewardReq_descriptor_ = file->message_type(18);
  static const int TInstanceReceiveStarRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardReq, starnum_),
  };
  TInstanceReceiveStarRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceReceiveStarRewardReq_descriptor_,
      TInstanceReceiveStarRewardReq::default_instance_,
      TInstanceReceiveStarRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceReceiveStarRewardReq));
  TInstanceReceiveStarRewardRsp_descriptor_ = file->message_type(19);
  static const int TInstanceReceiveStarRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardRsp, rewardarray_),
  };
  TInstanceReceiveStarRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceReceiveStarRewardRsp_descriptor_,
      TInstanceReceiveStarRewardRsp::default_instance_,
      TInstanceReceiveStarRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceReceiveStarRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceReceiveStarRewardRsp));
  TInstanceTriggerInstanceItemExtraArgs_descriptor_ = file->message_type(20);
  static const int TInstanceTriggerInstanceItemExtraArgs_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemExtraArgs, dialogid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemExtraArgs, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemExtraArgs, battleresultbytes_),
  };
  TInstanceTriggerInstanceItemExtraArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceTriggerInstanceItemExtraArgs_descriptor_,
      TInstanceTriggerInstanceItemExtraArgs::default_instance_,
      TInstanceTriggerInstanceItemExtraArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemExtraArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemExtraArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceTriggerInstanceItemExtraArgs));
  TInstanceTriggerInstanceItemReq_descriptor_ = file->message_type(21);
  static const int TInstanceTriggerInstanceItemReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemReq, itemname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemReq, extraarg_),
  };
  TInstanceTriggerInstanceItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceTriggerInstanceItemReq_descriptor_,
      TInstanceTriggerInstanceItemReq::default_instance_,
      TInstanceTriggerInstanceItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceTriggerInstanceItemReq));
  TInstanceTriggerInstanceItemRsp_descriptor_ = file->message_type(22);
  static const int TInstanceTriggerInstanceItemRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemRsp, rewardarray_),
  };
  TInstanceTriggerInstanceItemRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceTriggerInstanceItemRsp_descriptor_,
      TInstanceTriggerInstanceItemRsp::default_instance_,
      TInstanceTriggerInstanceItemRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceTriggerInstanceItemRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceTriggerInstanceItemRsp));
  TInstanceProgressRankInfo_descriptor_ = file->message_type(23);
  static const int TInstanceProgressRankInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, passnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, strongholdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, starnum_),
  };
  TInstanceProgressRankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceProgressRankInfo_descriptor_,
      TInstanceProgressRankInfo::default_instance_,
      TInstanceProgressRankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceProgressRankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceProgressRankInfo));
  TInstanceGetProgressRankReq_descriptor_ = file->message_type(24);
  static const int TInstanceGetProgressRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankReq, limit_),
  };
  TInstanceGetProgressRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceGetProgressRankReq_descriptor_,
      TInstanceGetProgressRankReq::default_instance_,
      TInstanceGetProgressRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceGetProgressRankReq));
  TInstanceGetProgressRankRsp_descriptor_ = file->message_type(25);
  static const int TInstanceGetProgressRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankRsp, rankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankRsp, myrank_),
  };
  TInstanceGetProgressRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceGetProgressRankRsp_descriptor_,
      TInstanceGetProgressRankRsp::default_instance_,
      TInstanceGetProgressRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetProgressRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceGetProgressRankRsp));
  TInstanceGetBattleReportReq_descriptor_ = file->message_type(26);
  static const int TInstanceGetBattleReportReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportReq, reporttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportReq, campid_),
  };
  TInstanceGetBattleReportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceGetBattleReportReq_descriptor_,
      TInstanceGetBattleReportReq::default_instance_,
      TInstanceGetBattleReportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceGetBattleReportReq));
  TInstanceGetBattleReportRsp_descriptor_ = file->message_type(27);
  static const int TInstanceGetBattleReportRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportRsp, reportarr_),
  };
  TInstanceGetBattleReportRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceGetBattleReportRsp_descriptor_,
      TInstanceGetBattleReportRsp::default_instance_,
      TInstanceGetBattleReportRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceGetBattleReportRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceGetBattleReportRsp));
  TInstanceInfoNotify_descriptor_ = file->message_type(28);
  static const int TInstanceInfoNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoNotify, chapterinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoNotify, activetreasureitem_),
  };
  TInstanceInfoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TInstanceInfoNotify_descriptor_,
      TInstanceInfoNotify::default_instance_,
      TInstanceInfoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInstanceInfoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TInstanceInfoNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fInstance_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceChapterDetailInfo_descriptor_, &TInstanceChapterDetailInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceChapterInfo_descriptor_, &TInstanceChapterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceItemInfo_descriptor_, &TInstanceItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceTriggerFirstEnterEventReq_descriptor_, &TInstanceTriggerFirstEnterEventReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceInfoReq_descriptor_, &TInstanceInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceInfoRsp_descriptor_, &TInstanceInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceChapterInfoReq_descriptor_, &TInstanceChapterInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceChapterInfoRsp_descriptor_, &TInstanceChapterInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceArrChapterInfoReq_descriptor_, &TInstanceArrChapterInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceArrChapterInfoRsp_descriptor_, &TInstanceArrChapterInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceCloseChapterReq_descriptor_, &TInstanceCloseChapterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceDoBattleReq_descriptor_, &TInstanceDoBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceDoBattleRsp_descriptor_, &TInstanceDoBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceRaidStrongholdReq_descriptor_, &TInstanceRaidStrongholdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceRaidStrongholdSingleDrop_descriptor_, &TInstanceRaidStrongholdSingleDrop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceRaidStrongholdRsp_descriptor_, &TInstanceRaidStrongholdRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceReportBattleReq_descriptor_, &TInstanceReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceReportBattleRsp_descriptor_, &TInstanceReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceReceiveStarRewardReq_descriptor_, &TInstanceReceiveStarRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceReceiveStarRewardRsp_descriptor_, &TInstanceReceiveStarRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceTriggerInstanceItemExtraArgs_descriptor_, &TInstanceTriggerInstanceItemExtraArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceTriggerInstanceItemReq_descriptor_, &TInstanceTriggerInstanceItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceTriggerInstanceItemRsp_descriptor_, &TInstanceTriggerInstanceItemRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceProgressRankInfo_descriptor_, &TInstanceProgressRankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceGetProgressRankReq_descriptor_, &TInstanceGetProgressRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceGetProgressRankRsp_descriptor_, &TInstanceGetProgressRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceGetBattleReportReq_descriptor_, &TInstanceGetBattleReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceGetBattleReportRsp_descriptor_, &TInstanceGetBattleReportRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TInstanceInfoNotify_descriptor_, &TInstanceInfoNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fInstance_2eproto() {
  delete TInstanceChapterDetailInfo::default_instance_;
  delete TInstanceChapterDetailInfo_reflection_;
  delete TInstanceChapterInfo::default_instance_;
  delete TInstanceChapterInfo_reflection_;
  delete TInstanceItemInfo::default_instance_;
  delete TInstanceItemInfo_reflection_;
  delete TInstanceTriggerFirstEnterEventReq::default_instance_;
  delete TInstanceTriggerFirstEnterEventReq_reflection_;
  delete TInstanceInfoReq::default_instance_;
  delete TInstanceInfoReq_reflection_;
  delete TInstanceInfoRsp::default_instance_;
  delete TInstanceInfoRsp_reflection_;
  delete TInstanceChapterInfoReq::default_instance_;
  delete TInstanceChapterInfoReq_reflection_;
  delete TInstanceChapterInfoRsp::default_instance_;
  delete TInstanceChapterInfoRsp_reflection_;
  delete TInstanceArrChapterInfoReq::default_instance_;
  delete TInstanceArrChapterInfoReq_reflection_;
  delete TInstanceArrChapterInfoRsp::default_instance_;
  delete TInstanceArrChapterInfoRsp_reflection_;
  delete TInstanceCloseChapterReq::default_instance_;
  delete TInstanceCloseChapterReq_reflection_;
  delete TInstanceDoBattleReq::default_instance_;
  delete TInstanceDoBattleReq_reflection_;
  delete TInstanceDoBattleRsp::default_instance_;
  delete TInstanceDoBattleRsp_reflection_;
  delete TInstanceRaidStrongholdReq::default_instance_;
  delete TInstanceRaidStrongholdReq_reflection_;
  delete TInstanceRaidStrongholdSingleDrop::default_instance_;
  delete TInstanceRaidStrongholdSingleDrop_reflection_;
  delete TInstanceRaidStrongholdRsp::default_instance_;
  delete TInstanceRaidStrongholdRsp_reflection_;
  delete TInstanceReportBattleReq::default_instance_;
  delete TInstanceReportBattleReq_reflection_;
  delete TInstanceReportBattleRsp::default_instance_;
  delete TInstanceReportBattleRsp_reflection_;
  delete TInstanceReceiveStarRewardReq::default_instance_;
  delete TInstanceReceiveStarRewardReq_reflection_;
  delete TInstanceReceiveStarRewardRsp::default_instance_;
  delete TInstanceReceiveStarRewardRsp_reflection_;
  delete TInstanceTriggerInstanceItemExtraArgs::default_instance_;
  delete TInstanceTriggerInstanceItemExtraArgs_reflection_;
  delete TInstanceTriggerInstanceItemReq::default_instance_;
  delete TInstanceTriggerInstanceItemReq_reflection_;
  delete TInstanceTriggerInstanceItemRsp::default_instance_;
  delete TInstanceTriggerInstanceItemRsp_reflection_;
  delete TInstanceProgressRankInfo::default_instance_;
  delete TInstanceProgressRankInfo_reflection_;
  delete TInstanceGetProgressRankReq::default_instance_;
  delete TInstanceGetProgressRankReq_reflection_;
  delete TInstanceGetProgressRankRsp::default_instance_;
  delete TInstanceGetProgressRankRsp_reflection_;
  delete TInstanceGetBattleReportReq::default_instance_;
  delete TInstanceGetBattleReportReq_reflection_;
  delete TInstanceGetBattleReportRsp::default_instance_;
  delete TInstanceGetBattleReportRsp_reflection_;
  delete TInstanceInfoNotify::default_instance_;
  delete TInstanceInfoNotify_reflection_;
}

void protobuf_AddDesc_net_2fInstance_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fBInstance_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::pb::protobuf_AddDesc_net_2fLocalBattleReport_2eproto();
  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022net/Instance.proto\022\002pb\032\026net/CommonRewa"
    "rd.proto\032\023net/BInstance.proto\032\020net/Battl"
    "e.proto\032\020net/Common.proto\032\033net/LocalBatt"
    "leReport.proto\032\016net/User.proto\"\263\001\n\032TInst"
    "anceChapterDetailInfo\0224\n\017RewardInfoArray"
    "\030\001 \003(\0132\033.pb.TBChapterStarRewardInfo\022-\n\017S"
    "trongholdArray\030\003 \003(\0132\024.pb.TBStrongholdIn"
    "fo\0220\n\021InstanceItemArray\030\004 \003(\0132\025.pb.TInst"
    "anceItemInfo\"\227\002\n\024TInstanceChapterInfo\022\021\n"
    "\tChapterId\030\001 \001(\r\022\017\n\007StarNum\030\002 \001(\r\022\016\n\006IsP"
    "ass\030\003 \001(\010\022\035\n\025ReceivedStarRewardNum\030\004 \001(\r"
    "\0222\n\nDetailInfo\030\005 \001(\0132\036.pb.TInstanceChapt"
    "erDetailInfo\022\035\n\025PassStrongholdIdArray\030\006 "
    "\003(\r\022\"\n\032IsTriggeredFirstEnterEvent\030\007 \001(\010\022"
    " \n\030TriggeredInstanceItemNum\030\010 \001(\r\022\023\n\013Bos"
    "sStarNum\030\t \001(\r\"L\n\021TInstanceItemInfo\022\020\n\010I"
    "temName\030\001 \001(\t\022\020\n\010ItemType\030\002 \001(\r\022\023\n\013Trigg"
    "erTime\030\003 \001(\004\"7\n\"TInstanceTriggerFirstEnt"
    "erEventReq\022\021\n\tChapterId\030\001 \001(\r\"\022\n\020TInstan"
    "ceInfoReq\"s\n\020TInstanceInfoRsp\0222\n\020Chapter"
    "InfoArray\030\001 \003(\0132\030.pb.TInstanceChapterInf"
    "o\022+\n\022ActiveTreasureItem\030\002 \001(\0132\017.pb.TSimp"
    "leItem\",\n\027TInstanceChapterInfoReq\022\021\n\tCha"
    "pterId\030\001 \001(\r\"H\n\027TInstanceChapterInfoRsp\022"
    "-\n\013ChapterInfo\030\001 \001(\0132\030.pb.TInstanceChapt"
    "erInfo\"4\n\032TInstanceArrChapterInfoReq\022\026\n\016"
    "ChapterIdArray\030\001 \003(\r\"P\n\032TInstanceArrChap"
    "terInfoRsp\0222\n\020ChapterInfoArray\030\001 \003(\0132\030.p"
    "b.TInstanceChapterInfo\"\032\n\030TInstanceClose"
    "ChapterReq\"\214\001\n\024TInstanceDoBattleReq\022\021\n\tC"
    "hapterId\030\001 \001(\r\022\024\n\014StrongholdId\030\002 \001(\r\022\032\n\022"
    "StrongholdBattleId\030\003 \001(\r\022/\n\020BattleCheckP"
    "aram\030\004 \001(\0132\025.pb.TBattleCheckParam\"a\n\024TIn"
    "stanceDoBattleRsp\022$\n\tDropArray\030\001 \003(\0132\021.p"
    "b.TCommonReward\022#\n\nBattleArgs\030\002 \001(\0132\017.pb"
    ".TBattleArgs\"\177\n\032TInstanceRaidStrongholdR"
    "eq\022\021\n\tChapterId\030\001 \001(\r\022\024\n\014StrongholdId\030\002 "
    "\001(\r\022\017\n\007RaidNum\030\003 \001(\r\022\'\n\014NeedItemInfo\030\004 \001"
    "(\0132\021.pb.TCommonReward\"X\n!TInstanceRaidSt"
    "rongholdSingleDrop\022\013\n\003Num\030\001 \001(\r\022&\n\013Rewar"
    "dArray\030\002 \003(\0132\021.pb.TCommonReward\"V\n\032TInst"
    "anceRaidStrongholdRsp\0228\n\tDropArray\030\001 \003(\013"
    "2%.pb.TInstanceRaidStrongholdSingleDrop\""
    "\240\001\n\030TInstanceReportBattleReq\022\021\n\tChapterI"
    "d\030\001 \001(\r\022\024\n\014StrongholdId\030\002 \001(\r\022\032\n\022Strongh"
    "oldBattleId\030\003 \001(\r\022$\n\tBattleRet\030\004 \001(\0132\021.p"
    "b.TBattleResult\022\031\n\021BattleResultBytes\030\005 \001"
    "(\014\"@\n\030TInstanceReportBattleRsp\022$\n\tDropAr"
    "ray\030\001 \003(\0132\021.pb.TCommonReward\"C\n\035TInstanc"
    "eReceiveStarRewardReq\022\021\n\tChapterId\030\001 \001(\r"
    "\022\017\n\007StarNum\030\002 \001(\r\"G\n\035TInstanceReceiveSta"
    "rRewardRsp\022&\n\013RewardArray\030\001 \003(\0132\021.pb.TCo"
    "mmonReward\"z\n%TInstanceTriggerInstanceIt"
    "emExtraArgs\022\020\n\010DialogId\030\001 \001(\r\022$\n\tBattleR"
    "et\030\002 \001(\0132\021.pb.TBattleResult\022\031\n\021BattleRes"
    "ultBytes\030\003 \001(\014\"\203\001\n\037TInstanceTriggerInsta"
    "nceItemReq\022\021\n\tChapterId\030\001 \001(\r\022\020\n\010ItemNam"
    "e\030\002 \001(\t\022;\n\010ExtraArg\030\003 \001(\0132).pb.TInstance"
    "TriggerInstanceItemExtraArgs\"I\n\037TInstanc"
    "eTriggerInstanceItemRsp\022&\n\013RewardArray\030\001"
    " \003(\0132\021.pb.TCommonReward\"\222\001\n\031TInstancePro"
    "gressRankInfo\022%\n\010UserInfo\030\001 \001(\0132\023.pb.TUs"
    "erSimpleInfo\022\024\n\014StrongholdId\030\002 \001(\r\022\017\n\007Pa"
    "ssNum\030\003 \001(\r\022\026\n\016StrongholdTime\030\004 \001(\004\022\017\n\007S"
    "tarNum\030\005 \001(\r\"<\n\033TInstanceGetProgressRank"
    "Req\022\016\n\006Offset\030\001 \001(\r\022\r\n\005Limit\030\002 \001(\r\"]\n\033TI"
    "nstanceGetProgressRankRsp\022.\n\007RankArr\030\001 \003"
    "(\0132\035.pb.TInstanceProgressRankInfo\022\016\n\006MyR"
    "ank\030\002 \001(\005\"W\n\033TInstanceGetBattleReportReq"
    "\022\024\n\014StrongholdId\030\001 \001(\r\022\022\n\nReportType\030\002 \001"
    "(\r\022\016\n\006CampId\030\003 \001(\r\"R\n\033TInstanceGetBattle"
    "ReportRsp\0223\n\tReportArr\030\001 \003(\0132 .pb.TLocal"
    "BattleReportSimpleInfo\"v\n\023TInstanceInfoN"
    "otify\0222\n\020ChapterInfoArray\030\001 \003(\0132\030.pb.TIn"
    "stanceChapterInfo\022+\n\022ActiveTreasureItem\030"
    "\002 \001(\0132\017.pb.TSimpleItem", 3022);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Instance.proto", &protobuf_RegisterTypes);
  TInstanceChapterDetailInfo::default_instance_ = new TInstanceChapterDetailInfo();
  TInstanceChapterInfo::default_instance_ = new TInstanceChapterInfo();
  TInstanceItemInfo::default_instance_ = new TInstanceItemInfo();
  TInstanceTriggerFirstEnterEventReq::default_instance_ = new TInstanceTriggerFirstEnterEventReq();
  TInstanceInfoReq::default_instance_ = new TInstanceInfoReq();
  TInstanceInfoRsp::default_instance_ = new TInstanceInfoRsp();
  TInstanceChapterInfoReq::default_instance_ = new TInstanceChapterInfoReq();
  TInstanceChapterInfoRsp::default_instance_ = new TInstanceChapterInfoRsp();
  TInstanceArrChapterInfoReq::default_instance_ = new TInstanceArrChapterInfoReq();
  TInstanceArrChapterInfoRsp::default_instance_ = new TInstanceArrChapterInfoRsp();
  TInstanceCloseChapterReq::default_instance_ = new TInstanceCloseChapterReq();
  TInstanceDoBattleReq::default_instance_ = new TInstanceDoBattleReq();
  TInstanceDoBattleRsp::default_instance_ = new TInstanceDoBattleRsp();
  TInstanceRaidStrongholdReq::default_instance_ = new TInstanceRaidStrongholdReq();
  TInstanceRaidStrongholdSingleDrop::default_instance_ = new TInstanceRaidStrongholdSingleDrop();
  TInstanceRaidStrongholdRsp::default_instance_ = new TInstanceRaidStrongholdRsp();
  TInstanceReportBattleReq::default_instance_ = new TInstanceReportBattleReq();
  TInstanceReportBattleRsp::default_instance_ = new TInstanceReportBattleRsp();
  TInstanceReceiveStarRewardReq::default_instance_ = new TInstanceReceiveStarRewardReq();
  TInstanceReceiveStarRewardRsp::default_instance_ = new TInstanceReceiveStarRewardRsp();
  TInstanceTriggerInstanceItemExtraArgs::default_instance_ = new TInstanceTriggerInstanceItemExtraArgs();
  TInstanceTriggerInstanceItemReq::default_instance_ = new TInstanceTriggerInstanceItemReq();
  TInstanceTriggerInstanceItemRsp::default_instance_ = new TInstanceTriggerInstanceItemRsp();
  TInstanceProgressRankInfo::default_instance_ = new TInstanceProgressRankInfo();
  TInstanceGetProgressRankReq::default_instance_ = new TInstanceGetProgressRankReq();
  TInstanceGetProgressRankRsp::default_instance_ = new TInstanceGetProgressRankRsp();
  TInstanceGetBattleReportReq::default_instance_ = new TInstanceGetBattleReportReq();
  TInstanceGetBattleReportRsp::default_instance_ = new TInstanceGetBattleReportRsp();
  TInstanceInfoNotify::default_instance_ = new TInstanceInfoNotify();
  TInstanceChapterDetailInfo::default_instance_->InitAsDefaultInstance();
  TInstanceChapterInfo::default_instance_->InitAsDefaultInstance();
  TInstanceItemInfo::default_instance_->InitAsDefaultInstance();
  TInstanceTriggerFirstEnterEventReq::default_instance_->InitAsDefaultInstance();
  TInstanceInfoReq::default_instance_->InitAsDefaultInstance();
  TInstanceInfoRsp::default_instance_->InitAsDefaultInstance();
  TInstanceChapterInfoReq::default_instance_->InitAsDefaultInstance();
  TInstanceChapterInfoRsp::default_instance_->InitAsDefaultInstance();
  TInstanceArrChapterInfoReq::default_instance_->InitAsDefaultInstance();
  TInstanceArrChapterInfoRsp::default_instance_->InitAsDefaultInstance();
  TInstanceCloseChapterReq::default_instance_->InitAsDefaultInstance();
  TInstanceDoBattleReq::default_instance_->InitAsDefaultInstance();
  TInstanceDoBattleRsp::default_instance_->InitAsDefaultInstance();
  TInstanceRaidStrongholdReq::default_instance_->InitAsDefaultInstance();
  TInstanceRaidStrongholdSingleDrop::default_instance_->InitAsDefaultInstance();
  TInstanceRaidStrongholdRsp::default_instance_->InitAsDefaultInstance();
  TInstanceReportBattleReq::default_instance_->InitAsDefaultInstance();
  TInstanceReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TInstanceReceiveStarRewardReq::default_instance_->InitAsDefaultInstance();
  TInstanceReceiveStarRewardRsp::default_instance_->InitAsDefaultInstance();
  TInstanceTriggerInstanceItemExtraArgs::default_instance_->InitAsDefaultInstance();
  TInstanceTriggerInstanceItemReq::default_instance_->InitAsDefaultInstance();
  TInstanceTriggerInstanceItemRsp::default_instance_->InitAsDefaultInstance();
  TInstanceProgressRankInfo::default_instance_->InitAsDefaultInstance();
  TInstanceGetProgressRankReq::default_instance_->InitAsDefaultInstance();
  TInstanceGetProgressRankRsp::default_instance_->InitAsDefaultInstance();
  TInstanceGetBattleReportReq::default_instance_->InitAsDefaultInstance();
  TInstanceGetBattleReportRsp::default_instance_->InitAsDefaultInstance();
  TInstanceInfoNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fInstance_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fInstance_2eproto {
  StaticDescriptorInitializer_net_2fInstance_2eproto() {
    protobuf_AddDesc_net_2fInstance_2eproto();
  }
} static_descriptor_initializer_net_2fInstance_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TInstanceChapterDetailInfo::kRewardInfoArrayFieldNumber;
const int TInstanceChapterDetailInfo::kStrongholdArrayFieldNumber;
const int TInstanceChapterDetailInfo::kInstanceItemArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceChapterDetailInfo::TInstanceChapterDetailInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceChapterDetailInfo)
}

void TInstanceChapterDetailInfo::InitAsDefaultInstance() {
}

TInstanceChapterDetailInfo::TInstanceChapterDetailInfo(const TInstanceChapterDetailInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceChapterDetailInfo)
}

void TInstanceChapterDetailInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceChapterDetailInfo::~TInstanceChapterDetailInfo() {
  // @@protoc_insertion_point(destructor:pb.TInstanceChapterDetailInfo)
  SharedDtor();
}

void TInstanceChapterDetailInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceChapterDetailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceChapterDetailInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceChapterDetailInfo_descriptor_;
}

const TInstanceChapterDetailInfo& TInstanceChapterDetailInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceChapterDetailInfo* TInstanceChapterDetailInfo::default_instance_ = NULL;

TInstanceChapterDetailInfo* TInstanceChapterDetailInfo::New() const {
  return new TInstanceChapterDetailInfo;
}

void TInstanceChapterDetailInfo::Clear() {
  rewardinfoarray_.Clear();
  strongholdarray_.Clear();
  instanceitemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceChapterDetailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceChapterDetailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardInfoArray;
        if (input->ExpectTag(26)) goto parse_StrongholdArray;
        break;
      }

      // repeated .pb.TBStrongholdInfo StrongholdArray = 3;
      case 3: {
        if (tag == 26) {
         parse_StrongholdArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_strongholdarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StrongholdArray;
        if (input->ExpectTag(34)) goto parse_InstanceItemArray;
        break;
      }

      // repeated .pb.TInstanceItemInfo InstanceItemArray = 4;
      case 4: {
        if (tag == 34) {
         parse_InstanceItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instanceitemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_InstanceItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceChapterDetailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceChapterDetailInfo)
  return false;
#undef DO_
}

void TInstanceChapterDetailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceChapterDetailInfo)
  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  for (int i = 0; i < this->rewardinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardinfoarray(i), output);
  }

  // repeated .pb.TBStrongholdInfo StrongholdArray = 3;
  for (int i = 0; i < this->strongholdarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->strongholdarray(i), output);
  }

  // repeated .pb.TInstanceItemInfo InstanceItemArray = 4;
  for (int i = 0; i < this->instanceitemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->instanceitemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceChapterDetailInfo)
}

::google::protobuf::uint8* TInstanceChapterDetailInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceChapterDetailInfo)
  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  for (int i = 0; i < this->rewardinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardinfoarray(i), target);
  }

  // repeated .pb.TBStrongholdInfo StrongholdArray = 3;
  for (int i = 0; i < this->strongholdarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->strongholdarray(i), target);
  }

  // repeated .pb.TInstanceItemInfo InstanceItemArray = 4;
  for (int i = 0; i < this->instanceitemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->instanceitemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceChapterDetailInfo)
  return target;
}

int TInstanceChapterDetailInfo::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  total_size += 1 * this->rewardinfoarray_size();
  for (int i = 0; i < this->rewardinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardinfoarray(i));
  }

  // repeated .pb.TBStrongholdInfo StrongholdArray = 3;
  total_size += 1 * this->strongholdarray_size();
  for (int i = 0; i < this->strongholdarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strongholdarray(i));
  }

  // repeated .pb.TInstanceItemInfo InstanceItemArray = 4;
  total_size += 1 * this->instanceitemarray_size();
  for (int i = 0; i < this->instanceitemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instanceitemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceChapterDetailInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceChapterDetailInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceChapterDetailInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceChapterDetailInfo::MergeFrom(const TInstanceChapterDetailInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardinfoarray_.MergeFrom(from.rewardinfoarray_);
  strongholdarray_.MergeFrom(from.strongholdarray_);
  instanceitemarray_.MergeFrom(from.instanceitemarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceChapterDetailInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceChapterDetailInfo::CopyFrom(const TInstanceChapterDetailInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceChapterDetailInfo::IsInitialized() const {

  return true;
}

void TInstanceChapterDetailInfo::Swap(TInstanceChapterDetailInfo* other) {
  if (other != this) {
    rewardinfoarray_.Swap(&other->rewardinfoarray_);
    strongholdarray_.Swap(&other->strongholdarray_);
    instanceitemarray_.Swap(&other->instanceitemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceChapterDetailInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceChapterDetailInfo_descriptor_;
  metadata.reflection = TInstanceChapterDetailInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceChapterInfo::kChapterIdFieldNumber;
const int TInstanceChapterInfo::kStarNumFieldNumber;
const int TInstanceChapterInfo::kIsPassFieldNumber;
const int TInstanceChapterInfo::kReceivedStarRewardNumFieldNumber;
const int TInstanceChapterInfo::kDetailInfoFieldNumber;
const int TInstanceChapterInfo::kPassStrongholdIdArrayFieldNumber;
const int TInstanceChapterInfo::kIsTriggeredFirstEnterEventFieldNumber;
const int TInstanceChapterInfo::kTriggeredInstanceItemNumFieldNumber;
const int TInstanceChapterInfo::kBossStarNumFieldNumber;
#endif  // !_MSC_VER

TInstanceChapterInfo::TInstanceChapterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceChapterInfo)
}

void TInstanceChapterInfo::InitAsDefaultInstance() {
  detailinfo_ = const_cast< ::pb::TInstanceChapterDetailInfo*>(&::pb::TInstanceChapterDetailInfo::default_instance());
}

TInstanceChapterInfo::TInstanceChapterInfo(const TInstanceChapterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceChapterInfo)
}

void TInstanceChapterInfo::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  starnum_ = 0u;
  ispass_ = false;
  receivedstarrewardnum_ = 0u;
  detailinfo_ = NULL;
  istriggeredfirstenterevent_ = false;
  triggeredinstanceitemnum_ = 0u;
  bossstarnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceChapterInfo::~TInstanceChapterInfo() {
  // @@protoc_insertion_point(destructor:pb.TInstanceChapterInfo)
  SharedDtor();
}

void TInstanceChapterInfo::SharedDtor() {
  if (this != default_instance_) {
    delete detailinfo_;
  }
}

void TInstanceChapterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceChapterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceChapterInfo_descriptor_;
}

const TInstanceChapterInfo& TInstanceChapterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceChapterInfo* TInstanceChapterInfo::default_instance_ = NULL;

TInstanceChapterInfo* TInstanceChapterInfo::New() const {
  return new TInstanceChapterInfo;
}

void TInstanceChapterInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceChapterInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 223) {
    ZR_(chapterid_, istriggeredfirstenterevent_);
    if (has_detailinfo()) {
      if (detailinfo_ != NULL) detailinfo_->::pb::TInstanceChapterDetailInfo::Clear();
    }
    triggeredinstanceitemnum_ = 0u;
  }
  bossstarnum_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  passstrongholdidarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceChapterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceChapterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 2;
      case 2: {
        if (tag == 16) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IsPass;
        break;
      }

      // optional bool IsPass = 3;
      case 3: {
        if (tag == 24) {
         parse_IsPass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispass_)));
          set_has_ispass();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ReceivedStarRewardNum;
        break;
      }

      // optional uint32 ReceivedStarRewardNum = 4;
      case 4: {
        if (tag == 32) {
         parse_ReceivedStarRewardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receivedstarrewardnum_)));
          set_has_receivedstarrewardnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_DetailInfo;
        break;
      }

      // optional .pb.TInstanceChapterDetailInfo DetailInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_DetailInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detailinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_PassStrongholdIdArray;
        break;
      }

      // repeated uint32 PassStrongholdIdArray = 6;
      case 6: {
        if (tag == 48) {
         parse_PassStrongholdIdArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_passstrongholdidarray())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_passstrongholdidarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_PassStrongholdIdArray;
        if (input->ExpectTag(56)) goto parse_IsTriggeredFirstEnterEvent;
        break;
      }

      // optional bool IsTriggeredFirstEnterEvent = 7;
      case 7: {
        if (tag == 56) {
         parse_IsTriggeredFirstEnterEvent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istriggeredfirstenterevent_)));
          set_has_istriggeredfirstenterevent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_TriggeredInstanceItemNum;
        break;
      }

      // optional uint32 TriggeredInstanceItemNum = 8;
      case 8: {
        if (tag == 64) {
         parse_TriggeredInstanceItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &triggeredinstanceitemnum_)));
          set_has_triggeredinstanceitemnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_BossStarNum;
        break;
      }

      // optional uint32 BossStarNum = 9;
      case 9: {
        if (tag == 72) {
         parse_BossStarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bossstarnum_)));
          set_has_bossstarnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceChapterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceChapterInfo)
  return false;
#undef DO_
}

void TInstanceChapterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starnum(), output);
  }

  // optional bool IsPass = 3;
  if (has_ispass()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ispass(), output);
  }

  // optional uint32 ReceivedStarRewardNum = 4;
  if (has_receivedstarrewardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->receivedstarrewardnum(), output);
  }

  // optional .pb.TInstanceChapterDetailInfo DetailInfo = 5;
  if (has_detailinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->detailinfo(), output);
  }

  // repeated uint32 PassStrongholdIdArray = 6;
  for (int i = 0; i < this->passstrongholdidarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->passstrongholdidarray(i), output);
  }

  // optional bool IsTriggeredFirstEnterEvent = 7;
  if (has_istriggeredfirstenterevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->istriggeredfirstenterevent(), output);
  }

  // optional uint32 TriggeredInstanceItemNum = 8;
  if (has_triggeredinstanceitemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->triggeredinstanceitemnum(), output);
  }

  // optional uint32 BossStarNum = 9;
  if (has_bossstarnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->bossstarnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceChapterInfo)
}

::google::protobuf::uint8* TInstanceChapterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starnum(), target);
  }

  // optional bool IsPass = 3;
  if (has_ispass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ispass(), target);
  }

  // optional uint32 ReceivedStarRewardNum = 4;
  if (has_receivedstarrewardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->receivedstarrewardnum(), target);
  }

  // optional .pb.TInstanceChapterDetailInfo DetailInfo = 5;
  if (has_detailinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->detailinfo(), target);
  }

  // repeated uint32 PassStrongholdIdArray = 6;
  for (int i = 0; i < this->passstrongholdidarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->passstrongholdidarray(i), target);
  }

  // optional bool IsTriggeredFirstEnterEvent = 7;
  if (has_istriggeredfirstenterevent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->istriggeredfirstenterevent(), target);
  }

  // optional uint32 TriggeredInstanceItemNum = 8;
  if (has_triggeredinstanceitemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->triggeredinstanceitemnum(), target);
  }

  // optional uint32 BossStarNum = 9;
  if (has_bossstarnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->bossstarnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceChapterInfo)
  return target;
}

int TInstanceChapterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StarNum = 2;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

    // optional bool IsPass = 3;
    if (has_ispass()) {
      total_size += 1 + 1;
    }

    // optional uint32 ReceivedStarRewardNum = 4;
    if (has_receivedstarrewardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receivedstarrewardnum());
    }

    // optional .pb.TInstanceChapterDetailInfo DetailInfo = 5;
    if (has_detailinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->detailinfo());
    }

    // optional bool IsTriggeredFirstEnterEvent = 7;
    if (has_istriggeredfirstenterevent()) {
      total_size += 1 + 1;
    }

    // optional uint32 TriggeredInstanceItemNum = 8;
    if (has_triggeredinstanceitemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->triggeredinstanceitemnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 BossStarNum = 9;
    if (has_bossstarnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bossstarnum());
    }

  }
  // repeated uint32 PassStrongholdIdArray = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->passstrongholdidarray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->passstrongholdidarray(i));
    }
    total_size += 1 * this->passstrongholdidarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceChapterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceChapterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceChapterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceChapterInfo::MergeFrom(const TInstanceChapterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  passstrongholdidarray_.MergeFrom(from.passstrongholdidarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
    if (from.has_ispass()) {
      set_ispass(from.ispass());
    }
    if (from.has_receivedstarrewardnum()) {
      set_receivedstarrewardnum(from.receivedstarrewardnum());
    }
    if (from.has_detailinfo()) {
      mutable_detailinfo()->::pb::TInstanceChapterDetailInfo::MergeFrom(from.detailinfo());
    }
    if (from.has_istriggeredfirstenterevent()) {
      set_istriggeredfirstenterevent(from.istriggeredfirstenterevent());
    }
    if (from.has_triggeredinstanceitemnum()) {
      set_triggeredinstanceitemnum(from.triggeredinstanceitemnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bossstarnum()) {
      set_bossstarnum(from.bossstarnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceChapterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceChapterInfo::CopyFrom(const TInstanceChapterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceChapterInfo::IsInitialized() const {

  return true;
}

void TInstanceChapterInfo::Swap(TInstanceChapterInfo* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(starnum_, other->starnum_);
    std::swap(ispass_, other->ispass_);
    std::swap(receivedstarrewardnum_, other->receivedstarrewardnum_);
    std::swap(detailinfo_, other->detailinfo_);
    passstrongholdidarray_.Swap(&other->passstrongholdidarray_);
    std::swap(istriggeredfirstenterevent_, other->istriggeredfirstenterevent_);
    std::swap(triggeredinstanceitemnum_, other->triggeredinstanceitemnum_);
    std::swap(bossstarnum_, other->bossstarnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceChapterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceChapterInfo_descriptor_;
  metadata.reflection = TInstanceChapterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceItemInfo::kItemNameFieldNumber;
const int TInstanceItemInfo::kItemTypeFieldNumber;
const int TInstanceItemInfo::kTriggerTimeFieldNumber;
#endif  // !_MSC_VER

TInstanceItemInfo::TInstanceItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceItemInfo)
}

void TInstanceItemInfo::InitAsDefaultInstance() {
}

TInstanceItemInfo::TInstanceItemInfo(const TInstanceItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceItemInfo)
}

void TInstanceItemInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemtype_ = 0u;
  triggertime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceItemInfo::~TInstanceItemInfo() {
  // @@protoc_insertion_point(destructor:pb.TInstanceItemInfo)
  SharedDtor();
}

void TInstanceItemInfo::SharedDtor() {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemname_;
  }
  if (this != default_instance_) {
  }
}

void TInstanceItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceItemInfo_descriptor_;
}

const TInstanceItemInfo& TInstanceItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceItemInfo* TInstanceItemInfo::default_instance_ = NULL;

TInstanceItemInfo* TInstanceItemInfo::New() const {
  return new TInstanceItemInfo;
}

void TInstanceItemInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceItemInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(triggertime_, itemtype_);
    if (has_itemname()) {
      if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ItemName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemname().data(), this->itemname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemType;
        break;
      }

      // optional uint32 ItemType = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtype_)));
          set_has_itemtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TriggerTime;
        break;
      }

      // optional uint64 TriggerTime = 3;
      case 3: {
        if (tag == 24) {
         parse_TriggerTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &triggertime_)));
          set_has_triggertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceItemInfo)
  return false;
#undef DO_
}

void TInstanceItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceItemInfo)
  // optional string ItemName = 1;
  if (has_itemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemname().data(), this->itemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->itemname(), output);
  }

  // optional uint32 ItemType = 2;
  if (has_itemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemtype(), output);
  }

  // optional uint64 TriggerTime = 3;
  if (has_triggertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->triggertime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceItemInfo)
}

::google::protobuf::uint8* TInstanceItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceItemInfo)
  // optional string ItemName = 1;
  if (has_itemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemname().data(), this->itemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->itemname(), target);
  }

  // optional uint32 ItemType = 2;
  if (has_itemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemtype(), target);
  }

  // optional uint64 TriggerTime = 3;
  if (has_triggertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->triggertime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceItemInfo)
  return target;
}

int TInstanceItemInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ItemName = 1;
    if (has_itemname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemname());
    }

    // optional uint32 ItemType = 2;
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtype());
    }

    // optional uint64 TriggerTime = 3;
    if (has_triggertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->triggertime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceItemInfo::MergeFrom(const TInstanceItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemname()) {
      set_itemname(from.itemname());
    }
    if (from.has_itemtype()) {
      set_itemtype(from.itemtype());
    }
    if (from.has_triggertime()) {
      set_triggertime(from.triggertime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceItemInfo::CopyFrom(const TInstanceItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceItemInfo::IsInitialized() const {

  return true;
}

void TInstanceItemInfo::Swap(TInstanceItemInfo* other) {
  if (other != this) {
    std::swap(itemname_, other->itemname_);
    std::swap(itemtype_, other->itemtype_);
    std::swap(triggertime_, other->triggertime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceItemInfo_descriptor_;
  metadata.reflection = TInstanceItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceTriggerFirstEnterEventReq::kChapterIdFieldNumber;
#endif  // !_MSC_VER

TInstanceTriggerFirstEnterEventReq::TInstanceTriggerFirstEnterEventReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceTriggerFirstEnterEventReq)
}

void TInstanceTriggerFirstEnterEventReq::InitAsDefaultInstance() {
}

TInstanceTriggerFirstEnterEventReq::TInstanceTriggerFirstEnterEventReq(const TInstanceTriggerFirstEnterEventReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceTriggerFirstEnterEventReq)
}

void TInstanceTriggerFirstEnterEventReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceTriggerFirstEnterEventReq::~TInstanceTriggerFirstEnterEventReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceTriggerFirstEnterEventReq)
  SharedDtor();
}

void TInstanceTriggerFirstEnterEventReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceTriggerFirstEnterEventReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceTriggerFirstEnterEventReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceTriggerFirstEnterEventReq_descriptor_;
}

const TInstanceTriggerFirstEnterEventReq& TInstanceTriggerFirstEnterEventReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceTriggerFirstEnterEventReq* TInstanceTriggerFirstEnterEventReq::default_instance_ = NULL;

TInstanceTriggerFirstEnterEventReq* TInstanceTriggerFirstEnterEventReq::New() const {
  return new TInstanceTriggerFirstEnterEventReq;
}

void TInstanceTriggerFirstEnterEventReq::Clear() {
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceTriggerFirstEnterEventReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceTriggerFirstEnterEventReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceTriggerFirstEnterEventReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceTriggerFirstEnterEventReq)
  return false;
#undef DO_
}

void TInstanceTriggerFirstEnterEventReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceTriggerFirstEnterEventReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceTriggerFirstEnterEventReq)
}

::google::protobuf::uint8* TInstanceTriggerFirstEnterEventReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceTriggerFirstEnterEventReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceTriggerFirstEnterEventReq)
  return target;
}

int TInstanceTriggerFirstEnterEventReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceTriggerFirstEnterEventReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceTriggerFirstEnterEventReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceTriggerFirstEnterEventReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceTriggerFirstEnterEventReq::MergeFrom(const TInstanceTriggerFirstEnterEventReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceTriggerFirstEnterEventReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceTriggerFirstEnterEventReq::CopyFrom(const TInstanceTriggerFirstEnterEventReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceTriggerFirstEnterEventReq::IsInitialized() const {

  return true;
}

void TInstanceTriggerFirstEnterEventReq::Swap(TInstanceTriggerFirstEnterEventReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceTriggerFirstEnterEventReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceTriggerFirstEnterEventReq_descriptor_;
  metadata.reflection = TInstanceTriggerFirstEnterEventReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TInstanceInfoReq::TInstanceInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceInfoReq)
}

void TInstanceInfoReq::InitAsDefaultInstance() {
}

TInstanceInfoReq::TInstanceInfoReq(const TInstanceInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceInfoReq)
}

void TInstanceInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceInfoReq::~TInstanceInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceInfoReq)
  SharedDtor();
}

void TInstanceInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceInfoReq_descriptor_;
}

const TInstanceInfoReq& TInstanceInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceInfoReq* TInstanceInfoReq::default_instance_ = NULL;

TInstanceInfoReq* TInstanceInfoReq::New() const {
  return new TInstanceInfoReq;
}

void TInstanceInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceInfoReq)
  return false;
#undef DO_
}

void TInstanceInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceInfoReq)
}

::google::protobuf::uint8* TInstanceInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceInfoReq)
  return target;
}

int TInstanceInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceInfoReq::MergeFrom(const TInstanceInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceInfoReq::CopyFrom(const TInstanceInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceInfoReq::IsInitialized() const {

  return true;
}

void TInstanceInfoReq::Swap(TInstanceInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceInfoReq_descriptor_;
  metadata.reflection = TInstanceInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceInfoRsp::kChapterInfoArrayFieldNumber;
const int TInstanceInfoRsp::kActiveTreasureItemFieldNumber;
#endif  // !_MSC_VER

TInstanceInfoRsp::TInstanceInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceInfoRsp)
}

void TInstanceInfoRsp::InitAsDefaultInstance() {
  activetreasureitem_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

TInstanceInfoRsp::TInstanceInfoRsp(const TInstanceInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceInfoRsp)
}

void TInstanceInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  activetreasureitem_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceInfoRsp::~TInstanceInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceInfoRsp)
  SharedDtor();
}

void TInstanceInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete activetreasureitem_;
  }
}

void TInstanceInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceInfoRsp_descriptor_;
}

const TInstanceInfoRsp& TInstanceInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceInfoRsp* TInstanceInfoRsp::default_instance_ = NULL;

TInstanceInfoRsp* TInstanceInfoRsp::New() const {
  return new TInstanceInfoRsp;
}

void TInstanceInfoRsp::Clear() {
  if (has_activetreasureitem()) {
    if (activetreasureitem_ != NULL) activetreasureitem_->::pb::TSimpleItem::Clear();
  }
  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectTag(18)) goto parse_ActiveTreasureItem;
        break;
      }

      // optional .pb.TSimpleItem ActiveTreasureItem = 2;
      case 2: {
        if (tag == 18) {
         parse_ActiveTreasureItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activetreasureitem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceInfoRsp)
  return false;
#undef DO_
}

void TInstanceInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceInfoRsp)
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  // optional .pb.TSimpleItem ActiveTreasureItem = 2;
  if (has_activetreasureitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->activetreasureitem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceInfoRsp)
}

::google::protobuf::uint8* TInstanceInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceInfoRsp)
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  // optional .pb.TSimpleItem ActiveTreasureItem = 2;
  if (has_activetreasureitem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->activetreasureitem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceInfoRsp)
  return target;
}

int TInstanceInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .pb.TSimpleItem ActiveTreasureItem = 2;
    if (has_activetreasureitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activetreasureitem());
    }

  }
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceInfoRsp::MergeFrom(const TInstanceInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_activetreasureitem()) {
      mutable_activetreasureitem()->::pb::TSimpleItem::MergeFrom(from.activetreasureitem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceInfoRsp::CopyFrom(const TInstanceInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceInfoRsp::IsInitialized() const {

  return true;
}

void TInstanceInfoRsp::Swap(TInstanceInfoRsp* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(activetreasureitem_, other->activetreasureitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceInfoRsp_descriptor_;
  metadata.reflection = TInstanceInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceChapterInfoReq::kChapterIdFieldNumber;
#endif  // !_MSC_VER

TInstanceChapterInfoReq::TInstanceChapterInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceChapterInfoReq)
}

void TInstanceChapterInfoReq::InitAsDefaultInstance() {
}

TInstanceChapterInfoReq::TInstanceChapterInfoReq(const TInstanceChapterInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceChapterInfoReq)
}

void TInstanceChapterInfoReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceChapterInfoReq::~TInstanceChapterInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceChapterInfoReq)
  SharedDtor();
}

void TInstanceChapterInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceChapterInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceChapterInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceChapterInfoReq_descriptor_;
}

const TInstanceChapterInfoReq& TInstanceChapterInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceChapterInfoReq* TInstanceChapterInfoReq::default_instance_ = NULL;

TInstanceChapterInfoReq* TInstanceChapterInfoReq::New() const {
  return new TInstanceChapterInfoReq;
}

void TInstanceChapterInfoReq::Clear() {
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceChapterInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceChapterInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceChapterInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceChapterInfoReq)
  return false;
#undef DO_
}

void TInstanceChapterInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceChapterInfoReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceChapterInfoReq)
}

::google::protobuf::uint8* TInstanceChapterInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceChapterInfoReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceChapterInfoReq)
  return target;
}

int TInstanceChapterInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceChapterInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceChapterInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceChapterInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceChapterInfoReq::MergeFrom(const TInstanceChapterInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceChapterInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceChapterInfoReq::CopyFrom(const TInstanceChapterInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceChapterInfoReq::IsInitialized() const {

  return true;
}

void TInstanceChapterInfoReq::Swap(TInstanceChapterInfoReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceChapterInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceChapterInfoReq_descriptor_;
  metadata.reflection = TInstanceChapterInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceChapterInfoRsp::kChapterInfoFieldNumber;
#endif  // !_MSC_VER

TInstanceChapterInfoRsp::TInstanceChapterInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceChapterInfoRsp)
}

void TInstanceChapterInfoRsp::InitAsDefaultInstance() {
  chapterinfo_ = const_cast< ::pb::TInstanceChapterInfo*>(&::pb::TInstanceChapterInfo::default_instance());
}

TInstanceChapterInfoRsp::TInstanceChapterInfoRsp(const TInstanceChapterInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceChapterInfoRsp)
}

void TInstanceChapterInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  chapterinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceChapterInfoRsp::~TInstanceChapterInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceChapterInfoRsp)
  SharedDtor();
}

void TInstanceChapterInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete chapterinfo_;
  }
}

void TInstanceChapterInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceChapterInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceChapterInfoRsp_descriptor_;
}

const TInstanceChapterInfoRsp& TInstanceChapterInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceChapterInfoRsp* TInstanceChapterInfoRsp::default_instance_ = NULL;

TInstanceChapterInfoRsp* TInstanceChapterInfoRsp::New() const {
  return new TInstanceChapterInfoRsp;
}

void TInstanceChapterInfoRsp::Clear() {
  if (has_chapterinfo()) {
    if (chapterinfo_ != NULL) chapterinfo_->::pb::TInstanceChapterInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceChapterInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceChapterInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TInstanceChapterInfo ChapterInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chapterinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceChapterInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceChapterInfoRsp)
  return false;
#undef DO_
}

void TInstanceChapterInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceChapterInfoRsp)
  // optional .pb.TInstanceChapterInfo ChapterInfo = 1;
  if (has_chapterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceChapterInfoRsp)
}

::google::protobuf::uint8* TInstanceChapterInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceChapterInfoRsp)
  // optional .pb.TInstanceChapterInfo ChapterInfo = 1;
  if (has_chapterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceChapterInfoRsp)
  return target;
}

int TInstanceChapterInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TInstanceChapterInfo ChapterInfo = 1;
    if (has_chapterinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chapterinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceChapterInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceChapterInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceChapterInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceChapterInfoRsp::MergeFrom(const TInstanceChapterInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterinfo()) {
      mutable_chapterinfo()->::pb::TInstanceChapterInfo::MergeFrom(from.chapterinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceChapterInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceChapterInfoRsp::CopyFrom(const TInstanceChapterInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceChapterInfoRsp::IsInitialized() const {

  return true;
}

void TInstanceChapterInfoRsp::Swap(TInstanceChapterInfoRsp* other) {
  if (other != this) {
    std::swap(chapterinfo_, other->chapterinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceChapterInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceChapterInfoRsp_descriptor_;
  metadata.reflection = TInstanceChapterInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceArrChapterInfoReq::kChapterIdArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceArrChapterInfoReq::TInstanceArrChapterInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceArrChapterInfoReq)
}

void TInstanceArrChapterInfoReq::InitAsDefaultInstance() {
}

TInstanceArrChapterInfoReq::TInstanceArrChapterInfoReq(const TInstanceArrChapterInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceArrChapterInfoReq)
}

void TInstanceArrChapterInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceArrChapterInfoReq::~TInstanceArrChapterInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceArrChapterInfoReq)
  SharedDtor();
}

void TInstanceArrChapterInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceArrChapterInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceArrChapterInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceArrChapterInfoReq_descriptor_;
}

const TInstanceArrChapterInfoReq& TInstanceArrChapterInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceArrChapterInfoReq* TInstanceArrChapterInfoReq::default_instance_ = NULL;

TInstanceArrChapterInfoReq* TInstanceArrChapterInfoReq::New() const {
  return new TInstanceArrChapterInfoReq;
}

void TInstanceArrChapterInfoReq::Clear() {
  chapteridarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceArrChapterInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceArrChapterInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ChapterIdArray = 1;
      case 1: {
        if (tag == 8) {
         parse_ChapterIdArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_chapteridarray())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_chapteridarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ChapterIdArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceArrChapterInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceArrChapterInfoReq)
  return false;
#undef DO_
}

void TInstanceArrChapterInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceArrChapterInfoReq)
  // repeated uint32 ChapterIdArray = 1;
  for (int i = 0; i < this->chapteridarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->chapteridarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceArrChapterInfoReq)
}

::google::protobuf::uint8* TInstanceArrChapterInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceArrChapterInfoReq)
  // repeated uint32 ChapterIdArray = 1;
  for (int i = 0; i < this->chapteridarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->chapteridarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceArrChapterInfoReq)
  return target;
}

int TInstanceArrChapterInfoReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ChapterIdArray = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->chapteridarray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->chapteridarray(i));
    }
    total_size += 1 * this->chapteridarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceArrChapterInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceArrChapterInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceArrChapterInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceArrChapterInfoReq::MergeFrom(const TInstanceArrChapterInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapteridarray_.MergeFrom(from.chapteridarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceArrChapterInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceArrChapterInfoReq::CopyFrom(const TInstanceArrChapterInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceArrChapterInfoReq::IsInitialized() const {

  return true;
}

void TInstanceArrChapterInfoReq::Swap(TInstanceArrChapterInfoReq* other) {
  if (other != this) {
    chapteridarray_.Swap(&other->chapteridarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceArrChapterInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceArrChapterInfoReq_descriptor_;
  metadata.reflection = TInstanceArrChapterInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceArrChapterInfoRsp::kChapterInfoArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceArrChapterInfoRsp::TInstanceArrChapterInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceArrChapterInfoRsp)
}

void TInstanceArrChapterInfoRsp::InitAsDefaultInstance() {
}

TInstanceArrChapterInfoRsp::TInstanceArrChapterInfoRsp(const TInstanceArrChapterInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceArrChapterInfoRsp)
}

void TInstanceArrChapterInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceArrChapterInfoRsp::~TInstanceArrChapterInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceArrChapterInfoRsp)
  SharedDtor();
}

void TInstanceArrChapterInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceArrChapterInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceArrChapterInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceArrChapterInfoRsp_descriptor_;
}

const TInstanceArrChapterInfoRsp& TInstanceArrChapterInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceArrChapterInfoRsp* TInstanceArrChapterInfoRsp::default_instance_ = NULL;

TInstanceArrChapterInfoRsp* TInstanceArrChapterInfoRsp::New() const {
  return new TInstanceArrChapterInfoRsp;
}

void TInstanceArrChapterInfoRsp::Clear() {
  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceArrChapterInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceArrChapterInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceArrChapterInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceArrChapterInfoRsp)
  return false;
#undef DO_
}

void TInstanceArrChapterInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceArrChapterInfoRsp)
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceArrChapterInfoRsp)
}

::google::protobuf::uint8* TInstanceArrChapterInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceArrChapterInfoRsp)
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceArrChapterInfoRsp)
  return target;
}

int TInstanceArrChapterInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceArrChapterInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceArrChapterInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceArrChapterInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceArrChapterInfoRsp::MergeFrom(const TInstanceArrChapterInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceArrChapterInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceArrChapterInfoRsp::CopyFrom(const TInstanceArrChapterInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceArrChapterInfoRsp::IsInitialized() const {

  return true;
}

void TInstanceArrChapterInfoRsp::Swap(TInstanceArrChapterInfoRsp* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceArrChapterInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceArrChapterInfoRsp_descriptor_;
  metadata.reflection = TInstanceArrChapterInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TInstanceCloseChapterReq::TInstanceCloseChapterReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceCloseChapterReq)
}

void TInstanceCloseChapterReq::InitAsDefaultInstance() {
}

TInstanceCloseChapterReq::TInstanceCloseChapterReq(const TInstanceCloseChapterReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceCloseChapterReq)
}

void TInstanceCloseChapterReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceCloseChapterReq::~TInstanceCloseChapterReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceCloseChapterReq)
  SharedDtor();
}

void TInstanceCloseChapterReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceCloseChapterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceCloseChapterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceCloseChapterReq_descriptor_;
}

const TInstanceCloseChapterReq& TInstanceCloseChapterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceCloseChapterReq* TInstanceCloseChapterReq::default_instance_ = NULL;

TInstanceCloseChapterReq* TInstanceCloseChapterReq::New() const {
  return new TInstanceCloseChapterReq;
}

void TInstanceCloseChapterReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceCloseChapterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceCloseChapterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceCloseChapterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceCloseChapterReq)
  return false;
#undef DO_
}

void TInstanceCloseChapterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceCloseChapterReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceCloseChapterReq)
}

::google::protobuf::uint8* TInstanceCloseChapterReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceCloseChapterReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceCloseChapterReq)
  return target;
}

int TInstanceCloseChapterReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceCloseChapterReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceCloseChapterReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceCloseChapterReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceCloseChapterReq::MergeFrom(const TInstanceCloseChapterReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceCloseChapterReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceCloseChapterReq::CopyFrom(const TInstanceCloseChapterReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceCloseChapterReq::IsInitialized() const {

  return true;
}

void TInstanceCloseChapterReq::Swap(TInstanceCloseChapterReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceCloseChapterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceCloseChapterReq_descriptor_;
  metadata.reflection = TInstanceCloseChapterReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceDoBattleReq::kChapterIdFieldNumber;
const int TInstanceDoBattleReq::kStrongholdIdFieldNumber;
const int TInstanceDoBattleReq::kStrongholdBattleIdFieldNumber;
const int TInstanceDoBattleReq::kBattleCheckParamFieldNumber;
#endif  // !_MSC_VER

TInstanceDoBattleReq::TInstanceDoBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceDoBattleReq)
}

void TInstanceDoBattleReq::InitAsDefaultInstance() {
  battlecheckparam_ = const_cast< ::pb::TBattleCheckParam*>(&::pb::TBattleCheckParam::default_instance());
}

TInstanceDoBattleReq::TInstanceDoBattleReq(const TInstanceDoBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceDoBattleReq)
}

void TInstanceDoBattleReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  strongholdbattleid_ = 0u;
  battlecheckparam_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceDoBattleReq::~TInstanceDoBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceDoBattleReq)
  SharedDtor();
}

void TInstanceDoBattleReq::SharedDtor() {
  if (this != default_instance_) {
    delete battlecheckparam_;
  }
}

void TInstanceDoBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceDoBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceDoBattleReq_descriptor_;
}

const TInstanceDoBattleReq& TInstanceDoBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceDoBattleReq* TInstanceDoBattleReq::default_instance_ = NULL;

TInstanceDoBattleReq* TInstanceDoBattleReq::New() const {
  return new TInstanceDoBattleReq;
}

void TInstanceDoBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceDoBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(chapterid_, strongholdid_);
    strongholdbattleid_ = 0u;
    if (has_battlecheckparam()) {
      if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceDoBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceDoBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StrongholdBattleId;
        break;
      }

      // optional uint32 StrongholdBattleId = 3;
      case 3: {
        if (tag == 24) {
         parse_StrongholdBattleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdbattleid_)));
          set_has_strongholdbattleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BattleCheckParam;
        break;
      }

      // optional .pb.TBattleCheckParam BattleCheckParam = 4;
      case 4: {
        if (tag == 34) {
         parse_BattleCheckParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlecheckparam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceDoBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceDoBattleReq)
  return false;
#undef DO_
}

void TInstanceDoBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceDoBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional uint32 StrongholdBattleId = 3;
  if (has_strongholdbattleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strongholdbattleid(), output);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 4;
  if (has_battlecheckparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->battlecheckparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceDoBattleReq)
}

::google::protobuf::uint8* TInstanceDoBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceDoBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional uint32 StrongholdBattleId = 3;
  if (has_strongholdbattleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strongholdbattleid(), target);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 4;
  if (has_battlecheckparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->battlecheckparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceDoBattleReq)
  return target;
}

int TInstanceDoBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional uint32 StrongholdBattleId = 3;
    if (has_strongholdbattleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdbattleid());
    }

    // optional .pb.TBattleCheckParam BattleCheckParam = 4;
    if (has_battlecheckparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlecheckparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceDoBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceDoBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceDoBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceDoBattleReq::MergeFrom(const TInstanceDoBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_strongholdbattleid()) {
      set_strongholdbattleid(from.strongholdbattleid());
    }
    if (from.has_battlecheckparam()) {
      mutable_battlecheckparam()->::pb::TBattleCheckParam::MergeFrom(from.battlecheckparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceDoBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceDoBattleReq::CopyFrom(const TInstanceDoBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceDoBattleReq::IsInitialized() const {

  return true;
}

void TInstanceDoBattleReq::Swap(TInstanceDoBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(strongholdbattleid_, other->strongholdbattleid_);
    std::swap(battlecheckparam_, other->battlecheckparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceDoBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceDoBattleReq_descriptor_;
  metadata.reflection = TInstanceDoBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceDoBattleRsp::kDropArrayFieldNumber;
const int TInstanceDoBattleRsp::kBattleArgsFieldNumber;
#endif  // !_MSC_VER

TInstanceDoBattleRsp::TInstanceDoBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceDoBattleRsp)
}

void TInstanceDoBattleRsp::InitAsDefaultInstance() {
  battleargs_ = const_cast< ::pb::TBattleArgs*>(&::pb::TBattleArgs::default_instance());
}

TInstanceDoBattleRsp::TInstanceDoBattleRsp(const TInstanceDoBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceDoBattleRsp)
}

void TInstanceDoBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  battleargs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceDoBattleRsp::~TInstanceDoBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceDoBattleRsp)
  SharedDtor();
}

void TInstanceDoBattleRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleargs_;
  }
}

void TInstanceDoBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceDoBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceDoBattleRsp_descriptor_;
}

const TInstanceDoBattleRsp& TInstanceDoBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceDoBattleRsp* TInstanceDoBattleRsp::default_instance_ = NULL;

TInstanceDoBattleRsp* TInstanceDoBattleRsp::New() const {
  return new TInstanceDoBattleRsp;
}

void TInstanceDoBattleRsp::Clear() {
  if (has_battleargs()) {
    if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  }
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceDoBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceDoBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectTag(18)) goto parse_BattleArgs;
        break;
      }

      // optional .pb.TBattleArgs BattleArgs = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceDoBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceDoBattleRsp)
  return false;
#undef DO_
}

void TInstanceDoBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battleargs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceDoBattleRsp)
}

::google::protobuf::uint8* TInstanceDoBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battleargs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceDoBattleRsp)
  return target;
}

int TInstanceDoBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .pb.TBattleArgs BattleArgs = 2;
    if (has_battleargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleargs());
    }

  }
  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceDoBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceDoBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceDoBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceDoBattleRsp::MergeFrom(const TInstanceDoBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_battleargs()) {
      mutable_battleargs()->::pb::TBattleArgs::MergeFrom(from.battleargs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceDoBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceDoBattleRsp::CopyFrom(const TInstanceDoBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceDoBattleRsp::IsInitialized() const {

  if (has_battleargs()) {
    if (!this->battleargs().IsInitialized()) return false;
  }
  return true;
}

void TInstanceDoBattleRsp::Swap(TInstanceDoBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(battleargs_, other->battleargs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceDoBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceDoBattleRsp_descriptor_;
  metadata.reflection = TInstanceDoBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceRaidStrongholdReq::kChapterIdFieldNumber;
const int TInstanceRaidStrongholdReq::kStrongholdIdFieldNumber;
const int TInstanceRaidStrongholdReq::kRaidNumFieldNumber;
const int TInstanceRaidStrongholdReq::kNeedItemInfoFieldNumber;
#endif  // !_MSC_VER

TInstanceRaidStrongholdReq::TInstanceRaidStrongholdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceRaidStrongholdReq)
}

void TInstanceRaidStrongholdReq::InitAsDefaultInstance() {
  neediteminfo_ = const_cast< ::pb::TCommonReward*>(&::pb::TCommonReward::default_instance());
}

TInstanceRaidStrongholdReq::TInstanceRaidStrongholdReq(const TInstanceRaidStrongholdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceRaidStrongholdReq)
}

void TInstanceRaidStrongholdReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  raidnum_ = 0u;
  neediteminfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceRaidStrongholdReq::~TInstanceRaidStrongholdReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceRaidStrongholdReq)
  SharedDtor();
}

void TInstanceRaidStrongholdReq::SharedDtor() {
  if (this != default_instance_) {
    delete neediteminfo_;
  }
}

void TInstanceRaidStrongholdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceRaidStrongholdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceRaidStrongholdReq_descriptor_;
}

const TInstanceRaidStrongholdReq& TInstanceRaidStrongholdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceRaidStrongholdReq* TInstanceRaidStrongholdReq::default_instance_ = NULL;

TInstanceRaidStrongholdReq* TInstanceRaidStrongholdReq::New() const {
  return new TInstanceRaidStrongholdReq;
}

void TInstanceRaidStrongholdReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceRaidStrongholdReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(chapterid_, strongholdid_);
    raidnum_ = 0u;
    if (has_neediteminfo()) {
      if (neediteminfo_ != NULL) neediteminfo_->::pb::TCommonReward::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceRaidStrongholdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceRaidStrongholdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RaidNum;
        break;
      }

      // optional uint32 RaidNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RaidNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raidnum_)));
          set_has_raidnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_NeedItemInfo;
        break;
      }

      // optional .pb.TCommonReward NeedItemInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_NeedItemInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neediteminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceRaidStrongholdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceRaidStrongholdReq)
  return false;
#undef DO_
}

void TInstanceRaidStrongholdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceRaidStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional uint32 RaidNum = 3;
  if (has_raidnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->raidnum(), output);
  }

  // optional .pb.TCommonReward NeedItemInfo = 4;
  if (has_neediteminfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->neediteminfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceRaidStrongholdReq)
}

::google::protobuf::uint8* TInstanceRaidStrongholdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceRaidStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional uint32 RaidNum = 3;
  if (has_raidnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->raidnum(), target);
  }

  // optional .pb.TCommonReward NeedItemInfo = 4;
  if (has_neediteminfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->neediteminfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceRaidStrongholdReq)
  return target;
}

int TInstanceRaidStrongholdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional uint32 RaidNum = 3;
    if (has_raidnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->raidnum());
    }

    // optional .pb.TCommonReward NeedItemInfo = 4;
    if (has_neediteminfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neediteminfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceRaidStrongholdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceRaidStrongholdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceRaidStrongholdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceRaidStrongholdReq::MergeFrom(const TInstanceRaidStrongholdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_raidnum()) {
      set_raidnum(from.raidnum());
    }
    if (from.has_neediteminfo()) {
      mutable_neediteminfo()->::pb::TCommonReward::MergeFrom(from.neediteminfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceRaidStrongholdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceRaidStrongholdReq::CopyFrom(const TInstanceRaidStrongholdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceRaidStrongholdReq::IsInitialized() const {

  return true;
}

void TInstanceRaidStrongholdReq::Swap(TInstanceRaidStrongholdReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(raidnum_, other->raidnum_);
    std::swap(neediteminfo_, other->neediteminfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceRaidStrongholdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceRaidStrongholdReq_descriptor_;
  metadata.reflection = TInstanceRaidStrongholdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceRaidStrongholdSingleDrop::kNumFieldNumber;
const int TInstanceRaidStrongholdSingleDrop::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceRaidStrongholdSingleDrop::TInstanceRaidStrongholdSingleDrop()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceRaidStrongholdSingleDrop)
}

void TInstanceRaidStrongholdSingleDrop::InitAsDefaultInstance() {
}

TInstanceRaidStrongholdSingleDrop::TInstanceRaidStrongholdSingleDrop(const TInstanceRaidStrongholdSingleDrop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceRaidStrongholdSingleDrop)
}

void TInstanceRaidStrongholdSingleDrop::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceRaidStrongholdSingleDrop::~TInstanceRaidStrongholdSingleDrop() {
  // @@protoc_insertion_point(destructor:pb.TInstanceRaidStrongholdSingleDrop)
  SharedDtor();
}

void TInstanceRaidStrongholdSingleDrop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceRaidStrongholdSingleDrop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceRaidStrongholdSingleDrop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceRaidStrongholdSingleDrop_descriptor_;
}

const TInstanceRaidStrongholdSingleDrop& TInstanceRaidStrongholdSingleDrop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceRaidStrongholdSingleDrop* TInstanceRaidStrongholdSingleDrop::default_instance_ = NULL;

TInstanceRaidStrongholdSingleDrop* TInstanceRaidStrongholdSingleDrop::New() const {
  return new TInstanceRaidStrongholdSingleDrop;
}

void TInstanceRaidStrongholdSingleDrop::Clear() {
  num_ = 0u;
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceRaidStrongholdSingleDrop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceRaidStrongholdSingleDrop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        break;
      }

      // repeated .pb.TCommonReward RewardArray = 2;
      case 2: {
        if (tag == 18) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceRaidStrongholdSingleDrop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceRaidStrongholdSingleDrop)
  return false;
#undef DO_
}

void TInstanceRaidStrongholdSingleDrop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceRaidStrongholdSingleDrop)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceRaidStrongholdSingleDrop)
}

::google::protobuf::uint8* TInstanceRaidStrongholdSingleDrop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceRaidStrongholdSingleDrop)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceRaidStrongholdSingleDrop)
  return target;
}

int TInstanceRaidStrongholdSingleDrop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  // repeated .pb.TCommonReward RewardArray = 2;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceRaidStrongholdSingleDrop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceRaidStrongholdSingleDrop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceRaidStrongholdSingleDrop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceRaidStrongholdSingleDrop::MergeFrom(const TInstanceRaidStrongholdSingleDrop& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceRaidStrongholdSingleDrop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceRaidStrongholdSingleDrop::CopyFrom(const TInstanceRaidStrongholdSingleDrop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceRaidStrongholdSingleDrop::IsInitialized() const {

  return true;
}

void TInstanceRaidStrongholdSingleDrop::Swap(TInstanceRaidStrongholdSingleDrop* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceRaidStrongholdSingleDrop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceRaidStrongholdSingleDrop_descriptor_;
  metadata.reflection = TInstanceRaidStrongholdSingleDrop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceRaidStrongholdRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceRaidStrongholdRsp::TInstanceRaidStrongholdRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceRaidStrongholdRsp)
}

void TInstanceRaidStrongholdRsp::InitAsDefaultInstance() {
}

TInstanceRaidStrongholdRsp::TInstanceRaidStrongholdRsp(const TInstanceRaidStrongholdRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceRaidStrongholdRsp)
}

void TInstanceRaidStrongholdRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceRaidStrongholdRsp::~TInstanceRaidStrongholdRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceRaidStrongholdRsp)
  SharedDtor();
}

void TInstanceRaidStrongholdRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceRaidStrongholdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceRaidStrongholdRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceRaidStrongholdRsp_descriptor_;
}

const TInstanceRaidStrongholdRsp& TInstanceRaidStrongholdRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceRaidStrongholdRsp* TInstanceRaidStrongholdRsp::default_instance_ = NULL;

TInstanceRaidStrongholdRsp* TInstanceRaidStrongholdRsp::New() const {
  return new TInstanceRaidStrongholdRsp;
}

void TInstanceRaidStrongholdRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceRaidStrongholdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceRaidStrongholdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TInstanceRaidStrongholdSingleDrop DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceRaidStrongholdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceRaidStrongholdRsp)
  return false;
#undef DO_
}

void TInstanceRaidStrongholdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceRaidStrongholdRsp)
  // repeated .pb.TInstanceRaidStrongholdSingleDrop DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceRaidStrongholdRsp)
}

::google::protobuf::uint8* TInstanceRaidStrongholdRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceRaidStrongholdRsp)
  // repeated .pb.TInstanceRaidStrongholdSingleDrop DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceRaidStrongholdRsp)
  return target;
}

int TInstanceRaidStrongholdRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TInstanceRaidStrongholdSingleDrop DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceRaidStrongholdRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceRaidStrongholdRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceRaidStrongholdRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceRaidStrongholdRsp::MergeFrom(const TInstanceRaidStrongholdRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceRaidStrongholdRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceRaidStrongholdRsp::CopyFrom(const TInstanceRaidStrongholdRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceRaidStrongholdRsp::IsInitialized() const {

  return true;
}

void TInstanceRaidStrongholdRsp::Swap(TInstanceRaidStrongholdRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceRaidStrongholdRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceRaidStrongholdRsp_descriptor_;
  metadata.reflection = TInstanceRaidStrongholdRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceReportBattleReq::kChapterIdFieldNumber;
const int TInstanceReportBattleReq::kStrongholdIdFieldNumber;
const int TInstanceReportBattleReq::kStrongholdBattleIdFieldNumber;
const int TInstanceReportBattleReq::kBattleRetFieldNumber;
const int TInstanceReportBattleReq::kBattleResultBytesFieldNumber;
#endif  // !_MSC_VER

TInstanceReportBattleReq::TInstanceReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceReportBattleReq)
}

void TInstanceReportBattleReq::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TInstanceReportBattleReq::TInstanceReportBattleReq(const TInstanceReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceReportBattleReq)
}

void TInstanceReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  strongholdbattleid_ = 0u;
  battleret_ = NULL;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceReportBattleReq::~TInstanceReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceReportBattleReq)
  SharedDtor();
}

void TInstanceReportBattleReq::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TInstanceReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceReportBattleReq_descriptor_;
}

const TInstanceReportBattleReq& TInstanceReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceReportBattleReq* TInstanceReportBattleReq::default_instance_ = NULL;

TInstanceReportBattleReq* TInstanceReportBattleReq::New() const {
  return new TInstanceReportBattleReq;
}

void TInstanceReportBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceReportBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(chapterid_, strongholdid_);
    strongholdbattleid_ = 0u;
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StrongholdBattleId;
        break;
      }

      // optional uint32 StrongholdBattleId = 3;
      case 3: {
        if (tag == 24) {
         parse_StrongholdBattleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdbattleid_)));
          set_has_strongholdbattleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BattleRet;
        break;
      }

      // optional .pb.TBattleResult BattleRet = 4;
      case 4: {
        if (tag == 34) {
         parse_BattleRet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 5;
      case 5: {
        if (tag == 42) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceReportBattleReq)
  return false;
#undef DO_
}

void TInstanceReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional uint32 StrongholdBattleId = 3;
  if (has_strongholdbattleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strongholdbattleid(), output);
  }

  // optional .pb.TBattleResult BattleRet = 4;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->battleret(), output);
  }

  // optional bytes BattleResultBytes = 5;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->battleresultbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceReportBattleReq)
}

::google::protobuf::uint8* TInstanceReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional uint32 StrongholdBattleId = 3;
  if (has_strongholdbattleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strongholdbattleid(), target);
  }

  // optional .pb.TBattleResult BattleRet = 4;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->battleret(), target);
  }

  // optional bytes BattleResultBytes = 5;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->battleresultbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceReportBattleReq)
  return target;
}

int TInstanceReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional uint32 StrongholdBattleId = 3;
    if (has_strongholdbattleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdbattleid());
    }

    // optional .pb.TBattleResult BattleRet = 4;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional bytes BattleResultBytes = 5;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceReportBattleReq::MergeFrom(const TInstanceReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_strongholdbattleid()) {
      set_strongholdbattleid(from.strongholdbattleid());
    }
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceReportBattleReq::CopyFrom(const TInstanceReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceReportBattleReq::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TInstanceReportBattleReq::Swap(TInstanceReportBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(strongholdbattleid_, other->strongholdbattleid_);
    std::swap(battleret_, other->battleret_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceReportBattleReq_descriptor_;
  metadata.reflection = TInstanceReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceReportBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceReportBattleRsp::TInstanceReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceReportBattleRsp)
}

void TInstanceReportBattleRsp::InitAsDefaultInstance() {
}

TInstanceReportBattleRsp::TInstanceReportBattleRsp(const TInstanceReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceReportBattleRsp)
}

void TInstanceReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceReportBattleRsp::~TInstanceReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceReportBattleRsp)
  SharedDtor();
}

void TInstanceReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceReportBattleRsp_descriptor_;
}

const TInstanceReportBattleRsp& TInstanceReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceReportBattleRsp* TInstanceReportBattleRsp::default_instance_ = NULL;

TInstanceReportBattleRsp* TInstanceReportBattleRsp::New() const {
  return new TInstanceReportBattleRsp;
}

void TInstanceReportBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceReportBattleRsp)
  return false;
#undef DO_
}

void TInstanceReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceReportBattleRsp)
}

::google::protobuf::uint8* TInstanceReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceReportBattleRsp)
  return target;
}

int TInstanceReportBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceReportBattleRsp::MergeFrom(const TInstanceReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceReportBattleRsp::CopyFrom(const TInstanceReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceReportBattleRsp::IsInitialized() const {

  return true;
}

void TInstanceReportBattleRsp::Swap(TInstanceReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceReportBattleRsp_descriptor_;
  metadata.reflection = TInstanceReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceReceiveStarRewardReq::kChapterIdFieldNumber;
const int TInstanceReceiveStarRewardReq::kStarNumFieldNumber;
#endif  // !_MSC_VER

TInstanceReceiveStarRewardReq::TInstanceReceiveStarRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceReceiveStarRewardReq)
}

void TInstanceReceiveStarRewardReq::InitAsDefaultInstance() {
}

TInstanceReceiveStarRewardReq::TInstanceReceiveStarRewardReq(const TInstanceReceiveStarRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceReceiveStarRewardReq)
}

void TInstanceReceiveStarRewardReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  starnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceReceiveStarRewardReq::~TInstanceReceiveStarRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceReceiveStarRewardReq)
  SharedDtor();
}

void TInstanceReceiveStarRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceReceiveStarRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceReceiveStarRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceReceiveStarRewardReq_descriptor_;
}

const TInstanceReceiveStarRewardReq& TInstanceReceiveStarRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceReceiveStarRewardReq* TInstanceReceiveStarRewardReq::default_instance_ = NULL;

TInstanceReceiveStarRewardReq* TInstanceReceiveStarRewardReq::New() const {
  return new TInstanceReceiveStarRewardReq;
}

void TInstanceReceiveStarRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceReceiveStarRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, starnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceReceiveStarRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceReceiveStarRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 2;
      case 2: {
        if (tag == 16) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceReceiveStarRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceReceiveStarRewardReq)
  return false;
#undef DO_
}

void TInstanceReceiveStarRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceReceiveStarRewardReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceReceiveStarRewardReq)
}

::google::protobuf::uint8* TInstanceReceiveStarRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceReceiveStarRewardReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceReceiveStarRewardReq)
  return target;
}

int TInstanceReceiveStarRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StarNum = 2;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceReceiveStarRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceReceiveStarRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceReceiveStarRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceReceiveStarRewardReq::MergeFrom(const TInstanceReceiveStarRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceReceiveStarRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceReceiveStarRewardReq::CopyFrom(const TInstanceReceiveStarRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceReceiveStarRewardReq::IsInitialized() const {

  return true;
}

void TInstanceReceiveStarRewardReq::Swap(TInstanceReceiveStarRewardReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(starnum_, other->starnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceReceiveStarRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceReceiveStarRewardReq_descriptor_;
  metadata.reflection = TInstanceReceiveStarRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceReceiveStarRewardRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceReceiveStarRewardRsp::TInstanceReceiveStarRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceReceiveStarRewardRsp)
}

void TInstanceReceiveStarRewardRsp::InitAsDefaultInstance() {
}

TInstanceReceiveStarRewardRsp::TInstanceReceiveStarRewardRsp(const TInstanceReceiveStarRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceReceiveStarRewardRsp)
}

void TInstanceReceiveStarRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceReceiveStarRewardRsp::~TInstanceReceiveStarRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceReceiveStarRewardRsp)
  SharedDtor();
}

void TInstanceReceiveStarRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceReceiveStarRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceReceiveStarRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceReceiveStarRewardRsp_descriptor_;
}

const TInstanceReceiveStarRewardRsp& TInstanceReceiveStarRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceReceiveStarRewardRsp* TInstanceReceiveStarRewardRsp::default_instance_ = NULL;

TInstanceReceiveStarRewardRsp* TInstanceReceiveStarRewardRsp::New() const {
  return new TInstanceReceiveStarRewardRsp;
}

void TInstanceReceiveStarRewardRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceReceiveStarRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceReceiveStarRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceReceiveStarRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceReceiveStarRewardRsp)
  return false;
#undef DO_
}

void TInstanceReceiveStarRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceReceiveStarRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceReceiveStarRewardRsp)
}

::google::protobuf::uint8* TInstanceReceiveStarRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceReceiveStarRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceReceiveStarRewardRsp)
  return target;
}

int TInstanceReceiveStarRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceReceiveStarRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceReceiveStarRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceReceiveStarRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceReceiveStarRewardRsp::MergeFrom(const TInstanceReceiveStarRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceReceiveStarRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceReceiveStarRewardRsp::CopyFrom(const TInstanceReceiveStarRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceReceiveStarRewardRsp::IsInitialized() const {

  return true;
}

void TInstanceReceiveStarRewardRsp::Swap(TInstanceReceiveStarRewardRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceReceiveStarRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceReceiveStarRewardRsp_descriptor_;
  metadata.reflection = TInstanceReceiveStarRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceTriggerInstanceItemExtraArgs::kDialogIdFieldNumber;
const int TInstanceTriggerInstanceItemExtraArgs::kBattleRetFieldNumber;
const int TInstanceTriggerInstanceItemExtraArgs::kBattleResultBytesFieldNumber;
#endif  // !_MSC_VER

TInstanceTriggerInstanceItemExtraArgs::TInstanceTriggerInstanceItemExtraArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceTriggerInstanceItemExtraArgs)
}

void TInstanceTriggerInstanceItemExtraArgs::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TInstanceTriggerInstanceItemExtraArgs::TInstanceTriggerInstanceItemExtraArgs(const TInstanceTriggerInstanceItemExtraArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceTriggerInstanceItemExtraArgs)
}

void TInstanceTriggerInstanceItemExtraArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dialogid_ = 0u;
  battleret_ = NULL;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceTriggerInstanceItemExtraArgs::~TInstanceTriggerInstanceItemExtraArgs() {
  // @@protoc_insertion_point(destructor:pb.TInstanceTriggerInstanceItemExtraArgs)
  SharedDtor();
}

void TInstanceTriggerInstanceItemExtraArgs::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TInstanceTriggerInstanceItemExtraArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceTriggerInstanceItemExtraArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceTriggerInstanceItemExtraArgs_descriptor_;
}

const TInstanceTriggerInstanceItemExtraArgs& TInstanceTriggerInstanceItemExtraArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceTriggerInstanceItemExtraArgs* TInstanceTriggerInstanceItemExtraArgs::default_instance_ = NULL;

TInstanceTriggerInstanceItemExtraArgs* TInstanceTriggerInstanceItemExtraArgs::New() const {
  return new TInstanceTriggerInstanceItemExtraArgs;
}

void TInstanceTriggerInstanceItemExtraArgs::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    dialogid_ = 0u;
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceTriggerInstanceItemExtraArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceTriggerInstanceItemExtraArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DialogId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dialogid_)));
          set_has_dialogid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleRet;
        break;
      }

      // optional .pb.TBattleResult BattleRet = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleRet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceTriggerInstanceItemExtraArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceTriggerInstanceItemExtraArgs)
  return false;
#undef DO_
}

void TInstanceTriggerInstanceItemExtraArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceTriggerInstanceItemExtraArgs)
  // optional uint32 DialogId = 1;
  if (has_dialogid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dialogid(), output);
  }

  // optional .pb.TBattleResult BattleRet = 2;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battleret(), output);
  }

  // optional bytes BattleResultBytes = 3;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->battleresultbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceTriggerInstanceItemExtraArgs)
}

::google::protobuf::uint8* TInstanceTriggerInstanceItemExtraArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceTriggerInstanceItemExtraArgs)
  // optional uint32 DialogId = 1;
  if (has_dialogid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dialogid(), target);
  }

  // optional .pb.TBattleResult BattleRet = 2;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battleret(), target);
  }

  // optional bytes BattleResultBytes = 3;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->battleresultbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceTriggerInstanceItemExtraArgs)
  return target;
}

int TInstanceTriggerInstanceItemExtraArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 DialogId = 1;
    if (has_dialogid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dialogid());
    }

    // optional .pb.TBattleResult BattleRet = 2;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional bytes BattleResultBytes = 3;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceTriggerInstanceItemExtraArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceTriggerInstanceItemExtraArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceTriggerInstanceItemExtraArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceTriggerInstanceItemExtraArgs::MergeFrom(const TInstanceTriggerInstanceItemExtraArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dialogid()) {
      set_dialogid(from.dialogid());
    }
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceTriggerInstanceItemExtraArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceTriggerInstanceItemExtraArgs::CopyFrom(const TInstanceTriggerInstanceItemExtraArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceTriggerInstanceItemExtraArgs::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TInstanceTriggerInstanceItemExtraArgs::Swap(TInstanceTriggerInstanceItemExtraArgs* other) {
  if (other != this) {
    std::swap(dialogid_, other->dialogid_);
    std::swap(battleret_, other->battleret_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceTriggerInstanceItemExtraArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceTriggerInstanceItemExtraArgs_descriptor_;
  metadata.reflection = TInstanceTriggerInstanceItemExtraArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceTriggerInstanceItemReq::kChapterIdFieldNumber;
const int TInstanceTriggerInstanceItemReq::kItemNameFieldNumber;
const int TInstanceTriggerInstanceItemReq::kExtraArgFieldNumber;
#endif  // !_MSC_VER

TInstanceTriggerInstanceItemReq::TInstanceTriggerInstanceItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceTriggerInstanceItemReq)
}

void TInstanceTriggerInstanceItemReq::InitAsDefaultInstance() {
  extraarg_ = const_cast< ::pb::TInstanceTriggerInstanceItemExtraArgs*>(&::pb::TInstanceTriggerInstanceItemExtraArgs::default_instance());
}

TInstanceTriggerInstanceItemReq::TInstanceTriggerInstanceItemReq(const TInstanceTriggerInstanceItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceTriggerInstanceItemReq)
}

void TInstanceTriggerInstanceItemReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  chapterid_ = 0u;
  itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extraarg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceTriggerInstanceItemReq::~TInstanceTriggerInstanceItemReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceTriggerInstanceItemReq)
  SharedDtor();
}

void TInstanceTriggerInstanceItemReq::SharedDtor() {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemname_;
  }
  if (this != default_instance_) {
    delete extraarg_;
  }
}

void TInstanceTriggerInstanceItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceTriggerInstanceItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceTriggerInstanceItemReq_descriptor_;
}

const TInstanceTriggerInstanceItemReq& TInstanceTriggerInstanceItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceTriggerInstanceItemReq* TInstanceTriggerInstanceItemReq::default_instance_ = NULL;

TInstanceTriggerInstanceItemReq* TInstanceTriggerInstanceItemReq::New() const {
  return new TInstanceTriggerInstanceItemReq;
}

void TInstanceTriggerInstanceItemReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    chapterid_ = 0u;
    if (has_itemname()) {
      if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemname_->clear();
      }
    }
    if (has_extraarg()) {
      if (extraarg_ != NULL) extraarg_->::pb::TInstanceTriggerInstanceItemExtraArgs::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceTriggerInstanceItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceTriggerInstanceItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ItemName;
        break;
      }

      // optional string ItemName = 2;
      case 2: {
        if (tag == 18) {
         parse_ItemName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemname().data(), this->itemname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ExtraArg;
        break;
      }

      // optional .pb.TInstanceTriggerInstanceItemExtraArgs ExtraArg = 3;
      case 3: {
        if (tag == 26) {
         parse_ExtraArg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extraarg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceTriggerInstanceItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceTriggerInstanceItemReq)
  return false;
#undef DO_
}

void TInstanceTriggerInstanceItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceTriggerInstanceItemReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional string ItemName = 2;
  if (has_itemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemname().data(), this->itemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->itemname(), output);
  }

  // optional .pb.TInstanceTriggerInstanceItemExtraArgs ExtraArg = 3;
  if (has_extraarg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->extraarg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceTriggerInstanceItemReq)
}

::google::protobuf::uint8* TInstanceTriggerInstanceItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceTriggerInstanceItemReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional string ItemName = 2;
  if (has_itemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemname().data(), this->itemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->itemname(), target);
  }

  // optional .pb.TInstanceTriggerInstanceItemExtraArgs ExtraArg = 3;
  if (has_extraarg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->extraarg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceTriggerInstanceItemReq)
  return target;
}

int TInstanceTriggerInstanceItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional string ItemName = 2;
    if (has_itemname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemname());
    }

    // optional .pb.TInstanceTriggerInstanceItemExtraArgs ExtraArg = 3;
    if (has_extraarg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extraarg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceTriggerInstanceItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceTriggerInstanceItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceTriggerInstanceItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceTriggerInstanceItemReq::MergeFrom(const TInstanceTriggerInstanceItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_itemname()) {
      set_itemname(from.itemname());
    }
    if (from.has_extraarg()) {
      mutable_extraarg()->::pb::TInstanceTriggerInstanceItemExtraArgs::MergeFrom(from.extraarg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceTriggerInstanceItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceTriggerInstanceItemReq::CopyFrom(const TInstanceTriggerInstanceItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceTriggerInstanceItemReq::IsInitialized() const {

  if (has_extraarg()) {
    if (!this->extraarg().IsInitialized()) return false;
  }
  return true;
}

void TInstanceTriggerInstanceItemReq::Swap(TInstanceTriggerInstanceItemReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(itemname_, other->itemname_);
    std::swap(extraarg_, other->extraarg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceTriggerInstanceItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceTriggerInstanceItemReq_descriptor_;
  metadata.reflection = TInstanceTriggerInstanceItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceTriggerInstanceItemRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TInstanceTriggerInstanceItemRsp::TInstanceTriggerInstanceItemRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceTriggerInstanceItemRsp)
}

void TInstanceTriggerInstanceItemRsp::InitAsDefaultInstance() {
}

TInstanceTriggerInstanceItemRsp::TInstanceTriggerInstanceItemRsp(const TInstanceTriggerInstanceItemRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceTriggerInstanceItemRsp)
}

void TInstanceTriggerInstanceItemRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceTriggerInstanceItemRsp::~TInstanceTriggerInstanceItemRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceTriggerInstanceItemRsp)
  SharedDtor();
}

void TInstanceTriggerInstanceItemRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceTriggerInstanceItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceTriggerInstanceItemRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceTriggerInstanceItemRsp_descriptor_;
}

const TInstanceTriggerInstanceItemRsp& TInstanceTriggerInstanceItemRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceTriggerInstanceItemRsp* TInstanceTriggerInstanceItemRsp::default_instance_ = NULL;

TInstanceTriggerInstanceItemRsp* TInstanceTriggerInstanceItemRsp::New() const {
  return new TInstanceTriggerInstanceItemRsp;
}

void TInstanceTriggerInstanceItemRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceTriggerInstanceItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceTriggerInstanceItemRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceTriggerInstanceItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceTriggerInstanceItemRsp)
  return false;
#undef DO_
}

void TInstanceTriggerInstanceItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceTriggerInstanceItemRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceTriggerInstanceItemRsp)
}

::google::protobuf::uint8* TInstanceTriggerInstanceItemRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceTriggerInstanceItemRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceTriggerInstanceItemRsp)
  return target;
}

int TInstanceTriggerInstanceItemRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceTriggerInstanceItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceTriggerInstanceItemRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceTriggerInstanceItemRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceTriggerInstanceItemRsp::MergeFrom(const TInstanceTriggerInstanceItemRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceTriggerInstanceItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceTriggerInstanceItemRsp::CopyFrom(const TInstanceTriggerInstanceItemRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceTriggerInstanceItemRsp::IsInitialized() const {

  return true;
}

void TInstanceTriggerInstanceItemRsp::Swap(TInstanceTriggerInstanceItemRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceTriggerInstanceItemRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceTriggerInstanceItemRsp_descriptor_;
  metadata.reflection = TInstanceTriggerInstanceItemRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceProgressRankInfo::kUserInfoFieldNumber;
const int TInstanceProgressRankInfo::kStrongholdIdFieldNumber;
const int TInstanceProgressRankInfo::kPassNumFieldNumber;
const int TInstanceProgressRankInfo::kStrongholdTimeFieldNumber;
const int TInstanceProgressRankInfo::kStarNumFieldNumber;
#endif  // !_MSC_VER

TInstanceProgressRankInfo::TInstanceProgressRankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceProgressRankInfo)
}

void TInstanceProgressRankInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TInstanceProgressRankInfo::TInstanceProgressRankInfo(const TInstanceProgressRankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceProgressRankInfo)
}

void TInstanceProgressRankInfo::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  strongholdid_ = 0u;
  passnum_ = 0u;
  strongholdtime_ = GOOGLE_ULONGLONG(0);
  starnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceProgressRankInfo::~TInstanceProgressRankInfo() {
  // @@protoc_insertion_point(destructor:pb.TInstanceProgressRankInfo)
  SharedDtor();
}

void TInstanceProgressRankInfo::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TInstanceProgressRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceProgressRankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceProgressRankInfo_descriptor_;
}

const TInstanceProgressRankInfo& TInstanceProgressRankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceProgressRankInfo* TInstanceProgressRankInfo::default_instance_ = NULL;

TInstanceProgressRankInfo* TInstanceProgressRankInfo::New() const {
  return new TInstanceProgressRankInfo;
}

void TInstanceProgressRankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceProgressRankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(strongholdid_, starnum_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceProgressRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceProgressRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PassNum;
        break;
      }

      // optional uint32 PassNum = 3;
      case 3: {
        if (tag == 24) {
         parse_PassNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passnum_)));
          set_has_passnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrongholdTime;
        break;
      }

      // optional uint64 StrongholdTime = 4;
      case 4: {
        if (tag == 32) {
         parse_StrongholdTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &strongholdtime_)));
          set_has_strongholdtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 5;
      case 5: {
        if (tag == 40) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceProgressRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceProgressRankInfo)
  return false;
#undef DO_
}

void TInstanceProgressRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceProgressRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional uint32 PassNum = 3;
  if (has_passnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->passnum(), output);
  }

  // optional uint64 StrongholdTime = 4;
  if (has_strongholdtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->strongholdtime(), output);
  }

  // optional uint32 StarNum = 5;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->starnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceProgressRankInfo)
}

::google::protobuf::uint8* TInstanceProgressRankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceProgressRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional uint32 PassNum = 3;
  if (has_passnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->passnum(), target);
  }

  // optional uint64 StrongholdTime = 4;
  if (has_strongholdtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->strongholdtime(), target);
  }

  // optional uint32 StarNum = 5;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->starnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceProgressRankInfo)
  return target;
}

int TInstanceProgressRankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional uint32 PassNum = 3;
    if (has_passnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passnum());
    }

    // optional uint64 StrongholdTime = 4;
    if (has_strongholdtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->strongholdtime());
    }

    // optional uint32 StarNum = 5;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceProgressRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceProgressRankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceProgressRankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceProgressRankInfo::MergeFrom(const TInstanceProgressRankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_passnum()) {
      set_passnum(from.passnum());
    }
    if (from.has_strongholdtime()) {
      set_strongholdtime(from.strongholdtime());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceProgressRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceProgressRankInfo::CopyFrom(const TInstanceProgressRankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceProgressRankInfo::IsInitialized() const {

  return true;
}

void TInstanceProgressRankInfo::Swap(TInstanceProgressRankInfo* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(passnum_, other->passnum_);
    std::swap(strongholdtime_, other->strongholdtime_);
    std::swap(starnum_, other->starnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceProgressRankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceProgressRankInfo_descriptor_;
  metadata.reflection = TInstanceProgressRankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceGetProgressRankReq::kOffsetFieldNumber;
const int TInstanceGetProgressRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TInstanceGetProgressRankReq::TInstanceGetProgressRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceGetProgressRankReq)
}

void TInstanceGetProgressRankReq::InitAsDefaultInstance() {
}

TInstanceGetProgressRankReq::TInstanceGetProgressRankReq(const TInstanceGetProgressRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceGetProgressRankReq)
}

void TInstanceGetProgressRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceGetProgressRankReq::~TInstanceGetProgressRankReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceGetProgressRankReq)
  SharedDtor();
}

void TInstanceGetProgressRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceGetProgressRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceGetProgressRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceGetProgressRankReq_descriptor_;
}

const TInstanceGetProgressRankReq& TInstanceGetProgressRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceGetProgressRankReq* TInstanceGetProgressRankReq::default_instance_ = NULL;

TInstanceGetProgressRankReq* TInstanceGetProgressRankReq::New() const {
  return new TInstanceGetProgressRankReq;
}

void TInstanceGetProgressRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceGetProgressRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceGetProgressRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceGetProgressRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceGetProgressRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceGetProgressRankReq)
  return false;
#undef DO_
}

void TInstanceGetProgressRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceGetProgressRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceGetProgressRankReq)
}

::google::protobuf::uint8* TInstanceGetProgressRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceGetProgressRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceGetProgressRankReq)
  return target;
}

int TInstanceGetProgressRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceGetProgressRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceGetProgressRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceGetProgressRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceGetProgressRankReq::MergeFrom(const TInstanceGetProgressRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceGetProgressRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceGetProgressRankReq::CopyFrom(const TInstanceGetProgressRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceGetProgressRankReq::IsInitialized() const {

  return true;
}

void TInstanceGetProgressRankReq::Swap(TInstanceGetProgressRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceGetProgressRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceGetProgressRankReq_descriptor_;
  metadata.reflection = TInstanceGetProgressRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceGetProgressRankRsp::kRankArrFieldNumber;
const int TInstanceGetProgressRankRsp::kMyRankFieldNumber;
#endif  // !_MSC_VER

TInstanceGetProgressRankRsp::TInstanceGetProgressRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceGetProgressRankRsp)
}

void TInstanceGetProgressRankRsp::InitAsDefaultInstance() {
}

TInstanceGetProgressRankRsp::TInstanceGetProgressRankRsp(const TInstanceGetProgressRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceGetProgressRankRsp)
}

void TInstanceGetProgressRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceGetProgressRankRsp::~TInstanceGetProgressRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceGetProgressRankRsp)
  SharedDtor();
}

void TInstanceGetProgressRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceGetProgressRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceGetProgressRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceGetProgressRankRsp_descriptor_;
}

const TInstanceGetProgressRankRsp& TInstanceGetProgressRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceGetProgressRankRsp* TInstanceGetProgressRankRsp::default_instance_ = NULL;

TInstanceGetProgressRankRsp* TInstanceGetProgressRankRsp::New() const {
  return new TInstanceGetProgressRankRsp;
}

void TInstanceGetProgressRankRsp::Clear() {
  myrank_ = 0;
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceGetProgressRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceGetProgressRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TInstanceProgressRankInfo RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectTag(16)) goto parse_MyRank;
        break;
      }

      // optional int32 MyRank = 2;
      case 2: {
        if (tag == 16) {
         parse_MyRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceGetProgressRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceGetProgressRankRsp)
  return false;
#undef DO_
}

void TInstanceGetProgressRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceGetProgressRankRsp)
  // repeated .pb.TInstanceProgressRankInfo RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->myrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceGetProgressRankRsp)
}

::google::protobuf::uint8* TInstanceGetProgressRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceGetProgressRankRsp)
  // repeated .pb.TInstanceProgressRankInfo RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->myrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceGetProgressRankRsp)
  return target;
}

int TInstanceGetProgressRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 MyRank = 2;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myrank());
    }

  }
  // repeated .pb.TInstanceProgressRankInfo RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceGetProgressRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceGetProgressRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceGetProgressRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceGetProgressRankRsp::MergeFrom(const TInstanceGetProgressRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceGetProgressRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceGetProgressRankRsp::CopyFrom(const TInstanceGetProgressRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceGetProgressRankRsp::IsInitialized() const {

  return true;
}

void TInstanceGetProgressRankRsp::Swap(TInstanceGetProgressRankRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(myrank_, other->myrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceGetProgressRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceGetProgressRankRsp_descriptor_;
  metadata.reflection = TInstanceGetProgressRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceGetBattleReportReq::kStrongholdIdFieldNumber;
const int TInstanceGetBattleReportReq::kReportTypeFieldNumber;
const int TInstanceGetBattleReportReq::kCampIdFieldNumber;
#endif  // !_MSC_VER

TInstanceGetBattleReportReq::TInstanceGetBattleReportReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceGetBattleReportReq)
}

void TInstanceGetBattleReportReq::InitAsDefaultInstance() {
}

TInstanceGetBattleReportReq::TInstanceGetBattleReportReq(const TInstanceGetBattleReportReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceGetBattleReportReq)
}

void TInstanceGetBattleReportReq::SharedCtor() {
  _cached_size_ = 0;
  strongholdid_ = 0u;
  reporttype_ = 0u;
  campid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceGetBattleReportReq::~TInstanceGetBattleReportReq() {
  // @@protoc_insertion_point(destructor:pb.TInstanceGetBattleReportReq)
  SharedDtor();
}

void TInstanceGetBattleReportReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceGetBattleReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceGetBattleReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceGetBattleReportReq_descriptor_;
}

const TInstanceGetBattleReportReq& TInstanceGetBattleReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceGetBattleReportReq* TInstanceGetBattleReportReq::default_instance_ = NULL;

TInstanceGetBattleReportReq* TInstanceGetBattleReportReq::New() const {
  return new TInstanceGetBattleReportReq;
}

void TInstanceGetBattleReportReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TInstanceGetBattleReportReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(strongholdid_, campid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceGetBattleReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceGetBattleReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 StrongholdId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReportType;
        break;
      }

      // optional uint32 ReportType = 2;
      case 2: {
        if (tag == 16) {
         parse_ReportType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reporttype_)));
          set_has_reporttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CampId;
        break;
      }

      // optional uint32 CampId = 3;
      case 3: {
        if (tag == 24) {
         parse_CampId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceGetBattleReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceGetBattleReportReq)
  return false;
#undef DO_
}

void TInstanceGetBattleReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceGetBattleReportReq)
  // optional uint32 StrongholdId = 1;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->strongholdid(), output);
  }

  // optional uint32 ReportType = 2;
  if (has_reporttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reporttype(), output);
  }

  // optional uint32 CampId = 3;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceGetBattleReportReq)
}

::google::protobuf::uint8* TInstanceGetBattleReportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceGetBattleReportReq)
  // optional uint32 StrongholdId = 1;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->strongholdid(), target);
  }

  // optional uint32 ReportType = 2;
  if (has_reporttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reporttype(), target);
  }

  // optional uint32 CampId = 3;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceGetBattleReportReq)
  return target;
}

int TInstanceGetBattleReportReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 StrongholdId = 1;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional uint32 ReportType = 2;
    if (has_reporttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reporttype());
    }

    // optional uint32 CampId = 3;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceGetBattleReportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceGetBattleReportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceGetBattleReportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceGetBattleReportReq::MergeFrom(const TInstanceGetBattleReportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_reporttype()) {
      set_reporttype(from.reporttype());
    }
    if (from.has_campid()) {
      set_campid(from.campid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceGetBattleReportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceGetBattleReportReq::CopyFrom(const TInstanceGetBattleReportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceGetBattleReportReq::IsInitialized() const {

  return true;
}

void TInstanceGetBattleReportReq::Swap(TInstanceGetBattleReportReq* other) {
  if (other != this) {
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(reporttype_, other->reporttype_);
    std::swap(campid_, other->campid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceGetBattleReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceGetBattleReportReq_descriptor_;
  metadata.reflection = TInstanceGetBattleReportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceGetBattleReportRsp::kReportArrFieldNumber;
#endif  // !_MSC_VER

TInstanceGetBattleReportRsp::TInstanceGetBattleReportRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceGetBattleReportRsp)
}

void TInstanceGetBattleReportRsp::InitAsDefaultInstance() {
}

TInstanceGetBattleReportRsp::TInstanceGetBattleReportRsp(const TInstanceGetBattleReportRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceGetBattleReportRsp)
}

void TInstanceGetBattleReportRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceGetBattleReportRsp::~TInstanceGetBattleReportRsp() {
  // @@protoc_insertion_point(destructor:pb.TInstanceGetBattleReportRsp)
  SharedDtor();
}

void TInstanceGetBattleReportRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TInstanceGetBattleReportRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceGetBattleReportRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceGetBattleReportRsp_descriptor_;
}

const TInstanceGetBattleReportRsp& TInstanceGetBattleReportRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceGetBattleReportRsp* TInstanceGetBattleReportRsp::default_instance_ = NULL;

TInstanceGetBattleReportRsp* TInstanceGetBattleReportRsp::New() const {
  return new TInstanceGetBattleReportRsp;
}

void TInstanceGetBattleReportRsp::Clear() {
  reportarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceGetBattleReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceGetBattleReportRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TLocalBattleReportSimpleInfo ReportArr = 1;
      case 1: {
        if (tag == 10) {
         parse_ReportArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reportarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ReportArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceGetBattleReportRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceGetBattleReportRsp)
  return false;
#undef DO_
}

void TInstanceGetBattleReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceGetBattleReportRsp)
  // repeated .pb.TLocalBattleReportSimpleInfo ReportArr = 1;
  for (int i = 0; i < this->reportarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reportarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceGetBattleReportRsp)
}

::google::protobuf::uint8* TInstanceGetBattleReportRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceGetBattleReportRsp)
  // repeated .pb.TLocalBattleReportSimpleInfo ReportArr = 1;
  for (int i = 0; i < this->reportarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reportarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceGetBattleReportRsp)
  return target;
}

int TInstanceGetBattleReportRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TLocalBattleReportSimpleInfo ReportArr = 1;
  total_size += 1 * this->reportarr_size();
  for (int i = 0; i < this->reportarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reportarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceGetBattleReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceGetBattleReportRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceGetBattleReportRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceGetBattleReportRsp::MergeFrom(const TInstanceGetBattleReportRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  reportarr_.MergeFrom(from.reportarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceGetBattleReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceGetBattleReportRsp::CopyFrom(const TInstanceGetBattleReportRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceGetBattleReportRsp::IsInitialized() const {

  return true;
}

void TInstanceGetBattleReportRsp::Swap(TInstanceGetBattleReportRsp* other) {
  if (other != this) {
    reportarr_.Swap(&other->reportarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceGetBattleReportRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceGetBattleReportRsp_descriptor_;
  metadata.reflection = TInstanceGetBattleReportRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TInstanceInfoNotify::kChapterInfoArrayFieldNumber;
const int TInstanceInfoNotify::kActiveTreasureItemFieldNumber;
#endif  // !_MSC_VER

TInstanceInfoNotify::TInstanceInfoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TInstanceInfoNotify)
}

void TInstanceInfoNotify::InitAsDefaultInstance() {
  activetreasureitem_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

TInstanceInfoNotify::TInstanceInfoNotify(const TInstanceInfoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TInstanceInfoNotify)
}

void TInstanceInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  activetreasureitem_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TInstanceInfoNotify::~TInstanceInfoNotify() {
  // @@protoc_insertion_point(destructor:pb.TInstanceInfoNotify)
  SharedDtor();
}

void TInstanceInfoNotify::SharedDtor() {
  if (this != default_instance_) {
    delete activetreasureitem_;
  }
}

void TInstanceInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInstanceInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TInstanceInfoNotify_descriptor_;
}

const TInstanceInfoNotify& TInstanceInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fInstance_2eproto();
  return *default_instance_;
}

TInstanceInfoNotify* TInstanceInfoNotify::default_instance_ = NULL;

TInstanceInfoNotify* TInstanceInfoNotify::New() const {
  return new TInstanceInfoNotify;
}

void TInstanceInfoNotify::Clear() {
  if (has_activetreasureitem()) {
    if (activetreasureitem_ != NULL) activetreasureitem_->::pb::TSimpleItem::Clear();
  }
  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TInstanceInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TInstanceInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectTag(18)) goto parse_ActiveTreasureItem;
        break;
      }

      // optional .pb.TSimpleItem ActiveTreasureItem = 2;
      case 2: {
        if (tag == 18) {
         parse_ActiveTreasureItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activetreasureitem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TInstanceInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TInstanceInfoNotify)
  return false;
#undef DO_
}

void TInstanceInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TInstanceInfoNotify)
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  // optional .pb.TSimpleItem ActiveTreasureItem = 2;
  if (has_activetreasureitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->activetreasureitem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TInstanceInfoNotify)
}

::google::protobuf::uint8* TInstanceInfoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TInstanceInfoNotify)
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  // optional .pb.TSimpleItem ActiveTreasureItem = 2;
  if (has_activetreasureitem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->activetreasureitem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TInstanceInfoNotify)
  return target;
}

int TInstanceInfoNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .pb.TSimpleItem ActiveTreasureItem = 2;
    if (has_activetreasureitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activetreasureitem());
    }

  }
  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInstanceInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TInstanceInfoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TInstanceInfoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TInstanceInfoNotify::MergeFrom(const TInstanceInfoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_activetreasureitem()) {
      mutable_activetreasureitem()->::pb::TSimpleItem::MergeFrom(from.activetreasureitem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TInstanceInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInstanceInfoNotify::CopyFrom(const TInstanceInfoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInstanceInfoNotify::IsInitialized() const {

  return true;
}

void TInstanceInfoNotify::Swap(TInstanceInfoNotify* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(activetreasureitem_, other->activetreasureitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TInstanceInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TInstanceInfoNotify_descriptor_;
  metadata.reflection = TInstanceInfoNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
