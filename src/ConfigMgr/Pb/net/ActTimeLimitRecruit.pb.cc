// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActTimeLimitRecruit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActTimeLimitRecruit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActTimeLimitRecruitHeroRecInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitHeroRecInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitDoRecruitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitDoRecruitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitDoRecruitRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitDoRecruitRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitReceiveRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitReceiveRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitGoodsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitGoodsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitGetGoodsInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitGetGoodsInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitBuyGoodsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitBuyGoodsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitSendGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitSendGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitReceiveFriendshipRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitReceiveFriendshipRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActTimeLimitRecruitBuyGoodsNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActTimeLimitRecruitBuyGoodsNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto() {
  protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActTimeLimitRecruit.proto");
  GOOGLE_CHECK(file != NULL);
  TActTimeLimitRecruitHeroRecInfo_descriptor_ = file->message_type(0);
  static const int TActTimeLimitRecruitHeroRecInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, recnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, rewardidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, friendshipvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, friendshiprewardidarr_),
  };
  TActTimeLimitRecruitHeroRecInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitHeroRecInfo_descriptor_,
      TActTimeLimitRecruitHeroRecInfo::default_instance_,
      TActTimeLimitRecruitHeroRecInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitHeroRecInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitHeroRecInfo));
  TActTimeLimitRecruitGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TActTimeLimitRecruitGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGetInfoRsp, herorecinfoarr_),
  };
  TActTimeLimitRecruitGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitGetInfoRsp_descriptor_,
      TActTimeLimitRecruitGetInfoRsp::default_instance_,
      TActTimeLimitRecruitGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitGetInfoRsp));
  TActTimeLimitRecruitDoRecruitReq_descriptor_ = file->message_type(2);
  static const int TActTimeLimitRecruitDoRecruitReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitReq, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitReq, recnum_),
  };
  TActTimeLimitRecruitDoRecruitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitDoRecruitReq_descriptor_,
      TActTimeLimitRecruitDoRecruitReq::default_instance_,
      TActTimeLimitRecruitDoRecruitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitDoRecruitReq));
  TActTimeLimitRecruitDoRecruitRsp_descriptor_ = file->message_type(3);
  static const int TActTimeLimitRecruitDoRecruitRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitRsp, rewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitRsp, artifactleftnum_),
  };
  TActTimeLimitRecruitDoRecruitRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitDoRecruitRsp_descriptor_,
      TActTimeLimitRecruitDoRecruitRsp::default_instance_,
      TActTimeLimitRecruitDoRecruitRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitDoRecruitRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitDoRecruitRsp));
  TActTimeLimitRecruitReward_descriptor_ = file->message_type(4);
  static const int TActTimeLimitRecruitReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReward, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReward, critratio_),
  };
  TActTimeLimitRecruitReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitReward_descriptor_,
      TActTimeLimitRecruitReward::default_instance_,
      TActTimeLimitRecruitReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitReward));
  TActTimeLimitRecruitReceiveRewardReq_descriptor_ = file->message_type(5);
  static const int TActTimeLimitRecruitReceiveRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveRewardReq, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveRewardReq, rewardindex_),
  };
  TActTimeLimitRecruitReceiveRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitReceiveRewardReq_descriptor_,
      TActTimeLimitRecruitReceiveRewardReq::default_instance_,
      TActTimeLimitRecruitReceiveRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitReceiveRewardReq));
  TActTimeLimitRecruitGoodsInfo_descriptor_ = file->message_type(6);
  static const int TActTimeLimitRecruitGoodsInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGoodsInfo, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGoodsInfo, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGoodsInfo, boughtnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGoodsInfo, boughttime_),
  };
  TActTimeLimitRecruitGoodsInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitGoodsInfo_descriptor_,
      TActTimeLimitRecruitGoodsInfo::default_instance_,
      TActTimeLimitRecruitGoodsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGoodsInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGoodsInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitGoodsInfo));
  TActTimeLimitRecruitGetGoodsInfoRsp_descriptor_ = file->message_type(7);
  static const int TActTimeLimitRecruitGetGoodsInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGetGoodsInfoRsp, goodsbuyarr_),
  };
  TActTimeLimitRecruitGetGoodsInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitGetGoodsInfoRsp_descriptor_,
      TActTimeLimitRecruitGetGoodsInfoRsp::default_instance_,
      TActTimeLimitRecruitGetGoodsInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGetGoodsInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitGetGoodsInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitGetGoodsInfoRsp));
  TActTimeLimitRecruitBuyGoodsReq_descriptor_ = file->message_type(8);
  static const int TActTimeLimitRecruitBuyGoodsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsReq, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsReq, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsReq, buynum_),
  };
  TActTimeLimitRecruitBuyGoodsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitBuyGoodsReq_descriptor_,
      TActTimeLimitRecruitBuyGoodsReq::default_instance_,
      TActTimeLimitRecruitBuyGoodsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitBuyGoodsReq));
  TActTimeLimitRecruitSendGiftReq_descriptor_ = file->message_type(9);
  static const int TActTimeLimitRecruitSendGiftReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitSendGiftReq, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitSendGiftReq, itemarr_),
  };
  TActTimeLimitRecruitSendGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitSendGiftReq_descriptor_,
      TActTimeLimitRecruitSendGiftReq::default_instance_,
      TActTimeLimitRecruitSendGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitSendGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitSendGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitSendGiftReq));
  TActTimeLimitRecruitReceiveFriendshipRewardReq_descriptor_ = file->message_type(10);
  static const int TActTimeLimitRecruitReceiveFriendshipRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveFriendshipRewardReq, recid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveFriendshipRewardReq, rewardindex_),
  };
  TActTimeLimitRecruitReceiveFriendshipRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitReceiveFriendshipRewardReq_descriptor_,
      TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance_,
      TActTimeLimitRecruitReceiveFriendshipRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveFriendshipRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitReceiveFriendshipRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitReceiveFriendshipRewardReq));
  TActTimeLimitRecruitBuyGoodsNotify_descriptor_ = file->message_type(11);
  static const int TActTimeLimitRecruitBuyGoodsNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsNotify, goodsbuyarr_),
  };
  TActTimeLimitRecruitBuyGoodsNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActTimeLimitRecruitBuyGoodsNotify_descriptor_,
      TActTimeLimitRecruitBuyGoodsNotify::default_instance_,
      TActTimeLimitRecruitBuyGoodsNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActTimeLimitRecruitBuyGoodsNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActTimeLimitRecruitBuyGoodsNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActTimeLimitRecruit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitHeroRecInfo_descriptor_, &TActTimeLimitRecruitHeroRecInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitGetInfoRsp_descriptor_, &TActTimeLimitRecruitGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitDoRecruitReq_descriptor_, &TActTimeLimitRecruitDoRecruitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitDoRecruitRsp_descriptor_, &TActTimeLimitRecruitDoRecruitRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitReward_descriptor_, &TActTimeLimitRecruitReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitReceiveRewardReq_descriptor_, &TActTimeLimitRecruitReceiveRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitGoodsInfo_descriptor_, &TActTimeLimitRecruitGoodsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitGetGoodsInfoRsp_descriptor_, &TActTimeLimitRecruitGetGoodsInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitBuyGoodsReq_descriptor_, &TActTimeLimitRecruitBuyGoodsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitSendGiftReq_descriptor_, &TActTimeLimitRecruitSendGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitReceiveFriendshipRewardReq_descriptor_, &TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActTimeLimitRecruitBuyGoodsNotify_descriptor_, &TActTimeLimitRecruitBuyGoodsNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto() {
  delete TActTimeLimitRecruitHeroRecInfo::default_instance_;
  delete TActTimeLimitRecruitHeroRecInfo_reflection_;
  delete TActTimeLimitRecruitGetInfoRsp::default_instance_;
  delete TActTimeLimitRecruitGetInfoRsp_reflection_;
  delete TActTimeLimitRecruitDoRecruitReq::default_instance_;
  delete TActTimeLimitRecruitDoRecruitReq_reflection_;
  delete TActTimeLimitRecruitDoRecruitRsp::default_instance_;
  delete TActTimeLimitRecruitDoRecruitRsp_reflection_;
  delete TActTimeLimitRecruitReward::default_instance_;
  delete TActTimeLimitRecruitReward_reflection_;
  delete TActTimeLimitRecruitReceiveRewardReq::default_instance_;
  delete TActTimeLimitRecruitReceiveRewardReq_reflection_;
  delete TActTimeLimitRecruitGoodsInfo::default_instance_;
  delete TActTimeLimitRecruitGoodsInfo_reflection_;
  delete TActTimeLimitRecruitGetGoodsInfoRsp::default_instance_;
  delete TActTimeLimitRecruitGetGoodsInfoRsp_reflection_;
  delete TActTimeLimitRecruitBuyGoodsReq::default_instance_;
  delete TActTimeLimitRecruitBuyGoodsReq_reflection_;
  delete TActTimeLimitRecruitSendGiftReq::default_instance_;
  delete TActTimeLimitRecruitSendGiftReq_reflection_;
  delete TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance_;
  delete TActTimeLimitRecruitReceiveFriendshipRewardReq_reflection_;
  delete TActTimeLimitRecruitBuyGoodsNotify::default_instance_;
  delete TActTimeLimitRecruitBuyGoodsNotify_reflection_;
}

void protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035net/ActTimeLimitRecruit.proto\022\002pb\032\026net"
    "/CommonReward.proto\032\020net/Common.proto\"\215\001"
    "\n\037TActTimeLimitRecruitHeroRecInfo\022\r\n\005Rec"
    "Id\030\001 \001(\r\022\016\n\006RecNum\030\002 \001(\r\022\023\n\013RewardIdArr\030"
    "\003 \003(\r\022\027\n\017FriendshipValue\030\004 \001(\r\022\035\n\025Friend"
    "shipRewardIdArr\030\005 \003(\r\"]\n\036TActTimeLimitRe"
    "cruitGetInfoRsp\022;\n\016HeroRecInfoArr\030\001 \003(\0132"
    "#.pb.TActTimeLimitRecruitHeroRecInfo\"A\n "
    "TActTimeLimitRecruitDoRecruitReq\022\r\n\005RecI"
    "d\030\001 \001(\r\022\016\n\006RecNum\030\002 \001(\r\"n\n TActTimeLimit"
    "RecruitDoRecruitRsp\0221\n\tRewardArr\030\001 \003(\0132\036"
    ".pb.TActTimeLimitRecruitReward\022\027\n\017Artifa"
    "ctLeftNum\030\002 \001(\r\"R\n\032TActTimeLimitRecruitR"
    "eward\022!\n\006Reward\030\001 \001(\0132\021.pb.TCommonReward"
    "\022\021\n\tCritRatio\030\002 \001(\r\"J\n$TActTimeLimitRecr"
    "uitReceiveRewardReq\022\r\n\005RecId\030\001 \001(\r\022\023\n\013Re"
    "wardIndex\030\002 \001(\r\"f\n\035TActTimeLimitRecruitG"
    "oodsInfo\022\r\n\005RecId\030\001 \001(\r\022\017\n\007GoodsId\030\002 \001(\r"
    "\022\021\n\tBoughtNum\030\003 \001(\r\022\022\n\nBoughtTime\030\004 \001(\004\""
    "]\n#TActTimeLimitRecruitGetGoodsInfoRsp\0226"
    "\n\013GoodsBuyArr\030\001 \003(\0132!.pb.TActTimeLimitRe"
    "cruitGoodsInfo\"Q\n\037TActTimeLimitRecruitBu"
    "yGoodsReq\022\r\n\005RecId\030\001 \001(\r\022\017\n\007GoodsId\030\002 \001("
    "\r\022\016\n\006BuyNum\030\003 \001(\r\"R\n\037TActTimeLimitRecrui"
    "tSendGiftReq\022\r\n\005RecId\030\001 \001(\r\022 \n\007ItemArr\030\002"
    " \003(\0132\017.pb.TSimpleItem\"T\n.TActTimeLimitRe"
    "cruitReceiveFriendshipRewardReq\022\r\n\005RecId"
    "\030\001 \001(\r\022\023\n\013RewardIndex\030\002 \001(\r\"\\\n\"TActTimeL"
    "imitRecruitBuyGoodsNotify\0226\n\013GoodsBuyArr"
    "\030\001 \003(\0132!.pb.TActTimeLimitRecruitGoodsInf"
    "o", 1201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActTimeLimitRecruit.proto", &protobuf_RegisterTypes);
  TActTimeLimitRecruitHeroRecInfo::default_instance_ = new TActTimeLimitRecruitHeroRecInfo();
  TActTimeLimitRecruitGetInfoRsp::default_instance_ = new TActTimeLimitRecruitGetInfoRsp();
  TActTimeLimitRecruitDoRecruitReq::default_instance_ = new TActTimeLimitRecruitDoRecruitReq();
  TActTimeLimitRecruitDoRecruitRsp::default_instance_ = new TActTimeLimitRecruitDoRecruitRsp();
  TActTimeLimitRecruitReward::default_instance_ = new TActTimeLimitRecruitReward();
  TActTimeLimitRecruitReceiveRewardReq::default_instance_ = new TActTimeLimitRecruitReceiveRewardReq();
  TActTimeLimitRecruitGoodsInfo::default_instance_ = new TActTimeLimitRecruitGoodsInfo();
  TActTimeLimitRecruitGetGoodsInfoRsp::default_instance_ = new TActTimeLimitRecruitGetGoodsInfoRsp();
  TActTimeLimitRecruitBuyGoodsReq::default_instance_ = new TActTimeLimitRecruitBuyGoodsReq();
  TActTimeLimitRecruitSendGiftReq::default_instance_ = new TActTimeLimitRecruitSendGiftReq();
  TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance_ = new TActTimeLimitRecruitReceiveFriendshipRewardReq();
  TActTimeLimitRecruitBuyGoodsNotify::default_instance_ = new TActTimeLimitRecruitBuyGoodsNotify();
  TActTimeLimitRecruitHeroRecInfo::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitDoRecruitReq::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitDoRecruitRsp::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitReward::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitReceiveRewardReq::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitGoodsInfo::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitGetGoodsInfoRsp::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitBuyGoodsReq::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitSendGiftReq::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance_->InitAsDefaultInstance();
  TActTimeLimitRecruitBuyGoodsNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActTimeLimitRecruit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActTimeLimitRecruit_2eproto {
  StaticDescriptorInitializer_net_2fActTimeLimitRecruit_2eproto() {
    protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  }
} static_descriptor_initializer_net_2fActTimeLimitRecruit_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitHeroRecInfo::kRecIdFieldNumber;
const int TActTimeLimitRecruitHeroRecInfo::kRecNumFieldNumber;
const int TActTimeLimitRecruitHeroRecInfo::kRewardIdArrFieldNumber;
const int TActTimeLimitRecruitHeroRecInfo::kFriendshipValueFieldNumber;
const int TActTimeLimitRecruitHeroRecInfo::kFriendshipRewardIdArrFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitHeroRecInfo::TActTimeLimitRecruitHeroRecInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitHeroRecInfo)
}

void TActTimeLimitRecruitHeroRecInfo::InitAsDefaultInstance() {
}

TActTimeLimitRecruitHeroRecInfo::TActTimeLimitRecruitHeroRecInfo(const TActTimeLimitRecruitHeroRecInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitHeroRecInfo)
}

void TActTimeLimitRecruitHeroRecInfo::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  recnum_ = 0u;
  friendshipvalue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitHeroRecInfo::~TActTimeLimitRecruitHeroRecInfo() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitHeroRecInfo)
  SharedDtor();
}

void TActTimeLimitRecruitHeroRecInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitHeroRecInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitHeroRecInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitHeroRecInfo_descriptor_;
}

const TActTimeLimitRecruitHeroRecInfo& TActTimeLimitRecruitHeroRecInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitHeroRecInfo* TActTimeLimitRecruitHeroRecInfo::default_instance_ = NULL;

TActTimeLimitRecruitHeroRecInfo* TActTimeLimitRecruitHeroRecInfo::New() const {
  return new TActTimeLimitRecruitHeroRecInfo;
}

void TActTimeLimitRecruitHeroRecInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTimeLimitRecruitHeroRecInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(recid_, recnum_);
    friendshipvalue_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  rewardidarr_.Clear();
  friendshiprewardidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitHeroRecInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitHeroRecInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecNum;
        break;
      }

      // optional uint32 RecNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RecNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recnum_)));
          set_has_recnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        break;
      }

      // repeated uint32 RewardIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_RewardIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_rewardidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIdArr;
        if (input->ExpectTag(32)) goto parse_FriendshipValue;
        break;
      }

      // optional uint32 FriendshipValue = 4;
      case 4: {
        if (tag == 32) {
         parse_FriendshipValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendshipvalue_)));
          set_has_friendshipvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_FriendshipRewardIdArr;
        break;
      }

      // repeated uint32 FriendshipRewardIdArr = 5;
      case 5: {
        if (tag == 40) {
         parse_FriendshipRewardIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_friendshiprewardidarr())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friendshiprewardidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_FriendshipRewardIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitHeroRecInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitHeroRecInfo)
  return false;
#undef DO_
}

void TActTimeLimitRecruitHeroRecInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitHeroRecInfo)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recnum(), output);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->rewardidarr(i), output);
  }

  // optional uint32 FriendshipValue = 4;
  if (has_friendshipvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->friendshipvalue(), output);
  }

  // repeated uint32 FriendshipRewardIdArr = 5;
  for (int i = 0; i < this->friendshiprewardidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->friendshiprewardidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitHeroRecInfo)
}

::google::protobuf::uint8* TActTimeLimitRecruitHeroRecInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitHeroRecInfo)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recnum(), target);
  }

  // repeated uint32 RewardIdArr = 3;
  for (int i = 0; i < this->rewardidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->rewardidarr(i), target);
  }

  // optional uint32 FriendshipValue = 4;
  if (has_friendshipvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->friendshipvalue(), target);
  }

  // repeated uint32 FriendshipRewardIdArr = 5;
  for (int i = 0; i < this->friendshiprewardidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->friendshiprewardidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitHeroRecInfo)
  return target;
}

int TActTimeLimitRecruitHeroRecInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 RecNum = 2;
    if (has_recnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recnum());
    }

    // optional uint32 FriendshipValue = 4;
    if (has_friendshipvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendshipvalue());
    }

  }
  // repeated uint32 RewardIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardidarr(i));
    }
    total_size += 1 * this->rewardidarr_size() + data_size;
  }

  // repeated uint32 FriendshipRewardIdArr = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->friendshiprewardidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->friendshiprewardidarr(i));
    }
    total_size += 1 * this->friendshiprewardidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitHeroRecInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitHeroRecInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitHeroRecInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitHeroRecInfo::MergeFrom(const TActTimeLimitRecruitHeroRecInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardidarr_.MergeFrom(from.rewardidarr_);
  friendshiprewardidarr_.MergeFrom(from.friendshiprewardidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_recnum()) {
      set_recnum(from.recnum());
    }
    if (from.has_friendshipvalue()) {
      set_friendshipvalue(from.friendshipvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitHeroRecInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitHeroRecInfo::CopyFrom(const TActTimeLimitRecruitHeroRecInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitHeroRecInfo::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitHeroRecInfo::Swap(TActTimeLimitRecruitHeroRecInfo* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(recnum_, other->recnum_);
    rewardidarr_.Swap(&other->rewardidarr_);
    std::swap(friendshipvalue_, other->friendshipvalue_);
    friendshiprewardidarr_.Swap(&other->friendshiprewardidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitHeroRecInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitHeroRecInfo_descriptor_;
  metadata.reflection = TActTimeLimitRecruitHeroRecInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitGetInfoRsp::kHeroRecInfoArrFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitGetInfoRsp::TActTimeLimitRecruitGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitGetInfoRsp)
}

void TActTimeLimitRecruitGetInfoRsp::InitAsDefaultInstance() {
}

TActTimeLimitRecruitGetInfoRsp::TActTimeLimitRecruitGetInfoRsp(const TActTimeLimitRecruitGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitGetInfoRsp)
}

void TActTimeLimitRecruitGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitGetInfoRsp::~TActTimeLimitRecruitGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitGetInfoRsp)
  SharedDtor();
}

void TActTimeLimitRecruitGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitGetInfoRsp_descriptor_;
}

const TActTimeLimitRecruitGetInfoRsp& TActTimeLimitRecruitGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitGetInfoRsp* TActTimeLimitRecruitGetInfoRsp::default_instance_ = NULL;

TActTimeLimitRecruitGetInfoRsp* TActTimeLimitRecruitGetInfoRsp::New() const {
  return new TActTimeLimitRecruitGetInfoRsp;
}

void TActTimeLimitRecruitGetInfoRsp::Clear() {
  herorecinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActTimeLimitRecruitHeroRecInfo HeroRecInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroRecInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herorecinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroRecInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitGetInfoRsp)
  return false;
#undef DO_
}

void TActTimeLimitRecruitGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitGetInfoRsp)
  // repeated .pb.TActTimeLimitRecruitHeroRecInfo HeroRecInfoArr = 1;
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herorecinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitGetInfoRsp)
}

::google::protobuf::uint8* TActTimeLimitRecruitGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitGetInfoRsp)
  // repeated .pb.TActTimeLimitRecruitHeroRecInfo HeroRecInfoArr = 1;
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herorecinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitGetInfoRsp)
  return target;
}

int TActTimeLimitRecruitGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActTimeLimitRecruitHeroRecInfo HeroRecInfoArr = 1;
  total_size += 1 * this->herorecinfoarr_size();
  for (int i = 0; i < this->herorecinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herorecinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitGetInfoRsp::MergeFrom(const TActTimeLimitRecruitGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  herorecinfoarr_.MergeFrom(from.herorecinfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitGetInfoRsp::CopyFrom(const TActTimeLimitRecruitGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitGetInfoRsp::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitGetInfoRsp::Swap(TActTimeLimitRecruitGetInfoRsp* other) {
  if (other != this) {
    herorecinfoarr_.Swap(&other->herorecinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitGetInfoRsp_descriptor_;
  metadata.reflection = TActTimeLimitRecruitGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitDoRecruitReq::kRecIdFieldNumber;
const int TActTimeLimitRecruitDoRecruitReq::kRecNumFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitDoRecruitReq::TActTimeLimitRecruitDoRecruitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitDoRecruitReq)
}

void TActTimeLimitRecruitDoRecruitReq::InitAsDefaultInstance() {
}

TActTimeLimitRecruitDoRecruitReq::TActTimeLimitRecruitDoRecruitReq(const TActTimeLimitRecruitDoRecruitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitDoRecruitReq)
}

void TActTimeLimitRecruitDoRecruitReq::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  recnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitDoRecruitReq::~TActTimeLimitRecruitDoRecruitReq() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitDoRecruitReq)
  SharedDtor();
}

void TActTimeLimitRecruitDoRecruitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitDoRecruitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitDoRecruitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitDoRecruitReq_descriptor_;
}

const TActTimeLimitRecruitDoRecruitReq& TActTimeLimitRecruitDoRecruitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitDoRecruitReq* TActTimeLimitRecruitDoRecruitReq::default_instance_ = NULL;

TActTimeLimitRecruitDoRecruitReq* TActTimeLimitRecruitDoRecruitReq::New() const {
  return new TActTimeLimitRecruitDoRecruitReq;
}

void TActTimeLimitRecruitDoRecruitReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTimeLimitRecruitDoRecruitReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(recid_, recnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitDoRecruitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitDoRecruitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecNum;
        break;
      }

      // optional uint32 RecNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RecNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recnum_)));
          set_has_recnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitDoRecruitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitDoRecruitReq)
  return false;
#undef DO_
}

void TActTimeLimitRecruitDoRecruitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitDoRecruitReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitDoRecruitReq)
}

::google::protobuf::uint8* TActTimeLimitRecruitDoRecruitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitDoRecruitReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 RecNum = 2;
  if (has_recnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitDoRecruitReq)
  return target;
}

int TActTimeLimitRecruitDoRecruitReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 RecNum = 2;
    if (has_recnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitDoRecruitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitDoRecruitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitDoRecruitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitDoRecruitReq::MergeFrom(const TActTimeLimitRecruitDoRecruitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_recnum()) {
      set_recnum(from.recnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitDoRecruitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitDoRecruitReq::CopyFrom(const TActTimeLimitRecruitDoRecruitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitDoRecruitReq::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitDoRecruitReq::Swap(TActTimeLimitRecruitDoRecruitReq* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(recnum_, other->recnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitDoRecruitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitDoRecruitReq_descriptor_;
  metadata.reflection = TActTimeLimitRecruitDoRecruitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitDoRecruitRsp::kRewardArrFieldNumber;
const int TActTimeLimitRecruitDoRecruitRsp::kArtifactLeftNumFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitDoRecruitRsp::TActTimeLimitRecruitDoRecruitRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitDoRecruitRsp)
}

void TActTimeLimitRecruitDoRecruitRsp::InitAsDefaultInstance() {
}

TActTimeLimitRecruitDoRecruitRsp::TActTimeLimitRecruitDoRecruitRsp(const TActTimeLimitRecruitDoRecruitRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitDoRecruitRsp)
}

void TActTimeLimitRecruitDoRecruitRsp::SharedCtor() {
  _cached_size_ = 0;
  artifactleftnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitDoRecruitRsp::~TActTimeLimitRecruitDoRecruitRsp() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitDoRecruitRsp)
  SharedDtor();
}

void TActTimeLimitRecruitDoRecruitRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitDoRecruitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitDoRecruitRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitDoRecruitRsp_descriptor_;
}

const TActTimeLimitRecruitDoRecruitRsp& TActTimeLimitRecruitDoRecruitRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitDoRecruitRsp* TActTimeLimitRecruitDoRecruitRsp::default_instance_ = NULL;

TActTimeLimitRecruitDoRecruitRsp* TActTimeLimitRecruitDoRecruitRsp::New() const {
  return new TActTimeLimitRecruitDoRecruitRsp;
}

void TActTimeLimitRecruitDoRecruitRsp::Clear() {
  artifactleftnum_ = 0u;
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitDoRecruitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitDoRecruitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActTimeLimitRecruitReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectTag(16)) goto parse_ArtifactLeftNum;
        break;
      }

      // optional uint32 ArtifactLeftNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ArtifactLeftNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactleftnum_)));
          set_has_artifactleftnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitDoRecruitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitDoRecruitRsp)
  return false;
#undef DO_
}

void TActTimeLimitRecruitDoRecruitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitDoRecruitRsp)
  // repeated .pb.TActTimeLimitRecruitReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  // optional uint32 ArtifactLeftNum = 2;
  if (has_artifactleftnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->artifactleftnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitDoRecruitRsp)
}

::google::protobuf::uint8* TActTimeLimitRecruitDoRecruitRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitDoRecruitRsp)
  // repeated .pb.TActTimeLimitRecruitReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  // optional uint32 ArtifactLeftNum = 2;
  if (has_artifactleftnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->artifactleftnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitDoRecruitRsp)
  return target;
}

int TActTimeLimitRecruitDoRecruitRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ArtifactLeftNum = 2;
    if (has_artifactleftnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactleftnum());
    }

  }
  // repeated .pb.TActTimeLimitRecruitReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitDoRecruitRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitDoRecruitRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitDoRecruitRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitDoRecruitRsp::MergeFrom(const TActTimeLimitRecruitDoRecruitRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_artifactleftnum()) {
      set_artifactleftnum(from.artifactleftnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitDoRecruitRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitDoRecruitRsp::CopyFrom(const TActTimeLimitRecruitDoRecruitRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitDoRecruitRsp::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitDoRecruitRsp::Swap(TActTimeLimitRecruitDoRecruitRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(artifactleftnum_, other->artifactleftnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitDoRecruitRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitDoRecruitRsp_descriptor_;
  metadata.reflection = TActTimeLimitRecruitDoRecruitRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitReward::kRewardFieldNumber;
const int TActTimeLimitRecruitReward::kCritRatioFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitReward::TActTimeLimitRecruitReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitReward)
}

void TActTimeLimitRecruitReward::InitAsDefaultInstance() {
  reward_ = const_cast< ::pb::TCommonReward*>(&::pb::TCommonReward::default_instance());
}

TActTimeLimitRecruitReward::TActTimeLimitRecruitReward(const TActTimeLimitRecruitReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitReward)
}

void TActTimeLimitRecruitReward::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitReward::~TActTimeLimitRecruitReward() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitReward)
  SharedDtor();
}

void TActTimeLimitRecruitReward::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void TActTimeLimitRecruitReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitReward_descriptor_;
}

const TActTimeLimitRecruitReward& TActTimeLimitRecruitReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitReward* TActTimeLimitRecruitReward::default_instance_ = NULL;

TActTimeLimitRecruitReward* TActTimeLimitRecruitReward::New() const {
  return new TActTimeLimitRecruitReward;
}

void TActTimeLimitRecruitReward::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::pb::TCommonReward::Clear();
    }
    critratio_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TCommonReward Reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CritRatio;
        break;
      }

      // optional uint32 CritRatio = 2;
      case 2: {
        if (tag == 16) {
         parse_CritRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critratio_)));
          set_has_critratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitReward)
  return false;
#undef DO_
}

void TActTimeLimitRecruitReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitReward)
  // optional .pb.TCommonReward Reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // optional uint32 CritRatio = 2;
  if (has_critratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->critratio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitReward)
}

::google::protobuf::uint8* TActTimeLimitRecruitReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitReward)
  // optional .pb.TCommonReward Reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // optional uint32 CritRatio = 2;
  if (has_critratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->critratio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitReward)
  return target;
}

int TActTimeLimitRecruitReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TCommonReward Reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // optional uint32 CritRatio = 2;
    if (has_critratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critratio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitReward::MergeFrom(const TActTimeLimitRecruitReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::pb::TCommonReward::MergeFrom(from.reward());
    }
    if (from.has_critratio()) {
      set_critratio(from.critratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitReward::CopyFrom(const TActTimeLimitRecruitReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitReward::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitReward::Swap(TActTimeLimitRecruitReward* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(critratio_, other->critratio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitReward_descriptor_;
  metadata.reflection = TActTimeLimitRecruitReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitReceiveRewardReq::kRecIdFieldNumber;
const int TActTimeLimitRecruitReceiveRewardReq::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitReceiveRewardReq::TActTimeLimitRecruitReceiveRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitReceiveRewardReq)
}

void TActTimeLimitRecruitReceiveRewardReq::InitAsDefaultInstance() {
}

TActTimeLimitRecruitReceiveRewardReq::TActTimeLimitRecruitReceiveRewardReq(const TActTimeLimitRecruitReceiveRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitReceiveRewardReq)
}

void TActTimeLimitRecruitReceiveRewardReq::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  rewardindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitReceiveRewardReq::~TActTimeLimitRecruitReceiveRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitReceiveRewardReq)
  SharedDtor();
}

void TActTimeLimitRecruitReceiveRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitReceiveRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitReceiveRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitReceiveRewardReq_descriptor_;
}

const TActTimeLimitRecruitReceiveRewardReq& TActTimeLimitRecruitReceiveRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitReceiveRewardReq* TActTimeLimitRecruitReceiveRewardReq::default_instance_ = NULL;

TActTimeLimitRecruitReceiveRewardReq* TActTimeLimitRecruitReceiveRewardReq::New() const {
  return new TActTimeLimitRecruitReceiveRewardReq;
}

void TActTimeLimitRecruitReceiveRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTimeLimitRecruitReceiveRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(recid_, rewardindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitReceiveRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitReceiveRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIndex;
        break;
      }

      // optional uint32 RewardIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardindex_)));
          set_has_rewardindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitReceiveRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitReceiveRewardReq)
  return false;
#undef DO_
}

void TActTimeLimitRecruitReceiveRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitReceiveRewardReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitReceiveRewardReq)
}

::google::protobuf::uint8* TActTimeLimitRecruitReceiveRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitReceiveRewardReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitReceiveRewardReq)
  return target;
}

int TActTimeLimitRecruitReceiveRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 RewardIndex = 2;
    if (has_rewardindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitReceiveRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitReceiveRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitReceiveRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitReceiveRewardReq::MergeFrom(const TActTimeLimitRecruitReceiveRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_rewardindex()) {
      set_rewardindex(from.rewardindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitReceiveRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitReceiveRewardReq::CopyFrom(const TActTimeLimitRecruitReceiveRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitReceiveRewardReq::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitReceiveRewardReq::Swap(TActTimeLimitRecruitReceiveRewardReq* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(rewardindex_, other->rewardindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitReceiveRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitReceiveRewardReq_descriptor_;
  metadata.reflection = TActTimeLimitRecruitReceiveRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitGoodsInfo::kRecIdFieldNumber;
const int TActTimeLimitRecruitGoodsInfo::kGoodsIdFieldNumber;
const int TActTimeLimitRecruitGoodsInfo::kBoughtNumFieldNumber;
const int TActTimeLimitRecruitGoodsInfo::kBoughtTimeFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitGoodsInfo::TActTimeLimitRecruitGoodsInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitGoodsInfo)
}

void TActTimeLimitRecruitGoodsInfo::InitAsDefaultInstance() {
}

TActTimeLimitRecruitGoodsInfo::TActTimeLimitRecruitGoodsInfo(const TActTimeLimitRecruitGoodsInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitGoodsInfo)
}

void TActTimeLimitRecruitGoodsInfo::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  goodsid_ = 0u;
  boughtnum_ = 0u;
  boughttime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitGoodsInfo::~TActTimeLimitRecruitGoodsInfo() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitGoodsInfo)
  SharedDtor();
}

void TActTimeLimitRecruitGoodsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitGoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitGoodsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitGoodsInfo_descriptor_;
}

const TActTimeLimitRecruitGoodsInfo& TActTimeLimitRecruitGoodsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitGoodsInfo* TActTimeLimitRecruitGoodsInfo::default_instance_ = NULL;

TActTimeLimitRecruitGoodsInfo* TActTimeLimitRecruitGoodsInfo::New() const {
  return new TActTimeLimitRecruitGoodsInfo;
}

void TActTimeLimitRecruitGoodsInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTimeLimitRecruitGoodsInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(recid_, boughtnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitGoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitGoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GoodsId;
        break;
      }

      // optional uint32 GoodsId = 2;
      case 2: {
        if (tag == 16) {
         parse_GoodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BoughtNum;
        break;
      }

      // optional uint32 BoughtNum = 3;
      case 3: {
        if (tag == 24) {
         parse_BoughtNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boughtnum_)));
          set_has_boughtnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BoughtTime;
        break;
      }

      // optional uint64 BoughtTime = 4;
      case 4: {
        if (tag == 32) {
         parse_BoughtTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &boughttime_)));
          set_has_boughttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitGoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitGoodsInfo)
  return false;
#undef DO_
}

void TActTimeLimitRecruitGoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitGoodsInfo)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 GoodsId = 2;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goodsid(), output);
  }

  // optional uint32 BoughtNum = 3;
  if (has_boughtnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->boughtnum(), output);
  }

  // optional uint64 BoughtTime = 4;
  if (has_boughttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->boughttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitGoodsInfo)
}

::google::protobuf::uint8* TActTimeLimitRecruitGoodsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitGoodsInfo)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 GoodsId = 2;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goodsid(), target);
  }

  // optional uint32 BoughtNum = 3;
  if (has_boughtnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->boughtnum(), target);
  }

  // optional uint64 BoughtTime = 4;
  if (has_boughttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->boughttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitGoodsInfo)
  return target;
}

int TActTimeLimitRecruitGoodsInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 GoodsId = 2;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // optional uint32 BoughtNum = 3;
    if (has_boughtnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boughtnum());
    }

    // optional uint64 BoughtTime = 4;
    if (has_boughttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->boughttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitGoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitGoodsInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitGoodsInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitGoodsInfo::MergeFrom(const TActTimeLimitRecruitGoodsInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_boughtnum()) {
      set_boughtnum(from.boughtnum());
    }
    if (from.has_boughttime()) {
      set_boughttime(from.boughttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitGoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitGoodsInfo::CopyFrom(const TActTimeLimitRecruitGoodsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitGoodsInfo::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitGoodsInfo::Swap(TActTimeLimitRecruitGoodsInfo* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(boughtnum_, other->boughtnum_);
    std::swap(boughttime_, other->boughttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitGoodsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitGoodsInfo_descriptor_;
  metadata.reflection = TActTimeLimitRecruitGoodsInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitGetGoodsInfoRsp::kGoodsBuyArrFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitGetGoodsInfoRsp::TActTimeLimitRecruitGetGoodsInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
}

void TActTimeLimitRecruitGetGoodsInfoRsp::InitAsDefaultInstance() {
}

TActTimeLimitRecruitGetGoodsInfoRsp::TActTimeLimitRecruitGetGoodsInfoRsp(const TActTimeLimitRecruitGetGoodsInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
}

void TActTimeLimitRecruitGetGoodsInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitGetGoodsInfoRsp::~TActTimeLimitRecruitGetGoodsInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  SharedDtor();
}

void TActTimeLimitRecruitGetGoodsInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitGetGoodsInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitGetGoodsInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitGetGoodsInfoRsp_descriptor_;
}

const TActTimeLimitRecruitGetGoodsInfoRsp& TActTimeLimitRecruitGetGoodsInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitGetGoodsInfoRsp* TActTimeLimitRecruitGetGoodsInfoRsp::default_instance_ = NULL;

TActTimeLimitRecruitGetGoodsInfoRsp* TActTimeLimitRecruitGetGoodsInfoRsp::New() const {
  return new TActTimeLimitRecruitGetGoodsInfoRsp;
}

void TActTimeLimitRecruitGetGoodsInfoRsp::Clear() {
  goodsbuyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitGetGoodsInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GoodsBuyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsbuyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GoodsBuyArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  return false;
#undef DO_
}

void TActTimeLimitRecruitGetGoodsInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodsbuyarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
}

::google::protobuf::uint8* TActTimeLimitRecruitGetGoodsInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goodsbuyarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitGetGoodsInfoRsp)
  return target;
}

int TActTimeLimitRecruitGetGoodsInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  total_size += 1 * this->goodsbuyarr_size();
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goodsbuyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitGetGoodsInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitGetGoodsInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitGetGoodsInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitGetGoodsInfoRsp::MergeFrom(const TActTimeLimitRecruitGetGoodsInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsbuyarr_.MergeFrom(from.goodsbuyarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitGetGoodsInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitGetGoodsInfoRsp::CopyFrom(const TActTimeLimitRecruitGetGoodsInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitGetGoodsInfoRsp::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitGetGoodsInfoRsp::Swap(TActTimeLimitRecruitGetGoodsInfoRsp* other) {
  if (other != this) {
    goodsbuyarr_.Swap(&other->goodsbuyarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitGetGoodsInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitGetGoodsInfoRsp_descriptor_;
  metadata.reflection = TActTimeLimitRecruitGetGoodsInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitBuyGoodsReq::kRecIdFieldNumber;
const int TActTimeLimitRecruitBuyGoodsReq::kGoodsIdFieldNumber;
const int TActTimeLimitRecruitBuyGoodsReq::kBuyNumFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitBuyGoodsReq::TActTimeLimitRecruitBuyGoodsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitBuyGoodsReq)
}

void TActTimeLimitRecruitBuyGoodsReq::InitAsDefaultInstance() {
}

TActTimeLimitRecruitBuyGoodsReq::TActTimeLimitRecruitBuyGoodsReq(const TActTimeLimitRecruitBuyGoodsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitBuyGoodsReq)
}

void TActTimeLimitRecruitBuyGoodsReq::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  goodsid_ = 0u;
  buynum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitBuyGoodsReq::~TActTimeLimitRecruitBuyGoodsReq() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitBuyGoodsReq)
  SharedDtor();
}

void TActTimeLimitRecruitBuyGoodsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitBuyGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitBuyGoodsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitBuyGoodsReq_descriptor_;
}

const TActTimeLimitRecruitBuyGoodsReq& TActTimeLimitRecruitBuyGoodsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitBuyGoodsReq* TActTimeLimitRecruitBuyGoodsReq::default_instance_ = NULL;

TActTimeLimitRecruitBuyGoodsReq* TActTimeLimitRecruitBuyGoodsReq::New() const {
  return new TActTimeLimitRecruitBuyGoodsReq;
}

void TActTimeLimitRecruitBuyGoodsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTimeLimitRecruitBuyGoodsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(recid_, buynum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitBuyGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitBuyGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GoodsId;
        break;
      }

      // optional uint32 GoodsId = 2;
      case 2: {
        if (tag == 16) {
         parse_GoodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyNum;
        break;
      }

      // optional uint32 BuyNum = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitBuyGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitBuyGoodsReq)
  return false;
#undef DO_
}

void TActTimeLimitRecruitBuyGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitBuyGoodsReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 GoodsId = 2;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goodsid(), output);
  }

  // optional uint32 BuyNum = 3;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buynum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitBuyGoodsReq)
}

::google::protobuf::uint8* TActTimeLimitRecruitBuyGoodsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitBuyGoodsReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 GoodsId = 2;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goodsid(), target);
  }

  // optional uint32 BuyNum = 3;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buynum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitBuyGoodsReq)
  return target;
}

int TActTimeLimitRecruitBuyGoodsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 GoodsId = 2;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // optional uint32 BuyNum = 3;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buynum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitBuyGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitBuyGoodsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitBuyGoodsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitBuyGoodsReq::MergeFrom(const TActTimeLimitRecruitBuyGoodsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitBuyGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitBuyGoodsReq::CopyFrom(const TActTimeLimitRecruitBuyGoodsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitBuyGoodsReq::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitBuyGoodsReq::Swap(TActTimeLimitRecruitBuyGoodsReq* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(buynum_, other->buynum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitBuyGoodsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitBuyGoodsReq_descriptor_;
  metadata.reflection = TActTimeLimitRecruitBuyGoodsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitSendGiftReq::kRecIdFieldNumber;
const int TActTimeLimitRecruitSendGiftReq::kItemArrFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitSendGiftReq::TActTimeLimitRecruitSendGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitSendGiftReq)
}

void TActTimeLimitRecruitSendGiftReq::InitAsDefaultInstance() {
}

TActTimeLimitRecruitSendGiftReq::TActTimeLimitRecruitSendGiftReq(const TActTimeLimitRecruitSendGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitSendGiftReq)
}

void TActTimeLimitRecruitSendGiftReq::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitSendGiftReq::~TActTimeLimitRecruitSendGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitSendGiftReq)
  SharedDtor();
}

void TActTimeLimitRecruitSendGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitSendGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitSendGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitSendGiftReq_descriptor_;
}

const TActTimeLimitRecruitSendGiftReq& TActTimeLimitRecruitSendGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitSendGiftReq* TActTimeLimitRecruitSendGiftReq::default_instance_ = NULL;

TActTimeLimitRecruitSendGiftReq* TActTimeLimitRecruitSendGiftReq::New() const {
  return new TActTimeLimitRecruitSendGiftReq;
}

void TActTimeLimitRecruitSendGiftReq::Clear() {
  recid_ = 0u;
  itemarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitSendGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitSendGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ItemArr;
        break;
      }

      // repeated .pb.TSimpleItem ItemArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ItemArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ItemArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitSendGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitSendGiftReq)
  return false;
#undef DO_
}

void TActTimeLimitRecruitSendGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitSendGiftReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // repeated .pb.TSimpleItem ItemArr = 2;
  for (int i = 0; i < this->itemarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitSendGiftReq)
}

::google::protobuf::uint8* TActTimeLimitRecruitSendGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitSendGiftReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // repeated .pb.TSimpleItem ItemArr = 2;
  for (int i = 0; i < this->itemarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitSendGiftReq)
  return target;
}

int TActTimeLimitRecruitSendGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

  }
  // repeated .pb.TSimpleItem ItemArr = 2;
  total_size += 1 * this->itemarr_size();
  for (int i = 0; i < this->itemarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitSendGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitSendGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitSendGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitSendGiftReq::MergeFrom(const TActTimeLimitRecruitSendGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemarr_.MergeFrom(from.itemarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitSendGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitSendGiftReq::CopyFrom(const TActTimeLimitRecruitSendGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitSendGiftReq::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitSendGiftReq::Swap(TActTimeLimitRecruitSendGiftReq* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    itemarr_.Swap(&other->itemarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitSendGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitSendGiftReq_descriptor_;
  metadata.reflection = TActTimeLimitRecruitSendGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitReceiveFriendshipRewardReq::kRecIdFieldNumber;
const int TActTimeLimitRecruitReceiveFriendshipRewardReq::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitReceiveFriendshipRewardReq::TActTimeLimitRecruitReceiveFriendshipRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::InitAsDefaultInstance() {
}

TActTimeLimitRecruitReceiveFriendshipRewardReq::TActTimeLimitRecruitReceiveFriendshipRewardReq(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::SharedCtor() {
  _cached_size_ = 0;
  recid_ = 0u;
  rewardindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitReceiveFriendshipRewardReq::~TActTimeLimitRecruitReceiveFriendshipRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  SharedDtor();
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitReceiveFriendshipRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitReceiveFriendshipRewardReq_descriptor_;
}

const TActTimeLimitRecruitReceiveFriendshipRewardReq& TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitReceiveFriendshipRewardReq* TActTimeLimitRecruitReceiveFriendshipRewardReq::default_instance_ = NULL;

TActTimeLimitRecruitReceiveFriendshipRewardReq* TActTimeLimitRecruitReceiveFriendshipRewardReq::New() const {
  return new TActTimeLimitRecruitReceiveFriendshipRewardReq;
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActTimeLimitRecruitReceiveFriendshipRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(recid_, rewardindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitReceiveFriendshipRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recid_)));
          set_has_recid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIndex;
        break;
      }

      // optional uint32 RewardIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardindex_)));
          set_has_rewardindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  return false;
#undef DO_
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recid(), output);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
}

::google::protobuf::uint8* TActTimeLimitRecruitReceiveFriendshipRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  // optional uint32 RecId = 1;
  if (has_recid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recid(), target);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitReceiveFriendshipRewardReq)
  return target;
}

int TActTimeLimitRecruitReceiveFriendshipRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecId = 1;
    if (has_recid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recid());
    }

    // optional uint32 RewardIndex = 2;
    if (has_rewardindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitReceiveFriendshipRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitReceiveFriendshipRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::MergeFrom(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recid()) {
      set_recid(from.recid());
    }
    if (from.has_rewardindex()) {
      set_rewardindex(from.rewardindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::CopyFrom(const TActTimeLimitRecruitReceiveFriendshipRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitReceiveFriendshipRewardReq::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitReceiveFriendshipRewardReq::Swap(TActTimeLimitRecruitReceiveFriendshipRewardReq* other) {
  if (other != this) {
    std::swap(recid_, other->recid_);
    std::swap(rewardindex_, other->rewardindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitReceiveFriendshipRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitReceiveFriendshipRewardReq_descriptor_;
  metadata.reflection = TActTimeLimitRecruitReceiveFriendshipRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActTimeLimitRecruitBuyGoodsNotify::kGoodsBuyArrFieldNumber;
#endif  // !_MSC_VER

TActTimeLimitRecruitBuyGoodsNotify::TActTimeLimitRecruitBuyGoodsNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActTimeLimitRecruitBuyGoodsNotify)
}

void TActTimeLimitRecruitBuyGoodsNotify::InitAsDefaultInstance() {
}

TActTimeLimitRecruitBuyGoodsNotify::TActTimeLimitRecruitBuyGoodsNotify(const TActTimeLimitRecruitBuyGoodsNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActTimeLimitRecruitBuyGoodsNotify)
}

void TActTimeLimitRecruitBuyGoodsNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActTimeLimitRecruitBuyGoodsNotify::~TActTimeLimitRecruitBuyGoodsNotify() {
  // @@protoc_insertion_point(destructor:pb.TActTimeLimitRecruitBuyGoodsNotify)
  SharedDtor();
}

void TActTimeLimitRecruitBuyGoodsNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActTimeLimitRecruitBuyGoodsNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActTimeLimitRecruitBuyGoodsNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActTimeLimitRecruitBuyGoodsNotify_descriptor_;
}

const TActTimeLimitRecruitBuyGoodsNotify& TActTimeLimitRecruitBuyGoodsNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActTimeLimitRecruit_2eproto();
  return *default_instance_;
}

TActTimeLimitRecruitBuyGoodsNotify* TActTimeLimitRecruitBuyGoodsNotify::default_instance_ = NULL;

TActTimeLimitRecruitBuyGoodsNotify* TActTimeLimitRecruitBuyGoodsNotify::New() const {
  return new TActTimeLimitRecruitBuyGoodsNotify;
}

void TActTimeLimitRecruitBuyGoodsNotify::Clear() {
  goodsbuyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActTimeLimitRecruitBuyGoodsNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActTimeLimitRecruitBuyGoodsNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GoodsBuyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsbuyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GoodsBuyArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActTimeLimitRecruitBuyGoodsNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActTimeLimitRecruitBuyGoodsNotify)
  return false;
#undef DO_
}

void TActTimeLimitRecruitBuyGoodsNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActTimeLimitRecruitBuyGoodsNotify)
  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodsbuyarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActTimeLimitRecruitBuyGoodsNotify)
}

::google::protobuf::uint8* TActTimeLimitRecruitBuyGoodsNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActTimeLimitRecruitBuyGoodsNotify)
  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goodsbuyarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActTimeLimitRecruitBuyGoodsNotify)
  return target;
}

int TActTimeLimitRecruitBuyGoodsNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActTimeLimitRecruitGoodsInfo GoodsBuyArr = 1;
  total_size += 1 * this->goodsbuyarr_size();
  for (int i = 0; i < this->goodsbuyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goodsbuyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActTimeLimitRecruitBuyGoodsNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActTimeLimitRecruitBuyGoodsNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActTimeLimitRecruitBuyGoodsNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActTimeLimitRecruitBuyGoodsNotify::MergeFrom(const TActTimeLimitRecruitBuyGoodsNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsbuyarr_.MergeFrom(from.goodsbuyarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActTimeLimitRecruitBuyGoodsNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActTimeLimitRecruitBuyGoodsNotify::CopyFrom(const TActTimeLimitRecruitBuyGoodsNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActTimeLimitRecruitBuyGoodsNotify::IsInitialized() const {

  return true;
}

void TActTimeLimitRecruitBuyGoodsNotify::Swap(TActTimeLimitRecruitBuyGoodsNotify* other) {
  if (other != this) {
    goodsbuyarr_.Swap(&other->goodsbuyarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActTimeLimitRecruitBuyGoodsNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActTimeLimitRecruitBuyGoodsNotify_descriptor_;
  metadata.reflection = TActTimeLimitRecruitBuyGoodsNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
