// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActRechargeBack.proto

#ifndef PROTOBUF_net_2fActRechargeBack_2eproto__INCLUDED
#define PROTOBUF_net_2fActRechargeBack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActRechargeBack_2eproto();
void protobuf_AssignDesc_net_2fActRechargeBack_2eproto();
void protobuf_ShutdownFile_net_2fActRechargeBack_2eproto();

class TActRechargeBackGetInfoRsp;
class TActRechargeBackReceiveGiftReq;
class TActRechargeBackRechargeNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActRechargeBackGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActRechargeBackGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActRechargeBackGetInfoRsp();
  virtual ~TActRechargeBackGetInfoRsp();

  TActRechargeBackGetInfoRsp(const TActRechargeBackGetInfoRsp& from);

  inline TActRechargeBackGetInfoRsp& operator=(const TActRechargeBackGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActRechargeBackGetInfoRsp& default_instance();

  void Swap(TActRechargeBackGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActRechargeBackGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActRechargeBackGetInfoRsp& from);
  void MergeFrom(const TActRechargeBackGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RechargeNum = 1;
  inline bool has_rechargenum() const;
  inline void clear_rechargenum();
  static const int kRechargeNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActRechargeBackGetInfoRsp</name>
  	<Function>
  		<name>rechargenum</name>
  		<replaceName>RechargeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rechargenum</name>
  		<replaceName>RechargeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargenum</name>
  		<replaceName>RechargeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rechargenum() const;
  inline void set_rechargenum(::google::protobuf::uint32 value);

  // repeated uint32 ReceiveInfoArr = 2;
  inline int receiveinfoarr_size() const;
  inline void clear_receiveinfoarr();
  static const int kReceiveInfoArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActRechargeBackGetInfoRsp</name>
  	<Function>
  		<name>receiveinfoarr</name>
  		<replaceName>ReceiveInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receiveinfoarr</name>
  		<replaceName>ReceiveInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receiveinfoarr</name>
  		<replaceName>ReceiveInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receiveinfoarr</name>
  		<replaceName>ReceiveInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receiveinfoarr_size</name>
  		<replaceName>ReceiveInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receiveinfoarr(int index) const;
  inline void set_receiveinfoarr(int index, ::google::protobuf::uint32 value);
  inline void add_receiveinfoarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receiveinfoarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receiveinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TActRechargeBackGetInfoRsp)
 private:
  inline void set_has_rechargenum();
  inline void clear_has_rechargenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receiveinfoarr_;
  ::google::protobuf::uint32 rechargenum_;
  friend void  protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActRechargeBackGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActRechargeBackReceiveGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActRechargeBackReceiveGiftReq : public ::google::protobuf::Message {
 public:
  TActRechargeBackReceiveGiftReq();
  virtual ~TActRechargeBackReceiveGiftReq();

  TActRechargeBackReceiveGiftReq(const TActRechargeBackReceiveGiftReq& from);

  inline TActRechargeBackReceiveGiftReq& operator=(const TActRechargeBackReceiveGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActRechargeBackReceiveGiftReq& default_instance();

  void Swap(TActRechargeBackReceiveGiftReq* other);

  // implements Message ----------------------------------------------

  TActRechargeBackReceiveGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActRechargeBackReceiveGiftReq& from);
  void MergeFrom(const TActRechargeBackReceiveGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GiftId = 1;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActRechargeBackReceiveGiftReq</name>
  	<Function>
  		<name>giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActRechargeBackReceiveGiftReq)
 private:
  inline void set_has_giftid();
  inline void clear_has_giftid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 giftid_;
  friend void  protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActRechargeBackReceiveGiftReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActRechargeBackRechargeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActRechargeBackRechargeNotify : public ::google::protobuf::Message {
 public:
  TActRechargeBackRechargeNotify();
  virtual ~TActRechargeBackRechargeNotify();

  TActRechargeBackRechargeNotify(const TActRechargeBackRechargeNotify& from);

  inline TActRechargeBackRechargeNotify& operator=(const TActRechargeBackRechargeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActRechargeBackRechargeNotify& default_instance();

  void Swap(TActRechargeBackRechargeNotify* other);

  // implements Message ----------------------------------------------

  TActRechargeBackRechargeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActRechargeBackRechargeNotify& from);
  void MergeFrom(const TActRechargeBackRechargeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RechargeNum = 1;
  inline bool has_rechargenum() const;
  inline void clear_rechargenum();
  static const int kRechargeNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActRechargeBackRechargeNotify</name>
  	<Function>
  		<name>rechargenum</name>
  		<replaceName>RechargeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rechargenum</name>
  		<replaceName>RechargeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargenum</name>
  		<replaceName>RechargeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rechargenum() const;
  inline void set_rechargenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActRechargeBackRechargeNotify)
 private:
  inline void set_has_rechargenum();
  inline void clear_has_rechargenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rechargenum_;
  friend void  protobuf_AddDesc_net_2fActRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActRechargeBackRechargeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActRechargeBackGetInfoRsp

// optional uint32 RechargeNum = 1;
inline bool TActRechargeBackGetInfoRsp::has_rechargenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActRechargeBackGetInfoRsp::set_has_rechargenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActRechargeBackGetInfoRsp::clear_has_rechargenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActRechargeBackGetInfoRsp::clear_rechargenum() {
  rechargenum_ = 0u;
  clear_has_rechargenum();
}
inline ::google::protobuf::uint32 TActRechargeBackGetInfoRsp::rechargenum() const {
  // @@protoc_insertion_point(field_get:pb.TActRechargeBackGetInfoRsp.RechargeNum)
  return rechargenum_;
}
inline void TActRechargeBackGetInfoRsp::set_rechargenum(::google::protobuf::uint32 value) {
  set_has_rechargenum();
  rechargenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActRechargeBackGetInfoRsp.RechargeNum)
}

// repeated uint32 ReceiveInfoArr = 2;
inline int TActRechargeBackGetInfoRsp::receiveinfoarr_size() const {
  return receiveinfoarr_.size();
}
inline void TActRechargeBackGetInfoRsp::clear_receiveinfoarr() {
  receiveinfoarr_.Clear();
}
inline ::google::protobuf::uint32 TActRechargeBackGetInfoRsp::receiveinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActRechargeBackGetInfoRsp.ReceiveInfoArr)
  return receiveinfoarr_.Get(index);
}
inline void TActRechargeBackGetInfoRsp::set_receiveinfoarr(int index, ::google::protobuf::uint32 value) {
  receiveinfoarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActRechargeBackGetInfoRsp.ReceiveInfoArr)
}
inline void TActRechargeBackGetInfoRsp::add_receiveinfoarr(::google::protobuf::uint32 value) {
  receiveinfoarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActRechargeBackGetInfoRsp.ReceiveInfoArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActRechargeBackGetInfoRsp::receiveinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActRechargeBackGetInfoRsp.ReceiveInfoArr)
  return receiveinfoarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActRechargeBackGetInfoRsp::mutable_receiveinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActRechargeBackGetInfoRsp.ReceiveInfoArr)
  return &receiveinfoarr_;
}

// -------------------------------------------------------------------

// TActRechargeBackReceiveGiftReq

// optional uint32 GiftId = 1;
inline bool TActRechargeBackReceiveGiftReq::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActRechargeBackReceiveGiftReq::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActRechargeBackReceiveGiftReq::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActRechargeBackReceiveGiftReq::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 TActRechargeBackReceiveGiftReq::giftid() const {
  // @@protoc_insertion_point(field_get:pb.TActRechargeBackReceiveGiftReq.GiftId)
  return giftid_;
}
inline void TActRechargeBackReceiveGiftReq::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActRechargeBackReceiveGiftReq.GiftId)
}

// -------------------------------------------------------------------

// TActRechargeBackRechargeNotify

// optional uint32 RechargeNum = 1;
inline bool TActRechargeBackRechargeNotify::has_rechargenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActRechargeBackRechargeNotify::set_has_rechargenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActRechargeBackRechargeNotify::clear_has_rechargenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActRechargeBackRechargeNotify::clear_rechargenum() {
  rechargenum_ = 0u;
  clear_has_rechargenum();
}
inline ::google::protobuf::uint32 TActRechargeBackRechargeNotify::rechargenum() const {
  // @@protoc_insertion_point(field_get:pb.TActRechargeBackRechargeNotify.RechargeNum)
  return rechargenum_;
}
inline void TActRechargeBackRechargeNotify::set_rechargenum(::google::protobuf::uint32 value) {
  set_has_rechargenum();
  rechargenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActRechargeBackRechargeNotify.RechargeNum)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActRechargeBack_2eproto__INCLUDED
