// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FinalCard.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/FinalCard.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TFinalCardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFinalCardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFinalCardGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFinalCardGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFinalCardGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFinalCardGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFinalCardGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFinalCardGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFinalCardBuyNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFinalCardBuyNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fFinalCard_2eproto() {
  protobuf_AddDesc_net_2fFinalCard_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/FinalCard.proto");
  GOOGLE_CHECK(file != NULL);
  TFinalCardInfo_descriptor_ = file->message_type(0);
  static const int TFinalCardInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardInfo, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardInfo, buytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardInfo, lastrewardtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardInfo, endtime_),
  };
  TFinalCardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFinalCardInfo_descriptor_,
      TFinalCardInfo::default_instance_,
      TFinalCardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFinalCardInfo));
  TFinalCardGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TFinalCardGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetInfoRsp, cardinfoarr_),
  };
  TFinalCardGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFinalCardGetInfoRsp_descriptor_,
      TFinalCardGetInfoRsp::default_instance_,
      TFinalCardGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFinalCardGetInfoRsp));
  TFinalCardGetRewardReq_descriptor_ = file->message_type(2);
  static const int TFinalCardGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetRewardReq, productid_),
  };
  TFinalCardGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFinalCardGetRewardReq_descriptor_,
      TFinalCardGetRewardReq::default_instance_,
      TFinalCardGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFinalCardGetRewardReq));
  TFinalCardGetRewardRsp_descriptor_ = file->message_type(3);
  static const int TFinalCardGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetRewardRsp, rewardarr_),
  };
  TFinalCardGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFinalCardGetRewardRsp_descriptor_,
      TFinalCardGetRewardRsp::default_instance_,
      TFinalCardGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFinalCardGetRewardRsp));
  TFinalCardBuyNotify_descriptor_ = file->message_type(4);
  static const int TFinalCardBuyNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardBuyNotify, cardinfo_),
  };
  TFinalCardBuyNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFinalCardBuyNotify_descriptor_,
      TFinalCardBuyNotify::default_instance_,
      TFinalCardBuyNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardBuyNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFinalCardBuyNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFinalCardBuyNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fFinalCard_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFinalCardInfo_descriptor_, &TFinalCardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFinalCardGetInfoRsp_descriptor_, &TFinalCardGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFinalCardGetRewardReq_descriptor_, &TFinalCardGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFinalCardGetRewardRsp_descriptor_, &TFinalCardGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFinalCardBuyNotify_descriptor_, &TFinalCardBuyNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fFinalCard_2eproto() {
  delete TFinalCardInfo::default_instance_;
  delete TFinalCardInfo_reflection_;
  delete TFinalCardGetInfoRsp::default_instance_;
  delete TFinalCardGetInfoRsp_reflection_;
  delete TFinalCardGetRewardReq::default_instance_;
  delete TFinalCardGetRewardReq_reflection_;
  delete TFinalCardGetRewardRsp::default_instance_;
  delete TFinalCardGetRewardRsp_reflection_;
  delete TFinalCardBuyNotify::default_instance_;
  delete TFinalCardBuyNotify_reflection_;
}

void protobuf_AddDesc_net_2fFinalCard_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/FinalCard.proto\022\002pb\032\026net/CommonRew"
    "ard.proto\"]\n\016TFinalCardInfo\022\021\n\tProductId"
    "\030\001 \001(\r\022\017\n\007BuyTime\030\002 \001(\004\022\026\n\016LastRewardTim"
    "e\030\003 \001(\004\022\017\n\007EndTime\030\004 \001(\004\"\?\n\024TFinalCardGe"
    "tInfoRsp\022\'\n\013CardInfoArr\030\001 \003(\0132\022.pb.TFina"
    "lCardInfo\"+\n\026TFinalCardGetRewardReq\022\021\n\tP"
    "roductId\030\001 \001(\r\">\n\026TFinalCardGetRewardRsp"
    "\022$\n\tRewardArr\030\001 \003(\0132\021.pb.TCommonReward\";"
    "\n\023TFinalCardBuyNotify\022$\n\010CardInfo\030\001 \001(\0132"
    "\022.pb.TFinalCardInfo", 379);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/FinalCard.proto", &protobuf_RegisterTypes);
  TFinalCardInfo::default_instance_ = new TFinalCardInfo();
  TFinalCardGetInfoRsp::default_instance_ = new TFinalCardGetInfoRsp();
  TFinalCardGetRewardReq::default_instance_ = new TFinalCardGetRewardReq();
  TFinalCardGetRewardRsp::default_instance_ = new TFinalCardGetRewardRsp();
  TFinalCardBuyNotify::default_instance_ = new TFinalCardBuyNotify();
  TFinalCardInfo::default_instance_->InitAsDefaultInstance();
  TFinalCardGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TFinalCardGetRewardReq::default_instance_->InitAsDefaultInstance();
  TFinalCardGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TFinalCardBuyNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fFinalCard_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fFinalCard_2eproto {
  StaticDescriptorInitializer_net_2fFinalCard_2eproto() {
    protobuf_AddDesc_net_2fFinalCard_2eproto();
  }
} static_descriptor_initializer_net_2fFinalCard_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TFinalCardInfo::kProductIdFieldNumber;
const int TFinalCardInfo::kBuyTimeFieldNumber;
const int TFinalCardInfo::kLastRewardTimeFieldNumber;
const int TFinalCardInfo::kEndTimeFieldNumber;
#endif  // !_MSC_VER

TFinalCardInfo::TFinalCardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFinalCardInfo)
}

void TFinalCardInfo::InitAsDefaultInstance() {
}

TFinalCardInfo::TFinalCardInfo(const TFinalCardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFinalCardInfo)
}

void TFinalCardInfo::SharedCtor() {
  _cached_size_ = 0;
  productid_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  lastrewardtime_ = GOOGLE_ULONGLONG(0);
  endtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFinalCardInfo::~TFinalCardInfo() {
  // @@protoc_insertion_point(destructor:pb.TFinalCardInfo)
  SharedDtor();
}

void TFinalCardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFinalCardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFinalCardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFinalCardInfo_descriptor_;
}

const TFinalCardInfo& TFinalCardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFinalCard_2eproto();
  return *default_instance_;
}

TFinalCardInfo* TFinalCardInfo::default_instance_ = NULL;

TFinalCardInfo* TFinalCardInfo::New() const {
  return new TFinalCardInfo;
}

void TFinalCardInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFinalCardInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(buytime_, productid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFinalCardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFinalCardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 2;
      case 2: {
        if (tag == 16) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LastRewardTime;
        break;
      }

      // optional uint64 LastRewardTime = 3;
      case 3: {
        if (tag == 24) {
         parse_LastRewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastrewardtime_)));
          set_has_lastrewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EndTime;
        break;
      }

      // optional uint64 EndTime = 4;
      case 4: {
        if (tag == 32) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFinalCardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFinalCardInfo)
  return false;
#undef DO_
}

void TFinalCardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFinalCardInfo)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  // optional uint64 BuyTime = 2;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->buytime(), output);
  }

  // optional uint64 LastRewardTime = 3;
  if (has_lastrewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lastrewardtime(), output);
  }

  // optional uint64 EndTime = 4;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFinalCardInfo)
}

::google::protobuf::uint8* TFinalCardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFinalCardInfo)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  // optional uint64 BuyTime = 2;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->buytime(), target);
  }

  // optional uint64 LastRewardTime = 3;
  if (has_lastrewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lastrewardtime(), target);
  }

  // optional uint64 EndTime = 4;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFinalCardInfo)
  return target;
}

int TFinalCardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

    // optional uint64 BuyTime = 2;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

    // optional uint64 LastRewardTime = 3;
    if (has_lastrewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lastrewardtime());
    }

    // optional uint64 EndTime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFinalCardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFinalCardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFinalCardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFinalCardInfo::MergeFrom(const TFinalCardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
    if (from.has_lastrewardtime()) {
      set_lastrewardtime(from.lastrewardtime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFinalCardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFinalCardInfo::CopyFrom(const TFinalCardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFinalCardInfo::IsInitialized() const {

  return true;
}

void TFinalCardInfo::Swap(TFinalCardInfo* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(buytime_, other->buytime_);
    std::swap(lastrewardtime_, other->lastrewardtime_);
    std::swap(endtime_, other->endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFinalCardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFinalCardInfo_descriptor_;
  metadata.reflection = TFinalCardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFinalCardGetInfoRsp::kCardInfoArrFieldNumber;
#endif  // !_MSC_VER

TFinalCardGetInfoRsp::TFinalCardGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFinalCardGetInfoRsp)
}

void TFinalCardGetInfoRsp::InitAsDefaultInstance() {
}

TFinalCardGetInfoRsp::TFinalCardGetInfoRsp(const TFinalCardGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFinalCardGetInfoRsp)
}

void TFinalCardGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFinalCardGetInfoRsp::~TFinalCardGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TFinalCardGetInfoRsp)
  SharedDtor();
}

void TFinalCardGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFinalCardGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFinalCardGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFinalCardGetInfoRsp_descriptor_;
}

const TFinalCardGetInfoRsp& TFinalCardGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFinalCard_2eproto();
  return *default_instance_;
}

TFinalCardGetInfoRsp* TFinalCardGetInfoRsp::default_instance_ = NULL;

TFinalCardGetInfoRsp* TFinalCardGetInfoRsp::New() const {
  return new TFinalCardGetInfoRsp;
}

void TFinalCardGetInfoRsp::Clear() {
  cardinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFinalCardGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFinalCardGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFinalCardInfo CardInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_CardInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_CardInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFinalCardGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFinalCardGetInfoRsp)
  return false;
#undef DO_
}

void TFinalCardGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFinalCardGetInfoRsp)
  // repeated .pb.TFinalCardInfo CardInfoArr = 1;
  for (int i = 0; i < this->cardinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cardinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFinalCardGetInfoRsp)
}

::google::protobuf::uint8* TFinalCardGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFinalCardGetInfoRsp)
  // repeated .pb.TFinalCardInfo CardInfoArr = 1;
  for (int i = 0; i < this->cardinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cardinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFinalCardGetInfoRsp)
  return target;
}

int TFinalCardGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TFinalCardInfo CardInfoArr = 1;
  total_size += 1 * this->cardinfoarr_size();
  for (int i = 0; i < this->cardinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cardinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFinalCardGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFinalCardGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFinalCardGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFinalCardGetInfoRsp::MergeFrom(const TFinalCardGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardinfoarr_.MergeFrom(from.cardinfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFinalCardGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFinalCardGetInfoRsp::CopyFrom(const TFinalCardGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFinalCardGetInfoRsp::IsInitialized() const {

  return true;
}

void TFinalCardGetInfoRsp::Swap(TFinalCardGetInfoRsp* other) {
  if (other != this) {
    cardinfoarr_.Swap(&other->cardinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFinalCardGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFinalCardGetInfoRsp_descriptor_;
  metadata.reflection = TFinalCardGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFinalCardGetRewardReq::kProductIdFieldNumber;
#endif  // !_MSC_VER

TFinalCardGetRewardReq::TFinalCardGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFinalCardGetRewardReq)
}

void TFinalCardGetRewardReq::InitAsDefaultInstance() {
}

TFinalCardGetRewardReq::TFinalCardGetRewardReq(const TFinalCardGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFinalCardGetRewardReq)
}

void TFinalCardGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  productid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFinalCardGetRewardReq::~TFinalCardGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TFinalCardGetRewardReq)
  SharedDtor();
}

void TFinalCardGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFinalCardGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFinalCardGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFinalCardGetRewardReq_descriptor_;
}

const TFinalCardGetRewardReq& TFinalCardGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFinalCard_2eproto();
  return *default_instance_;
}

TFinalCardGetRewardReq* TFinalCardGetRewardReq::default_instance_ = NULL;

TFinalCardGetRewardReq* TFinalCardGetRewardReq::New() const {
  return new TFinalCardGetRewardReq;
}

void TFinalCardGetRewardReq::Clear() {
  productid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFinalCardGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFinalCardGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFinalCardGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFinalCardGetRewardReq)
  return false;
#undef DO_
}

void TFinalCardGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFinalCardGetRewardReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFinalCardGetRewardReq)
}

::google::protobuf::uint8* TFinalCardGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFinalCardGetRewardReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFinalCardGetRewardReq)
  return target;
}

int TFinalCardGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFinalCardGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFinalCardGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFinalCardGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFinalCardGetRewardReq::MergeFrom(const TFinalCardGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFinalCardGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFinalCardGetRewardReq::CopyFrom(const TFinalCardGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFinalCardGetRewardReq::IsInitialized() const {

  return true;
}

void TFinalCardGetRewardReq::Swap(TFinalCardGetRewardReq* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFinalCardGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFinalCardGetRewardReq_descriptor_;
  metadata.reflection = TFinalCardGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFinalCardGetRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TFinalCardGetRewardRsp::TFinalCardGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFinalCardGetRewardRsp)
}

void TFinalCardGetRewardRsp::InitAsDefaultInstance() {
}

TFinalCardGetRewardRsp::TFinalCardGetRewardRsp(const TFinalCardGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFinalCardGetRewardRsp)
}

void TFinalCardGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFinalCardGetRewardRsp::~TFinalCardGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TFinalCardGetRewardRsp)
  SharedDtor();
}

void TFinalCardGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFinalCardGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFinalCardGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFinalCardGetRewardRsp_descriptor_;
}

const TFinalCardGetRewardRsp& TFinalCardGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFinalCard_2eproto();
  return *default_instance_;
}

TFinalCardGetRewardRsp* TFinalCardGetRewardRsp::default_instance_ = NULL;

TFinalCardGetRewardRsp* TFinalCardGetRewardRsp::New() const {
  return new TFinalCardGetRewardRsp;
}

void TFinalCardGetRewardRsp::Clear() {
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFinalCardGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFinalCardGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFinalCardGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFinalCardGetRewardRsp)
  return false;
#undef DO_
}

void TFinalCardGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFinalCardGetRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFinalCardGetRewardRsp)
}

::google::protobuf::uint8* TFinalCardGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFinalCardGetRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFinalCardGetRewardRsp)
  return target;
}

int TFinalCardGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFinalCardGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFinalCardGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFinalCardGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFinalCardGetRewardRsp::MergeFrom(const TFinalCardGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFinalCardGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFinalCardGetRewardRsp::CopyFrom(const TFinalCardGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFinalCardGetRewardRsp::IsInitialized() const {

  return true;
}

void TFinalCardGetRewardRsp::Swap(TFinalCardGetRewardRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFinalCardGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFinalCardGetRewardRsp_descriptor_;
  metadata.reflection = TFinalCardGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFinalCardBuyNotify::kCardInfoFieldNumber;
#endif  // !_MSC_VER

TFinalCardBuyNotify::TFinalCardBuyNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFinalCardBuyNotify)
}

void TFinalCardBuyNotify::InitAsDefaultInstance() {
  cardinfo_ = const_cast< ::pb::TFinalCardInfo*>(&::pb::TFinalCardInfo::default_instance());
}

TFinalCardBuyNotify::TFinalCardBuyNotify(const TFinalCardBuyNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFinalCardBuyNotify)
}

void TFinalCardBuyNotify::SharedCtor() {
  _cached_size_ = 0;
  cardinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFinalCardBuyNotify::~TFinalCardBuyNotify() {
  // @@protoc_insertion_point(destructor:pb.TFinalCardBuyNotify)
  SharedDtor();
}

void TFinalCardBuyNotify::SharedDtor() {
  if (this != default_instance_) {
    delete cardinfo_;
  }
}

void TFinalCardBuyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFinalCardBuyNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFinalCardBuyNotify_descriptor_;
}

const TFinalCardBuyNotify& TFinalCardBuyNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFinalCard_2eproto();
  return *default_instance_;
}

TFinalCardBuyNotify* TFinalCardBuyNotify::default_instance_ = NULL;

TFinalCardBuyNotify* TFinalCardBuyNotify::New() const {
  return new TFinalCardBuyNotify;
}

void TFinalCardBuyNotify::Clear() {
  if (has_cardinfo()) {
    if (cardinfo_ != NULL) cardinfo_->::pb::TFinalCardInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFinalCardBuyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFinalCardBuyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TFinalCardInfo CardInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFinalCardBuyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFinalCardBuyNotify)
  return false;
#undef DO_
}

void TFinalCardBuyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFinalCardBuyNotify)
  // optional .pb.TFinalCardInfo CardInfo = 1;
  if (has_cardinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cardinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFinalCardBuyNotify)
}

::google::protobuf::uint8* TFinalCardBuyNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFinalCardBuyNotify)
  // optional .pb.TFinalCardInfo CardInfo = 1;
  if (has_cardinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cardinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFinalCardBuyNotify)
  return target;
}

int TFinalCardBuyNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TFinalCardInfo CardInfo = 1;
    if (has_cardinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cardinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFinalCardBuyNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFinalCardBuyNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFinalCardBuyNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFinalCardBuyNotify::MergeFrom(const TFinalCardBuyNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cardinfo()) {
      mutable_cardinfo()->::pb::TFinalCardInfo::MergeFrom(from.cardinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFinalCardBuyNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFinalCardBuyNotify::CopyFrom(const TFinalCardBuyNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFinalCardBuyNotify::IsInitialized() const {

  return true;
}

void TFinalCardBuyNotify::Swap(TFinalCardBuyNotify* other) {
  if (other != this) {
    std::swap(cardinfo_, other->cardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFinalCardBuyNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFinalCardBuyNotify_descriptor_;
  metadata.reflection = TFinalCardBuyNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
