// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActAnniversary.proto

#ifndef PROTOBUF_net_2fActAnniversary_2eproto__INCLUDED
#define PROTOBUF_net_2fActAnniversary_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActAnniversary_2eproto();
void protobuf_AssignDesc_net_2fActAnniversary_2eproto();
void protobuf_ShutdownFile_net_2fActAnniversary_2eproto();

class TActAnniversaryGetInfoRsp;
class TActAnniversaryReceiveGiftReq;

enum ESignState {
  ENotSign = 1,
  ESigned = 2
};
bool ESignState_IsValid(int value);
const ESignState ESignState_MIN = ENotSign;
const ESignState ESignState_MAX = ESigned;
const int ESignState_ARRAYSIZE = ESignState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESignState_descriptor();
inline const ::std::string& ESignState_Name(ESignState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESignState_descriptor(), value);
}
inline bool ESignState_Parse(
    const ::std::string& name, ESignState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESignState>(
    ESignState_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TActAnniversaryGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAnniversary.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAnniversaryGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActAnniversaryGetInfoRsp();
  virtual ~TActAnniversaryGetInfoRsp();

  TActAnniversaryGetInfoRsp(const TActAnniversaryGetInfoRsp& from);

  inline TActAnniversaryGetInfoRsp& operator=(const TActAnniversaryGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAnniversaryGetInfoRsp& default_instance();

  void Swap(TActAnniversaryGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActAnniversaryGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAnniversaryGetInfoRsp& from);
  void MergeFrom(const TActAnniversaryGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Points = 1;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAnniversaryGetInfoRsp</name>
  	<Function>
  		<name>points</name>
  		<replaceName>Points</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_points</name>
  		<replaceName>Points</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_points</name>
  		<replaceName>Points</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // optional .pb.ESignState SignState = 2;
  inline bool has_signstate() const;
  inline void clear_signstate();
  static const int kSignStateFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAnniversaryGetInfoRsp</name>
  	<Function>
  		<name>signstate</name>
  		<replaceName>SignState</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_signstate</name>
  		<replaceName>SignState</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_signstate</name>
  		<replaceName>SignState</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ESignState signstate() const;
  inline void set_signstate(::pb::ESignState value);

  // repeated uint32 GiftIdArr = 3;
  inline int giftidarr_size() const;
  inline void clear_giftidarr();
  static const int kGiftIdArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActAnniversaryGetInfoRsp</name>
  	<Function>
  		<name>giftidarr</name>
  		<replaceName>GiftIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_giftidarr</name>
  		<replaceName>GiftIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_giftidarr</name>
  		<replaceName>GiftIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftidarr</name>
  		<replaceName>GiftIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>giftidarr_size</name>
  		<replaceName>GiftIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftidarr(int index) const;
  inline void set_giftidarr(int index, ::google::protobuf::uint32 value);
  inline void add_giftidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      giftidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_giftidarr();

  // @@protoc_insertion_point(class_scope:pb.TActAnniversaryGetInfoRsp)
 private:
  inline void set_has_points();
  inline void clear_has_points();
  inline void set_has_signstate();
  inline void clear_has_signstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 points_;
  int signstate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > giftidarr_;
  friend void  protobuf_AddDesc_net_2fActAnniversary_2eproto();
  friend void protobuf_AssignDesc_net_2fActAnniversary_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAnniversary_2eproto();

  void InitAsDefaultInstance();
  static TActAnniversaryGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAnniversaryReceiveGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAnniversary.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAnniversaryReceiveGiftReq : public ::google::protobuf::Message {
 public:
  TActAnniversaryReceiveGiftReq();
  virtual ~TActAnniversaryReceiveGiftReq();

  TActAnniversaryReceiveGiftReq(const TActAnniversaryReceiveGiftReq& from);

  inline TActAnniversaryReceiveGiftReq& operator=(const TActAnniversaryReceiveGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAnniversaryReceiveGiftReq& default_instance();

  void Swap(TActAnniversaryReceiveGiftReq* other);

  // implements Message ----------------------------------------------

  TActAnniversaryReceiveGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAnniversaryReceiveGiftReq& from);
  void MergeFrom(const TActAnniversaryReceiveGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GiftId = 1;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAnniversaryReceiveGiftReq</name>
  	<Function>
  		<name>giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAnniversaryReceiveGiftReq)
 private:
  inline void set_has_giftid();
  inline void clear_has_giftid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 giftid_;
  friend void  protobuf_AddDesc_net_2fActAnniversary_2eproto();
  friend void protobuf_AssignDesc_net_2fActAnniversary_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAnniversary_2eproto();

  void InitAsDefaultInstance();
  static TActAnniversaryReceiveGiftReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TActAnniversaryGetInfoRsp

// optional uint32 Points = 1;
inline bool TActAnniversaryGetInfoRsp::has_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAnniversaryGetInfoRsp::set_has_points() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAnniversaryGetInfoRsp::clear_has_points() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAnniversaryGetInfoRsp::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 TActAnniversaryGetInfoRsp::points() const {
  // @@protoc_insertion_point(field_get:pb.TActAnniversaryGetInfoRsp.Points)
  return points_;
}
inline void TActAnniversaryGetInfoRsp::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAnniversaryGetInfoRsp.Points)
}

// optional .pb.ESignState SignState = 2;
inline bool TActAnniversaryGetInfoRsp::has_signstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAnniversaryGetInfoRsp::set_has_signstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAnniversaryGetInfoRsp::clear_has_signstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAnniversaryGetInfoRsp::clear_signstate() {
  signstate_ = 1;
  clear_has_signstate();
}
inline ::pb::ESignState TActAnniversaryGetInfoRsp::signstate() const {
  // @@protoc_insertion_point(field_get:pb.TActAnniversaryGetInfoRsp.SignState)
  return static_cast< ::pb::ESignState >(signstate_);
}
inline void TActAnniversaryGetInfoRsp::set_signstate(::pb::ESignState value) {
  assert(::pb::ESignState_IsValid(value));
  set_has_signstate();
  signstate_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAnniversaryGetInfoRsp.SignState)
}

// repeated uint32 GiftIdArr = 3;
inline int TActAnniversaryGetInfoRsp::giftidarr_size() const {
  return giftidarr_.size();
}
inline void TActAnniversaryGetInfoRsp::clear_giftidarr() {
  giftidarr_.Clear();
}
inline ::google::protobuf::uint32 TActAnniversaryGetInfoRsp::giftidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAnniversaryGetInfoRsp.GiftIdArr)
  return giftidarr_.Get(index);
}
inline void TActAnniversaryGetInfoRsp::set_giftidarr(int index, ::google::protobuf::uint32 value) {
  giftidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActAnniversaryGetInfoRsp.GiftIdArr)
}
inline void TActAnniversaryGetInfoRsp::add_giftidarr(::google::protobuf::uint32 value) {
  giftidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActAnniversaryGetInfoRsp.GiftIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActAnniversaryGetInfoRsp::giftidarr() const {
  // @@protoc_insertion_point(field_list:pb.TActAnniversaryGetInfoRsp.GiftIdArr)
  return giftidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActAnniversaryGetInfoRsp::mutable_giftidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAnniversaryGetInfoRsp.GiftIdArr)
  return &giftidarr_;
}

// -------------------------------------------------------------------

// TActAnniversaryReceiveGiftReq

// optional uint32 GiftId = 1;
inline bool TActAnniversaryReceiveGiftReq::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAnniversaryReceiveGiftReq::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAnniversaryReceiveGiftReq::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAnniversaryReceiveGiftReq::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 TActAnniversaryReceiveGiftReq::giftid() const {
  // @@protoc_insertion_point(field_get:pb.TActAnniversaryReceiveGiftReq.GiftId)
  return giftid_;
}
inline void TActAnniversaryReceiveGiftReq::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAnniversaryReceiveGiftReq.GiftId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ESignState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ESignState>() {
  return ::pb::ESignState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActAnniversary_2eproto__INCLUDED
