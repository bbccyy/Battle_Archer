// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActBeaconFireHero.proto

#ifndef PROTOBUF_net_2fActBeaconFireHero_2eproto__INCLUDED
#define PROTOBUF_net_2fActBeaconFireHero_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
#include "net/CommonReward.pb.h"
#include "net/OpenActivity.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

class TActBeaconFireHeroGiftInfo;
class TActBeaconFireHeroTaskInfo;
class TActBeaconFireHeroGetInfoRsp;
class TActBeaconFireHeroGetArrScoreRewardReq;
class TActBeaconFireHeroGetArrScoreRewardRsp;
class TActBeaconFireHeroRankInfo;
class TActBeaconFireHeroGetStageRankReq;
class TActBeaconFireHeroGetStageRankRsp;
class TActBeaconFireHeroGetLastStageRankReq;
class TActBeaconFireHeroGetLastStageRankRsp;
class TActBeaconFireHeroNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGiftInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGiftInfo : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGiftInfo();
  virtual ~TActBeaconFireHeroGiftInfo();

  TActBeaconFireHeroGiftInfo(const TActBeaconFireHeroGiftInfo& from);

  inline TActBeaconFireHeroGiftInfo& operator=(const TActBeaconFireHeroGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGiftInfo& default_instance();

  void Swap(TActBeaconFireHeroGiftInfo* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGiftInfo& from);
  void MergeFrom(const TActBeaconFireHeroGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGiftInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGiftInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 3;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGiftInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGiftInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buytime();
  inline void clear_has_buytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint64 buytime_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroTaskInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroTaskInfo : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroTaskInfo();
  virtual ~TActBeaconFireHeroTaskInfo();

  TActBeaconFireHeroTaskInfo(const TActBeaconFireHeroTaskInfo& from);

  inline TActBeaconFireHeroTaskInfo& operator=(const TActBeaconFireHeroTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroTaskInfo& default_instance();

  void Swap(TActBeaconFireHeroTaskInfo* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroTaskInfo& from);
  void MergeFrom(const TActBeaconFireHeroTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroTaskInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroTaskInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroTaskInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 num_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetInfoRsp();
  virtual ~TActBeaconFireHeroGetInfoRsp();

  TActBeaconFireHeroGetInfoRsp(const TActBeaconFireHeroGetInfoRsp& from);

  inline TActBeaconFireHeroGetInfoRsp& operator=(const TActBeaconFireHeroGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetInfoRsp& default_instance();

  void Swap(TActBeaconFireHeroGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetInfoRsp& from);
  void MergeFrom(const TActBeaconFireHeroGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  inline int arrgiftinfo_size() const;
  inline void clear_arrgiftinfo();
  static const int kArrGiftInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgiftinfo_size</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActBeaconFireHeroGiftInfo& arrgiftinfo(int index) const;
  inline ::pb::TActBeaconFireHeroGiftInfo* mutable_arrgiftinfo(int index);
  inline ::pb::TActBeaconFireHeroGiftInfo* add_arrgiftinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >&
      arrgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >*
      mutable_arrgiftinfo();

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  inline int arrtaskinfo_size() const;
  inline void clear_arrtaskinfo();
  static const int kArrTaskInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskinfo_size</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActBeaconFireHeroTaskInfo& arrtaskinfo(int index) const;
  inline ::pb::TActBeaconFireHeroTaskInfo* mutable_arrtaskinfo(int index);
  inline ::pb::TActBeaconFireHeroTaskInfo* add_arrtaskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >&
      arrtaskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >*
      mutable_arrtaskinfo();

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 5;
  inline int arrscorerewardinfo_size() const;
  inline void clear_arrscorerewardinfo();
  static const int kArrScoreRewardInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrscorerewardinfo</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrscorerewardinfo_size</name>
  		<replaceName>ArrScoreRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrscorerewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrscorerewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrscorerewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrscorerewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrscorerewardinfo();

  // repeated int32 StageRankArr = 6;
  inline int stagerankarr_size() const;
  inline void clear_stagerankarr();
  static const int kStageRankArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_stagerankarr</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>stagerankarr_size</name>
  		<replaceName>StageRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 stagerankarr(int index) const;
  inline void set_stagerankarr(int index, ::google::protobuf::int32 value);
  inline void add_stagerankarr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stagerankarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stagerankarr();

  // optional uint32 GroupId = 7;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>groupid</name>
  		<replaceName>GroupId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupid</name>
  		<replaceName>GroupId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupid</name>
  		<replaceName>GroupId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // repeated int32 MaxStageRankArr = 8;
  inline int maxstagerankarr_size() const;
  inline void clear_maxstagerankarr();
  static const int kMaxStageRankArrFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetInfoRsp</name>
  	<Function>
  		<name>maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxstagerankarr</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>maxstagerankarr_size</name>
  		<replaceName>MaxStageRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 maxstagerankarr(int index) const;
  inline void set_maxstagerankarr(int index, ::google::protobuf::int32 value);
  inline void add_maxstagerankarr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      maxstagerankarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_maxstagerankarr();

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo > arrgiftinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo > arrtaskinfo_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrscorerewardinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stagerankarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > maxstagerankarr_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetArrScoreRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetArrScoreRewardReq : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetArrScoreRewardReq();
  virtual ~TActBeaconFireHeroGetArrScoreRewardReq();

  TActBeaconFireHeroGetArrScoreRewardReq(const TActBeaconFireHeroGetArrScoreRewardReq& from);

  inline TActBeaconFireHeroGetArrScoreRewardReq& operator=(const TActBeaconFireHeroGetArrScoreRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetArrScoreRewardReq& default_instance();

  void Swap(TActBeaconFireHeroGetArrScoreRewardReq* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetArrScoreRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetArrScoreRewardReq& from);
  void MergeFrom(const TActBeaconFireHeroGetArrScoreRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ArrId = 1;
  inline int arrid_size() const;
  inline void clear_arrid();
  static const int kArrIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetArrScoreRewardReq</name>
  	<Function>
  		<name>arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrid_size</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrid(int index) const;
  inline void set_arrid(int index, ::google::protobuf::uint32 value);
  inline void add_arrid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrid();

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetArrScoreRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrid_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetArrScoreRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetArrScoreRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetArrScoreRewardRsp : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetArrScoreRewardRsp();
  virtual ~TActBeaconFireHeroGetArrScoreRewardRsp();

  TActBeaconFireHeroGetArrScoreRewardRsp(const TActBeaconFireHeroGetArrScoreRewardRsp& from);

  inline TActBeaconFireHeroGetArrScoreRewardRsp& operator=(const TActBeaconFireHeroGetArrScoreRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetArrScoreRewardRsp& default_instance();

  void Swap(TActBeaconFireHeroGetArrScoreRewardRsp* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetArrScoreRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetArrScoreRewardRsp& from);
  void MergeFrom(const TActBeaconFireHeroGetArrScoreRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetArrScoreRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetArrScoreRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroRankInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroRankInfo : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroRankInfo();
  virtual ~TActBeaconFireHeroRankInfo();

  TActBeaconFireHeroRankInfo(const TActBeaconFireHeroRankInfo& from);

  inline TActBeaconFireHeroRankInfo& operator=(const TActBeaconFireHeroRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroRankInfo& default_instance();

  void Swap(TActBeaconFireHeroRankInfo* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroRankInfo& from);
  void MergeFrom(const TActBeaconFireHeroRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroRankInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroRankInfo</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint64 Score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroRankInfo</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroRankInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroRankInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetStageRankReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetStageRankReq : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetStageRankReq();
  virtual ~TActBeaconFireHeroGetStageRankReq();

  TActBeaconFireHeroGetStageRankReq(const TActBeaconFireHeroGetStageRankReq& from);

  inline TActBeaconFireHeroGetStageRankReq& operator=(const TActBeaconFireHeroGetStageRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetStageRankReq& default_instance();

  void Swap(TActBeaconFireHeroGetStageRankReq* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetStageRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetStageRankReq& from);
  void MergeFrom(const TActBeaconFireHeroGetStageRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetStageRankReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetStageRankReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetStageRankReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetStageRankReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetStageRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetStageRankRsp : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetStageRankRsp();
  virtual ~TActBeaconFireHeroGetStageRankRsp();

  TActBeaconFireHeroGetStageRankRsp(const TActBeaconFireHeroGetStageRankRsp& from);

  inline TActBeaconFireHeroGetStageRankRsp& operator=(const TActBeaconFireHeroGetStageRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetStageRankRsp& default_instance();

  void Swap(TActBeaconFireHeroGetStageRankRsp* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetStageRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetStageRankRsp& from);
  void MergeFrom(const TActBeaconFireHeroGetStageRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 1;
  inline int arrrankinfo_size() const;
  inline void clear_arrrankinfo();
  static const int kArrRankInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetStageRankRsp</name>
  	<Function>
  		<name>arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrankinfo_size</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActBeaconFireHeroRankInfo& arrrankinfo(int index) const;
  inline ::pb::TActBeaconFireHeroRankInfo* mutable_arrrankinfo(int index);
  inline ::pb::TActBeaconFireHeroRankInfo* add_arrrankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >&
      arrrankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >*
      mutable_arrrankinfo();

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetStageRankRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo > arrrankinfo_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetStageRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetLastStageRankReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetLastStageRankReq : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetLastStageRankReq();
  virtual ~TActBeaconFireHeroGetLastStageRankReq();

  TActBeaconFireHeroGetLastStageRankReq(const TActBeaconFireHeroGetLastStageRankReq& from);

  inline TActBeaconFireHeroGetLastStageRankReq& operator=(const TActBeaconFireHeroGetLastStageRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetLastStageRankReq& default_instance();

  void Swap(TActBeaconFireHeroGetLastStageRankReq* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetLastStageRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetLastStageRankReq& from);
  void MergeFrom(const TActBeaconFireHeroGetLastStageRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetLastStageRankReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetLastStageRankReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetLastStageRankReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetLastStageRankReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroGetLastStageRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroGetLastStageRankRsp : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroGetLastStageRankRsp();
  virtual ~TActBeaconFireHeroGetLastStageRankRsp();

  TActBeaconFireHeroGetLastStageRankRsp(const TActBeaconFireHeroGetLastStageRankRsp& from);

  inline TActBeaconFireHeroGetLastStageRankRsp& operator=(const TActBeaconFireHeroGetLastStageRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroGetLastStageRankRsp& default_instance();

  void Swap(TActBeaconFireHeroGetLastStageRankRsp* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroGetLastStageRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroGetLastStageRankRsp& from);
  void MergeFrom(const TActBeaconFireHeroGetLastStageRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MyRank = 1;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyRankFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetLastStageRankRsp</name>
  	<Function>
  		<name>myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 myrank() const;
  inline void set_myrank(::google::protobuf::uint32 value);

  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 2;
  inline int arrrankinfo_size() const;
  inline void clear_arrrankinfo();
  static const int kArrRankInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroGetLastStageRankRsp</name>
  	<Function>
  		<name>arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrankinfo</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrankinfo_size</name>
  		<replaceName>ArrRankInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActBeaconFireHeroRankInfo& arrrankinfo(int index) const;
  inline ::pb::TActBeaconFireHeroRankInfo* mutable_arrrankinfo(int index);
  inline ::pb::TActBeaconFireHeroRankInfo* add_arrrankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >&
      arrrankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >*
      mutable_arrrankinfo();

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroGetLastStageRankRsp)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo > arrrankinfo_;
  ::google::protobuf::uint32 myrank_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroGetLastStageRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActBeaconFireHeroNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActBeaconFireHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActBeaconFireHeroNotify : public ::google::protobuf::Message {
 public:
  TActBeaconFireHeroNotify();
  virtual ~TActBeaconFireHeroNotify();

  TActBeaconFireHeroNotify(const TActBeaconFireHeroNotify& from);

  inline TActBeaconFireHeroNotify& operator=(const TActBeaconFireHeroNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActBeaconFireHeroNotify& default_instance();

  void Swap(TActBeaconFireHeroNotify* other);

  // implements Message ----------------------------------------------

  TActBeaconFireHeroNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActBeaconFireHeroNotify& from);
  void MergeFrom(const TActBeaconFireHeroNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroNotify</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroNotify</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  inline int arrgiftinfo_size() const;
  inline void clear_arrgiftinfo();
  static const int kArrGiftInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroNotify</name>
  	<Function>
  		<name>arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgiftinfo_size</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActBeaconFireHeroGiftInfo& arrgiftinfo(int index) const;
  inline ::pb::TActBeaconFireHeroGiftInfo* mutable_arrgiftinfo(int index);
  inline ::pb::TActBeaconFireHeroGiftInfo* add_arrgiftinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >&
      arrgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >*
      mutable_arrgiftinfo();

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  inline int arrtaskinfo_size() const;
  inline void clear_arrtaskinfo();
  static const int kArrTaskInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroNotify</name>
  	<Function>
  		<name>arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskinfo</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskinfo_size</name>
  		<replaceName>ArrTaskInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActBeaconFireHeroTaskInfo& arrtaskinfo(int index) const;
  inline ::pb::TActBeaconFireHeroTaskInfo* mutable_arrtaskinfo(int index);
  inline ::pb::TActBeaconFireHeroTaskInfo* add_arrtaskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >&
      arrtaskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >*
      mutable_arrtaskinfo();

  // optional uint32 StageRank = 5;
  inline bool has_stagerank() const;
  inline void clear_stagerank();
  static const int kStageRankFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroNotify</name>
  	<Function>
  		<name>stagerank</name>
  		<replaceName>StageRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_stagerank</name>
  		<replaceName>StageRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_stagerank</name>
  		<replaceName>StageRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 stagerank() const;
  inline void set_stagerank(::google::protobuf::uint32 value);

  // optional uint32 MaxStageRank = 6;
  inline bool has_maxstagerank() const;
  inline void clear_maxstagerank();
  static const int kMaxStageRankFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActBeaconFireHeroNotify</name>
  	<Function>
  		<name>maxstagerank</name>
  		<replaceName>MaxStageRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxstagerank</name>
  		<replaceName>MaxStageRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxstagerank</name>
  		<replaceName>MaxStageRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxstagerank() const;
  inline void set_maxstagerank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActBeaconFireHeroNotify)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_stagerank();
  inline void clear_has_stagerank();
  inline void set_has_maxstagerank();
  inline void clear_has_maxstagerank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo > arrgiftinfo_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 stagerank_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo > arrtaskinfo_;
  ::google::protobuf::uint32 maxstagerank_;
  friend void  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto();

  void InitAsDefaultInstance();
  static TActBeaconFireHeroNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActBeaconFireHeroGiftInfo

// optional uint32 Id = 1;
inline bool TActBeaconFireHeroGiftInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroGiftInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroGiftInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroGiftInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGiftInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGiftInfo.Id)
  return id_;
}
inline void TActBeaconFireHeroGiftInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGiftInfo.Id)
}

// optional uint32 Num = 2;
inline bool TActBeaconFireHeroGiftInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroGiftInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroGiftInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroGiftInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGiftInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGiftInfo.Num)
  return num_;
}
inline void TActBeaconFireHeroGiftInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGiftInfo.Num)
}

// optional uint64 BuyTime = 3;
inline bool TActBeaconFireHeroGiftInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActBeaconFireHeroGiftInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActBeaconFireHeroGiftInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActBeaconFireHeroGiftInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TActBeaconFireHeroGiftInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGiftInfo.BuyTime)
  return buytime_;
}
inline void TActBeaconFireHeroGiftInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGiftInfo.BuyTime)
}

// -------------------------------------------------------------------

// TActBeaconFireHeroTaskInfo

// optional uint32 Id = 1;
inline bool TActBeaconFireHeroTaskInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroTaskInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroTaskInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroTaskInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroTaskInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroTaskInfo.Id)
  return id_;
}
inline void TActBeaconFireHeroTaskInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroTaskInfo.Id)
}

// optional uint64 Num = 2;
inline bool TActBeaconFireHeroTaskInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroTaskInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroTaskInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroTaskInfo::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 TActBeaconFireHeroTaskInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroTaskInfo.Num)
  return num_;
}
inline void TActBeaconFireHeroTaskInfo::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroTaskInfo.Num)
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetInfoRsp

// optional uint32 Id = 1;
inline bool TActBeaconFireHeroGetInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroGetInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroGetInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroGetInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetInfoRsp::id() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.Id)
  return id_;
}
inline void TActBeaconFireHeroGetInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetInfoRsp.Id)
}

// optional uint64 Score = 2;
inline bool TActBeaconFireHeroGetInfoRsp::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroGetInfoRsp::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroGetInfoRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroGetInfoRsp::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 TActBeaconFireHeroGetInfoRsp::score() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.Score)
  return score_;
}
inline void TActBeaconFireHeroGetInfoRsp::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetInfoRsp.Score)
}

// repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
inline int TActBeaconFireHeroGetInfoRsp::arrgiftinfo_size() const {
  return arrgiftinfo_.size();
}
inline void TActBeaconFireHeroGetInfoRsp::clear_arrgiftinfo() {
  arrgiftinfo_.Clear();
}
inline const ::pb::TActBeaconFireHeroGiftInfo& TActBeaconFireHeroGetInfoRsp::arrgiftinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_.Get(index);
}
inline ::pb::TActBeaconFireHeroGiftInfo* TActBeaconFireHeroGetInfoRsp::mutable_arrgiftinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_.Mutable(index);
}
inline ::pb::TActBeaconFireHeroGiftInfo* TActBeaconFireHeroGetInfoRsp::add_arrgiftinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >&
TActBeaconFireHeroGetInfoRsp::arrgiftinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetInfoRsp.ArrGiftInfo)
  return arrgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >*
TActBeaconFireHeroGetInfoRsp::mutable_arrgiftinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetInfoRsp.ArrGiftInfo)
  return &arrgiftinfo_;
}

// repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
inline int TActBeaconFireHeroGetInfoRsp::arrtaskinfo_size() const {
  return arrtaskinfo_.size();
}
inline void TActBeaconFireHeroGetInfoRsp::clear_arrtaskinfo() {
  arrtaskinfo_.Clear();
}
inline const ::pb::TActBeaconFireHeroTaskInfo& TActBeaconFireHeroGetInfoRsp::arrtaskinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Get(index);
}
inline ::pb::TActBeaconFireHeroTaskInfo* TActBeaconFireHeroGetInfoRsp::mutable_arrtaskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Mutable(index);
}
inline ::pb::TActBeaconFireHeroTaskInfo* TActBeaconFireHeroGetInfoRsp::add_arrtaskinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >&
TActBeaconFireHeroGetInfoRsp::arrtaskinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetInfoRsp.ArrTaskInfo)
  return arrtaskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >*
TActBeaconFireHeroGetInfoRsp::mutable_arrtaskinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetInfoRsp.ArrTaskInfo)
  return &arrtaskinfo_;
}

// repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 5;
inline int TActBeaconFireHeroGetInfoRsp::arrscorerewardinfo_size() const {
  return arrscorerewardinfo_.size();
}
inline void TActBeaconFireHeroGetInfoRsp::clear_arrscorerewardinfo() {
  arrscorerewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TActBeaconFireHeroGetInfoRsp::arrscorerewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TActBeaconFireHeroGetInfoRsp::mutable_arrscorerewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TActBeaconFireHeroGetInfoRsp::add_arrscorerewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TActBeaconFireHeroGetInfoRsp::arrscorerewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetInfoRsp.ArrScoreRewardInfo)
  return arrscorerewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TActBeaconFireHeroGetInfoRsp::mutable_arrscorerewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetInfoRsp.ArrScoreRewardInfo)
  return &arrscorerewardinfo_;
}

// repeated int32 StageRankArr = 6;
inline int TActBeaconFireHeroGetInfoRsp::stagerankarr_size() const {
  return stagerankarr_.size();
}
inline void TActBeaconFireHeroGetInfoRsp::clear_stagerankarr() {
  stagerankarr_.Clear();
}
inline ::google::protobuf::int32 TActBeaconFireHeroGetInfoRsp::stagerankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.StageRankArr)
  return stagerankarr_.Get(index);
}
inline void TActBeaconFireHeroGetInfoRsp::set_stagerankarr(int index, ::google::protobuf::int32 value) {
  stagerankarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetInfoRsp.StageRankArr)
}
inline void TActBeaconFireHeroGetInfoRsp::add_stagerankarr(::google::protobuf::int32 value) {
  stagerankarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetInfoRsp.StageRankArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TActBeaconFireHeroGetInfoRsp::stagerankarr() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetInfoRsp.StageRankArr)
  return stagerankarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TActBeaconFireHeroGetInfoRsp::mutable_stagerankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetInfoRsp.StageRankArr)
  return &stagerankarr_;
}

// optional uint32 GroupId = 7;
inline bool TActBeaconFireHeroGetInfoRsp::has_groupid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TActBeaconFireHeroGetInfoRsp::set_has_groupid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TActBeaconFireHeroGetInfoRsp::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TActBeaconFireHeroGetInfoRsp::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetInfoRsp::groupid() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.GroupId)
  return groupid_;
}
inline void TActBeaconFireHeroGetInfoRsp::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetInfoRsp.GroupId)
}

// repeated int32 MaxStageRankArr = 8;
inline int TActBeaconFireHeroGetInfoRsp::maxstagerankarr_size() const {
  return maxstagerankarr_.size();
}
inline void TActBeaconFireHeroGetInfoRsp::clear_maxstagerankarr() {
  maxstagerankarr_.Clear();
}
inline ::google::protobuf::int32 TActBeaconFireHeroGetInfoRsp::maxstagerankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetInfoRsp.MaxStageRankArr)
  return maxstagerankarr_.Get(index);
}
inline void TActBeaconFireHeroGetInfoRsp::set_maxstagerankarr(int index, ::google::protobuf::int32 value) {
  maxstagerankarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetInfoRsp.MaxStageRankArr)
}
inline void TActBeaconFireHeroGetInfoRsp::add_maxstagerankarr(::google::protobuf::int32 value) {
  maxstagerankarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetInfoRsp.MaxStageRankArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TActBeaconFireHeroGetInfoRsp::maxstagerankarr() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetInfoRsp.MaxStageRankArr)
  return maxstagerankarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TActBeaconFireHeroGetInfoRsp::mutable_maxstagerankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetInfoRsp.MaxStageRankArr)
  return &maxstagerankarr_;
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetArrScoreRewardReq

// repeated uint32 ArrId = 1;
inline int TActBeaconFireHeroGetArrScoreRewardReq::arrid_size() const {
  return arrid_.size();
}
inline void TActBeaconFireHeroGetArrScoreRewardReq::clear_arrid() {
  arrid_.Clear();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetArrScoreRewardReq::arrid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetArrScoreRewardReq.ArrId)
  return arrid_.Get(index);
}
inline void TActBeaconFireHeroGetArrScoreRewardReq::set_arrid(int index, ::google::protobuf::uint32 value) {
  arrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetArrScoreRewardReq.ArrId)
}
inline void TActBeaconFireHeroGetArrScoreRewardReq::add_arrid(::google::protobuf::uint32 value) {
  arrid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetArrScoreRewardReq.ArrId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActBeaconFireHeroGetArrScoreRewardReq::arrid() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetArrScoreRewardReq.ArrId)
  return arrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActBeaconFireHeroGetArrScoreRewardReq::mutable_arrid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetArrScoreRewardReq.ArrId)
  return &arrid_;
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetArrScoreRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActBeaconFireHeroGetArrScoreRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActBeaconFireHeroGetArrScoreRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActBeaconFireHeroGetArrScoreRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetArrScoreRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActBeaconFireHeroGetArrScoreRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroGetArrScoreRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActBeaconFireHeroGetArrScoreRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetArrScoreRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActBeaconFireHeroGetArrScoreRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetArrScoreRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActBeaconFireHeroGetArrScoreRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetArrScoreRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActBeaconFireHeroRankInfo

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TActBeaconFireHeroRankInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroRankInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroRankInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroRankInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TActBeaconFireHeroRankInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroRankInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TActBeaconFireHeroRankInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroRankInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TActBeaconFireHeroRankInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TActBeaconFireHeroRankInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActBeaconFireHeroRankInfo.UserInfo)
}

// optional uint32 Rank = 2;
inline bool TActBeaconFireHeroRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroRankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroRankInfo.Rank)
  return rank_;
}
inline void TActBeaconFireHeroRankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroRankInfo.Rank)
}

// optional uint64 Score = 3;
inline bool TActBeaconFireHeroRankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActBeaconFireHeroRankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActBeaconFireHeroRankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActBeaconFireHeroRankInfo::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 TActBeaconFireHeroRankInfo::score() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroRankInfo.Score)
  return score_;
}
inline void TActBeaconFireHeroRankInfo::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroRankInfo.Score)
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetStageRankReq

// optional uint32 Offset = 1;
inline bool TActBeaconFireHeroGetStageRankReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroGetStageRankReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroGetStageRankReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroGetStageRankReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetStageRankReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetStageRankReq.Offset)
  return offset_;
}
inline void TActBeaconFireHeroGetStageRankReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetStageRankReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TActBeaconFireHeroGetStageRankReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroGetStageRankReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroGetStageRankReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroGetStageRankReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetStageRankReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetStageRankReq.Limit)
  return limit_;
}
inline void TActBeaconFireHeroGetStageRankReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetStageRankReq.Limit)
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetStageRankRsp

// repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 1;
inline int TActBeaconFireHeroGetStageRankRsp::arrrankinfo_size() const {
  return arrrankinfo_.size();
}
inline void TActBeaconFireHeroGetStageRankRsp::clear_arrrankinfo() {
  arrrankinfo_.Clear();
}
inline const ::pb::TActBeaconFireHeroRankInfo& TActBeaconFireHeroGetStageRankRsp::arrrankinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Get(index);
}
inline ::pb::TActBeaconFireHeroRankInfo* TActBeaconFireHeroGetStageRankRsp::mutable_arrrankinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Mutable(index);
}
inline ::pb::TActBeaconFireHeroRankInfo* TActBeaconFireHeroGetStageRankRsp::add_arrrankinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >&
TActBeaconFireHeroGetStageRankRsp::arrrankinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetStageRankRsp.ArrRankInfo)
  return arrrankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >*
TActBeaconFireHeroGetStageRankRsp::mutable_arrrankinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetStageRankRsp.ArrRankInfo)
  return &arrrankinfo_;
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetLastStageRankReq

// optional uint32 Offset = 1;
inline bool TActBeaconFireHeroGetLastStageRankReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroGetLastStageRankReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroGetLastStageRankReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroGetLastStageRankReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetLastStageRankReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetLastStageRankReq.Offset)
  return offset_;
}
inline void TActBeaconFireHeroGetLastStageRankReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetLastStageRankReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TActBeaconFireHeroGetLastStageRankReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroGetLastStageRankReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroGetLastStageRankReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroGetLastStageRankReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetLastStageRankReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetLastStageRankReq.Limit)
  return limit_;
}
inline void TActBeaconFireHeroGetLastStageRankReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetLastStageRankReq.Limit)
}

// -------------------------------------------------------------------

// TActBeaconFireHeroGetLastStageRankRsp

// optional uint32 MyRank = 1;
inline bool TActBeaconFireHeroGetLastStageRankRsp::has_myrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroGetLastStageRankRsp::set_has_myrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroGetLastStageRankRsp::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroGetLastStageRankRsp::clear_myrank() {
  myrank_ = 0u;
  clear_has_myrank();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroGetLastStageRankRsp::myrank() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetLastStageRankRsp.MyRank)
  return myrank_;
}
inline void TActBeaconFireHeroGetLastStageRankRsp::set_myrank(::google::protobuf::uint32 value) {
  set_has_myrank();
  myrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroGetLastStageRankRsp.MyRank)
}

// repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 2;
inline int TActBeaconFireHeroGetLastStageRankRsp::arrrankinfo_size() const {
  return arrrankinfo_.size();
}
inline void TActBeaconFireHeroGetLastStageRankRsp::clear_arrrankinfo() {
  arrrankinfo_.Clear();
}
inline const ::pb::TActBeaconFireHeroRankInfo& TActBeaconFireHeroGetLastStageRankRsp::arrrankinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroGetLastStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Get(index);
}
inline ::pb::TActBeaconFireHeroRankInfo* TActBeaconFireHeroGetLastStageRankRsp::mutable_arrrankinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroGetLastStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Mutable(index);
}
inline ::pb::TActBeaconFireHeroRankInfo* TActBeaconFireHeroGetLastStageRankRsp::add_arrrankinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroGetLastStageRankRsp.ArrRankInfo)
  return arrrankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >&
TActBeaconFireHeroGetLastStageRankRsp::arrrankinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroGetLastStageRankRsp.ArrRankInfo)
  return arrrankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroRankInfo >*
TActBeaconFireHeroGetLastStageRankRsp::mutable_arrrankinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroGetLastStageRankRsp.ArrRankInfo)
  return &arrrankinfo_;
}

// -------------------------------------------------------------------

// TActBeaconFireHeroNotify

// optional uint32 Id = 1;
inline bool TActBeaconFireHeroNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActBeaconFireHeroNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActBeaconFireHeroNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActBeaconFireHeroNotify::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroNotify::id() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroNotify.Id)
  return id_;
}
inline void TActBeaconFireHeroNotify::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroNotify.Id)
}

// optional uint64 Score = 2;
inline bool TActBeaconFireHeroNotify::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActBeaconFireHeroNotify::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActBeaconFireHeroNotify::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActBeaconFireHeroNotify::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 TActBeaconFireHeroNotify::score() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroNotify.Score)
  return score_;
}
inline void TActBeaconFireHeroNotify::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroNotify.Score)
}

// repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
inline int TActBeaconFireHeroNotify::arrgiftinfo_size() const {
  return arrgiftinfo_.size();
}
inline void TActBeaconFireHeroNotify::clear_arrgiftinfo() {
  arrgiftinfo_.Clear();
}
inline const ::pb::TActBeaconFireHeroGiftInfo& TActBeaconFireHeroNotify::arrgiftinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroNotify.ArrGiftInfo)
  return arrgiftinfo_.Get(index);
}
inline ::pb::TActBeaconFireHeroGiftInfo* TActBeaconFireHeroNotify::mutable_arrgiftinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroNotify.ArrGiftInfo)
  return arrgiftinfo_.Mutable(index);
}
inline ::pb::TActBeaconFireHeroGiftInfo* TActBeaconFireHeroNotify::add_arrgiftinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroNotify.ArrGiftInfo)
  return arrgiftinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >&
TActBeaconFireHeroNotify::arrgiftinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroNotify.ArrGiftInfo)
  return arrgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroGiftInfo >*
TActBeaconFireHeroNotify::mutable_arrgiftinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroNotify.ArrGiftInfo)
  return &arrgiftinfo_;
}

// repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
inline int TActBeaconFireHeroNotify::arrtaskinfo_size() const {
  return arrtaskinfo_.size();
}
inline void TActBeaconFireHeroNotify::clear_arrtaskinfo() {
  arrtaskinfo_.Clear();
}
inline const ::pb::TActBeaconFireHeroTaskInfo& TActBeaconFireHeroNotify::arrtaskinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroNotify.ArrTaskInfo)
  return arrtaskinfo_.Get(index);
}
inline ::pb::TActBeaconFireHeroTaskInfo* TActBeaconFireHeroNotify::mutable_arrtaskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActBeaconFireHeroNotify.ArrTaskInfo)
  return arrtaskinfo_.Mutable(index);
}
inline ::pb::TActBeaconFireHeroTaskInfo* TActBeaconFireHeroNotify::add_arrtaskinfo() {
  // @@protoc_insertion_point(field_add:pb.TActBeaconFireHeroNotify.ArrTaskInfo)
  return arrtaskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >&
TActBeaconFireHeroNotify::arrtaskinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActBeaconFireHeroNotify.ArrTaskInfo)
  return arrtaskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActBeaconFireHeroTaskInfo >*
TActBeaconFireHeroNotify::mutable_arrtaskinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActBeaconFireHeroNotify.ArrTaskInfo)
  return &arrtaskinfo_;
}

// optional uint32 StageRank = 5;
inline bool TActBeaconFireHeroNotify::has_stagerank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TActBeaconFireHeroNotify::set_has_stagerank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TActBeaconFireHeroNotify::clear_has_stagerank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TActBeaconFireHeroNotify::clear_stagerank() {
  stagerank_ = 0u;
  clear_has_stagerank();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroNotify::stagerank() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroNotify.StageRank)
  return stagerank_;
}
inline void TActBeaconFireHeroNotify::set_stagerank(::google::protobuf::uint32 value) {
  set_has_stagerank();
  stagerank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroNotify.StageRank)
}

// optional uint32 MaxStageRank = 6;
inline bool TActBeaconFireHeroNotify::has_maxstagerank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TActBeaconFireHeroNotify::set_has_maxstagerank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TActBeaconFireHeroNotify::clear_has_maxstagerank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TActBeaconFireHeroNotify::clear_maxstagerank() {
  maxstagerank_ = 0u;
  clear_has_maxstagerank();
}
inline ::google::protobuf::uint32 TActBeaconFireHeroNotify::maxstagerank() const {
  // @@protoc_insertion_point(field_get:pb.TActBeaconFireHeroNotify.MaxStageRank)
  return maxstagerank_;
}
inline void TActBeaconFireHeroNotify::set_maxstagerank(::google::protobuf::uint32 value) {
  set_has_maxstagerank();
  maxstagerank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActBeaconFireHeroNotify.MaxStageRank)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActBeaconFireHero_2eproto__INCLUDED
