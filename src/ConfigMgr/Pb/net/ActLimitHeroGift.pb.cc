// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActLimitHeroGift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActLimitHeroGift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActLimitHeroGiftTryOutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLimitHeroGiftTryOutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLimitHeroGiftExchangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLimitHeroGiftExchangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLimitHeroGiftGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLimitHeroGiftGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLimitHeroGiftBoughtGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLimitHeroGiftBoughtGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLimitHeroGiftExchangedHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLimitHeroGiftExchangedHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActLimitHeroGiftRmbGoodsNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActLimitHeroGiftRmbGoodsNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto() {
  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActLimitHeroGift.proto");
  GOOGLE_CHECK(file != NULL);
  TActLimitHeroGiftTryOutReq_descriptor_ = file->message_type(0);
  static const int TActLimitHeroGiftTryOutReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftTryOutReq, exchangeid_),
  };
  TActLimitHeroGiftTryOutReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLimitHeroGiftTryOutReq_descriptor_,
      TActLimitHeroGiftTryOutReq::default_instance_,
      TActLimitHeroGiftTryOutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftTryOutReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftTryOutReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLimitHeroGiftTryOutReq));
  TActLimitHeroGiftExchangeReq_descriptor_ = file->message_type(1);
  static const int TActLimitHeroGiftExchangeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangeReq, exchangeid_),
  };
  TActLimitHeroGiftExchangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLimitHeroGiftExchangeReq_descriptor_,
      TActLimitHeroGiftExchangeReq::default_instance_,
      TActLimitHeroGiftExchangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLimitHeroGiftExchangeReq));
  TActLimitHeroGiftGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TActLimitHeroGiftGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftGetInfoRsp, boughtgiftinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftGetInfoRsp, heroinfoarr_),
  };
  TActLimitHeroGiftGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLimitHeroGiftGetInfoRsp_descriptor_,
      TActLimitHeroGiftGetInfoRsp::default_instance_,
      TActLimitHeroGiftGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLimitHeroGiftGetInfoRsp));
  TActLimitHeroGiftBoughtGiftInfo_descriptor_ = file->message_type(3);
  static const int TActLimitHeroGiftBoughtGiftInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftBoughtGiftInfo, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftBoughtGiftInfo, boughtnum_),
  };
  TActLimitHeroGiftBoughtGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLimitHeroGiftBoughtGiftInfo_descriptor_,
      TActLimitHeroGiftBoughtGiftInfo::default_instance_,
      TActLimitHeroGiftBoughtGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftBoughtGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftBoughtGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLimitHeroGiftBoughtGiftInfo));
  TActLimitHeroGiftExchangedHeroInfo_descriptor_ = file->message_type(4);
  static const int TActLimitHeroGiftExchangedHeroInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangedHeroInfo, exchangeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangedHeroInfo, tryoutstarttime_),
  };
  TActLimitHeroGiftExchangedHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLimitHeroGiftExchangedHeroInfo_descriptor_,
      TActLimitHeroGiftExchangedHeroInfo::default_instance_,
      TActLimitHeroGiftExchangedHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangedHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftExchangedHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLimitHeroGiftExchangedHeroInfo));
  TActLimitHeroGiftRmbGoodsNotify_descriptor_ = file->message_type(5);
  static const int TActLimitHeroGiftRmbGoodsNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftRmbGoodsNotify, boughtgiftinfoarr_),
  };
  TActLimitHeroGiftRmbGoodsNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActLimitHeroGiftRmbGoodsNotify_descriptor_,
      TActLimitHeroGiftRmbGoodsNotify::default_instance_,
      TActLimitHeroGiftRmbGoodsNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftRmbGoodsNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActLimitHeroGiftRmbGoodsNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActLimitHeroGiftRmbGoodsNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLimitHeroGiftTryOutReq_descriptor_, &TActLimitHeroGiftTryOutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLimitHeroGiftExchangeReq_descriptor_, &TActLimitHeroGiftExchangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLimitHeroGiftGetInfoRsp_descriptor_, &TActLimitHeroGiftGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLimitHeroGiftBoughtGiftInfo_descriptor_, &TActLimitHeroGiftBoughtGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLimitHeroGiftExchangedHeroInfo_descriptor_, &TActLimitHeroGiftExchangedHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActLimitHeroGiftRmbGoodsNotify_descriptor_, &TActLimitHeroGiftRmbGoodsNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto() {
  delete TActLimitHeroGiftTryOutReq::default_instance_;
  delete TActLimitHeroGiftTryOutReq_reflection_;
  delete TActLimitHeroGiftExchangeReq::default_instance_;
  delete TActLimitHeroGiftExchangeReq_reflection_;
  delete TActLimitHeroGiftGetInfoRsp::default_instance_;
  delete TActLimitHeroGiftGetInfoRsp_reflection_;
  delete TActLimitHeroGiftBoughtGiftInfo::default_instance_;
  delete TActLimitHeroGiftBoughtGiftInfo_reflection_;
  delete TActLimitHeroGiftExchangedHeroInfo::default_instance_;
  delete TActLimitHeroGiftExchangedHeroInfo_reflection_;
  delete TActLimitHeroGiftRmbGoodsNotify::default_instance_;
  delete TActLimitHeroGiftRmbGoodsNotify_reflection_;
}

void protobuf_AddDesc_net_2fActLimitHeroGift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032net/ActLimitHeroGift.proto\022\002pb\"0\n\032TAct"
    "LimitHeroGiftTryOutReq\022\022\n\nExchangeId\030\001 \001"
    "(\r\"2\n\034TActLimitHeroGiftExchangeReq\022\022\n\nEx"
    "changeId\030\001 \001(\r\"\232\001\n\033TActLimitHeroGiftGetI"
    "nfoRsp\022>\n\021BoughtGiftInfoArr\030\001 \003(\0132#.pb.T"
    "ActLimitHeroGiftBoughtGiftInfo\022;\n\013HeroIn"
    "foArr\030\002 \003(\0132&.pb.TActLimitHeroGiftExchan"
    "gedHeroInfo\"D\n\037TActLimitHeroGiftBoughtGi"
    "ftInfo\022\016\n\006GiftId\030\001 \001(\r\022\021\n\tBoughtNum\030\002 \001("
    "\r\"Q\n\"TActLimitHeroGiftExchangedHeroInfo\022"
    "\022\n\nExchangeId\030\001 \001(\r\022\027\n\017TryOutStartTime\030\002"
    " \001(\004\"a\n\037TActLimitHeroGiftRmbGoodsNotify\022"
    ">\n\021BoughtGiftInfoArr\030\001 \003(\0132#.pb.TActLimi"
    "tHeroGiftBoughtGiftInfo", 543);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActLimitHeroGift.proto", &protobuf_RegisterTypes);
  TActLimitHeroGiftTryOutReq::default_instance_ = new TActLimitHeroGiftTryOutReq();
  TActLimitHeroGiftExchangeReq::default_instance_ = new TActLimitHeroGiftExchangeReq();
  TActLimitHeroGiftGetInfoRsp::default_instance_ = new TActLimitHeroGiftGetInfoRsp();
  TActLimitHeroGiftBoughtGiftInfo::default_instance_ = new TActLimitHeroGiftBoughtGiftInfo();
  TActLimitHeroGiftExchangedHeroInfo::default_instance_ = new TActLimitHeroGiftExchangedHeroInfo();
  TActLimitHeroGiftRmbGoodsNotify::default_instance_ = new TActLimitHeroGiftRmbGoodsNotify();
  TActLimitHeroGiftTryOutReq::default_instance_->InitAsDefaultInstance();
  TActLimitHeroGiftExchangeReq::default_instance_->InitAsDefaultInstance();
  TActLimitHeroGiftGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActLimitHeroGiftBoughtGiftInfo::default_instance_->InitAsDefaultInstance();
  TActLimitHeroGiftExchangedHeroInfo::default_instance_->InitAsDefaultInstance();
  TActLimitHeroGiftRmbGoodsNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActLimitHeroGift_2eproto {
  StaticDescriptorInitializer_net_2fActLimitHeroGift_2eproto() {
    protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  }
} static_descriptor_initializer_net_2fActLimitHeroGift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActLimitHeroGiftTryOutReq::kExchangeIdFieldNumber;
#endif  // !_MSC_VER

TActLimitHeroGiftTryOutReq::TActLimitHeroGiftTryOutReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLimitHeroGiftTryOutReq)
}

void TActLimitHeroGiftTryOutReq::InitAsDefaultInstance() {
}

TActLimitHeroGiftTryOutReq::TActLimitHeroGiftTryOutReq(const TActLimitHeroGiftTryOutReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLimitHeroGiftTryOutReq)
}

void TActLimitHeroGiftTryOutReq::SharedCtor() {
  _cached_size_ = 0;
  exchangeid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLimitHeroGiftTryOutReq::~TActLimitHeroGiftTryOutReq() {
  // @@protoc_insertion_point(destructor:pb.TActLimitHeroGiftTryOutReq)
  SharedDtor();
}

void TActLimitHeroGiftTryOutReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLimitHeroGiftTryOutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLimitHeroGiftTryOutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLimitHeroGiftTryOutReq_descriptor_;
}

const TActLimitHeroGiftTryOutReq& TActLimitHeroGiftTryOutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  return *default_instance_;
}

TActLimitHeroGiftTryOutReq* TActLimitHeroGiftTryOutReq::default_instance_ = NULL;

TActLimitHeroGiftTryOutReq* TActLimitHeroGiftTryOutReq::New() const {
  return new TActLimitHeroGiftTryOutReq;
}

void TActLimitHeroGiftTryOutReq::Clear() {
  exchangeid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLimitHeroGiftTryOutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLimitHeroGiftTryOutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ExchangeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangeid_)));
          set_has_exchangeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLimitHeroGiftTryOutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLimitHeroGiftTryOutReq)
  return false;
#undef DO_
}

void TActLimitHeroGiftTryOutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLimitHeroGiftTryOutReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exchangeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLimitHeroGiftTryOutReq)
}

::google::protobuf::uint8* TActLimitHeroGiftTryOutReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLimitHeroGiftTryOutReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exchangeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLimitHeroGiftTryOutReq)
  return target;
}

int TActLimitHeroGiftTryOutReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ExchangeId = 1;
    if (has_exchangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchangeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLimitHeroGiftTryOutReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLimitHeroGiftTryOutReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLimitHeroGiftTryOutReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLimitHeroGiftTryOutReq::MergeFrom(const TActLimitHeroGiftTryOutReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchangeid()) {
      set_exchangeid(from.exchangeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLimitHeroGiftTryOutReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLimitHeroGiftTryOutReq::CopyFrom(const TActLimitHeroGiftTryOutReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLimitHeroGiftTryOutReq::IsInitialized() const {

  return true;
}

void TActLimitHeroGiftTryOutReq::Swap(TActLimitHeroGiftTryOutReq* other) {
  if (other != this) {
    std::swap(exchangeid_, other->exchangeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLimitHeroGiftTryOutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLimitHeroGiftTryOutReq_descriptor_;
  metadata.reflection = TActLimitHeroGiftTryOutReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLimitHeroGiftExchangeReq::kExchangeIdFieldNumber;
#endif  // !_MSC_VER

TActLimitHeroGiftExchangeReq::TActLimitHeroGiftExchangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLimitHeroGiftExchangeReq)
}

void TActLimitHeroGiftExchangeReq::InitAsDefaultInstance() {
}

TActLimitHeroGiftExchangeReq::TActLimitHeroGiftExchangeReq(const TActLimitHeroGiftExchangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLimitHeroGiftExchangeReq)
}

void TActLimitHeroGiftExchangeReq::SharedCtor() {
  _cached_size_ = 0;
  exchangeid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLimitHeroGiftExchangeReq::~TActLimitHeroGiftExchangeReq() {
  // @@protoc_insertion_point(destructor:pb.TActLimitHeroGiftExchangeReq)
  SharedDtor();
}

void TActLimitHeroGiftExchangeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLimitHeroGiftExchangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLimitHeroGiftExchangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLimitHeroGiftExchangeReq_descriptor_;
}

const TActLimitHeroGiftExchangeReq& TActLimitHeroGiftExchangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  return *default_instance_;
}

TActLimitHeroGiftExchangeReq* TActLimitHeroGiftExchangeReq::default_instance_ = NULL;

TActLimitHeroGiftExchangeReq* TActLimitHeroGiftExchangeReq::New() const {
  return new TActLimitHeroGiftExchangeReq;
}

void TActLimitHeroGiftExchangeReq::Clear() {
  exchangeid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLimitHeroGiftExchangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLimitHeroGiftExchangeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ExchangeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangeid_)));
          set_has_exchangeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLimitHeroGiftExchangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLimitHeroGiftExchangeReq)
  return false;
#undef DO_
}

void TActLimitHeroGiftExchangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLimitHeroGiftExchangeReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exchangeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLimitHeroGiftExchangeReq)
}

::google::protobuf::uint8* TActLimitHeroGiftExchangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLimitHeroGiftExchangeReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exchangeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLimitHeroGiftExchangeReq)
  return target;
}

int TActLimitHeroGiftExchangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ExchangeId = 1;
    if (has_exchangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchangeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLimitHeroGiftExchangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLimitHeroGiftExchangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLimitHeroGiftExchangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLimitHeroGiftExchangeReq::MergeFrom(const TActLimitHeroGiftExchangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchangeid()) {
      set_exchangeid(from.exchangeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLimitHeroGiftExchangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLimitHeroGiftExchangeReq::CopyFrom(const TActLimitHeroGiftExchangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLimitHeroGiftExchangeReq::IsInitialized() const {

  return true;
}

void TActLimitHeroGiftExchangeReq::Swap(TActLimitHeroGiftExchangeReq* other) {
  if (other != this) {
    std::swap(exchangeid_, other->exchangeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLimitHeroGiftExchangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLimitHeroGiftExchangeReq_descriptor_;
  metadata.reflection = TActLimitHeroGiftExchangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLimitHeroGiftGetInfoRsp::kBoughtGiftInfoArrFieldNumber;
const int TActLimitHeroGiftGetInfoRsp::kHeroInfoArrFieldNumber;
#endif  // !_MSC_VER

TActLimitHeroGiftGetInfoRsp::TActLimitHeroGiftGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLimitHeroGiftGetInfoRsp)
}

void TActLimitHeroGiftGetInfoRsp::InitAsDefaultInstance() {
}

TActLimitHeroGiftGetInfoRsp::TActLimitHeroGiftGetInfoRsp(const TActLimitHeroGiftGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLimitHeroGiftGetInfoRsp)
}

void TActLimitHeroGiftGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLimitHeroGiftGetInfoRsp::~TActLimitHeroGiftGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActLimitHeroGiftGetInfoRsp)
  SharedDtor();
}

void TActLimitHeroGiftGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLimitHeroGiftGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLimitHeroGiftGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLimitHeroGiftGetInfoRsp_descriptor_;
}

const TActLimitHeroGiftGetInfoRsp& TActLimitHeroGiftGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  return *default_instance_;
}

TActLimitHeroGiftGetInfoRsp* TActLimitHeroGiftGetInfoRsp::default_instance_ = NULL;

TActLimitHeroGiftGetInfoRsp* TActLimitHeroGiftGetInfoRsp::New() const {
  return new TActLimitHeroGiftGetInfoRsp;
}

void TActLimitHeroGiftGetInfoRsp::Clear() {
  boughtgiftinfoarr_.Clear();
  heroinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLimitHeroGiftGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLimitHeroGiftGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BoughtGiftInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_boughtgiftinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BoughtGiftInfoArr;
        if (input->ExpectTag(18)) goto parse_HeroInfoArr;
        break;
      }

      // repeated .pb.TActLimitHeroGiftExchangedHeroInfo HeroInfoArr = 2;
      case 2: {
        if (tag == 18) {
         parse_HeroInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heroinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLimitHeroGiftGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLimitHeroGiftGetInfoRsp)
  return false;
#undef DO_
}

void TActLimitHeroGiftGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLimitHeroGiftGetInfoRsp)
  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  for (int i = 0; i < this->boughtgiftinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->boughtgiftinfoarr(i), output);
  }

  // repeated .pb.TActLimitHeroGiftExchangedHeroInfo HeroInfoArr = 2;
  for (int i = 0; i < this->heroinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heroinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLimitHeroGiftGetInfoRsp)
}

::google::protobuf::uint8* TActLimitHeroGiftGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLimitHeroGiftGetInfoRsp)
  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  for (int i = 0; i < this->boughtgiftinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->boughtgiftinfoarr(i), target);
  }

  // repeated .pb.TActLimitHeroGiftExchangedHeroInfo HeroInfoArr = 2;
  for (int i = 0; i < this->heroinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heroinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLimitHeroGiftGetInfoRsp)
  return target;
}

int TActLimitHeroGiftGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  total_size += 1 * this->boughtgiftinfoarr_size();
  for (int i = 0; i < this->boughtgiftinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boughtgiftinfoarr(i));
  }

  // repeated .pb.TActLimitHeroGiftExchangedHeroInfo HeroInfoArr = 2;
  total_size += 1 * this->heroinfoarr_size();
  for (int i = 0; i < this->heroinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heroinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLimitHeroGiftGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLimitHeroGiftGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLimitHeroGiftGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLimitHeroGiftGetInfoRsp::MergeFrom(const TActLimitHeroGiftGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  boughtgiftinfoarr_.MergeFrom(from.boughtgiftinfoarr_);
  heroinfoarr_.MergeFrom(from.heroinfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLimitHeroGiftGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLimitHeroGiftGetInfoRsp::CopyFrom(const TActLimitHeroGiftGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLimitHeroGiftGetInfoRsp::IsInitialized() const {

  return true;
}

void TActLimitHeroGiftGetInfoRsp::Swap(TActLimitHeroGiftGetInfoRsp* other) {
  if (other != this) {
    boughtgiftinfoarr_.Swap(&other->boughtgiftinfoarr_);
    heroinfoarr_.Swap(&other->heroinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLimitHeroGiftGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLimitHeroGiftGetInfoRsp_descriptor_;
  metadata.reflection = TActLimitHeroGiftGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLimitHeroGiftBoughtGiftInfo::kGiftIdFieldNumber;
const int TActLimitHeroGiftBoughtGiftInfo::kBoughtNumFieldNumber;
#endif  // !_MSC_VER

TActLimitHeroGiftBoughtGiftInfo::TActLimitHeroGiftBoughtGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLimitHeroGiftBoughtGiftInfo)
}

void TActLimitHeroGiftBoughtGiftInfo::InitAsDefaultInstance() {
}

TActLimitHeroGiftBoughtGiftInfo::TActLimitHeroGiftBoughtGiftInfo(const TActLimitHeroGiftBoughtGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLimitHeroGiftBoughtGiftInfo)
}

void TActLimitHeroGiftBoughtGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  giftid_ = 0u;
  boughtnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLimitHeroGiftBoughtGiftInfo::~TActLimitHeroGiftBoughtGiftInfo() {
  // @@protoc_insertion_point(destructor:pb.TActLimitHeroGiftBoughtGiftInfo)
  SharedDtor();
}

void TActLimitHeroGiftBoughtGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLimitHeroGiftBoughtGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLimitHeroGiftBoughtGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLimitHeroGiftBoughtGiftInfo_descriptor_;
}

const TActLimitHeroGiftBoughtGiftInfo& TActLimitHeroGiftBoughtGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  return *default_instance_;
}

TActLimitHeroGiftBoughtGiftInfo* TActLimitHeroGiftBoughtGiftInfo::default_instance_ = NULL;

TActLimitHeroGiftBoughtGiftInfo* TActLimitHeroGiftBoughtGiftInfo::New() const {
  return new TActLimitHeroGiftBoughtGiftInfo;
}

void TActLimitHeroGiftBoughtGiftInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLimitHeroGiftBoughtGiftInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(giftid_, boughtnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLimitHeroGiftBoughtGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLimitHeroGiftBoughtGiftInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GiftId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoughtNum;
        break;
      }

      // optional uint32 BoughtNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BoughtNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boughtnum_)));
          set_has_boughtnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLimitHeroGiftBoughtGiftInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLimitHeroGiftBoughtGiftInfo)
  return false;
#undef DO_
}

void TActLimitHeroGiftBoughtGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLimitHeroGiftBoughtGiftInfo)
  // optional uint32 GiftId = 1;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giftid(), output);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boughtnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLimitHeroGiftBoughtGiftInfo)
}

::google::protobuf::uint8* TActLimitHeroGiftBoughtGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLimitHeroGiftBoughtGiftInfo)
  // optional uint32 GiftId = 1;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giftid(), target);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boughtnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLimitHeroGiftBoughtGiftInfo)
  return target;
}

int TActLimitHeroGiftBoughtGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GiftId = 1;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftid());
    }

    // optional uint32 BoughtNum = 2;
    if (has_boughtnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boughtnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLimitHeroGiftBoughtGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLimitHeroGiftBoughtGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLimitHeroGiftBoughtGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLimitHeroGiftBoughtGiftInfo::MergeFrom(const TActLimitHeroGiftBoughtGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
    if (from.has_boughtnum()) {
      set_boughtnum(from.boughtnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLimitHeroGiftBoughtGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLimitHeroGiftBoughtGiftInfo::CopyFrom(const TActLimitHeroGiftBoughtGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLimitHeroGiftBoughtGiftInfo::IsInitialized() const {

  return true;
}

void TActLimitHeroGiftBoughtGiftInfo::Swap(TActLimitHeroGiftBoughtGiftInfo* other) {
  if (other != this) {
    std::swap(giftid_, other->giftid_);
    std::swap(boughtnum_, other->boughtnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLimitHeroGiftBoughtGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLimitHeroGiftBoughtGiftInfo_descriptor_;
  metadata.reflection = TActLimitHeroGiftBoughtGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLimitHeroGiftExchangedHeroInfo::kExchangeIdFieldNumber;
const int TActLimitHeroGiftExchangedHeroInfo::kTryOutStartTimeFieldNumber;
#endif  // !_MSC_VER

TActLimitHeroGiftExchangedHeroInfo::TActLimitHeroGiftExchangedHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLimitHeroGiftExchangedHeroInfo)
}

void TActLimitHeroGiftExchangedHeroInfo::InitAsDefaultInstance() {
}

TActLimitHeroGiftExchangedHeroInfo::TActLimitHeroGiftExchangedHeroInfo(const TActLimitHeroGiftExchangedHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLimitHeroGiftExchangedHeroInfo)
}

void TActLimitHeroGiftExchangedHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  exchangeid_ = 0u;
  tryoutstarttime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLimitHeroGiftExchangedHeroInfo::~TActLimitHeroGiftExchangedHeroInfo() {
  // @@protoc_insertion_point(destructor:pb.TActLimitHeroGiftExchangedHeroInfo)
  SharedDtor();
}

void TActLimitHeroGiftExchangedHeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLimitHeroGiftExchangedHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLimitHeroGiftExchangedHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLimitHeroGiftExchangedHeroInfo_descriptor_;
}

const TActLimitHeroGiftExchangedHeroInfo& TActLimitHeroGiftExchangedHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  return *default_instance_;
}

TActLimitHeroGiftExchangedHeroInfo* TActLimitHeroGiftExchangedHeroInfo::default_instance_ = NULL;

TActLimitHeroGiftExchangedHeroInfo* TActLimitHeroGiftExchangedHeroInfo::New() const {
  return new TActLimitHeroGiftExchangedHeroInfo;
}

void TActLimitHeroGiftExchangedHeroInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActLimitHeroGiftExchangedHeroInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tryoutstarttime_, exchangeid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLimitHeroGiftExchangedHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLimitHeroGiftExchangedHeroInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ExchangeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangeid_)));
          set_has_exchangeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TryOutStartTime;
        break;
      }

      // optional uint64 TryOutStartTime = 2;
      case 2: {
        if (tag == 16) {
         parse_TryOutStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tryoutstarttime_)));
          set_has_tryoutstarttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLimitHeroGiftExchangedHeroInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLimitHeroGiftExchangedHeroInfo)
  return false;
#undef DO_
}

void TActLimitHeroGiftExchangedHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLimitHeroGiftExchangedHeroInfo)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exchangeid(), output);
  }

  // optional uint64 TryOutStartTime = 2;
  if (has_tryoutstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tryoutstarttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLimitHeroGiftExchangedHeroInfo)
}

::google::protobuf::uint8* TActLimitHeroGiftExchangedHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLimitHeroGiftExchangedHeroInfo)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exchangeid(), target);
  }

  // optional uint64 TryOutStartTime = 2;
  if (has_tryoutstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tryoutstarttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLimitHeroGiftExchangedHeroInfo)
  return target;
}

int TActLimitHeroGiftExchangedHeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ExchangeId = 1;
    if (has_exchangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchangeid());
    }

    // optional uint64 TryOutStartTime = 2;
    if (has_tryoutstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tryoutstarttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLimitHeroGiftExchangedHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLimitHeroGiftExchangedHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLimitHeroGiftExchangedHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLimitHeroGiftExchangedHeroInfo::MergeFrom(const TActLimitHeroGiftExchangedHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchangeid()) {
      set_exchangeid(from.exchangeid());
    }
    if (from.has_tryoutstarttime()) {
      set_tryoutstarttime(from.tryoutstarttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLimitHeroGiftExchangedHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLimitHeroGiftExchangedHeroInfo::CopyFrom(const TActLimitHeroGiftExchangedHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLimitHeroGiftExchangedHeroInfo::IsInitialized() const {

  return true;
}

void TActLimitHeroGiftExchangedHeroInfo::Swap(TActLimitHeroGiftExchangedHeroInfo* other) {
  if (other != this) {
    std::swap(exchangeid_, other->exchangeid_);
    std::swap(tryoutstarttime_, other->tryoutstarttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLimitHeroGiftExchangedHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLimitHeroGiftExchangedHeroInfo_descriptor_;
  metadata.reflection = TActLimitHeroGiftExchangedHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActLimitHeroGiftRmbGoodsNotify::kBoughtGiftInfoArrFieldNumber;
#endif  // !_MSC_VER

TActLimitHeroGiftRmbGoodsNotify::TActLimitHeroGiftRmbGoodsNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActLimitHeroGiftRmbGoodsNotify)
}

void TActLimitHeroGiftRmbGoodsNotify::InitAsDefaultInstance() {
}

TActLimitHeroGiftRmbGoodsNotify::TActLimitHeroGiftRmbGoodsNotify(const TActLimitHeroGiftRmbGoodsNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActLimitHeroGiftRmbGoodsNotify)
}

void TActLimitHeroGiftRmbGoodsNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActLimitHeroGiftRmbGoodsNotify::~TActLimitHeroGiftRmbGoodsNotify() {
  // @@protoc_insertion_point(destructor:pb.TActLimitHeroGiftRmbGoodsNotify)
  SharedDtor();
}

void TActLimitHeroGiftRmbGoodsNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActLimitHeroGiftRmbGoodsNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActLimitHeroGiftRmbGoodsNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActLimitHeroGiftRmbGoodsNotify_descriptor_;
}

const TActLimitHeroGiftRmbGoodsNotify& TActLimitHeroGiftRmbGoodsNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  return *default_instance_;
}

TActLimitHeroGiftRmbGoodsNotify* TActLimitHeroGiftRmbGoodsNotify::default_instance_ = NULL;

TActLimitHeroGiftRmbGoodsNotify* TActLimitHeroGiftRmbGoodsNotify::New() const {
  return new TActLimitHeroGiftRmbGoodsNotify;
}

void TActLimitHeroGiftRmbGoodsNotify::Clear() {
  boughtgiftinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActLimitHeroGiftRmbGoodsNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActLimitHeroGiftRmbGoodsNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BoughtGiftInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_boughtgiftinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BoughtGiftInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActLimitHeroGiftRmbGoodsNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActLimitHeroGiftRmbGoodsNotify)
  return false;
#undef DO_
}

void TActLimitHeroGiftRmbGoodsNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActLimitHeroGiftRmbGoodsNotify)
  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  for (int i = 0; i < this->boughtgiftinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->boughtgiftinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActLimitHeroGiftRmbGoodsNotify)
}

::google::protobuf::uint8* TActLimitHeroGiftRmbGoodsNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActLimitHeroGiftRmbGoodsNotify)
  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  for (int i = 0; i < this->boughtgiftinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->boughtgiftinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActLimitHeroGiftRmbGoodsNotify)
  return target;
}

int TActLimitHeroGiftRmbGoodsNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  total_size += 1 * this->boughtgiftinfoarr_size();
  for (int i = 0; i < this->boughtgiftinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boughtgiftinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActLimitHeroGiftRmbGoodsNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActLimitHeroGiftRmbGoodsNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActLimitHeroGiftRmbGoodsNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActLimitHeroGiftRmbGoodsNotify::MergeFrom(const TActLimitHeroGiftRmbGoodsNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  boughtgiftinfoarr_.MergeFrom(from.boughtgiftinfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActLimitHeroGiftRmbGoodsNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActLimitHeroGiftRmbGoodsNotify::CopyFrom(const TActLimitHeroGiftRmbGoodsNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActLimitHeroGiftRmbGoodsNotify::IsInitialized() const {

  return true;
}

void TActLimitHeroGiftRmbGoodsNotify::Swap(TActLimitHeroGiftRmbGoodsNotify* other) {
  if (other != this) {
    boughtgiftinfoarr_.Swap(&other->boughtgiftinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActLimitHeroGiftRmbGoodsNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActLimitHeroGiftRmbGoodsNotify_descriptor_;
  metadata.reflection = TActLimitHeroGiftRmbGoodsNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
