// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/MajestyManual.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/MajestyManual.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TMajestyManualOpenNextData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TMajestyManualOpenNextData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TMajestyManualGetMajestyManualInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TMajestyManualGetMajestyManualInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TMajestyManualMajestyManualNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TMajestyManualMajestyManualNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TMajestyManualAcceptRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TMajestyManualAcceptRewardReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EMajestyManualOpenNextStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fMajestyManual_2eproto() {
  protobuf_AddDesc_net_2fMajestyManual_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/MajestyManual.proto");
  GOOGLE_CHECK(file != NULL);
  TMajestyManualOpenNextData_descriptor_ = file->message_type(0);
  static const int TMajestyManualOpenNextData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualOpenNextData, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualOpenNextData, status_),
  };
  TMajestyManualOpenNextData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TMajestyManualOpenNextData_descriptor_,
      TMajestyManualOpenNextData::default_instance_,
      TMajestyManualOpenNextData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualOpenNextData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualOpenNextData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TMajestyManualOpenNextData));
  TMajestyManualGetMajestyManualInfoRsp_descriptor_ = file->message_type(1);
  static const int TMajestyManualGetMajestyManualInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualGetMajestyManualInfoRsp, openarr_),
  };
  TMajestyManualGetMajestyManualInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TMajestyManualGetMajestyManualInfoRsp_descriptor_,
      TMajestyManualGetMajestyManualInfoRsp::default_instance_,
      TMajestyManualGetMajestyManualInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualGetMajestyManualInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualGetMajestyManualInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TMajestyManualGetMajestyManualInfoRsp));
  TMajestyManualMajestyManualNotify_descriptor_ = file->message_type(2);
  static const int TMajestyManualMajestyManualNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualMajestyManualNotify, openarr_),
  };
  TMajestyManualMajestyManualNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TMajestyManualMajestyManualNotify_descriptor_,
      TMajestyManualMajestyManualNotify::default_instance_,
      TMajestyManualMajestyManualNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualMajestyManualNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualMajestyManualNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TMajestyManualMajestyManualNotify));
  TMajestyManualAcceptRewardReq_descriptor_ = file->message_type(3);
  static const int TMajestyManualAcceptRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualAcceptRewardReq, tid_),
  };
  TMajestyManualAcceptRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TMajestyManualAcceptRewardReq_descriptor_,
      TMajestyManualAcceptRewardReq::default_instance_,
      TMajestyManualAcceptRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualAcceptRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMajestyManualAcceptRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TMajestyManualAcceptRewardReq));
  EMajestyManualOpenNextStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fMajestyManual_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TMajestyManualOpenNextData_descriptor_, &TMajestyManualOpenNextData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TMajestyManualGetMajestyManualInfoRsp_descriptor_, &TMajestyManualGetMajestyManualInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TMajestyManualMajestyManualNotify_descriptor_, &TMajestyManualMajestyManualNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TMajestyManualAcceptRewardReq_descriptor_, &TMajestyManualAcceptRewardReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fMajestyManual_2eproto() {
  delete TMajestyManualOpenNextData::default_instance_;
  delete TMajestyManualOpenNextData_reflection_;
  delete TMajestyManualGetMajestyManualInfoRsp::default_instance_;
  delete TMajestyManualGetMajestyManualInfoRsp_reflection_;
  delete TMajestyManualMajestyManualNotify::default_instance_;
  delete TMajestyManualMajestyManualNotify_reflection_;
  delete TMajestyManualAcceptRewardReq::default_instance_;
  delete TMajestyManualAcceptRewardReq_reflection_;
}

void protobuf_AddDesc_net_2fMajestyManual_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027net/MajestyManual.proto\022\002pb\"[\n\032TMajest"
    "yManualOpenNextData\022\013\n\003Tid\030\001 \001(\r\0220\n\006Stat"
    "us\030\002 \001(\0162 .pb.EMajestyManualOpenNextStat"
    "us\"X\n%TMajestyManualGetMajestyManualInfo"
    "Rsp\022/\n\007OpenArr\030\001 \003(\0132\036.pb.TMajestyManual"
    "OpenNextData\"T\n!TMajestyManualMajestyMan"
    "ualNotify\022/\n\007OpenArr\030\001 \003(\0132\036.pb.TMajesty"
    "ManualOpenNextData\",\n\035TMajestyManualAcce"
    "ptRewardReq\022\013\n\003Tid\030\001 \001(\r*\217\001\n\034EMajestyMan"
    "ualOpenNextStatus\022&\n\"EMajestyManualOpenN"
    "ext_UnCompleted\020\001\022$\n EMajestyManualOpenN"
    "ext_Completed\020\002\022!\n\035EMajestyManualOpenNex"
    "t_Reward\020\003", 490);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/MajestyManual.proto", &protobuf_RegisterTypes);
  TMajestyManualOpenNextData::default_instance_ = new TMajestyManualOpenNextData();
  TMajestyManualGetMajestyManualInfoRsp::default_instance_ = new TMajestyManualGetMajestyManualInfoRsp();
  TMajestyManualMajestyManualNotify::default_instance_ = new TMajestyManualMajestyManualNotify();
  TMajestyManualAcceptRewardReq::default_instance_ = new TMajestyManualAcceptRewardReq();
  TMajestyManualOpenNextData::default_instance_->InitAsDefaultInstance();
  TMajestyManualGetMajestyManualInfoRsp::default_instance_->InitAsDefaultInstance();
  TMajestyManualMajestyManualNotify::default_instance_->InitAsDefaultInstance();
  TMajestyManualAcceptRewardReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fMajestyManual_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fMajestyManual_2eproto {
  StaticDescriptorInitializer_net_2fMajestyManual_2eproto() {
    protobuf_AddDesc_net_2fMajestyManual_2eproto();
  }
} static_descriptor_initializer_net_2fMajestyManual_2eproto_;
const ::google::protobuf::EnumDescriptor* EMajestyManualOpenNextStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMajestyManualOpenNextStatus_descriptor_;
}
bool EMajestyManualOpenNextStatus_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TMajestyManualOpenNextData::kTidFieldNumber;
const int TMajestyManualOpenNextData::kStatusFieldNumber;
#endif  // !_MSC_VER

TMajestyManualOpenNextData::TMajestyManualOpenNextData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TMajestyManualOpenNextData)
}

void TMajestyManualOpenNextData::InitAsDefaultInstance() {
}

TMajestyManualOpenNextData::TMajestyManualOpenNextData(const TMajestyManualOpenNextData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TMajestyManualOpenNextData)
}

void TMajestyManualOpenNextData::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TMajestyManualOpenNextData::~TMajestyManualOpenNextData() {
  // @@protoc_insertion_point(destructor:pb.TMajestyManualOpenNextData)
  SharedDtor();
}

void TMajestyManualOpenNextData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TMajestyManualOpenNextData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMajestyManualOpenNextData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TMajestyManualOpenNextData_descriptor_;
}

const TMajestyManualOpenNextData& TMajestyManualOpenNextData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fMajestyManual_2eproto();
  return *default_instance_;
}

TMajestyManualOpenNextData* TMajestyManualOpenNextData::default_instance_ = NULL;

TMajestyManualOpenNextData* TMajestyManualOpenNextData::New() const {
  return new TMajestyManualOpenNextData;
}

void TMajestyManualOpenNextData::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    tid_ = 0u;
    status_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TMajestyManualOpenNextData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TMajestyManualOpenNextData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Status;
        break;
      }

      // optional .pb.EMajestyManualOpenNextStatus Status = 2;
      case 2: {
        if (tag == 16) {
         parse_Status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EMajestyManualOpenNextStatus_IsValid(value)) {
            set_status(static_cast< ::pb::EMajestyManualOpenNextStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TMajestyManualOpenNextData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TMajestyManualOpenNextData)
  return false;
#undef DO_
}

void TMajestyManualOpenNextData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TMajestyManualOpenNextData)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional .pb.EMajestyManualOpenNextStatus Status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TMajestyManualOpenNextData)
}

::google::protobuf::uint8* TMajestyManualOpenNextData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TMajestyManualOpenNextData)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional .pb.EMajestyManualOpenNextStatus Status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TMajestyManualOpenNextData)
  return target;
}

int TMajestyManualOpenNextData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional .pb.EMajestyManualOpenNextStatus Status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMajestyManualOpenNextData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TMajestyManualOpenNextData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TMajestyManualOpenNextData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TMajestyManualOpenNextData::MergeFrom(const TMajestyManualOpenNextData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TMajestyManualOpenNextData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMajestyManualOpenNextData::CopyFrom(const TMajestyManualOpenNextData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMajestyManualOpenNextData::IsInitialized() const {

  return true;
}

void TMajestyManualOpenNextData::Swap(TMajestyManualOpenNextData* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TMajestyManualOpenNextData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TMajestyManualOpenNextData_descriptor_;
  metadata.reflection = TMajestyManualOpenNextData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TMajestyManualGetMajestyManualInfoRsp::kOpenArrFieldNumber;
#endif  // !_MSC_VER

TMajestyManualGetMajestyManualInfoRsp::TMajestyManualGetMajestyManualInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TMajestyManualGetMajestyManualInfoRsp)
}

void TMajestyManualGetMajestyManualInfoRsp::InitAsDefaultInstance() {
}

TMajestyManualGetMajestyManualInfoRsp::TMajestyManualGetMajestyManualInfoRsp(const TMajestyManualGetMajestyManualInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TMajestyManualGetMajestyManualInfoRsp)
}

void TMajestyManualGetMajestyManualInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TMajestyManualGetMajestyManualInfoRsp::~TMajestyManualGetMajestyManualInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TMajestyManualGetMajestyManualInfoRsp)
  SharedDtor();
}

void TMajestyManualGetMajestyManualInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TMajestyManualGetMajestyManualInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMajestyManualGetMajestyManualInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TMajestyManualGetMajestyManualInfoRsp_descriptor_;
}

const TMajestyManualGetMajestyManualInfoRsp& TMajestyManualGetMajestyManualInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fMajestyManual_2eproto();
  return *default_instance_;
}

TMajestyManualGetMajestyManualInfoRsp* TMajestyManualGetMajestyManualInfoRsp::default_instance_ = NULL;

TMajestyManualGetMajestyManualInfoRsp* TMajestyManualGetMajestyManualInfoRsp::New() const {
  return new TMajestyManualGetMajestyManualInfoRsp;
}

void TMajestyManualGetMajestyManualInfoRsp::Clear() {
  openarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TMajestyManualGetMajestyManualInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TMajestyManualGetMajestyManualInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
      case 1: {
        if (tag == 10) {
         parse_OpenArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_openarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_OpenArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TMajestyManualGetMajestyManualInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TMajestyManualGetMajestyManualInfoRsp)
  return false;
#undef DO_
}

void TMajestyManualGetMajestyManualInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TMajestyManualGetMajestyManualInfoRsp)
  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  for (int i = 0; i < this->openarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->openarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TMajestyManualGetMajestyManualInfoRsp)
}

::google::protobuf::uint8* TMajestyManualGetMajestyManualInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TMajestyManualGetMajestyManualInfoRsp)
  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  for (int i = 0; i < this->openarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->openarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TMajestyManualGetMajestyManualInfoRsp)
  return target;
}

int TMajestyManualGetMajestyManualInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  total_size += 1 * this->openarr_size();
  for (int i = 0; i < this->openarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->openarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMajestyManualGetMajestyManualInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TMajestyManualGetMajestyManualInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TMajestyManualGetMajestyManualInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TMajestyManualGetMajestyManualInfoRsp::MergeFrom(const TMajestyManualGetMajestyManualInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  openarr_.MergeFrom(from.openarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TMajestyManualGetMajestyManualInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMajestyManualGetMajestyManualInfoRsp::CopyFrom(const TMajestyManualGetMajestyManualInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMajestyManualGetMajestyManualInfoRsp::IsInitialized() const {

  return true;
}

void TMajestyManualGetMajestyManualInfoRsp::Swap(TMajestyManualGetMajestyManualInfoRsp* other) {
  if (other != this) {
    openarr_.Swap(&other->openarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TMajestyManualGetMajestyManualInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TMajestyManualGetMajestyManualInfoRsp_descriptor_;
  metadata.reflection = TMajestyManualGetMajestyManualInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TMajestyManualMajestyManualNotify::kOpenArrFieldNumber;
#endif  // !_MSC_VER

TMajestyManualMajestyManualNotify::TMajestyManualMajestyManualNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TMajestyManualMajestyManualNotify)
}

void TMajestyManualMajestyManualNotify::InitAsDefaultInstance() {
}

TMajestyManualMajestyManualNotify::TMajestyManualMajestyManualNotify(const TMajestyManualMajestyManualNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TMajestyManualMajestyManualNotify)
}

void TMajestyManualMajestyManualNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TMajestyManualMajestyManualNotify::~TMajestyManualMajestyManualNotify() {
  // @@protoc_insertion_point(destructor:pb.TMajestyManualMajestyManualNotify)
  SharedDtor();
}

void TMajestyManualMajestyManualNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TMajestyManualMajestyManualNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMajestyManualMajestyManualNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TMajestyManualMajestyManualNotify_descriptor_;
}

const TMajestyManualMajestyManualNotify& TMajestyManualMajestyManualNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fMajestyManual_2eproto();
  return *default_instance_;
}

TMajestyManualMajestyManualNotify* TMajestyManualMajestyManualNotify::default_instance_ = NULL;

TMajestyManualMajestyManualNotify* TMajestyManualMajestyManualNotify::New() const {
  return new TMajestyManualMajestyManualNotify;
}

void TMajestyManualMajestyManualNotify::Clear() {
  openarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TMajestyManualMajestyManualNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TMajestyManualMajestyManualNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
      case 1: {
        if (tag == 10) {
         parse_OpenArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_openarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_OpenArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TMajestyManualMajestyManualNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TMajestyManualMajestyManualNotify)
  return false;
#undef DO_
}

void TMajestyManualMajestyManualNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TMajestyManualMajestyManualNotify)
  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  for (int i = 0; i < this->openarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->openarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TMajestyManualMajestyManualNotify)
}

::google::protobuf::uint8* TMajestyManualMajestyManualNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TMajestyManualMajestyManualNotify)
  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  for (int i = 0; i < this->openarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->openarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TMajestyManualMajestyManualNotify)
  return target;
}

int TMajestyManualMajestyManualNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TMajestyManualOpenNextData OpenArr = 1;
  total_size += 1 * this->openarr_size();
  for (int i = 0; i < this->openarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->openarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMajestyManualMajestyManualNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TMajestyManualMajestyManualNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TMajestyManualMajestyManualNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TMajestyManualMajestyManualNotify::MergeFrom(const TMajestyManualMajestyManualNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  openarr_.MergeFrom(from.openarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TMajestyManualMajestyManualNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMajestyManualMajestyManualNotify::CopyFrom(const TMajestyManualMajestyManualNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMajestyManualMajestyManualNotify::IsInitialized() const {

  return true;
}

void TMajestyManualMajestyManualNotify::Swap(TMajestyManualMajestyManualNotify* other) {
  if (other != this) {
    openarr_.Swap(&other->openarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TMajestyManualMajestyManualNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TMajestyManualMajestyManualNotify_descriptor_;
  metadata.reflection = TMajestyManualMajestyManualNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TMajestyManualAcceptRewardReq::kTidFieldNumber;
#endif  // !_MSC_VER

TMajestyManualAcceptRewardReq::TMajestyManualAcceptRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TMajestyManualAcceptRewardReq)
}

void TMajestyManualAcceptRewardReq::InitAsDefaultInstance() {
}

TMajestyManualAcceptRewardReq::TMajestyManualAcceptRewardReq(const TMajestyManualAcceptRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TMajestyManualAcceptRewardReq)
}

void TMajestyManualAcceptRewardReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TMajestyManualAcceptRewardReq::~TMajestyManualAcceptRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TMajestyManualAcceptRewardReq)
  SharedDtor();
}

void TMajestyManualAcceptRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TMajestyManualAcceptRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMajestyManualAcceptRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TMajestyManualAcceptRewardReq_descriptor_;
}

const TMajestyManualAcceptRewardReq& TMajestyManualAcceptRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fMajestyManual_2eproto();
  return *default_instance_;
}

TMajestyManualAcceptRewardReq* TMajestyManualAcceptRewardReq::default_instance_ = NULL;

TMajestyManualAcceptRewardReq* TMajestyManualAcceptRewardReq::New() const {
  return new TMajestyManualAcceptRewardReq;
}

void TMajestyManualAcceptRewardReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TMajestyManualAcceptRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TMajestyManualAcceptRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TMajestyManualAcceptRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TMajestyManualAcceptRewardReq)
  return false;
#undef DO_
}

void TMajestyManualAcceptRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TMajestyManualAcceptRewardReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TMajestyManualAcceptRewardReq)
}

::google::protobuf::uint8* TMajestyManualAcceptRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TMajestyManualAcceptRewardReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TMajestyManualAcceptRewardReq)
  return target;
}

int TMajestyManualAcceptRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMajestyManualAcceptRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TMajestyManualAcceptRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TMajestyManualAcceptRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TMajestyManualAcceptRewardReq::MergeFrom(const TMajestyManualAcceptRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TMajestyManualAcceptRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMajestyManualAcceptRewardReq::CopyFrom(const TMajestyManualAcceptRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMajestyManualAcceptRewardReq::IsInitialized() const {

  return true;
}

void TMajestyManualAcceptRewardReq::Swap(TMajestyManualAcceptRewardReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TMajestyManualAcceptRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TMajestyManualAcceptRewardReq_descriptor_;
  metadata.reflection = TMajestyManualAcceptRewardReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
