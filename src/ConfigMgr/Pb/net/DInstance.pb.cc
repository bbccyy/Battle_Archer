// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DInstance.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/DInstance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TDInstanceChapterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceChapterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceDoBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceDoBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceDoBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceDoBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceRaidStrongholdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceRaidStrongholdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceRaidStrongholdRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceRaidStrongholdRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDInstanceReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInstanceReportBattleRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fDInstance_2eproto() {
  protobuf_AddDesc_net_2fDInstance_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/DInstance.proto");
  GOOGLE_CHECK(file != NULL);
  TDInstanceChapterInfo_descriptor_ = file->message_type(0);
  static const int TDInstanceChapterInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceChapterInfo, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceChapterInfo, maxstrongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceChapterInfo, laststrongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceChapterInfo, usedfreechallengenum_),
  };
  TDInstanceChapterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceChapterInfo_descriptor_,
      TDInstanceChapterInfo::default_instance_,
      TDInstanceChapterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceChapterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceChapterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceChapterInfo));
  TDInstanceInfoReq_descriptor_ = file->message_type(1);
  static const int TDInstanceInfoReq_offsets_[1] = {
  };
  TDInstanceInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceInfoReq_descriptor_,
      TDInstanceInfoReq::default_instance_,
      TDInstanceInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceInfoReq));
  TDInstanceInfoRsp_descriptor_ = file->message_type(2);
  static const int TDInstanceInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceInfoRsp, chapterinfoarray_),
  };
  TDInstanceInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceInfoRsp_descriptor_,
      TDInstanceInfoRsp::default_instance_,
      TDInstanceInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceInfoRsp));
  TDInstanceDoBattleReq_descriptor_ = file->message_type(3);
  static const int TDInstanceDoBattleReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleReq, strongholdid_),
  };
  TDInstanceDoBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceDoBattleReq_descriptor_,
      TDInstanceDoBattleReq::default_instance_,
      TDInstanceDoBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceDoBattleReq));
  TDInstanceDoBattleRsp_descriptor_ = file->message_type(4);
  static const int TDInstanceDoBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleRsp, droparray_),
  };
  TDInstanceDoBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceDoBattleRsp_descriptor_,
      TDInstanceDoBattleRsp::default_instance_,
      TDInstanceDoBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceDoBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceDoBattleRsp));
  TDInstanceRaidStrongholdReq_descriptor_ = file->message_type(5);
  static const int TDInstanceRaidStrongholdReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdReq, strongholdid_),
  };
  TDInstanceRaidStrongholdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceRaidStrongholdReq_descriptor_,
      TDInstanceRaidStrongholdReq::default_instance_,
      TDInstanceRaidStrongholdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceRaidStrongholdReq));
  TDInstanceRaidStrongholdRsp_descriptor_ = file->message_type(6);
  static const int TDInstanceRaidStrongholdRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdRsp, droparray_),
  };
  TDInstanceRaidStrongholdRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceRaidStrongholdRsp_descriptor_,
      TDInstanceRaidStrongholdRsp::default_instance_,
      TDInstanceRaidStrongholdRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceRaidStrongholdRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceRaidStrongholdRsp));
  TDInstanceReportBattleReq_descriptor_ = file->message_type(7);
  static const int TDInstanceReportBattleReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleReq, battleret_),
  };
  TDInstanceReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceReportBattleReq_descriptor_,
      TDInstanceReportBattleReq::default_instance_,
      TDInstanceReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceReportBattleReq));
  TDInstanceReportBattleRsp_descriptor_ = file->message_type(8);
  static const int TDInstanceReportBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleRsp, droparray_),
  };
  TDInstanceReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInstanceReportBattleRsp_descriptor_,
      TDInstanceReportBattleRsp::default_instance_,
      TDInstanceReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInstanceReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInstanceReportBattleRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fDInstance_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceChapterInfo_descriptor_, &TDInstanceChapterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceInfoReq_descriptor_, &TDInstanceInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceInfoRsp_descriptor_, &TDInstanceInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceDoBattleReq_descriptor_, &TDInstanceDoBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceDoBattleRsp_descriptor_, &TDInstanceDoBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceRaidStrongholdReq_descriptor_, &TDInstanceRaidStrongholdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceRaidStrongholdRsp_descriptor_, &TDInstanceRaidStrongholdRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceReportBattleReq_descriptor_, &TDInstanceReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInstanceReportBattleRsp_descriptor_, &TDInstanceReportBattleRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fDInstance_2eproto() {
  delete TDInstanceChapterInfo::default_instance_;
  delete TDInstanceChapterInfo_reflection_;
  delete TDInstanceInfoReq::default_instance_;
  delete TDInstanceInfoReq_reflection_;
  delete TDInstanceInfoRsp::default_instance_;
  delete TDInstanceInfoRsp_reflection_;
  delete TDInstanceDoBattleReq::default_instance_;
  delete TDInstanceDoBattleReq_reflection_;
  delete TDInstanceDoBattleRsp::default_instance_;
  delete TDInstanceDoBattleRsp_reflection_;
  delete TDInstanceRaidStrongholdReq::default_instance_;
  delete TDInstanceRaidStrongholdReq_reflection_;
  delete TDInstanceRaidStrongholdRsp::default_instance_;
  delete TDInstanceRaidStrongholdRsp_reflection_;
  delete TDInstanceReportBattleReq::default_instance_;
  delete TDInstanceReportBattleReq_reflection_;
  delete TDInstanceReportBattleRsp::default_instance_;
  delete TDInstanceReportBattleRsp_reflection_;
}

void protobuf_AddDesc_net_2fDInstance_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/DInstance.proto\022\002pb\032\026net/CommonRew"
    "ard.proto\032\020net/Battle.proto\"{\n\025TDInstanc"
    "eChapterInfo\022\021\n\tChapterId\030\001 \001(\r\022\027\n\017MaxSt"
    "rongholdId\030\002 \001(\r\022\030\n\020LastStrongholdId\030\003 \001"
    "(\r\022\034\n\024UsedFreeChallengeNum\030\004 \001(\r\"\023\n\021TDIn"
    "stanceInfoReq\"H\n\021TDInstanceInfoRsp\0223\n\020Ch"
    "apterInfoArray\030\001 \003(\0132\031.pb.TDInstanceChap"
    "terInfo\"@\n\025TDInstanceDoBattleReq\022\021\n\tChap"
    "terId\030\001 \001(\r\022\024\n\014StrongholdId\030\002 \001(\r\"=\n\025TDI"
    "nstanceDoBattleRsp\022$\n\tDropArray\030\001 \003(\0132\021."
    "pb.TCommonReward\"F\n\033TDInstanceRaidStrong"
    "holdReq\022\021\n\tChapterId\030\001 \001(\r\022\024\n\014Stronghold"
    "Id\030\002 \001(\r\"C\n\033TDInstanceRaidStrongholdRsp\022"
    "$\n\tDropArray\030\001 \003(\0132\021.pb.TCommonReward\"j\n"
    "\031TDInstanceReportBattleReq\022\021\n\tChapterId\030"
    "\001 \001(\r\022\024\n\014StrongholdId\030\002 \001(\r\022$\n\tBattleRet"
    "\030\003 \001(\0132\021.pb.TBattleResult\"A\n\031TDInstanceR"
    "eportBattleRsp\022$\n\tDropArray\030\001 \003(\0132\021.pb.T"
    "CommonReward", 732);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/DInstance.proto", &protobuf_RegisterTypes);
  TDInstanceChapterInfo::default_instance_ = new TDInstanceChapterInfo();
  TDInstanceInfoReq::default_instance_ = new TDInstanceInfoReq();
  TDInstanceInfoRsp::default_instance_ = new TDInstanceInfoRsp();
  TDInstanceDoBattleReq::default_instance_ = new TDInstanceDoBattleReq();
  TDInstanceDoBattleRsp::default_instance_ = new TDInstanceDoBattleRsp();
  TDInstanceRaidStrongholdReq::default_instance_ = new TDInstanceRaidStrongholdReq();
  TDInstanceRaidStrongholdRsp::default_instance_ = new TDInstanceRaidStrongholdRsp();
  TDInstanceReportBattleReq::default_instance_ = new TDInstanceReportBattleReq();
  TDInstanceReportBattleRsp::default_instance_ = new TDInstanceReportBattleRsp();
  TDInstanceChapterInfo::default_instance_->InitAsDefaultInstance();
  TDInstanceInfoReq::default_instance_->InitAsDefaultInstance();
  TDInstanceInfoRsp::default_instance_->InitAsDefaultInstance();
  TDInstanceDoBattleReq::default_instance_->InitAsDefaultInstance();
  TDInstanceDoBattleRsp::default_instance_->InitAsDefaultInstance();
  TDInstanceRaidStrongholdReq::default_instance_->InitAsDefaultInstance();
  TDInstanceRaidStrongholdRsp::default_instance_->InitAsDefaultInstance();
  TDInstanceReportBattleReq::default_instance_->InitAsDefaultInstance();
  TDInstanceReportBattleRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fDInstance_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fDInstance_2eproto {
  StaticDescriptorInitializer_net_2fDInstance_2eproto() {
    protobuf_AddDesc_net_2fDInstance_2eproto();
  }
} static_descriptor_initializer_net_2fDInstance_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TDInstanceChapterInfo::kChapterIdFieldNumber;
const int TDInstanceChapterInfo::kMaxStrongholdIdFieldNumber;
const int TDInstanceChapterInfo::kLastStrongholdIdFieldNumber;
const int TDInstanceChapterInfo::kUsedFreeChallengeNumFieldNumber;
#endif  // !_MSC_VER

TDInstanceChapterInfo::TDInstanceChapterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceChapterInfo)
}

void TDInstanceChapterInfo::InitAsDefaultInstance() {
}

TDInstanceChapterInfo::TDInstanceChapterInfo(const TDInstanceChapterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceChapterInfo)
}

void TDInstanceChapterInfo::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  maxstrongholdid_ = 0u;
  laststrongholdid_ = 0u;
  usedfreechallengenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceChapterInfo::~TDInstanceChapterInfo() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceChapterInfo)
  SharedDtor();
}

void TDInstanceChapterInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceChapterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceChapterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceChapterInfo_descriptor_;
}

const TDInstanceChapterInfo& TDInstanceChapterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceChapterInfo* TDInstanceChapterInfo::default_instance_ = NULL;

TDInstanceChapterInfo* TDInstanceChapterInfo::New() const {
  return new TDInstanceChapterInfo;
}

void TDInstanceChapterInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDInstanceChapterInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, usedfreechallengenum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceChapterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceChapterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxStrongholdId;
        break;
      }

      // optional uint32 MaxStrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxStrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxstrongholdid_)));
          set_has_maxstrongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LastStrongholdId;
        break;
      }

      // optional uint32 LastStrongholdId = 3;
      case 3: {
        if (tag == 24) {
         parse_LastStrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &laststrongholdid_)));
          set_has_laststrongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UsedFreeChallengeNum;
        break;
      }

      // optional uint32 UsedFreeChallengeNum = 4;
      case 4: {
        if (tag == 32) {
         parse_UsedFreeChallengeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usedfreechallengenum_)));
          set_has_usedfreechallengenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceChapterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceChapterInfo)
  return false;
#undef DO_
}

void TDInstanceChapterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 MaxStrongholdId = 2;
  if (has_maxstrongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxstrongholdid(), output);
  }

  // optional uint32 LastStrongholdId = 3;
  if (has_laststrongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->laststrongholdid(), output);
  }

  // optional uint32 UsedFreeChallengeNum = 4;
  if (has_usedfreechallengenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->usedfreechallengenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceChapterInfo)
}

::google::protobuf::uint8* TDInstanceChapterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 MaxStrongholdId = 2;
  if (has_maxstrongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxstrongholdid(), target);
  }

  // optional uint32 LastStrongholdId = 3;
  if (has_laststrongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->laststrongholdid(), target);
  }

  // optional uint32 UsedFreeChallengeNum = 4;
  if (has_usedfreechallengenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->usedfreechallengenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceChapterInfo)
  return target;
}

int TDInstanceChapterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 MaxStrongholdId = 2;
    if (has_maxstrongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxstrongholdid());
    }

    // optional uint32 LastStrongholdId = 3;
    if (has_laststrongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->laststrongholdid());
    }

    // optional uint32 UsedFreeChallengeNum = 4;
    if (has_usedfreechallengenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usedfreechallengenum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceChapterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceChapterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceChapterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceChapterInfo::MergeFrom(const TDInstanceChapterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_maxstrongholdid()) {
      set_maxstrongholdid(from.maxstrongholdid());
    }
    if (from.has_laststrongholdid()) {
      set_laststrongholdid(from.laststrongholdid());
    }
    if (from.has_usedfreechallengenum()) {
      set_usedfreechallengenum(from.usedfreechallengenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceChapterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceChapterInfo::CopyFrom(const TDInstanceChapterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceChapterInfo::IsInitialized() const {

  return true;
}

void TDInstanceChapterInfo::Swap(TDInstanceChapterInfo* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(maxstrongholdid_, other->maxstrongholdid_);
    std::swap(laststrongholdid_, other->laststrongholdid_);
    std::swap(usedfreechallengenum_, other->usedfreechallengenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceChapterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceChapterInfo_descriptor_;
  metadata.reflection = TDInstanceChapterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TDInstanceInfoReq::TDInstanceInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceInfoReq)
}

void TDInstanceInfoReq::InitAsDefaultInstance() {
}

TDInstanceInfoReq::TDInstanceInfoReq(const TDInstanceInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceInfoReq)
}

void TDInstanceInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceInfoReq::~TDInstanceInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceInfoReq)
  SharedDtor();
}

void TDInstanceInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceInfoReq_descriptor_;
}

const TDInstanceInfoReq& TDInstanceInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceInfoReq* TDInstanceInfoReq::default_instance_ = NULL;

TDInstanceInfoReq* TDInstanceInfoReq::New() const {
  return new TDInstanceInfoReq;
}

void TDInstanceInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceInfoReq)
  return false;
#undef DO_
}

void TDInstanceInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceInfoReq)
}

::google::protobuf::uint8* TDInstanceInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceInfoReq)
  return target;
}

int TDInstanceInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceInfoReq::MergeFrom(const TDInstanceInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceInfoReq::CopyFrom(const TDInstanceInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceInfoReq::IsInitialized() const {

  return true;
}

void TDInstanceInfoReq::Swap(TDInstanceInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceInfoReq_descriptor_;
  metadata.reflection = TDInstanceInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceInfoRsp::kChapterInfoArrayFieldNumber;
#endif  // !_MSC_VER

TDInstanceInfoRsp::TDInstanceInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceInfoRsp)
}

void TDInstanceInfoRsp::InitAsDefaultInstance() {
}

TDInstanceInfoRsp::TDInstanceInfoRsp(const TDInstanceInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceInfoRsp)
}

void TDInstanceInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceInfoRsp::~TDInstanceInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceInfoRsp)
  SharedDtor();
}

void TDInstanceInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceInfoRsp_descriptor_;
}

const TDInstanceInfoRsp& TDInstanceInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceInfoRsp* TDInstanceInfoRsp::default_instance_ = NULL;

TDInstanceInfoRsp* TDInstanceInfoRsp::New() const {
  return new TDInstanceInfoRsp;
}

void TDInstanceInfoRsp::Clear() {
  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TDInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceInfoRsp)
  return false;
#undef DO_
}

void TDInstanceInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceInfoRsp)
  // repeated .pb.TDInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceInfoRsp)
}

::google::protobuf::uint8* TDInstanceInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceInfoRsp)
  // repeated .pb.TDInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceInfoRsp)
  return target;
}

int TDInstanceInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TDInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceInfoRsp::MergeFrom(const TDInstanceInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceInfoRsp::CopyFrom(const TDInstanceInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceInfoRsp::IsInitialized() const {

  return true;
}

void TDInstanceInfoRsp::Swap(TDInstanceInfoRsp* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceInfoRsp_descriptor_;
  metadata.reflection = TDInstanceInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceDoBattleReq::kChapterIdFieldNumber;
const int TDInstanceDoBattleReq::kStrongholdIdFieldNumber;
#endif  // !_MSC_VER

TDInstanceDoBattleReq::TDInstanceDoBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceDoBattleReq)
}

void TDInstanceDoBattleReq::InitAsDefaultInstance() {
}

TDInstanceDoBattleReq::TDInstanceDoBattleReq(const TDInstanceDoBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceDoBattleReq)
}

void TDInstanceDoBattleReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceDoBattleReq::~TDInstanceDoBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceDoBattleReq)
  SharedDtor();
}

void TDInstanceDoBattleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceDoBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceDoBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceDoBattleReq_descriptor_;
}

const TDInstanceDoBattleReq& TDInstanceDoBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceDoBattleReq* TDInstanceDoBattleReq::default_instance_ = NULL;

TDInstanceDoBattleReq* TDInstanceDoBattleReq::New() const {
  return new TDInstanceDoBattleReq;
}

void TDInstanceDoBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDInstanceDoBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, strongholdid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceDoBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceDoBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceDoBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceDoBattleReq)
  return false;
#undef DO_
}

void TDInstanceDoBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceDoBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceDoBattleReq)
}

::google::protobuf::uint8* TDInstanceDoBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceDoBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceDoBattleReq)
  return target;
}

int TDInstanceDoBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceDoBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceDoBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceDoBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceDoBattleReq::MergeFrom(const TDInstanceDoBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceDoBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceDoBattleReq::CopyFrom(const TDInstanceDoBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceDoBattleReq::IsInitialized() const {

  return true;
}

void TDInstanceDoBattleReq::Swap(TDInstanceDoBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceDoBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceDoBattleReq_descriptor_;
  metadata.reflection = TDInstanceDoBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceDoBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TDInstanceDoBattleRsp::TDInstanceDoBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceDoBattleRsp)
}

void TDInstanceDoBattleRsp::InitAsDefaultInstance() {
}

TDInstanceDoBattleRsp::TDInstanceDoBattleRsp(const TDInstanceDoBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceDoBattleRsp)
}

void TDInstanceDoBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceDoBattleRsp::~TDInstanceDoBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceDoBattleRsp)
  SharedDtor();
}

void TDInstanceDoBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceDoBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceDoBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceDoBattleRsp_descriptor_;
}

const TDInstanceDoBattleRsp& TDInstanceDoBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceDoBattleRsp* TDInstanceDoBattleRsp::default_instance_ = NULL;

TDInstanceDoBattleRsp* TDInstanceDoBattleRsp::New() const {
  return new TDInstanceDoBattleRsp;
}

void TDInstanceDoBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceDoBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceDoBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceDoBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceDoBattleRsp)
  return false;
#undef DO_
}

void TDInstanceDoBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceDoBattleRsp)
}

::google::protobuf::uint8* TDInstanceDoBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceDoBattleRsp)
  return target;
}

int TDInstanceDoBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceDoBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceDoBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceDoBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceDoBattleRsp::MergeFrom(const TDInstanceDoBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceDoBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceDoBattleRsp::CopyFrom(const TDInstanceDoBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceDoBattleRsp::IsInitialized() const {

  return true;
}

void TDInstanceDoBattleRsp::Swap(TDInstanceDoBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceDoBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceDoBattleRsp_descriptor_;
  metadata.reflection = TDInstanceDoBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceRaidStrongholdReq::kChapterIdFieldNumber;
const int TDInstanceRaidStrongholdReq::kStrongholdIdFieldNumber;
#endif  // !_MSC_VER

TDInstanceRaidStrongholdReq::TDInstanceRaidStrongholdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceRaidStrongholdReq)
}

void TDInstanceRaidStrongholdReq::InitAsDefaultInstance() {
}

TDInstanceRaidStrongholdReq::TDInstanceRaidStrongholdReq(const TDInstanceRaidStrongholdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceRaidStrongholdReq)
}

void TDInstanceRaidStrongholdReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceRaidStrongholdReq::~TDInstanceRaidStrongholdReq() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceRaidStrongholdReq)
  SharedDtor();
}

void TDInstanceRaidStrongholdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceRaidStrongholdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceRaidStrongholdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceRaidStrongholdReq_descriptor_;
}

const TDInstanceRaidStrongholdReq& TDInstanceRaidStrongholdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceRaidStrongholdReq* TDInstanceRaidStrongholdReq::default_instance_ = NULL;

TDInstanceRaidStrongholdReq* TDInstanceRaidStrongholdReq::New() const {
  return new TDInstanceRaidStrongholdReq;
}

void TDInstanceRaidStrongholdReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDInstanceRaidStrongholdReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, strongholdid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceRaidStrongholdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceRaidStrongholdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceRaidStrongholdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceRaidStrongholdReq)
  return false;
#undef DO_
}

void TDInstanceRaidStrongholdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceRaidStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceRaidStrongholdReq)
}

::google::protobuf::uint8* TDInstanceRaidStrongholdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceRaidStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceRaidStrongholdReq)
  return target;
}

int TDInstanceRaidStrongholdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceRaidStrongholdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceRaidStrongholdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceRaidStrongholdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceRaidStrongholdReq::MergeFrom(const TDInstanceRaidStrongholdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceRaidStrongholdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceRaidStrongholdReq::CopyFrom(const TDInstanceRaidStrongholdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceRaidStrongholdReq::IsInitialized() const {

  return true;
}

void TDInstanceRaidStrongholdReq::Swap(TDInstanceRaidStrongholdReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceRaidStrongholdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceRaidStrongholdReq_descriptor_;
  metadata.reflection = TDInstanceRaidStrongholdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceRaidStrongholdRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TDInstanceRaidStrongholdRsp::TDInstanceRaidStrongholdRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceRaidStrongholdRsp)
}

void TDInstanceRaidStrongholdRsp::InitAsDefaultInstance() {
}

TDInstanceRaidStrongholdRsp::TDInstanceRaidStrongholdRsp(const TDInstanceRaidStrongholdRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceRaidStrongholdRsp)
}

void TDInstanceRaidStrongholdRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceRaidStrongholdRsp::~TDInstanceRaidStrongholdRsp() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceRaidStrongholdRsp)
  SharedDtor();
}

void TDInstanceRaidStrongholdRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceRaidStrongholdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceRaidStrongholdRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceRaidStrongholdRsp_descriptor_;
}

const TDInstanceRaidStrongholdRsp& TDInstanceRaidStrongholdRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceRaidStrongholdRsp* TDInstanceRaidStrongholdRsp::default_instance_ = NULL;

TDInstanceRaidStrongholdRsp* TDInstanceRaidStrongholdRsp::New() const {
  return new TDInstanceRaidStrongholdRsp;
}

void TDInstanceRaidStrongholdRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceRaidStrongholdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceRaidStrongholdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceRaidStrongholdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceRaidStrongholdRsp)
  return false;
#undef DO_
}

void TDInstanceRaidStrongholdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceRaidStrongholdRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceRaidStrongholdRsp)
}

::google::protobuf::uint8* TDInstanceRaidStrongholdRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceRaidStrongholdRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceRaidStrongholdRsp)
  return target;
}

int TDInstanceRaidStrongholdRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceRaidStrongholdRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceRaidStrongholdRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceRaidStrongholdRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceRaidStrongholdRsp::MergeFrom(const TDInstanceRaidStrongholdRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceRaidStrongholdRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceRaidStrongholdRsp::CopyFrom(const TDInstanceRaidStrongholdRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceRaidStrongholdRsp::IsInitialized() const {

  return true;
}

void TDInstanceRaidStrongholdRsp::Swap(TDInstanceRaidStrongholdRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceRaidStrongholdRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceRaidStrongholdRsp_descriptor_;
  metadata.reflection = TDInstanceRaidStrongholdRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceReportBattleReq::kChapterIdFieldNumber;
const int TDInstanceReportBattleReq::kStrongholdIdFieldNumber;
const int TDInstanceReportBattleReq::kBattleRetFieldNumber;
#endif  // !_MSC_VER

TDInstanceReportBattleReq::TDInstanceReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceReportBattleReq)
}

void TDInstanceReportBattleReq::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TDInstanceReportBattleReq::TDInstanceReportBattleReq(const TDInstanceReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceReportBattleReq)
}

void TDInstanceReportBattleReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  battleret_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceReportBattleReq::~TDInstanceReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceReportBattleReq)
  SharedDtor();
}

void TDInstanceReportBattleReq::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TDInstanceReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceReportBattleReq_descriptor_;
}

const TDInstanceReportBattleReq& TDInstanceReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceReportBattleReq* TDInstanceReportBattleReq::default_instance_ = NULL;

TDInstanceReportBattleReq* TDInstanceReportBattleReq::New() const {
  return new TDInstanceReportBattleReq;
}

void TDInstanceReportBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDInstanceReportBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(chapterid_, strongholdid_);
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleRet;
        break;
      }

      // optional .pb.TBattleResult BattleRet = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleRet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceReportBattleReq)
  return false;
#undef DO_
}

void TDInstanceReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional .pb.TBattleResult BattleRet = 3;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->battleret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceReportBattleReq)
}

::google::protobuf::uint8* TDInstanceReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional .pb.TBattleResult BattleRet = 3;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->battleret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceReportBattleReq)
  return target;
}

int TDInstanceReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional .pb.TBattleResult BattleRet = 3;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceReportBattleReq::MergeFrom(const TDInstanceReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceReportBattleReq::CopyFrom(const TDInstanceReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceReportBattleReq::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TDInstanceReportBattleReq::Swap(TDInstanceReportBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(battleret_, other->battleret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceReportBattleReq_descriptor_;
  metadata.reflection = TDInstanceReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDInstanceReportBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TDInstanceReportBattleRsp::TDInstanceReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInstanceReportBattleRsp)
}

void TDInstanceReportBattleRsp::InitAsDefaultInstance() {
}

TDInstanceReportBattleRsp::TDInstanceReportBattleRsp(const TDInstanceReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInstanceReportBattleRsp)
}

void TDInstanceReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInstanceReportBattleRsp::~TDInstanceReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TDInstanceReportBattleRsp)
  SharedDtor();
}

void TDInstanceReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInstanceReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInstanceReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInstanceReportBattleRsp_descriptor_;
}

const TDInstanceReportBattleRsp& TDInstanceReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDInstance_2eproto();
  return *default_instance_;
}

TDInstanceReportBattleRsp* TDInstanceReportBattleRsp::default_instance_ = NULL;

TDInstanceReportBattleRsp* TDInstanceReportBattleRsp::New() const {
  return new TDInstanceReportBattleRsp;
}

void TDInstanceReportBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInstanceReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInstanceReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInstanceReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInstanceReportBattleRsp)
  return false;
#undef DO_
}

void TDInstanceReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInstanceReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInstanceReportBattleRsp)
}

::google::protobuf::uint8* TDInstanceReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInstanceReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInstanceReportBattleRsp)
  return target;
}

int TDInstanceReportBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInstanceReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInstanceReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInstanceReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInstanceReportBattleRsp::MergeFrom(const TDInstanceReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInstanceReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInstanceReportBattleRsp::CopyFrom(const TDInstanceReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInstanceReportBattleRsp::IsInitialized() const {

  return true;
}

void TDInstanceReportBattleRsp::Swap(TDInstanceReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInstanceReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInstanceReportBattleRsp_descriptor_;
  metadata.reflection = TDInstanceReportBattleRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
