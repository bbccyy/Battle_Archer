// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TravelBook.proto

#ifndef PROTOBUF_net_2fTravelBook_2eproto__INCLUDED
#define PROTOBUF_net_2fTravelBook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fTravelBook_2eproto();
void protobuf_AssignDesc_net_2fTravelBook_2eproto();
void protobuf_ShutdownFile_net_2fTravelBook_2eproto();

class TTravelBookItem;
class TTravelBookGetInfoRsp;
class TTravelBookReceiveItemRewardReq;
class TTravelBookReceiveItemRewardRsp;
class TTravelBookNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TTravelBookItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TravelBook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTravelBookItem : public ::google::protobuf::Message {
 public:
  TTravelBookItem();
  virtual ~TTravelBookItem();

  TTravelBookItem(const TTravelBookItem& from);

  inline TTravelBookItem& operator=(const TTravelBookItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTravelBookItem& default_instance();

  void Swap(TTravelBookItem* other);

  // implements Message ----------------------------------------------

  TTravelBookItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTravelBookItem& from);
  void MergeFrom(const TTravelBookItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookItem</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint64 ActiveTime = 2;
  inline bool has_activetime() const;
  inline void clear_activetime();
  static const int kActiveTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookItem</name>
  	<Function>
  		<name>activetime</name>
  		<replaceName>ActiveTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_activetime</name>
  		<replaceName>ActiveTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activetime</name>
  		<replaceName>ActiveTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 activetime() const;
  inline void set_activetime(::google::protobuf::uint64 value);

  // optional uint64 RewardTime = 3;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookItem</name>
  	<Function>
  		<name>rewardtime</name>
  		<replaceName>RewardTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardtime</name>
  		<replaceName>RewardTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardtime</name>
  		<replaceName>RewardTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TTravelBookItem)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_activetime();
  inline void clear_has_activetime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 activetime_;
  ::google::protobuf::uint64 rewardtime_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fTravelBook_2eproto();
  friend void protobuf_AssignDesc_net_2fTravelBook_2eproto();
  friend void protobuf_ShutdownFile_net_2fTravelBook_2eproto();

  void InitAsDefaultInstance();
  static TTravelBookItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTravelBookGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TravelBook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTravelBookGetInfoRsp : public ::google::protobuf::Message {
 public:
  TTravelBookGetInfoRsp();
  virtual ~TTravelBookGetInfoRsp();

  TTravelBookGetInfoRsp(const TTravelBookGetInfoRsp& from);

  inline TTravelBookGetInfoRsp& operator=(const TTravelBookGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTravelBookGetInfoRsp& default_instance();

  void Swap(TTravelBookGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TTravelBookGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTravelBookGetInfoRsp& from);
  void MergeFrom(const TTravelBookGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TTravelBookItem ArrItem = 1;
  inline int arritem_size() const;
  inline void clear_arritem();
  static const int kArrItemFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookGetInfoRsp</name>
  	<Function>
  		<name>arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arritem_size</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TTravelBookItem& arritem(int index) const;
  inline ::pb::TTravelBookItem* mutable_arritem(int index);
  inline ::pb::TTravelBookItem* add_arritem();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >&
      arritem() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >*
      mutable_arritem();

  // @@protoc_insertion_point(class_scope:pb.TTravelBookGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem > arritem_;
  friend void  protobuf_AddDesc_net_2fTravelBook_2eproto();
  friend void protobuf_AssignDesc_net_2fTravelBook_2eproto();
  friend void protobuf_ShutdownFile_net_2fTravelBook_2eproto();

  void InitAsDefaultInstance();
  static TTravelBookGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTravelBookReceiveItemRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TravelBook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTravelBookReceiveItemRewardReq : public ::google::protobuf::Message {
 public:
  TTravelBookReceiveItemRewardReq();
  virtual ~TTravelBookReceiveItemRewardReq();

  TTravelBookReceiveItemRewardReq(const TTravelBookReceiveItemRewardReq& from);

  inline TTravelBookReceiveItemRewardReq& operator=(const TTravelBookReceiveItemRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTravelBookReceiveItemRewardReq& default_instance();

  void Swap(TTravelBookReceiveItemRewardReq* other);

  // implements Message ----------------------------------------------

  TTravelBookReceiveItemRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTravelBookReceiveItemRewardReq& from);
  void MergeFrom(const TTravelBookReceiveItemRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookReceiveItemRewardReq</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TTravelBookReceiveItemRewardReq)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fTravelBook_2eproto();
  friend void protobuf_AssignDesc_net_2fTravelBook_2eproto();
  friend void protobuf_ShutdownFile_net_2fTravelBook_2eproto();

  void InitAsDefaultInstance();
  static TTravelBookReceiveItemRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTravelBookReceiveItemRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TravelBook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTravelBookReceiveItemRewardRsp : public ::google::protobuf::Message {
 public:
  TTravelBookReceiveItemRewardRsp();
  virtual ~TTravelBookReceiveItemRewardRsp();

  TTravelBookReceiveItemRewardRsp(const TTravelBookReceiveItemRewardRsp& from);

  inline TTravelBookReceiveItemRewardRsp& operator=(const TTravelBookReceiveItemRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTravelBookReceiveItemRewardRsp& default_instance();

  void Swap(TTravelBookReceiveItemRewardRsp* other);

  // implements Message ----------------------------------------------

  TTravelBookReceiveItemRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTravelBookReceiveItemRewardRsp& from);
  void MergeFrom(const TTravelBookReceiveItemRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookReceiveItemRewardRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TTravelBookReceiveItemRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fTravelBook_2eproto();
  friend void protobuf_AssignDesc_net_2fTravelBook_2eproto();
  friend void protobuf_ShutdownFile_net_2fTravelBook_2eproto();

  void InitAsDefaultInstance();
  static TTravelBookReceiveItemRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TTravelBookNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/TravelBook.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TTravelBookNotify : public ::google::protobuf::Message {
 public:
  TTravelBookNotify();
  virtual ~TTravelBookNotify();

  TTravelBookNotify(const TTravelBookNotify& from);

  inline TTravelBookNotify& operator=(const TTravelBookNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTravelBookNotify& default_instance();

  void Swap(TTravelBookNotify* other);

  // implements Message ----------------------------------------------

  TTravelBookNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTravelBookNotify& from);
  void MergeFrom(const TTravelBookNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TTravelBookItem ArrItem = 1;
  inline int arritem_size() const;
  inline void clear_arritem();
  static const int kArrItemFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TTravelBookNotify</name>
  	<Function>
  		<name>arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arritem</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arritem_size</name>
  		<replaceName>ArrItem</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TTravelBookItem& arritem(int index) const;
  inline ::pb::TTravelBookItem* mutable_arritem(int index);
  inline ::pb::TTravelBookItem* add_arritem();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >&
      arritem() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >*
      mutable_arritem();

  // @@protoc_insertion_point(class_scope:pb.TTravelBookNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem > arritem_;
  friend void  protobuf_AddDesc_net_2fTravelBook_2eproto();
  friend void protobuf_AssignDesc_net_2fTravelBook_2eproto();
  friend void protobuf_ShutdownFile_net_2fTravelBook_2eproto();

  void InitAsDefaultInstance();
  static TTravelBookNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TTravelBookItem

// optional uint32 Tid = 1;
inline bool TTravelBookItem::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TTravelBookItem::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TTravelBookItem::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TTravelBookItem::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TTravelBookItem::tid() const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookItem.Tid)
  return tid_;
}
inline void TTravelBookItem::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TTravelBookItem.Tid)
}

// optional uint64 ActiveTime = 2;
inline bool TTravelBookItem::has_activetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TTravelBookItem::set_has_activetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TTravelBookItem::clear_has_activetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TTravelBookItem::clear_activetime() {
  activetime_ = GOOGLE_ULONGLONG(0);
  clear_has_activetime();
}
inline ::google::protobuf::uint64 TTravelBookItem::activetime() const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookItem.ActiveTime)
  return activetime_;
}
inline void TTravelBookItem::set_activetime(::google::protobuf::uint64 value) {
  set_has_activetime();
  activetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TTravelBookItem.ActiveTime)
}

// optional uint64 RewardTime = 3;
inline bool TTravelBookItem::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TTravelBookItem::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TTravelBookItem::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TTravelBookItem::clear_rewardtime() {
  rewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::uint64 TTravelBookItem::rewardtime() const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookItem.RewardTime)
  return rewardtime_;
}
inline void TTravelBookItem::set_rewardtime(::google::protobuf::uint64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TTravelBookItem.RewardTime)
}

// -------------------------------------------------------------------

// TTravelBookGetInfoRsp

// repeated .pb.TTravelBookItem ArrItem = 1;
inline int TTravelBookGetInfoRsp::arritem_size() const {
  return arritem_.size();
}
inline void TTravelBookGetInfoRsp::clear_arritem() {
  arritem_.Clear();
}
inline const ::pb::TTravelBookItem& TTravelBookGetInfoRsp::arritem(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookGetInfoRsp.ArrItem)
  return arritem_.Get(index);
}
inline ::pb::TTravelBookItem* TTravelBookGetInfoRsp::mutable_arritem(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TTravelBookGetInfoRsp.ArrItem)
  return arritem_.Mutable(index);
}
inline ::pb::TTravelBookItem* TTravelBookGetInfoRsp::add_arritem() {
  // @@protoc_insertion_point(field_add:pb.TTravelBookGetInfoRsp.ArrItem)
  return arritem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >&
TTravelBookGetInfoRsp::arritem() const {
  // @@protoc_insertion_point(field_list:pb.TTravelBookGetInfoRsp.ArrItem)
  return arritem_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >*
TTravelBookGetInfoRsp::mutable_arritem() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTravelBookGetInfoRsp.ArrItem)
  return &arritem_;
}

// -------------------------------------------------------------------

// TTravelBookReceiveItemRewardReq

// optional uint32 Tid = 1;
inline bool TTravelBookReceiveItemRewardReq::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TTravelBookReceiveItemRewardReq::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TTravelBookReceiveItemRewardReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TTravelBookReceiveItemRewardReq::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TTravelBookReceiveItemRewardReq::tid() const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookReceiveItemRewardReq.Tid)
  return tid_;
}
inline void TTravelBookReceiveItemRewardReq::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TTravelBookReceiveItemRewardReq.Tid)
}

// -------------------------------------------------------------------

// TTravelBookReceiveItemRewardRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TTravelBookReceiveItemRewardRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TTravelBookReceiveItemRewardRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TTravelBookReceiveItemRewardRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookReceiveItemRewardRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TTravelBookReceiveItemRewardRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TTravelBookReceiveItemRewardRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TTravelBookReceiveItemRewardRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TTravelBookReceiveItemRewardRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TTravelBookReceiveItemRewardRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TTravelBookReceiveItemRewardRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TTravelBookReceiveItemRewardRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTravelBookReceiveItemRewardRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TTravelBookNotify

// repeated .pb.TTravelBookItem ArrItem = 1;
inline int TTravelBookNotify::arritem_size() const {
  return arritem_.size();
}
inline void TTravelBookNotify::clear_arritem() {
  arritem_.Clear();
}
inline const ::pb::TTravelBookItem& TTravelBookNotify::arritem(int index) const {
  // @@protoc_insertion_point(field_get:pb.TTravelBookNotify.ArrItem)
  return arritem_.Get(index);
}
inline ::pb::TTravelBookItem* TTravelBookNotify::mutable_arritem(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TTravelBookNotify.ArrItem)
  return arritem_.Mutable(index);
}
inline ::pb::TTravelBookItem* TTravelBookNotify::add_arritem() {
  // @@protoc_insertion_point(field_add:pb.TTravelBookNotify.ArrItem)
  return arritem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >&
TTravelBookNotify::arritem() const {
  // @@protoc_insertion_point(field_list:pb.TTravelBookNotify.ArrItem)
  return arritem_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TTravelBookItem >*
TTravelBookNotify::mutable_arritem() {
  // @@protoc_insertion_point(field_mutable_list:pb.TTravelBookNotify.ArrItem)
  return &arritem_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fTravelBook_2eproto__INCLUDED
